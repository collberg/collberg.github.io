
/*
BEGIN-TIGRESS
{
  "Tigress": {
    "Source": "This file was generated by Tigress, a product of the University of Arizona.",
    "Author": "Christian Collberg",
    "Contact": "collberg@gmail.com",
    "Version": "4.0.10,Operating system=Darwin, Architecture=x86_64, Git hash=c092256ffe3a1dfae2077d70e8843899cc260212, Date=2024-11-27T13:21:44:+0000",
    "Url": "https://tigress.wtf"
  },
  "Usage": {
    "Research": "Tigress is free to use for research purposes.",
    "Commercial": "Any use in a commercial setting requires a license from the University of Arizona."
  }
}
END-TIGRESS
*/


/*
BEGIN-CONFIG
[
  {
    "Environment": {
      "architecture": "x86",
      "wordsize": "64",
      "os": "Darwin",
      "compiler": "Clang",
      "compilerVersion": "(5,1)"
    }
  },
  {
    "Major version number": 4,
    "Minor version number": 2,
    "gcc version string": "4.2.1 Compatible Apple LLVM 9.0.0 (clang-900.0.39.2)",
    "If assembly names have leading underscore": false,
    "Size of 'short'": 2,
    "Size of 'int'": 4,
    "Size of '_Bool'": 1,
    "Size of 'long'": 8,
    "Size of 'long long'": 8,
    "Size of pointers": 8,
    "Size of 'float'": 4,
    "Size of '_Float32x'": 0,
    "Size of '_Float64x'": 0,
    "Size of 'double'": 8,
    "Size of 'long double'": 16,
    "Size of '_Float16'": 0,
    "Size of '_Float128'": 0,
    "Size of 'float _Complex'": 8,
    "Size of 'double _Complex'": 16,
    "Size of 'long double _Complex'": 32,
    "Size of '_Float128 _Complex'": 0,
    "Size of 'void'": 1,
    "Size of function": 8,
    "Type of 'sizeof(T)'": "unsigned long long",
    "Type of 'wchar_t'": "unsigned short",
    "Type of 'char16_t'": "unsigned short",
    "Type of 'char32_t'": "unsigned int",
    "Alignment of 'short'": 2,
    "Alignment of 'int'": 4,
    "Alignment of '_Bool'": 1,
    "Alignment of 'long'": 8,
    "Alignment of 'long long'": 8,
    "Alignment of pointers": 8,
    "Alignment of enum types": 4,
    "Alignment of 'float'": 4,
    "Alignment of '_Float32x'": 0,
    "Alignment of '_Float64x'": 0,
    "Alignment of 'double'": 8,
    "Alignment of 'long double'": 16,
    "Alignment of '_Float16'": 0,
    "Alignment of '_Float128'": 0,
    "Alignment of 'float _Complex'": 4,
    "Alignment of 'double _Complex'": 8,
    "Alignment of 'long double _Complex'": 16,
    "Alignment of '_Float128 _Complex'": 0,
    "Alignment of strings": 1,
    "Alignment of function": 4,
    "Alignment of anything with the 'aligned' attribute": 16,
    "Whether 'char' is unsigned": false,
    "whether the machine is little endian": true,
    "whether __thread is a keyword": true,
    "whether __builtin_va_list is builtin (gccism)": true
  },
  {
    "C language specification": "C99",
    "Generate code for Microsoct MSVC": false,
    "Whether to convert local static variables into global static variables": false,
    "Whether to use the logical operands LAnd and LOr": false,
    "Whether to use GCC's computed gotos": true,
    "Whether to expand ranges of values in case statements": false
  },
  {
    "Bitsize of char": 8,
    "Bitsize of signed char": 8,
    "Bitsize of unsigned char": 8,
    "Bitsize of _Bool": 8,
    "Bitsize of short": 16,
    "Bitsize of unsigned short": 16,
    "Bitsize of int": 32,
    "Bitsize of unsigned int": 32,
    "Bitsize of long": 64,
    "Bitsize of unsigned long": 64,
    "Bitsize of long long": 64,
    "Bitsize of unsigned long long": 64,
    "Bitsize of __int128": 128,
    "Bitsize of unsigned __int128": 128,
    "Bitsize of float": 32,
    "Bitsize of double": 64,
    "Bitsize of long double": 128,
    "Bitsize of float16": 0,
    "Bitsize of float128": 0,
    "Bitsize of float _Complex": 64,
    "Bitsize of double _Complex": 128,
    "Bitsize of long double _Complex": 256,
    "Bitsize of _float128 _Complex": 0
  }
]
END-CONFIG
*/


/*
BEGIN-OPTIONS
[
  {
    "task": 1,
    "kind": "InitEntropy",
    "prefix": "",
    "seed": "",
    "funSpec": [ [ "id(init_tigress)", "" ] ],
    "globalVarSpec": [],
    "localVarSpec": [],
    "exclude": [],
    "funs": [ "init_tigress" ],
    "options": {
      "common": {
        "prefix": "",
        "verbosity": "None",
        "statistics": "None",
        "transformationKind": "Ident",
        "vlaTransformation": "alloca",
        "transformationNumber": "0"
      },
      "updateKinds": [ "vars" ],
      "trace": [],
      "vars": [ "?1" ],
      "threadName": "entropyThread",
      "threadSleep": "100",
      "debug": "false",
      "obfuscate": "false"
    }
  },
  {
    "task": 2,
    "kind": "InitOpaque",
    "prefix": "",
    "seed": "",
    "funSpec": [ [ "id(init_tigress)", "" ] ],
    "globalVarSpec": [],
    "localVarSpec": [],
    "exclude": [],
    "funs": [ "init_tigress" ],
    "options": {
      "common": {
        "prefix": "",
        "verbosity": "None",
        "statistics": "None",
        "transformationKind": "Ident",
        "vlaTransformation": "alloca",
        "transformationNumber": "0"
      },
      "count": "1",
      "kinds": [ "list", "array", "env" ],
      "size": "30",
      "trace": [],
      "allowAddNodes": "false",
      "debug": "false"
    }
  },
  {
    "task": 3,
    "kind": "Virtualize",
    "prefix": "",
    "seed": "",
    "funSpec": [ [ "id(fib)", "" ] ],
    "globalVarSpec": [],
    "localVarSpec": [],
    "exclude": [],
    "funs": [ "fib" ],
    "options": {
      "common": {
        "prefix": "",
        "verbosity": "None",
        "statistics": "None",
        "transformationKind": "Ident",
        "vlaTransformation": "alloca",
        "transformationNumber": "0"
      },
      "kind": "direct",
      "operands": "stack",
      "maxDuplicateOps": "1",
      "maxMergeLength": "1",
      "stackSize": "32",
      "seed": "0",
      "superOperatorRatio": "2.",
      "taggedStore": "false",
      "randomizeOperators": "true",
      "randomizeOperandOrder": "true",
      "numberOfBogusFuns": "0",
      "bogusFunsGenerateOutput": "true",
      "bogusFunKinds": [ "arithSeq", "collatz" ],
      "bogusLoopKinds": [ "arithSeq", "collatz" ],
      "bogusLoopIterations": "0",
      "trace": [],
      "doPrintComment": "false",
      "doOptimizeBody": "false",
      "doOptimizeTreeCode": "false",
      "doReentrant": "false",
      "selfModifyingIndirectBranches": "false",
      "instructionHandlerSplitCount": "0",
      "addOpaqueToVPC": "false",
      "addOpaqueToBogusFuns": "false",
      "shortIdents": "false",
      "dump": [],
      "performance": [ "PointerStack" ],
      "implicitFlow": [],
      "implicitFlowOptions": {
        "common": {
          "prefix": "",
          "verbosity": "None",
          "statistics": "None",
          "transformationKind": "Ident",
          "vlaTransformation": "alloca",
          "transformationNumber": "0"
        },
        "handlerCount": "1",
        "jitCount": "1",
        "jitFunctionBody": "(for (for (for (for (if (bb 2) (bb 2))))))",
        "kinds": [ "counter_int" ],
        "combiner": "*",
        "trainingKind": "gap",
        "time": "false",
        "trace": "false",
        "train": "false",
        "trainingTimesClock": "0",
        "trainingTimesThread": "0",
        "trainingMaxFailureRateClock": "5",
        "trainingMaxFailureRateThread": "1",
        "trainingMinGap": "80",
        "trainingData": "None",
        "trainingConfidenceLevel": "0.95",
        "trainingTargetErrorRate": "0.0001",
        "trainingParameterRange": [
          "(trivial_clock,(1,10000))", "(trivial_thread_1,(1,10000))",
          "(trivial_thread_2,(1,10000))", "(trivial_counter,(1,10000))",
          "(file_cache_time,(1,1024))", "(file_cache_thread_1,(1,1024))",
          "(file_cache_thread_2,(1,1024))",
          "(file_cache_thread_timer,(1,1024))", "(mem_cache_time,(2,64))",
          "(mem_cache_thread_1,(2,64))", "(mem_cache_thread_2,(2,64))",
          "(jit_time,(0,0))", "(jit_thread_1,(0,0))", "(jit_thread_2,(0,0))",
          "(jit_thread_timer,(0,0))", "(branchPrediction_time,(2,10))"
        ]
      },
      "conditionalKinds": [ "branch" ],
      "encodeByteArray": [],
      "obfuscateDecodeByteArray": "false",
      "structs": "None",
      "dynamicBytecode": "false",
      "dynamic": {
        "common": {
          "prefix": "",
          "verbosity": "None",
          "statistics": "None",
          "transformationKind": "Ident",
          "vlaTransformation": "alloca",
          "transformationNumber": "0"
        },
        "encoding": [ "hard" ],
        "block_fraction": "*",
        "codecs": [ "xor_transfer", "xtea" ],
        "keyTypes": [ "data", "code" ],
        "frequency": "1",
        "reEncode": "true",
        "optimize_binary": [
          "OMIT_FRAME_PTR", "OMIT_UNUSED_ASSIGNEMENTS", "JOIN_ADDMUL"
        ],
        "dump_opcodes": "0",
        "dump_tree": "false",
        "annotateTree": "false",
        "randomize_blocks": "false",
        "dump_intermediate": "false",
        "dump_cfg": "false",
        "implicitFlow": "false",
        "obfuscateHandle": "false",
        "obfuscateArguments": "false",
        "trace": "0",
        "traceExec": "false",
        "traceBlock": "false",
        "optimize": "true",
        "implicitFlowOptions": "None",
        "compileCommand": "gcc -std=c99 -o %o %i"
      }
    }
  },
  {
    "task": 4,
    "kind": "JitDynamic",
    "prefix": "",
    "seed": "",
    "funSpec": [ [ "id(fib)", "" ] ],
    "globalVarSpec": [],
    "localVarSpec": [],
    "exclude": [],
    "funs": [ "fib" ],
    "options": {
      "common": {
        "prefix": "",
        "verbosity": "None",
        "statistics": "None",
        "transformationKind": "Ident",
        "vlaTransformation": "alloca",
        "transformationNumber": "0"
      },
      "dynamic": {
        "common": {
          "prefix": "",
          "verbosity": "None",
          "statistics": "None",
          "transformationKind": "Ident",
          "vlaTransformation": "alloca",
          "transformationNumber": "0"
        },
        "encoding": [ "hard" ],
        "block_fraction": "%100",
        "codecs": [ "xtea" ],
        "keyTypes": [ "data", "code" ],
        "frequency": "1",
        "reEncode": "true",
        "optimize_binary": [
          "OMIT_FRAME_PTR", "OMIT_UNUSED_ASSIGNEMENTS", "JOIN_ADDMUL"
        ],
        "dump_opcodes": "0",
        "dump_tree": "false",
        "annotateTree": "false",
        "randomize_blocks": "false",
        "dump_intermediate": "false",
        "dump_cfg": "false",
        "implicitFlow": "false",
        "obfuscateHandle": "false",
        "obfuscateArguments": "false",
        "trace": "0",
        "traceExec": "false",
        "traceBlock": "false",
        "optimize": "true",
        "implicitFlowOptions": "None",
        "compileCommand": "gcc -std=c99 -o %o %i"
      },
      "jit": {
        "common": {
          "prefix": "",
          "verbosity": "None",
          "statistics": "None",
          "transformationKind": "Ident",
          "vlaTransformation": "alloca",
          "transformationNumber": "0"
        },
        "encoding": [ "hard" ],
        "frequency": "1",
        "optimize_binary": [
          "OMIT_FRAME_PTR", "OMIT_UNUSED_ASSIGNEMENTS", "JOIN_ADDMUL",
          "DEAD_CODE"
        ],
        "randomize_blocks": "false",
        "dump_opcodes": "0",
        "dump_tree": "false",
        "annotateTree": "false",
        "dump_intermediate": "false",
        "dump_cfg": "false",
        "obfuscateHandle": "false",
        "obfuscateArguments": "false",
        "trace": "0",
        "traceExec": "false",
        "implicitFlow": "false",
        "implicitFlowOptions": "None"
      }
    }
  },
  {
    "task": 5,
    "kind": "Measure",
    "prefix": "",
    "seed": "",
    "funSpec": [ [ "id(fib)", "" ] ],
    "globalVarSpec": [],
    "localVarSpec": [],
    "exclude": [],
    "funs": [ "fib" ],
    "options": {
      "common": {
        "prefix": "",
        "verbosity": "None",
        "statistics": "None",
        "transformationKind": "Ident",
        "vlaTransformation": "alloca",
        "transformationNumber": "0"
      },
      "kinds": [ "time" ],
      "times": "100"
    }
  }
]
END-OPTIONS
*/


/*
BEGIN-UNIVERSE
{
  "Not added to universe": [
    "__sync_fetch_and_xor_2", "__sync_nand_and_fetch_1",
    "__sync_and_and_fetch", "__sync_val_compare_and_swap_16",
    "__atomic_or_fetch", "__sync_sub_and_fetch_1", "__atomic_fetch_and",
    "__atomic_xor_fetch_16", "__atomic_fetch_nand_16",
    "__sync_add_and_fetch_4", "__sync_and_and_fetch_8",
    "__sync_fetch_and_add_2", "__sync_synchronize", "__sync_or_and_fetch",
    "__atomic_xor_fetch_8", "__atomic_xor_fetch_2", "__sync_fetch_and_and_8",
    "__atomic_store_16", "__atomic_fetch_and_8", "__sync_sub_and_fetch_2",
    "__atomic_and_fetch_2", "__atomic_fetch_add_8",
    "__c11_atomic_thread_fence", "__atomic_fetch_nand", "__atomic_store",
    "__atomic_add_fetch_2", "__sync_fetch_and_or_2", "__sync_sub_and_fetch",
    "__sync_fetch_and_add_1", "__sync_and_and_fetch_1",
    "__atomic_nand_fetch_16", "__sync_val_compare_and_swap_8",
    "__sync_xor_and_fetch_1", "__atomic_fetch_xor_8",
    "__sync_or_and_fetch_2", "__sync_fetch_and_sub_16",
    "__atomic_exchange_1", "__sync_fetch_and_and_2", "__sync_fetch_and_and",
    "__atomic_feraiseexcept", "__atomic_and_fetch_4", "__atomic_or_fetch_4",
    "__sync_xor_and_fetch_2", "__sync_swap_2", "__atomic_fetch_and_2",
    "__sync_val_compare_and_swap_4", "__sync_lock_release", "__sync_swap",
    "__atomic_fetch_nand_8", "__sync_fetch_and_add_4",
    "__atomic_fetch_nand_2", "__atomic_load_n", "__atomic_exchange_n",
    "__atomic_fetch_or_8", "__sync_lock_release_4", "__sync_fetch_and_max",
    "__atomic_fetch_or_4", "__atomic_load_2", "__atomic_fetch_sub_4",
    "__atomic_compare_exchange_1", "__sync_fetch_and_sub_2", "__atomic_load",
    "__atomic_or_fetch_16", "__atomic_add_fetch_16", "__sync_lock_release_1",
    "__atomic_fetch_add_16", "__sync_fetch_and_and_1",
    "__atomic_compare_exchange_2", "__sync_and_and_fetch_16",
    "__atomic_exchange", "__atomic_sub_fetch_2", "__atomic_fetch_xor_16",
    "__sync_xor_and_fetch_4", "__atomic_fetch_or_16", "__atomic_load_4",
    "__sync_fetch_and_sub_1", "__atomic_store_n", "__sync_fetch_and_sub_8",
    "__sync_fetch_and_or_16", "__sync_lock_test_and_set",
    "__atomic_fetch_and_16", "__sync_lock_test_and_set_2",
    "__atomic_nand_fetch", "__atomic_load_8", "__atomic_xor_fetch_4",
    "__atomic_fetch_sub_2", "__sync_fetch_and_xor_4",
    "__sync_fetch_and_or_1", "__atomic_store_8", "__sync_nand_and_fetch_4",
    "__atomic_or_fetch_2", "__atomic_fetch_xor", "__sync_add_and_fetch_8",
    "__atomic_fetch_xor_4", "__sync_bool_compare_and_swap",
    "__sync_fetch_and_xor_16", "__atomic_and_fetch_1",
    "__sync_lock_release_2", "__atomic_xor_fetch_1",
    "__sync_xor_and_fetch_8", "__warn_memset_zero_len",
    "__sync_fetch_and_xor_8", "__sync_fetch_and_sub", "__atomic_fetch_add_2",
    "__sync_swap_1", "__sync_fetch_and_xor_1", "__sync_fetch_and_add_16",
    "__sync_fetch_and_umin", "__atomic_fetch_sub", "__sync_fetch_and_nand_4",
    "__sync_add_and_fetch_2", "__c11_atomic_signal_fence",
    "__atomic_add_fetch_4", "__sync_fetch_and_min", "__sync_swap_8",
    "__sync_fetch_and_or", "__sync_sub_and_fetch_4",
    "__sync_lock_test_and_set_4", "__sync_or_and_fetch_8",
    "__sync_lock_release_16", "__sync_fetch_and_or_4",
    "__atomic_nand_fetch_8", "__atomic_sub_fetch_1", "__atomic_fetch_or",
    "__sync_fetch_and_nand_16", "__atomic_nand_fetch_4",
    "__sync_lock_release_8", "__sync_bool_compare_and_swap_1",
    "__atomic_sub_fetch_4", "__atomic_compare_exchange_n",
    "__sync_add_and_fetch", "__atomic_signal_fence", "__atomic_fetch_nand_1",
    "__atomic_and_fetch_16", "__sync_fetch_and_nand",
    "__atomic_thread_fence", "__sync_swap_4", "__atomic_test_and_set",
    "__sync_fetch_and_sub_4", "__atomic_exchange_16", "__xray_customevent",
    "__atomic_clear", "__atomic_fetch_xor_1", "__atomic_and_fetch",
    "__atomic_compare_exchange_4", "__sync_fetch_and_add_8",
    "__sync_or_and_fetch_16", "__sync_nand_and_fetch", "__atomic_load_16",
    "__atomic_always_lock_free", "__sync_xor_and_fetch",
    "__atomic_exchange_8", "__sync_xor_and_fetch_16", "__atomic_or_fetch_8",
    "__sync_add_and_fetch_1", "__sync_bool_compare_and_swap_2",
    "__atomic_or_fetch_1", "__sync_fetch_and_nand_8", "__atomic_fetch_add",
    "__atomic_nand_fetch_1", "__sync_bool_compare_and_swap_16",
    "__atomic_compare_exchange_16", "__atomic_fetch_or_1",
    "__atomic_fetch_add_1", "__c11_atomic_is_lock_free", "__xray_typedevent",
    "__sync_swap_16", "__atomic_fetch_sub_1", "__atomic_store_2",
    "__sync_sub_and_fetch_16", "__sync_fetch_and_nand_1",
    "__atomic_exchange_4", "__sync_fetch_and_nand_2",
    "__sync_nand_and_fetch_2", "__sync_fetch_and_xor",
    "__atomic_fetch_and_4", "__sync_or_and_fetch_1",
    "__atomic_compare_exchange", "__sync_or_and_fetch_4",
    "__sync_lock_test_and_set_16", "__atomic_load_1",
    "__sync_bool_compare_and_swap_8", "__atomic_fetch_xor_2",
    "__sync_val_compare_and_swap", "__atomic_store_4",
    "__atomic_fetch_and_1", "__atomic_fetch_nand_4",
    "__sync_sub_and_fetch_8", "__atomic_sub_fetch_8",
    "__atomic_fetch_sub_16", "__sync_bool_compare_and_swap_4",
    "__sync_val_compare_and_swap_2", "__sync_and_and_fetch_4",
    "__sync_lock_test_and_set_8", "__atomic_exchange_2",
    "__sync_fetch_and_or_8", "__sync_nand_and_fetch_16",
    "__atomic_fetch_add_4", "__atomic_nand_fetch_2", "__atomic_sub_fetch",
    "__sync_lock_test_and_set_1", "__atomic_compare_exchange_8",
    "__atomic_add_fetch", "__atomic_xor_fetch", "__sync_fetch_and_add",
    "__sync_and_and_fetch_2", "__atomic_add_fetch_1", "__atomic_add_fetch_8",
    "__sync_fetch_and_and_4", "__atomic_fetch_sub_8",
    "__sync_fetch_and_and_16", "__sync_val_compare_and_swap_1",
    "__atomic_store_1", "__atomic_fetch_or_2", "__atomic_sub_fetch_16",
    "__sync_add_and_fetch_16", "__sync_nand_and_fetch_8",
    "__atomic_is_lock_free", "__sync_fetch_and_umax", "__atomic_and_fetch_8"
  ],
  "Transformations": [
    {
      "TransformationNumber": 200,
      "TransformationKind": "PlatformFixes",
      "TransformationUpdates": {}
    },
    {
      "TransformationNumber": 5,
      "TransformationKind": "Measure",
      "TransformationUpdates": {
        "Modified Function Implementations": [ "fib" ]
      }
    },
    {
      "TransformationNumber": 4,
      "TransformationKind": "JitDynamic",
      "TransformationUpdates": {
        "Modified Function Implementations": [ "fib" ],
        "New Functions": [
          "_cipher$_xtea_encipherBlock", "_cipher$_xtea_encipher",
          "_cipher$_xtea_decipherBlock", "_cipher$_xtea_decipher"
        ],
        "New Global Variables": {
          "_TIG_JD_tgVA_4_fib___t": "INIT",
          "_TIG_JD_tgVA_4_fib_freq": "INIT"
        }
      }
    },
    {
      "TransformationNumber": 3,
      "TransformationKind": "Virtualize",
      "TransformationUpdates": {
        "Modified Function Implementations": [ "fib" ],
        "New Functions": [
          "jit_regs_active", "jit_set_to_array", "copy_reg_to_array",
          "jit_regs_active_count", "jit_data_bytes", "jit_allocai",
          "jit_get_label", "jit_add_prolog", "jit_disable_optimization",
          "jit_trace", "jit_dump_ops", "jit_dump_ops_combined",
          "jit_tree_walk", "jit_dump_ops_general",
          "print_reg_liveness_callback", "print_rmap_callback",
          "jit_dump_ops_compilable", "print_op_compilable",
          "compiler_based_debugger", "jit_free", "free_labels", "free_ops",
          "jit_reg_allocator_free", "jit_exec_mem_free",
          "jit_patch_external_calls", "jit_generate_code", "jit_buf_expand",
          "jit_prepare_spills_on_jmpr_targets", "jit_correct_float_imms",
          "jit_correct_long_imms", "jit_imm_overflow",
          "jit_dead_code_analysis", "mark_livecode", "jit_free_op",
          "jit_allocator_hints_free", "jit_set_free", "jit_op_delete",
          "jit_flw_analysis", "analyze_function", "jit_set_size",
          "jit_tree_size", "flw_analyze_op", "initialize_code_refs",
          "flw_analyze_prolog", "jit_set_remove", "jit_set_addall",
          "jit_set_add", "jit_flw_initialize", "jit_gen_op", "emit_memset",
          "emit_memcpy", "emit_transfer_init", "emit_transfer_loop",
          "emit_transfer_op", "emit_ldx_op", "emit_ld_op",
          "emit_branch_overflow_op", "emit_branch_mask_op", "emit_branch_op",
          "emit_cond_op", "emit_shift_op", "emit_div_op", "emit_mul_op",
          "emit_rsb_op", "emit_subx_op", "emit_sub_op", "emit_alu_op",
          "emit_get_arg", "emit_get_arg_from_stack", "emit_ureg",
          "emit_lreg", "emit_fretval_op", "emit_fret_op",
          "emit_pop_callee_saved_regs", "emit_trace_op",
          "jit_trace_callback", "print_combined_op", "print_op_bytes",
          "platform_id", "print_op", "print_comment", "ob_append",
          "ob_assert_space", "ob_printf", "print_load_op", "jit_get_op_name",
          "ob_pad", "jit_get_reg_name", "print_full_op_name", "print_args",
          "print_arg", "print_addr", "jit_op_is_cflow", "print_str",
          "ob_free", "ob_new", "open_disasm", "prepare_labels",
          "jit_trace_op", "emit_restore_all_regs",
          "required_stack_space_for_regs", "is_active_register",
          "emit_save_all_regs", "emit_msg_op", "emit_prolog_op",
          "get_frame_size", "list_callee_saved_regs", "uses_hw_reg",
          "jit_value_align", "emit_push_callee_saved_regs", "emit_funcall",
          "emit_arguments", "emit_fppush_arg", "emit_push_arg",
          "emit_set_fparg", "stack_reg_pos", "jit_current_func_info",
          "is_spilled", "emit_set_arg", "emit_pop_reg",
          "emit_pop_caller_saved_regs", "emit_sse_fstx_op",
          "emit_sse_fldx_op", "emit_sse_fld_op", "emit_sse_fst_op",
          "emit_sse_floor", "emit_sse_round", "sse_alu_sd_reg_safeimm",
          "emit_sse_branch", "emit_sse_neg_op", "emit_sse_div_op",
          "emit_sse_change_sign", "emit_sse_get_sign_mask",
          "sse_alu_pd_reg_safeimm", "emit_sse_sub_op", "emit_sse_alu_op",
          "jit_get_unused_reg", "jit_get_unused_reg_with_index",
          "jit_reg_in_use", "sse_mov_reg_safeimm", "list_caller_saved_regs",
          "emit_push_reg", "emit_push_caller_saved_regs", "funcall_fput_arg",
          "funcall_put_arg", "funcall_prepare_optional", "funcall_prepare",
          "jit_assign_regs", "jit_op_is_cond_branch", "branch_adjustment",
          "rmap_equal", "rmap_subset", "jit_set_new", "jit_set_clone",
          "jump_adjustment", "rmap_sync", "rmap_sync_aux", "rmap_clone",
          "rmap_free", "jit_tree_free", "assign_regs", "associate_register",
          "is_transfer_op", "make_free_reg", "associate_register_alias",
          "load_reg", "force_assoc", "force_spill", "spill_all_registers",
          "assign_call", "spill_ret_retreg", "assign_jmp", "rmap_get",
          "assign_getarg", "assign_ret_reg", "sync_reg",
          "rmap_spill_candidate", "candidate_score", "rmap_is_associated",
          "rmap_is_associated_aux", "rmap_unassoc", "jit_tree_delete",
          "delete_node", "delete_min", "move_red_left", "node_min",
          "move_red_right", "unload_reg", "prepare_registers_for_call",
          "insert_reg_op", "jit_op_prepend", "rename_reg", "rmap_assoc",
          "assign_regs_for_args", "rmap_init",
          "jit_optimize_unused_assignments", "jit_optimize_frame_ptr",
          "jit_optimize_join_addimm", "join_addi_addr", "join_addr_addi",
          "join_2ops", "get_related_op", "jit_optimize_join_addmul",
          "join_muli_addr", "join_muli_ori", "pow2", "make_addmuli",
          "shift_index", "make_nop", "is_suitable_mul", "join_muli_addi",
          "jit_optimize_st_ops", "jit_tree_clone", "jit_tree_addall",
          "jit_tree_insert", "node_insert", "node_new", "fixup",
          "color_flip", "rotate_right", "rotate_left", "is_red",
          "jit_collect_statistics", "hints_refcount_inc", "jit_set_get",
          "jit_tree_search", "mark_calleesaved_regs", "jit_op_last",
          "jit_prepare_arguments", "jit_init_arg_params", "stack_fparg_pos",
          "stack_arg_pos", "jit_arg_layout_create_input",
          "jit_arg_layout_create", "jit_arg_layout_add",
          "jit_prepare_reg_counts", "jit_expand_patches_and_labels",
          "jit_is_label", "jit_op_first", "jit_patch_local_addrs",
          "jit_exec_mem_seal", "jit_exec_addr", "jit_exec_mem_new",
          "jit_debug_info_new", "jit_add_op", "jit_op_append", "jit_add_fop",
          "jit_op_new", "jit_enable_optimization", "jit_init",
          "jit_reg_allocator_create"
        ],
        "New Global Variables": {
          "jit_disasm_compilable": "INIT",
          "x86_cc_signed_map": "INIT",
          "jit_disasm_general": "INIT",
          "x86_cc_unsigned_map": "INIT",
          "_TIG_VZ_tgVA_3_fib_$strings": "INIT"
        },
        "New Types": [
          "copy_target", "code_refs_cache", "transfer_info", "__sFILEX",
          "jit_disasm", "output_buf", "va_list___0", "jit_unsigned_value",
          "jit_rmap", "jit_allocator_hint", "jit_set", "jit_arg_layout",
          "jit_arg_layout_location", "jit_reg", "x86_imm_buf",
          "__anonunion_x86_imm_buf_876386805", "jit_opcode",
          "__anonenum_jit_opcode_820224137",
          "__anonunion_amd64_imm_buf_34291009", "amd64_imm_buf",
          "jit_prepared_args", "jit_op", "__anonunion_value_137411616",
          "jit_label", "jit_label", "jit_out_arg", "jit_exec_mem", "jit",
          "jit_prepared_args", "__anonunion_location_773697288",
          "jit_inp_arg", "jit_inp_type", "jit_func_info", "jit_op",
          "jit_value", "jit_debug_info", "jit_rmap", "jit_tree", "jit_tree",
          "jit_tree_value", "jit_tree_key", "jit_set", "jit_reg_allocator",
          "jit_hw_reg", "__anonstruct_jit_hw_reg_312769258",
          "_TIG_VZ_tgVA_3_fib_$node"
        ]
      }
    },
    {
      "TransformationNumber": 2,
      "TransformationKind": "InitOpaque",
      "TransformationUpdates": {
        "Modified Function Implementations": [ "init_tigress" ],
        "New Global Variables": {
          "_TIG_iO_tgVA_2_init_tigress_1__opaque_array": "INIT",
          "_TIG_iO_tgVA_2_init_tigress_1_opaque_ptr_2": "INIT",
          "_TIG_iO_tgVA_2_init_tigress_1_opaque_list_2": "INIT",
          "_TIG_iO_tgVA_2_init_tigress_1_opaque_ptr_1": "INIT",
          "_TIG_iO_tgVA_2_init_tigress_1_opaque_list_1": "INIT"
        },
        "New Types": [
          "_TIG_iO_tgVA_2_init_tigress_1_opaqueStructureType",
          "_TIG_iO_tgVA_2_init_tigress_1_opaqueNodeStruct"
        ]
      }
    },
    {
      "TransformationNumber": 1,
      "TransformationKind": "InitEntropy",
      "TransformationUpdates": {
        "New Global Variables": {
          "_TIG_iE_tgVA_1_alwaysZero": "INIT",
          "_TIG_iE_tgVA_1_entropy": "INIT"
        }
      }
    },
    {
      "TransformationNumber": 0,
      "TransformationKind": "Initialize",
      "TransformationUpdates": {
        "Modified Function Implementations": [ "main" ],
        "New Global Variables": {
          "_TIG_IZ_tgVA_envp": "FUN: '_TIG_IZ_tgVA_envp__INIT'",
          "_TIG_IZ_tgVA_argv": "FUN: '_TIG_IZ_tgVA_argv__INIT'",
          "_TIG_IZ_tgVA_argc": "FUN: '_TIG_IZ_tgVA_argc__INIT'"
        }
      }
    },
    {
      "TransformationNumber": -1,
      "TransformationKind": "Initialize",
      "TransformationUpdates": {
        "New Functions": [
          "main", "fib", "fac", "init_tigress", "__darwin_fd_clr",
          "__darwin_fd_set", "__darwin_fd_isset", "__darwin_check_fd_set",
          "_OSSwapInt64", "_OSSwapInt32", "_OSSwapInt16", "__sputc"
        ],
        "New Externs": [
          "__builtin_catanhf", "__builtin_rotateright8",
          "__builtin_fdimf128", "__builtin_log1pf", "__builtin_isless",
          "__builtin_snprintf", "__builtin_fmaxf", "__builtin_ia32_unpckhps",
          "__builtin_acos", "__builtin_ssubl_overflow",
          "__builtin___sprintf_chk", "__builtin_lgammaf",
          "__builtin_assume_aligned", "__builtin_stpncpy",
          "__builtin_signbitl", "__builtin_lround", "__builtin_rotateleft32",
          "__builtin_rindex", "__builtin_ilogbf128", "__builtin_subc",
          "__builtin_tanhf", "__builtin_copysignf16", "__builtin_mempcpy",
          "__builtin_subcs", "__builtin_strrchr", "__builtin_fprintf",
          "__builtin_ctanhl", "__builtin_sub_overflow",
          "__builtin_acoshf128", "__builtin_cpowf", "__builtin_sqrtl",
          "__builtin_parity", "__builtin_cosl", "__builtin_remainderf",
          "__builtin_char_memchr", "__builtin_acosl", "__builtin_log2l",
          "__builtin_conjl", "__builtin_clz", "__builtin_add_overflow",
          "__builtin_log10", "__builtin___strcat_chk", "__builtin_cprojl",
          "__builtin_copysignf", "__builtin_modff", "__builtin_realloc",
          "__builtin_logf16", "__builtin_expm1f128", "__builtin_nanf128",
          "__builtin_cacoshl", "__builtin_frexp", "__builtin_acosf",
          "__builtin_sinhl", "__builtin___stpcpy_chk",
          "__builtin_is_aligned", "__builtin_dwarf_cfa", "__builtin_casinhl",
          "__builtin_nexttowardl", "__builtin_va_start", "__builtin_scalbln",
          "__builtin_bswap16", "__builtin_wcslen", "__builtin_log10f16",
          "__builtin_init_dwarf_reg_size_table", "__builtin_ctz",
          "__builtin_strpbrk", "__builtin_strcpy", "__builtin_next_arg",
          "__builtin_sinf16", "__builtin_umull_overflow",
          "__builtin_scalbnf128", "__builtin_log10f", "__builtin_fmodf16",
          "__builtin_csinh", "__builtin_floorf",
          "__builtin_matrix_transpose", "__builtin___get_unsafe_stack_top",
          "__builtin_log2f", "__builtin_wmemchr", "__builtin_ia32_subps",
          "__builtin_scalblnf", "__builtin_fmal", "__builtin_parityll",
          "__builtin_va_end", "__builtin_bzero", "__builtin_strncmp",
          "__builtin_fminl", "__builtin_ssubll_overflow",
          "__builtin_sqrtf16", "__builtin_smull_overflow",
          "__builtin___vsprintf_chk", "__builtin_nansf128",
          "__builtin_lgammal", "__builtin_nans", "__builtin_ceilf16",
          "__builtin_exp", "__builtin_acosf128", "__builtin_rintf16",
          "__builtin_wmemcmp", "__builtin_round", "__builtin_hypot",
          "__builtin_subcb", "__builtin___strlcpy_chk", "__builtin_csqrt",
          "__builtin_powif", "__builtin_log10l", "__builtin_log10f128",
          "__builtin_erff128", "__builtin_addcl", "__builtin_return_address",
          "__builtin_fabsf", "__builtin_ctanh", "__builtin_ctan",
          "__builtin_cbrtf128", "__builtin_atanhf", "__builtin_free",
          "__builtin_object_size", "__builtin_va_arg_pack_len",
          "__builtin_tanl", "__builtin_shufflevector", "__builtin_csinhl",
          "__builtin_stpcpy", "__builtin_eh_return_data_regno",
          "__builtin_cexpl", "__builtin_sinl", "__builtin_uaddll_overflow",
          "__builtin_rotateleft16", "__builtin_powf16",
          "__builtin_convertvector", "__builtin_sinhf", "__builtin_hypotl",
          "__builtin_bswap64", "__builtin_objc_memmove_collectable",
          "__builtin_ia32_mulps", "__builtin_tan", "__builtin_llabs",
          "__builtin_inff", "__builtin_umul_overflow", "__builtin_fmax",
          "__builtin_erf", "__builtin_clzl", "__builtin_cosf16",
          "__builtin_tgammal", "__builtin_atan", "__builtin___fprintf_chk",
          "__builtin_wmemcpy", "__builtin_llrintf128", "__builtin_casin",
          "__builtin_logbf128", "__builtin_ctanf", "__builtin_ffsll",
          "__builtin_logf128", "__builtin_index", "__builtin_ccosl",
          "__builtin_abort", "__builtin_powi", "__builtin_canonicalize",
          "__builtin_strchr", "__builtin_logb", "__builtin_expf128",
          "__builtin_cimagf", "__builtin_creall", "__builtin_atanh",
          "__builtin_frexpl", "__builtin_exp2f128", "__builtin_csinf",
          "__builtin_creal", "__builtin_logl", "__builtin_remquo",
          "__builtin_fmaxl", "__builtin_prefetch", "__builtin_nansl",
          "__builtin_erfc", "__builtin_ccoshl", "__builtin_tanh",
          "__builtin_scalblnf128", "__builtin_unreachable",
          "__builtin_calloc", "__builtin_copysignl", "__builtin_llrint",
          "__builtin_ceil", "__builtin_usub_overflow",
          "__builtin_os_log_format", "__builtin_cproj", "__builtin_powil",
          "__builtin_expl", "__builtin_memchr", "__builtin_copysign",
          "__builtin_addcb", "__builtin_logf", "__builtin_operator_delete",
          "__builtin_isunordered", "__builtin_casinf",
          "__builtin_os_log_format_buffer_size", "__builtin_memmove",
          "__builtin_fmaf", "__builtin_debugtrap",
          "__builtin_dynamic_object_size", "__builtin_ffs",
          "__builtin_usubl_overflow", "__builtin_addcs", "__builtin_cargl",
          "__builtin_tgammaf128", "__builtin_launder",
          "__builtin___memcpy_chk", "__builtin_cpowl",
          "__builtin_remainderf128", "__builtin_ssub_overflow",
          "__builtin_tgamma", "__builtin_matrix_column_major_store",
          "__builtin_strspn", "__builtin_conj", "__builtin_cprojf",
          "__builtin_canonicalizef", "__builtin_lrintl", "__builtin_fmaxf16",
          "__builtin_nan", "__builtin_strstr", "__builtin_expm1f",
          "__builtin___get_unsafe_stack_bottom", "__builtin_isnormal",
          "__builtin_atanl", "__builtin_wcsncmp", "__builtin_huge_valf128",
          "__builtin_clzll", "__builtin_cbrt", "__builtin_huge_valf",
          "__builtin_uadd_overflow", "__builtin_copysignf128",
          "__builtin_truncl", "__builtin___stpncpy_chk", "__builtin_roundf",
          "__builtin_cimag", "__builtin___vsnprintf_chk", "__builtin_scalbn",
          "__builtin_lgammaf128", "__builtin_nanf", "__builtin_roundl",
          "__builtin_remainderl", "__builtin_saddl_overflow",
          "__builtin_ceilf128", "__builtin_signbitf", "__builtin_tgmath",
          "__builtin_ceill", "__builtin_smul_overflow", "__builtin_cabsl",
          "__builtin_fmin", "__builtin_floor", "__builtin_scalblnl",
          "__builtin_atan2f", "__builtin_cacosh", "__builtin___strlcat_chk",
          "__builtin_sinh", "__builtin_ilogbf", "__builtin_catanl",
          "__builtin_clzs", "__builtin_remquof", "__builtin_logbf",
          "__builtin_fma", "__builtin_asinhf128", "__builtin_infl",
          "__builtin_fminf128", "__builtin_bitreverse64",
          "__builtin_vsprintf", "__builtin_remquof128",
          "__builtin_atanhf128", "__builtin___get_unsafe_stack_ptr",
          "__builtin_signbit", "__builtin_lroundf", "__builtin_islessequal",
          "__builtin_exp2l", "__builtin_frame_address",
          "__builtin_nexttowardf128", "__builtin_isinf_sign",
          "__builtin_inff128", "__builtin_va_copy", "__builtin_erfcl",
          "__builtin_cacosf", "__builtin_frob_return_address",
          "__builtin_vsnprintf", "__builtin_sadd_overflow",
          "__builtin_tanf128", "__builtin_rotateleft64",
          "__builtin_matrix_column_major_load", "__builtin_popcountll",
          "__builtin_nearbyintf", "__builtin_atanf", "__builtin_rint",
          "__builtin_ia32_addps", "__builtin_rotateright64",
          "__builtin_readcyclecounter", "__builtin_llroundf",
          "__builtin_strcspn", "__builtin_asinf", "__builtin_lrint",
          "__builtin_erff", "__builtin_ia32_maxps", "__builtin_bcmp",
          "__builtin_asinf128", "__builtin_rotateleft8",
          "__builtin_nextafterf128", "__builtin_cosh", "__builtin_tgammaf",
          "__builtin_operator_new", "__builtin_crealf", "__builtin_longjmp",
          "__builtin_nextafterf", "__builtin_mul_overflow",
          "__builtin_coshl", "__builtin_ilogb", "__builtin_cosf",
          "__builtin_strndup", "__builtin_cpow", "__builtin___mempcpy_chk",
          "__builtin_llrintf", "__builtin_hypotf128", "__builtin_complex",
          "__builtin_remainder", "__builtin_preserve_access_index",
          "__builtin_fmaf128", "__builtin_acosh", "__builtin_sin",
          "__builtin_llround", "__builtin_fabs", "__builtin_trunc",
          "__builtin_fmaxf128", "__builtin_ccosf", "__builtin_acoshl",
          "__builtin___clear_cache", "__builtin_strncasecmp",
          "__builtin_fdiml", "__builtin_sinhf128", "__builtin_isnan",
          "__builtin_fdim", "__builtin_isgreaterequal",
          "__builtin_nexttowardf", "__builtin_fminf16", "__builtin_sqrt",
          "__builtin_umulll_overflow", "__builtin_floorf16",
          "__builtin_casinh", "__builtin_llrintl", "__builtin_expm1",
          "__builtin_exp2f", "__builtin_fabsl", "__builtin_setjmp",
          "__builtin_nearbyintl", "__builtin_nearbyintf128",
          "__builtin_lrintf", "__builtin_floorl", "__builtin_carg",
          "__builtin_csin", "__builtin_clogl",
          "__builtin_expect_with_probability", "__builtin_erfl",
          "__builtin_asinhl", "__builtin_memcpy", "__builtin_islessgreater",
          "__builtin_ctanhf", "__builtin_wcscmp", "__builtin_bitreverse16",
          "__builtin_classify_type", "__builtin_cacos", "__builtin_lroundl",
          "__builtin_printf", "__builtin_sqrtf", "__builtin_assume",
          "__builtin_rintf", "__builtin_powf", "__builtin_powl",
          "__builtin_cimagl", "__builtin_addcll",
          "__builtin_canonicalizef16", "__builtin___memccpy_chk",
          "__builtin_truncf128", "__builtin_nextafter", "__builtin_strdup",
          "__builtin_fabsf16", "__builtin_strcmp", "__builtin_atanf128",
          "__builtin_ldexpf", "__builtin_truncf16",
          "__builtin___memmove_chk", "__builtin_modff128",
          "__builtin_isfinite", "__builtin_conjf", "__builtin_roundf128",
          "__builtin_powf128", "__builtin_ctzs", "__builtin_roundf16",
          "__builtin_log1pf128", "__builtin_rotateright16",
          "__builtin_alloca", "__builtin_ldexpf128", "__builtin_cbrtl",
          "__builtin_csinhf", "__builtin_log2", "__builtin_modfl",
          "__builtin_ccos", "__builtin_casinhf", "__builtin_asin",
          "__builtin_erfcf128", "__builtin_clrsbll", "__builtin_ctzl",
          "__builtin_tanhl", "__builtin_saddll_overflow", "__builtin_labs",
          "__builtin_cabsf", "__builtin_rintf128", "__builtin_fdimf",
          "__builtin_alloca_with_align", "__builtin_wmemmove",
          "__builtin_strncpy", "__builtin_eh_return",
          "__builtin___memset_chk", "__builtin_scalbnf",
          "__builtin_fpclassify", "__builtin_huge_val", "__builtin_frexpf",
          "__builtin_wcschr", "__builtin_truncf", "__builtin_canonicalizel",
          "__builtin_fmodl", "__builtin_isinf", "__builtin_strcat",
          "__builtin_ilogbl", "__builtin_bitreverse32", "__builtin_ceilf",
          "__builtin_dump_struct", "__builtin_return", "__builtin_asinl",
          "__builtin_frexpf128", "__builtin_bitreverse8",
          "__builtin_va_arg_pack", "__builtin___strncpy_chk",
          "__builtin_nontemporal_store", "__builtin_lrintf128",
          "__builtin_malloc", "__builtin_atanhl", "__builtin_uaddl_overflow",
          "__builtin___strncat_chk", "__builtin_flt_rounds",
          "__builtin_huge_vall", "__builtin_ffsl", "__builtin___vprintf_chk",
          "__builtin_rintl", "__builtin_erfcf", "__builtin_ia32_unpcklps",
          "__builtin_strncat", "__builtin_ctzll", "__builtin_stdarg_start",
          "__builtin_nontemporal_load", "__builtin_cbrtf", "__builtin_catan",
          "__builtin_nexttoward", "__builtin_tanf",
          "__builtin_rotateright32", "__builtin_exp2", "__builtin_log1p",
          "__builtin_catanf", "__builtin_va_arg", "__builtin_expect",
          "__builtin_subcl", "__builtin___printf_chk", "__builtin_subcll",
          "__builtin___vfprintf_chk", "__builtin_fmod",
          "__builtin_call_with_static_chain", "__builtin_align_up",
          "__builtin_lgamma", "__builtin_ccosh", "__builtin_sqrtf128",
          "__builtin_ldexpl", "__builtin_usubll_overflow",
          "__builtin_sprintf", "__builtin_nearbyint", "__builtin_apply",
          "__builtin_sinf", "__builtin_logbl", "__builtin_log1pl",
          "__builtin_asinh", "__builtin_constant_p",
          "__builtin_memcpy_inline", "__builtin_fminf", "__builtin_llroundl",
          "__builtin_csinl", "__builtin_log", "__builtin_expf",
          "__builtin_exp2f16", "__builtin_types_compatible_p",
          "__builtin_atan2l", "__builtin_apply_args", "__builtin_clrsb",
          "__builtin_catanhl", "__builtin___get_unsafe_stack_start",
          "__builtin_llroundf128", "__builtin_ctanl", "__builtin_abs",
          "__builtin_log2f128", "__builtin_clogf", "__builtin_strlen",
          "__builtin_inf", "__builtin_cosf128", "__builtin_remquol",
          "__builtin_fmaf16", "__builtin_coshf128", "__builtin_cargf",
          "__builtin_acoshf", "__builtin_cacoshf", "__builtin_trap",
          "__builtin_smulll_overflow", "__builtin_parityl",
          "__builtin_cacosl", "__builtin_log2f16", "__builtin_annotation",
          "__builtin_clog", "__builtin_varargs_start", "__builtin_fabsf128",
          "__builtin_cexpf", "__builtin_unwind_init", "__builtin_isgreater",
          "__builtin___snprintf_chk", "__builtin_cabs", "__builtin_expm1l",
          "__builtin_coshf", "__builtin_casinl", "__builtin_nansf",
          "__builtin_strcasecmp", "__builtin_hypotf", "__builtin_nextafterl",
          "__builtin_lroundf128", "__builtin_csqrtf", "__builtin_catanh",
          "__builtin_align_down", "__builtin_scalbnl", "__builtin_csqrtl",
          "__builtin_sinf128", "__builtin_atan2", "__builtin_popcountl",
          "__builtin___strcpy_chk", "__builtin_atan2f128",
          "__builtin_thread_pointer", "__builtin_addc", "__builtin_cos",
          "__builtin_cexp", "__builtin_memset", "__builtin_nanl",
          "__builtin_popcount", "__builtin_tanhf128", "__builtin_expf16",
          "__builtin_dwarf_sp_column", "__builtin_bcopy", "__builtin_memcmp",
          "__builtin_ccoshf", "__builtin_clrsbl", "__builtin_asinhf",
          "__builtin_floorf128", "__builtin_extend_pointer",
          "__builtin_extract_return_addr", "__builtin_bswap32",
          "__builtin_ldexp", "__builtin_unpredictable", "__builtin_fmodf",
          "__builtin_fmodf128", "renameat", "renamex_np", "renameatx_np",
          "__stdinp", "__stdoutp", "__stderrp", "clearerr", "fclose", "feof",
          "ferror", "fflush", "fgetc", "fgetpos", "fgets", "fopen",
          "fprintf", "fputc", "fputs", "fread", "freopen", "fscanf", "fseek",
          "fsetpos", "ftell", "fwrite", "getc", "getchar", "gets", "perror",
          "printf", "putc", "putchar", "puts", "remove", "rename", "rewind",
          "scanf", "setbuf", "setvbuf", "sprintf", "sscanf", "tmpfile",
          "tmpnam", "ungetc", "vfprintf", "vprintf", "vsprintf", "ctermid",
          "fdopen", "fileno", "pclose", "popen", "__srget", "__svfscanf",
          "__swbuf", "flockfile", "ftrylockfile", "funlockfile",
          "getc_unlocked", "getchar_unlocked", "putc_unlocked",
          "putchar_unlocked", "getw", "putw", "tempnam", "fseeko", "ftello",
          "snprintf", "vfscanf", "vscanf", "vsnprintf", "vsscanf", "dprintf",
          "vdprintf", "getdelim", "getline", "fmemopen", "open_memstream",
          "sys_nerr", "sys_errlist", "asprintf", "ctermid_r", "fgetln",
          "fmtcheck", "fpurge", "setbuffer", "setlinebuf", "vasprintf",
          "zopen", "funopen", "__sprintf_chk", "__snprintf_chk",
          "__vsprintf_chk", "__vsnprintf_chk", "signal", "getpriority",
          "getiopolicy_np", "getrlimit", "getrusage", "setpriority",
          "setiopolicy_np", "setrlimit", "wait", "waitpid", "waitid",
          "wait3", "wait4", "alloca", "__mb_cur_max", "malloc", "calloc",
          "free", "realloc", "valloc", "aligned_alloc", "posix_memalign",
          "abort", "abs", "atexit", "atof", "atoi", "atol", "atoll",
          "bsearch", "div", "exit", "getenv", "labs", "ldiv", "llabs",
          "lldiv", "mblen", "mbstowcs", "mbtowc", "qsort", "rand", "srand",
          "strtod", "strtof", "strtol", "strtold", "strtoll", "strtoul",
          "strtoull", "system", "wcstombs", "wctomb", "_Exit", "a64l",
          "drand48", "ecvt", "erand48", "fcvt", "gcvt", "getsubopt",
          "grantpt", "initstate", "jrand48", "l64a", "lcong48", "lrand48",
          "mktemp", "mkstemp", "mrand48", "nrand48", "posix_openpt",
          "ptsname", "ptsname_r", "putenv", "random", "rand_r", "realpath",
          "seed48", "setenv", "setkey", "setstate", "srand48", "srandom",
          "unlockpt", "unsetenv", "arc4random", "arc4random_addrandom",
          "arc4random_buf", "arc4random_stir", "arc4random_uniform",
          "cgetcap", "cgetclose", "cgetent", "cgetfirst", "cgetmatch",
          "cgetnext", "cgetnum", "cgetset", "cgetstr", "cgetustr", "daemon",
          "devname", "devname_r", "getbsize", "getloadavg", "getprogname",
          "setprogname", "heapsort", "mergesort", "psort", "psort_r",
          "qsort_r", "radixsort", "rpmatch", "sradixsort", "sranddev",
          "srandomdev", "reallocf", "strtoq", "strtouq", "suboptarg",
          "tzname", "getdate_err", "timezone", "daylight", "asctime",
          "clock", "ctime", "difftime", "getdate", "gmtime", "localtime",
          "mktime", "strftime", "strptime", "time", "tzset", "asctime_r",
          "ctime_r", "gmtime_r", "localtime_r", "posix2time", "tzsetwall",
          "time2posix", "timelocal", "timegm", "nanosleep", "clock_getres",
          "clock_gettime", "clock_gettime_nsec_np", "clock_settime",
          "timespec_get", "sched_yield", "sched_get_priority_min",
          "sched_get_priority_max", "qos_class_self", "qos_class_main",
          "pthread_attr_set_qos_class_np", "pthread_attr_get_qos_class_np",
          "pthread_set_qos_class_self_np", "pthread_get_qos_class_np",
          "pthread_override_qos_class_start_np",
          "pthread_override_qos_class_end_np", "pthread_atfork",
          "pthread_attr_destroy", "pthread_attr_getdetachstate",
          "pthread_attr_getguardsize", "pthread_attr_getinheritsched",
          "pthread_attr_getschedparam", "pthread_attr_getschedpolicy",
          "pthread_attr_getscope", "pthread_attr_getstack",
          "pthread_attr_getstackaddr", "pthread_attr_getstacksize",
          "pthread_attr_init", "pthread_attr_setdetachstate",
          "pthread_attr_setguardsize", "pthread_attr_setinheritsched",
          "pthread_attr_setschedparam", "pthread_attr_setschedpolicy",
          "pthread_attr_setscope", "pthread_attr_setstack",
          "pthread_attr_setstackaddr", "pthread_attr_setstacksize",
          "pthread_cancel", "pthread_cond_broadcast", "pthread_cond_destroy",
          "pthread_cond_init", "pthread_cond_signal",
          "pthread_cond_timedwait", "pthread_cond_wait",
          "pthread_condattr_destroy", "pthread_condattr_init",
          "pthread_condattr_getpshared", "pthread_condattr_setpshared",
          "pthread_create", "pthread_detach", "pthread_equal",
          "pthread_exit", "pthread_getconcurrency", "pthread_getschedparam",
          "pthread_getspecific", "pthread_join", "pthread_key_create",
          "pthread_key_delete", "pthread_mutex_destroy",
          "pthread_mutex_getprioceiling", "pthread_mutex_init",
          "pthread_mutex_lock", "pthread_mutex_setprioceiling",
          "pthread_mutex_trylock", "pthread_mutex_unlock",
          "pthread_mutexattr_destroy", "pthread_mutexattr_getprioceiling",
          "pthread_mutexattr_getprotocol", "pthread_mutexattr_getpshared",
          "pthread_mutexattr_gettype", "pthread_mutexattr_getpolicy_np",
          "pthread_mutexattr_init", "pthread_mutexattr_setprioceiling",
          "pthread_mutexattr_setprotocol", "pthread_mutexattr_setpshared",
          "pthread_mutexattr_settype", "pthread_mutexattr_setpolicy_np",
          "pthread_once", "pthread_rwlock_destroy", "pthread_rwlock_init",
          "pthread_rwlock_rdlock", "pthread_rwlock_tryrdlock",
          "pthread_rwlock_trywrlock", "pthread_rwlock_wrlock",
          "pthread_rwlock_unlock", "pthread_rwlockattr_destroy",
          "pthread_rwlockattr_getpshared", "pthread_rwlockattr_init",
          "pthread_rwlockattr_setpshared", "pthread_self",
          "pthread_setcancelstate", "pthread_setcanceltype",
          "pthread_setconcurrency", "pthread_setschedparam",
          "pthread_setspecific", "pthread_testcancel",
          "pthread_is_threaded_np", "pthread_threadid_np",
          "pthread_getname_np", "pthread_setname_np", "pthread_main_np",
          "pthread_mach_thread_np", "pthread_get_stacksize_np",
          "pthread_get_stackaddr_np", "pthread_cond_signal_thread_np",
          "pthread_cond_timedwait_relative_np",
          "pthread_create_suspended_np", "pthread_kill",
          "pthread_from_mach_thread_np", "pthread_sigmask",
          "pthread_yield_np", "__darwin_check_fd_set_overflow", "adjtime",
          "futimes", "lutimes", "settimeofday", "getitimer", "gettimeofday",
          "select", "setitimer", "utimes", "mlockall", "munlockall", "mlock",
          "mmap", "mprotect", "msync", "munlock", "munmap", "shm_open",
          "shm_unlink", "posix_madvise", "madvise", "mincore", "minherit",
          "__assert_rtn", "memchr", "memcmp", "memcpy", "memmove", "memset",
          "strcat", "strchr", "strcmp", "strcoll", "strcpy", "strcspn",
          "strerror", "strlen", "strncat", "strncmp", "strncpy", "strpbrk",
          "strrchr", "strspn", "strstr", "strtok", "strxfrm", "strtok_r",
          "strerror_r", "strdup", "memccpy", "stpcpy", "stpncpy", "strndup",
          "strnlen", "strsignal", "memset_s", "memmem", "memset_pattern4",
          "memset_pattern8", "memset_pattern16", "strcasestr", "strnstr",
          "strlcat", "strlcpy", "strmode", "strsep", "swab",
          "timingsafe_bcmp", "bcmp", "bcopy", "bzero", "index", "rindex",
          "ffs", "strcasecmp", "strncasecmp", "ffsl", "ffsll", "fls", "flsl",
          "flsll", "getattrlistbulk", "getattrlistat", "setattrlistat",
          "faccessat", "fchownat", "linkat", "readlinkat", "symlinkat",
          "unlinkat", "_exit", "access", "alarm", "chdir", "chown", "close",
          "dup", "dup2", "execl", "execle", "execlp", "execv", "execve",
          "execvp", "fork", "fpathconf", "getcwd", "getegid", "geteuid",
          "getgid", "getgroups", "getlogin", "getpgrp", "getpid", "getppid",
          "getuid", "isatty", "link", "lseek", "pathconf", "pause", "pipe",
          "read", "rmdir", "setgid", "setpgid", "setsid", "setuid", "sleep",
          "sysconf", "tcgetpgrp", "tcsetpgrp", "ttyname", "ttyname_r",
          "unlink", "write", "confstr", "getopt", "optarg", "optind",
          "opterr", "optopt", "brk", "chroot", "crypt", "encrypt", "fchdir",
          "gethostid", "getpgid", "getsid", "getdtablesize", "getpagesize",
          "getpass", "getwd", "lchown", "lockf", "nice", "pread", "pwrite",
          "sbrk", "setpgrp", "setregid", "setreuid", "sync", "truncate",
          "ualarm", "usleep", "vfork", "fsync", "ftruncate", "getlogin_r",
          "fchown", "gethostname", "readlink", "setegid", "seteuid",
          "symlink", "pselect", "accessx_np", "acct", "add_profil",
          "endusershell", "execvP", "fflagstostr", "getdomainname",
          "getgrouplist", "gethostuuid", "getmode", "getpeereid",
          "getsgroups_np", "getusershell", "getwgroups_np", "initgroups",
          "issetugid", "mkdtemp", "mknod", "mkpath_np", "mkpathat_np",
          "mkstemps", "mkostemp", "mkostemps", "mkstemp_dprotected_np",
          "mkdtempat_np", "mkstempsat_np", "mkostempsat_np", "nfssvc",
          "profil", "pthread_setugid_np", "pthread_getugid_np", "reboot",
          "revoke", "rcmd", "rcmd_af", "rresvport", "rresvport_af",
          "iruserok", "iruserok_sa", "ruserok", "setdomainname", "setgroups",
          "sethostid", "sethostname", "setlogin", "setmode", "setrgid",
          "setruid", "setsgroups_np", "setusershell", "setwgroups_np",
          "strtofflags", "swapon", "ttyslot", "undelete", "unwhiteout",
          "syscall", "fgetattrlist", "fsetattrlist", "getattrlist",
          "setattrlist", "exchangedata", "getdirentriesattr", "searchfs",
          "fsctl", "ffsctl", "fsync_volume_np", "sync_volume_np", "optreset"
        ],
        "New Types": [
          "searchstate", "fssearchblock", "uuid_t", "useconds_t", "gid_t",
          "accessx_descriptor", "errno_t", "rsize_t", "clockinfo",
          "timezone", "itimerval", "suseconds_t", "timeval64", "fd_set",
          "fd_set", "mach_port_t", "pthread_override_t",
          "pthread_override_s", "qos_class_t", "__anonenum_788482901",
          "pthread_t", "pthread_rwlockattr_t", "pthread_rwlock_t",
          "pthread_once_t", "pthread_mutexattr_t", "pthread_mutex_t",
          "pthread_key_t", "pthread_condattr_t", "pthread_cond_t",
          "sched_param", "clockid_t", "__anonenum_clockid_t_447627989", "tm",
          "timespec", "time_t", "clock_t", "mode_t", "dev_t", "lldiv_t",
          "__anonstruct_lldiv_t_86583852", "ldiv_t",
          "__anonstruct_ldiv_t_748949161", "div_t",
          "__anonstruct_div_t_773697287", "wchar_t", "rune_t", "ct_rune_t",
          "wait", "__anonstruct_w_S_529377835", "__anonstruct_w_T_529377834",
          "proc_rlimit_control_wakeupmon", "rlimit", "rusage_info_current",
          "rusage_info_v4", "rusage_info_v3", "rusage_info_v2",
          "rusage_info_v1", "rusage_info_v0", "rusage_info_t", "rusage",
          "rlim_t", "timeval", "uintmax_t", "intmax_t", "uint_fast64_t",
          "uint_fast32_t", "uint_fast16_t", "uint_fast8_t", "int_fast64_t",
          "int_fast32_t", "int_fast16_t", "int_fast8_t", "uint_least64_t",
          "uint_least32_t", "uint_least16_t", "uint_least8_t",
          "int_least64_t", "int_least32_t", "int_least16_t", "int_least8_t",
          "uint64_t", "uint32_t", "uint16_t", "uint8_t", "sigstack",
          "sigvec", "sig_t", "sigaction", "__sigaction", "__sigaction_u",
          "siginfo_t", "__siginfo", "sigevent", "sigval", "uid_t",
          "sigset_t", "ucontext_t", "__darwin_ucontext", "stack_t",
          "__darwin_sigaltstack", "pthread_attr_t", "mcontext_t",
          "__darwin_mcontext_avx512_64_full", "__darwin_mcontext_avx512_64",
          "__darwin_mcontext_avx64_full", "__darwin_mcontext_avx64",
          "__darwin_mcontext64_full", "__darwin_mcontext64",
          "__darwin_mcontext_avx512_32", "__darwin_mcontext_avx32",
          "__darwin_mcontext32", "__darwin_x86_cpmu_state64",
          "__darwin_x86_debug_state64", "__darwin_x86_exception_state64",
          "__darwin_x86_avx512_state64", "__darwin_x86_avx_state64",
          "__darwin_x86_float_state64", "__darwin_x86_thread_full_state64",
          "__darwin_x86_thread_state64", "__x86_pagein_state",
          "__darwin_x86_debug_state32", "__darwin_i386_exception_state",
          "__darwin_i386_avx512_state", "__darwin_i386_avx_state",
          "__darwin_i386_float_state", "__darwin_opmask_reg",
          "__darwin_zmm_reg", "__darwin_ymm_reg", "__darwin_xmm_reg",
          "__darwin_mmst_reg", "__darwin_fp_status_t", "__darwin_fp_status",
          "__darwin_fp_control_t", "__darwin_fp_control",
          "__darwin_i386_thread_state", "sig_atomic_t", "id_t", "pid_t",
          "idtype_t", "__anonenum_idtype_t_558242672", "ssize_t", "off_t",
          "FILE", "__sFILE", "__sFILEX", "__sbuf", "fpos_t", "size_t",
          "va_list", "syscall_arg_t", "user_off_t", "user_time_t",
          "user_ulong_t", "user_long_t", "user_ssize_t", "user_size_t",
          "user_addr_t", "uintptr_t", "intptr_t", "register_t", "u_int64_t",
          "u_int32_t", "u_int16_t", "u_int8_t", "int64_t", "int32_t",
          "int16_t", "int8_t", "__darwin_wctype_t", "__darwin_wctrans_t",
          "__darwin_nl_item", "__darwin_pthread_t",
          "__darwin_pthread_rwlockattr_t", "__darwin_pthread_rwlock_t",
          "__darwin_pthread_once_t", "__darwin_pthread_mutexattr_t",
          "__darwin_pthread_mutex_t", "__darwin_pthread_key_t",
          "__darwin_pthread_condattr_t", "__darwin_pthread_cond_t",
          "__darwin_pthread_attr_t", "_opaque_pthread_t",
          "_opaque_pthread_rwlockattr_t", "_opaque_pthread_rwlock_t",
          "_opaque_pthread_once_t", "_opaque_pthread_mutexattr_t",
          "_opaque_pthread_mutex_t", "_opaque_pthread_condattr_t",
          "_opaque_pthread_cond_t", "_opaque_pthread_attr_t",
          "__darwin_pthread_handler_rec", "__darwin_uuid_string_t",
          "__darwin_uuid_t", "__darwin_useconds_t", "__darwin_uid_t",
          "__darwin_suseconds_t", "__darwin_sigset_t", "__darwin_pid_t",
          "__darwin_off_t", "__darwin_mode_t", "__darwin_mach_port_t",
          "__darwin_mach_port_name_t", "__darwin_ino_t", "__darwin_ino64_t",
          "__darwin_id_t", "__darwin_gid_t", "__darwin_fsfilcnt_t",
          "__darwin_fsblkcnt_t", "__darwin_dev_t", "__darwin_blksize_t",
          "__darwin_blkcnt_t", "__darwin_time_t", "__darwin_ssize_t",
          "__darwin_socklen_t", "__darwin_clock_t", "__darwin_wint_t",
          "__darwin_rune_t", "__darwin_wchar_t", "__darwin_va_list",
          "__darwin_size_t", "__darwin_ptrdiff_t", "__darwin_mbstate_t",
          "__mbstate_t", "__anonunion___mbstate_t_250061491",
          "__darwin_ct_rune_t", "__darwin_natural_t", "__darwin_intptr_t",
          "__uint64_t", "__int64_t", "__uint32_t", "__int32_t", "__uint16_t",
          "__int16_t", "__uint8_t", "__int8_t"
        ],
        "New Texts/Asms/Pragmas": [
          "Pragma", "Pragma", "Pragma", "Pragma", "Pragma", "Pragma"
        ]
      }
    }
  ]
}
END-UNIVERSE
*/

#pragma clang assume_nonnull begin
#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin
#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin
#pragma clang assume_nonnull end

/* BEGIN STRUCT-DECL pthread_override_s LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread/qos.h:211 */
struct pthread_override_s ;
/* END STRUCT-DECL pthread_override_s LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread/qos.h:211 */

/* BEGIN STRUCT-DECL fssearchblock LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:769 */
struct fssearchblock ;
/* END STRUCT-DECL fssearchblock LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:769 */

/* BEGIN STRUCT-DECL __sFILEX LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/_stdio.h:98 */
struct __sFILEX ;
/* END STRUCT-DECL __sFILEX LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/_stdio.h:98 */

/* BEGIN STRUCT-DECL searchstate LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:770 */
struct searchstate ;
/* END STRUCT-DECL searchstate LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:770 */

/* BEGIN STRUCT-DECL __darwin_mcontext_avx64_full LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_mcontext.h:121 */
struct __darwin_mcontext_avx64_full ;
/* END STRUCT-DECL __darwin_mcontext_avx64_full LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_mcontext.h:121 */

/* BEGIN ENUM-DECL __anonenum_jit_opcode_820224137 LOC=UNKNOWN */
enum __anonenum_jit_opcode_820224137 ;
/* END ENUM-DECL __anonenum_jit_opcode_820224137 LOC=UNKNOWN */

/* BEGIN STRUCT-DECL _opaque_pthread_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_types.h:103 */
struct _opaque_pthread_t ;
/* END STRUCT-DECL _opaque_pthread_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_types.h:103 */

/* BEGIN STRUCT-DECL __darwin_mmst_reg LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:194 */
struct __darwin_mmst_reg ;
/* END STRUCT-DECL __darwin_mmst_reg LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:194 */

/* BEGIN STRUCT-DECL timeval LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_timeval.h:34 */
struct timeval ;
/* END STRUCT-DECL timeval LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_timeval.h:34 */

/* BEGIN STRUCT-DECL rusage_info_v2 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/resource.h:229 */
struct rusage_info_v2 ;
/* END STRUCT-DECL rusage_info_v2 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/resource.h:229 */

/* BEGIN STRUCT-DECL rusage_info_v3 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/resource.h:251 */
struct rusage_info_v3 ;
/* END STRUCT-DECL rusage_info_v3 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/resource.h:251 */

/* BEGIN STRUCT-DECL jit_op LOC=UNKNOWN */
struct jit_op ;
/* END STRUCT-DECL jit_op LOC=UNKNOWN */

/* BEGIN STRUCT-DECL _TIG_iO_tgVA_2_init_tigress_1_opaqueNodeStruct LOC=UNKNOWN */
struct _TIG_iO_tgVA_2_init_tigress_1_opaqueNodeStruct ;
/* END STRUCT-DECL _TIG_iO_tgVA_2_init_tigress_1_opaqueNodeStruct LOC=UNKNOWN */

/* BEGIN UNION-DECL sigval LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/signal.h:158 */
union sigval ;
/* END UNION-DECL sigval LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/signal.h:158 */

/* BEGIN STRUCT-DECL jit_set LOC=UNKNOWN */
struct jit_set ;
/* END STRUCT-DECL jit_set LOC=UNKNOWN */

/* BEGIN STRUCT-DECL proc_rlimit_control_wakeupmon LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/resource.h:400 */
struct proc_rlimit_control_wakeupmon ;
/* END STRUCT-DECL proc_rlimit_control_wakeupmon LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/resource.h:400 */

/* BEGIN STRUCT-DECL code_refs_cache LOC=UNKNOWN */
struct code_refs_cache ;
/* END STRUCT-DECL code_refs_cache LOC=UNKNOWN */

/* BEGIN STRUCT-DECL jit LOC=UNKNOWN */
struct jit ;
/* END STRUCT-DECL jit LOC=UNKNOWN */

/* BEGIN STRUCT-DECL __darwin_x86_thread_full_state64 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:691 */
struct __darwin_x86_thread_full_state64 ;
/* END STRUCT-DECL __darwin_x86_thread_full_state64 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:691 */

/* BEGIN STRUCT-DECL jit_inp_arg LOC=UNKNOWN */
struct jit_inp_arg ;
/* END STRUCT-DECL jit_inp_arg LOC=UNKNOWN */

/* BEGIN STRUCT-DECL __anonstruct_lldiv_t_86583852 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:94 */
struct __anonstruct_lldiv_t_86583852 ;
/* END STRUCT-DECL __anonstruct_lldiv_t_86583852 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:94 */

/* BEGIN STRUCT-DECL __darwin_x86_float_state64 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:714 */
struct __darwin_x86_float_state64 ;
/* END STRUCT-DECL __darwin_x86_float_state64 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:714 */

/* BEGIN STRUCT-DECL clockinfo LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/time.h:172 */
struct clockinfo ;
/* END STRUCT-DECL clockinfo LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/time.h:172 */

/* BEGIN STRUCT-DECL __darwin_fp_status LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:150 */
struct __darwin_fp_status ;
/* END STRUCT-DECL __darwin_fp_status LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:150 */

/* BEGIN STRUCT-DECL __darwin_opmask_reg LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:259 */
struct __darwin_opmask_reg ;
/* END STRUCT-DECL __darwin_opmask_reg LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:259 */

/* BEGIN STRUCT-DECL __darwin_mcontext_avx32 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_mcontext.h:47 */
struct __darwin_mcontext_avx32 ;
/* END STRUCT-DECL __darwin_mcontext_avx32 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_mcontext.h:47 */

/* BEGIN STRUCT-DECL copy_target LOC=UNKNOWN */
struct copy_target ;
/* END STRUCT-DECL copy_target LOC=UNKNOWN */

/* BEGIN STRUCT-DECL __darwin_mcontext_avx512_32 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_mcontext.h:56 */
struct __darwin_mcontext_avx512_32 ;
/* END STRUCT-DECL __darwin_mcontext_avx512_32 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_mcontext.h:56 */

/* BEGIN STRUCT-DECL output_buf LOC=UNKNOWN */
struct output_buf ;
/* END STRUCT-DECL output_buf LOC=UNKNOWN */

/* BEGIN STRUCT-DECL __darwin_mcontext32 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_mcontext.h:39 */
struct __darwin_mcontext32 ;
/* END STRUCT-DECL __darwin_mcontext32 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_mcontext.h:39 */

/* BEGIN STRUCT-DECL __x86_pagein_state LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:622 */
struct __x86_pagein_state ;
/* END STRUCT-DECL __x86_pagein_state LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:622 */

/* BEGIN STRUCT-DECL tm LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:75 */
struct tm ;
/* END STRUCT-DECL tm LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:75 */

/* BEGIN STRUCT-DECL jit_tree LOC=UNKNOWN */
struct jit_tree ;
/* END STRUCT-DECL jit_tree LOC=UNKNOWN */

/* BEGIN STRUCT-DECL _opaque_pthread_attr_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_types.h:63 */
struct _opaque_pthread_attr_t ;
/* END STRUCT-DECL _opaque_pthread_attr_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_types.h:63 */

/* BEGIN STRUCT-DECL sigstack LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/signal.h:367 */
struct sigstack ;
/* END STRUCT-DECL sigstack LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/signal.h:367 */

/* BEGIN STRUCT-DECL __darwin_x86_exception_state64 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:1172 */
struct __darwin_x86_exception_state64 ;
/* END STRUCT-DECL __darwin_x86_exception_state64 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:1172 */

/* BEGIN STRUCT-DECL __darwin_i386_thread_state LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:46 */
struct __darwin_i386_thread_state ;
/* END STRUCT-DECL __darwin_i386_thread_state LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:46 */

/* BEGIN STRUCT-DECL accessx_descriptor LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/unistd.h:132 */
struct accessx_descriptor ;
/* END STRUCT-DECL accessx_descriptor LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/unistd.h:132 */

/* BEGIN STRUCT-DECL jit_prepared_args LOC=UNKNOWN */
struct jit_prepared_args ;
/* END STRUCT-DECL jit_prepared_args LOC=UNKNOWN */

/* BEGIN STRUCT-DECL __anonstruct_w_T_529377834 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/wait.h:194 */
struct __anonstruct_w_T_529377834 ;
/* END STRUCT-DECL __anonstruct_w_T_529377834 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/wait.h:194 */

/* BEGIN STRUCT-DECL __darwin_x86_debug_state32 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:595 */
struct __darwin_x86_debug_state32 ;
/* END STRUCT-DECL __darwin_x86_debug_state32 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:595 */

/* BEGIN STRUCT-DECL timespec LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_timespec.h:33 */
struct timespec ;
/* END STRUCT-DECL timespec LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_timespec.h:33 */

/* BEGIN STRUCT-DECL __darwin_ucontext LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_ucontext.h:42 */
struct __darwin_ucontext ;
/* END STRUCT-DECL __darwin_ucontext LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_ucontext.h:42 */

/* BEGIN STRUCT-DECL transfer_info LOC=UNKNOWN */
struct transfer_info ;
/* END STRUCT-DECL transfer_info LOC=UNKNOWN */

/* BEGIN STRUCT-DECL __darwin_mcontext_avx512_64_full LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_mcontext.h:138 */
struct __darwin_mcontext_avx512_64_full ;
/* END STRUCT-DECL __darwin_mcontext_avx512_64_full LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_mcontext.h:138 */

/* BEGIN STRUCT-DECL __darwin_i386_avx_state LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:318 */
struct __darwin_i386_avx_state ;
/* END STRUCT-DECL __darwin_i386_avx_state LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:318 */

/* BEGIN STRUCT-DECL __siginfo LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/signal.h:177 */
struct __siginfo ;
/* END STRUCT-DECL __siginfo LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/signal.h:177 */

/* BEGIN UNION-DECL __anonunion_amd64_imm_buf_34291009 LOC=UNKNOWN */
union __anonunion_amd64_imm_buf_34291009 ;
/* END UNION-DECL __anonunion_amd64_imm_buf_34291009 LOC=UNKNOWN */

/* BEGIN STRUCT-DECL _opaque_pthread_once_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_types.h:88 */
struct _opaque_pthread_once_t ;
/* END STRUCT-DECL _opaque_pthread_once_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_types.h:88 */

/* BEGIN UNION-DECL __anonunion_x86_imm_buf_876386805 LOC=UNKNOWN */
union __anonunion_x86_imm_buf_876386805 ;
/* END UNION-DECL __anonunion_x86_imm_buf_876386805 LOC=UNKNOWN */

/* BEGIN STRUCT-DECL __darwin_xmm_reg LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:213 */
struct __darwin_xmm_reg ;
/* END STRUCT-DECL __darwin_xmm_reg LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:213 */

/* BEGIN STRUCT-DECL fd_set LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_fd_def.h:50 */
struct fd_set ;
/* END STRUCT-DECL fd_set LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_fd_def.h:50 */

/* BEGIN STRUCT-DECL jit_arg_layout LOC=UNKNOWN */
struct jit_arg_layout ;
/* END STRUCT-DECL jit_arg_layout LOC=UNKNOWN */

/* BEGIN STRUCT-DECL __darwin_x86_avx_state64 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:765 */
struct __darwin_x86_avx_state64 ;
/* END STRUCT-DECL __darwin_x86_avx_state64 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:765 */

/* BEGIN STRUCT-DECL __darwin_x86_avx512_state64 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:833 */
struct __darwin_x86_avx512_state64 ;
/* END STRUCT-DECL __darwin_x86_avx512_state64 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:833 */

/* BEGIN STRUCT-DECL __darwin_mcontext64 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_mcontext.h:97 */
struct __darwin_mcontext64 ;
/* END STRUCT-DECL __darwin_mcontext64 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_mcontext.h:97 */

/* BEGIN STRUCT-DECL jit_out_arg LOC=UNKNOWN */
struct jit_out_arg ;
/* END STRUCT-DECL jit_out_arg LOC=UNKNOWN */

/* BEGIN UNION-DECL __sigaction_u LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/signal.h:269 */
union __sigaction_u ;
/* END UNION-DECL __sigaction_u LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/signal.h:269 */

/* BEGIN STRUCT-DECL jit_rmap LOC=UNKNOWN */
struct jit_rmap ;
/* END STRUCT-DECL jit_rmap LOC=UNKNOWN */

/* BEGIN UNION-DECL _TIG_VZ_tgVA_3_fib_$node LOC=UNKNOWN */
union _TIG_VZ_tgVA_3_fib_$node ;
/* END UNION-DECL _TIG_VZ_tgVA_3_fib_$node LOC=UNKNOWN */

/* BEGIN STRUCT-DECL jit_disasm LOC=UNKNOWN */
struct jit_disasm ;
/* END STRUCT-DECL jit_disasm LOC=UNKNOWN */

/* BEGIN STRUCT-DECL itimerval LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/time.h:91 */
struct itimerval ;
/* END STRUCT-DECL itimerval LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/time.h:91 */

/* BEGIN STRUCT-DECL rusage_info_v4 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/resource.h:282 */
struct rusage_info_v4 ;
/* END STRUCT-DECL rusage_info_v4 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/resource.h:282 */

/* BEGIN STRUCT-DECL __sigaction LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/signal.h:276 */
struct __sigaction ;
/* END STRUCT-DECL __sigaction LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/signal.h:276 */

/* BEGIN STRUCT-DECL sigevent LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/signal.h:168 */
struct sigevent ;
/* END STRUCT-DECL sigevent LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/signal.h:168 */

/* BEGIN STRUCT-DECL __darwin_i386_exception_state LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:575 */
struct __darwin_i386_exception_state ;
/* END STRUCT-DECL __darwin_i386_exception_state LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:575 */

/* BEGIN STRUCT-DECL __darwin_i386_avx512_state LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:364 */
struct __darwin_i386_avx512_state ;
/* END STRUCT-DECL __darwin_i386_avx512_state LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:364 */

/* BEGIN STRUCT-DECL __darwin_mcontext_avx64 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_mcontext.h:113 */
struct __darwin_mcontext_avx64 ;
/* END STRUCT-DECL __darwin_mcontext_avx64 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_mcontext.h:113 */

/* BEGIN STRUCT-DECL __anonstruct_ldiv_t_748949161 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:88 */
struct __anonstruct_ldiv_t_748949161 ;
/* END STRUCT-DECL __anonstruct_ldiv_t_748949161 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:88 */

/* BEGIN STRUCT-DECL __darwin_x86_cpmu_state64 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:1220 */
struct __darwin_x86_cpmu_state64 ;
/* END STRUCT-DECL __darwin_x86_cpmu_state64 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:1220 */

/* BEGIN STRUCT-DECL timezone LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/time.h:129 */
struct timezone ;
/* END STRUCT-DECL timezone LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/time.h:129 */

/* BEGIN STRUCT-DECL jit_arg_layout_location LOC=UNKNOWN */
struct jit_arg_layout_location ;
/* END STRUCT-DECL jit_arg_layout_location LOC=UNKNOWN */

/* BEGIN STRUCT-DECL __darwin_pthread_handler_rec LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_types.h:57 */
struct __darwin_pthread_handler_rec ;
/* END STRUCT-DECL __darwin_pthread_handler_rec LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_types.h:57 */

/* BEGIN STRUCT-DECL __anonstruct_w_S_529377835 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/wait.h:194 */
struct __anonstruct_w_S_529377835 ;
/* END STRUCT-DECL __anonstruct_w_S_529377835 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/wait.h:194 */

/* BEGIN STRUCT-DECL __darwin_fp_control LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:92 */
struct __darwin_fp_control ;
/* END STRUCT-DECL __darwin_fp_control LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:92 */

/* BEGIN UNION-DECL wait LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/wait.h:194 */
union wait ;
/* END UNION-DECL wait LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/wait.h:194 */

/* BEGIN STRUCT-DECL __darwin_mcontext_avx512_64 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_mcontext.h:130 */
struct __darwin_mcontext_avx512_64 ;
/* END STRUCT-DECL __darwin_mcontext_avx512_64 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_mcontext.h:130 */

/* BEGIN STRUCT-DECL __darwin_x86_thread_state64 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:633 */
struct __darwin_x86_thread_state64 ;
/* END STRUCT-DECL __darwin_x86_thread_state64 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:633 */

/* BEGIN STRUCT-DECL rlimit LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/resource.h:365 */
struct rlimit ;
/* END STRUCT-DECL rlimit LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/resource.h:365 */

/* BEGIN ENUM-DECL __anonenum_idtype_t_558242672 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/wait.h:79 */
enum __anonenum_idtype_t_558242672 ;
/* END ENUM-DECL __anonenum_idtype_t_558242672 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/wait.h:79 */

/* BEGIN STRUCT-DECL __sbuf LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/_stdio.h:92 */
struct __sbuf ;
/* END STRUCT-DECL __sbuf LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/_stdio.h:92 */

/* BEGIN STRUCT-DECL _opaque_pthread_rwlock_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_types.h:93 */
struct _opaque_pthread_rwlock_t ;
/* END STRUCT-DECL _opaque_pthread_rwlock_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_types.h:93 */

/* BEGIN STRUCT-DECL __darwin_zmm_reg LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:245 */
struct __darwin_zmm_reg ;
/* END STRUCT-DECL __darwin_zmm_reg LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:245 */

/* BEGIN STRUCT-DECL __anonstruct_jit_hw_reg_312769258 LOC=UNKNOWN */
struct __anonstruct_jit_hw_reg_312769258 ;
/* END STRUCT-DECL __anonstruct_jit_hw_reg_312769258 LOC=UNKNOWN */

/* BEGIN STRUCT-DECL __darwin_mcontext64_full LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_mcontext.h:105 */
struct __darwin_mcontext64_full ;
/* END STRUCT-DECL __darwin_mcontext64_full LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_mcontext.h:105 */

/* BEGIN STRUCT-DECL __sFILE LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/_stdio.h:126 */
struct __sFILE ;
/* END STRUCT-DECL __sFILE LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/_stdio.h:126 */

/* BEGIN STRUCT-DECL rusage LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/resource.h:152 */
struct rusage ;
/* END STRUCT-DECL rusage LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/resource.h:152 */

/* BEGIN STRUCT-DECL jit_func_info LOC=UNKNOWN */
struct jit_func_info ;
/* END STRUCT-DECL jit_func_info LOC=UNKNOWN */

/* BEGIN STRUCT-DECL __darwin_ymm_reg LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:229 */
struct __darwin_ymm_reg ;
/* END STRUCT-DECL __darwin_ymm_reg LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:229 */

/* BEGIN STRUCT-DECL jit_allocator_hint LOC=UNKNOWN */
struct jit_allocator_hint ;
/* END STRUCT-DECL jit_allocator_hint LOC=UNKNOWN */

/* BEGIN STRUCT-DECL __darwin_sigaltstack LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_sigaltstack.h:42 */
struct __darwin_sigaltstack ;
/* END STRUCT-DECL __darwin_sigaltstack LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_sigaltstack.h:42 */

/* BEGIN STRUCT-DECL jit_reg_allocator LOC=UNKNOWN */
struct jit_reg_allocator ;
/* END STRUCT-DECL jit_reg_allocator LOC=UNKNOWN */

/* BEGIN STRUCT-DECL timeval64 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_timeval64.h:34 */
struct timeval64 ;
/* END STRUCT-DECL timeval64 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_timeval64.h:34 */

/* BEGIN ENUM-DECL jit_inp_type LOC=UNKNOWN */
enum jit_inp_type ;
/* END ENUM-DECL jit_inp_type LOC=UNKNOWN */

/* BEGIN UNION-DECL __anonunion_value_137411616 LOC=UNKNOWN */
union __anonunion_value_137411616 ;
/* END UNION-DECL __anonunion_value_137411616 LOC=UNKNOWN */

/* BEGIN STRUCT-DECL jit_debug_info LOC=UNKNOWN */
struct jit_debug_info ;
/* END STRUCT-DECL jit_debug_info LOC=UNKNOWN */

/* BEGIN STRUCT-DECL _opaque_pthread_condattr_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_types.h:73 */
struct _opaque_pthread_condattr_t ;
/* END STRUCT-DECL _opaque_pthread_condattr_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_types.h:73 */

/* BEGIN STRUCT-DECL _opaque_pthread_rwlockattr_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_types.h:98 */
struct _opaque_pthread_rwlockattr_t ;
/* END STRUCT-DECL _opaque_pthread_rwlockattr_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_types.h:98 */

/* BEGIN ENUM-DECL __anonenum_788482901 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/qos.h:130 */
enum __anonenum_788482901 ;
/* END ENUM-DECL __anonenum_788482901 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/qos.h:130 */

/* BEGIN STRUCT-DECL _opaque_pthread_mutexattr_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_types.h:83 */
struct _opaque_pthread_mutexattr_t ;
/* END STRUCT-DECL _opaque_pthread_mutexattr_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_types.h:83 */

/* BEGIN STRUCT-DECL sched_param LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread/sched.h:35 */
struct sched_param ;
/* END STRUCT-DECL sched_param LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread/sched.h:35 */

/* BEGIN STRUCT-DECL __darwin_i386_float_state LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:281 */
struct __darwin_i386_float_state ;
/* END STRUCT-DECL __darwin_i386_float_state LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:281 */

/* BEGIN STRUCT-DECL rusage_info_v1 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/resource.h:209 */
struct rusage_info_v1 ;
/* END STRUCT-DECL rusage_info_v1 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/resource.h:209 */

/* BEGIN STRUCT-DECL _opaque_pthread_mutex_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_types.h:78 */
struct _opaque_pthread_mutex_t ;
/* END STRUCT-DECL _opaque_pthread_mutex_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_types.h:78 */

/* BEGIN UNION-DECL __anonunion_location_773697288 LOC=UNKNOWN */
union __anonunion_location_773697288 ;
/* END UNION-DECL __anonunion_location_773697288 LOC=UNKNOWN */

/* BEGIN ENUM-DECL __anonenum_clockid_t_447627989 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:153 */
enum __anonenum_clockid_t_447627989 ;
/* END ENUM-DECL __anonenum_clockid_t_447627989 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:153 */

/* BEGIN STRUCT-DECL __darwin_x86_debug_state64 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:1192 */
struct __darwin_x86_debug_state64 ;
/* END STRUCT-DECL __darwin_x86_debug_state64 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:1192 */

/* BEGIN STRUCT-DECL sigvec LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/signal.h:348 */
struct sigvec ;
/* END STRUCT-DECL sigvec LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/signal.h:348 */

/* BEGIN STRUCT-DECL __anonstruct_div_t_773697287 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:83 */
struct __anonstruct_div_t_773697287 ;
/* END STRUCT-DECL __anonstruct_div_t_773697287 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:83 */

/* BEGIN STRUCT-DECL rusage_info_v0 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/resource.h:195 */
struct rusage_info_v0 ;
/* END STRUCT-DECL rusage_info_v0 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/resource.h:195 */

/* BEGIN UNION-DECL __anonunion___mbstate_t_250061491 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_types.h:76 */
union __anonunion___mbstate_t_250061491 ;
/* END UNION-DECL __anonunion___mbstate_t_250061491 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_types.h:76 */

/* BEGIN STRUCT-DECL jit_exec_mem LOC=UNKNOWN */
struct jit_exec_mem ;
/* END STRUCT-DECL jit_exec_mem LOC=UNKNOWN */

/* BEGIN STRUCT-DECL sigaction LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/signal.h:286 */
struct sigaction ;
/* END STRUCT-DECL sigaction LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/signal.h:286 */

/* BEGIN STRUCT-DECL jit_label LOC=UNKNOWN */
struct jit_label ;
/* END STRUCT-DECL jit_label LOC=UNKNOWN */

/* BEGIN STRUCT-DECL _opaque_pthread_cond_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_types.h:68 */
struct _opaque_pthread_cond_t ;
/* END STRUCT-DECL _opaque_pthread_cond_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_types.h:68 */

/* BEGIN FUNCTION-DECL __builtin_strchr LOC=BUILTIN */
/* compiler builtin: 
   char *__builtin_strchr(char * , int  ) ;  */
/* END FUNCTION-DECL __builtin_strchr LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_llround LOC=BUILTIN */
/* compiler builtin: 
   long long __builtin_llround(double  ) ;  */
/* END FUNCTION-DECL __builtin_llround LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_ctz LOC=BUILTIN */
/* compiler builtin: 
   int __builtin_ctz(unsigned int  ) ;  */
/* END FUNCTION-DECL __builtin_ctz LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN mrand48 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:218 */
extern long mrand48(void)  __attribute__((__availability__(swift,unavailable,message="Use arc4random instead."))) ;
/* END FUNCTION-DECL-EXTERN mrand48 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:218 */

/* BEGIN FUNCTION-DECL __builtin_strncasecmp LOC=BUILTIN */
/* compiler builtin: 
   int __builtin_strncasecmp(char const   * , char const   * , unsigned long long  ) ;  */
/* END FUNCTION-DECL __builtin_strncasecmp LOC=BUILTIN */

/* BEGIN TYPEDEF __darwin_ssize_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_types.h:119 */
typedef long __darwin_ssize_t;
/* END TYPEDEF __darwin_ssize_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_types.h:119 */

/* BEGIN FUNCTION-DECL __builtin_acosf LOC=BUILTIN */
/* compiler builtin: 
   float __builtin_acosf(float  ) ;  */
/* END FUNCTION-DECL __builtin_acosf LOC=BUILTIN */

/* BEGIN STRUCT _opaque_pthread_cond_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_types.h:68 */
struct _opaque_pthread_cond_t {
   long __sig ;
   char __opaque[40] ;
};
/* END STRUCT _opaque_pthread_cond_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_types.h:68 */

/* BEGIN TYPEDEF __darwin_pthread_cond_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_types.h:110 */
typedef struct _opaque_pthread_cond_t __darwin_pthread_cond_t;
/* END TYPEDEF __darwin_pthread_cond_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_types.h:110 */

/* BEGIN TYPEDEF pthread_cond_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_cond_t.h:31 */
typedef __darwin_pthread_cond_t pthread_cond_t;
/* END TYPEDEF pthread_cond_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_cond_t.h:31 */

/* BEGIN STRUCT _opaque_pthread_mutex_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_types.h:78 */
struct _opaque_pthread_mutex_t {
   long __sig ;
   char __opaque[56] ;
};
/* END STRUCT _opaque_pthread_mutex_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_types.h:78 */

/* BEGIN TYPEDEF __darwin_pthread_mutex_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_types.h:113 */
typedef struct _opaque_pthread_mutex_t __darwin_pthread_mutex_t;
/* END TYPEDEF __darwin_pthread_mutex_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_types.h:113 */

/* BEGIN TYPEDEF pthread_mutex_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_mutex_t.h:31 */
typedef __darwin_pthread_mutex_t pthread_mutex_t;
/* END TYPEDEF pthread_mutex_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_mutex_t.h:31 */

/* BEGIN FUNCTION-DECL-EXTERN pthread_cond_timedwait_relative_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:535 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_cond_timedwait_relative_np(pthread_cond_t * ,
                                                                                                                                              pthread_mutex_t * ,
                                                                                                                                              struct timespec  const  * _Nullable   ) ;
/* END FUNCTION-DECL-EXTERN pthread_cond_timedwait_relative_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:535 */

/* BEGIN TYPEDEF FILE LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/_stdio.h:126 */
typedef struct __sFILE FILE;
/* END TYPEDEF FILE LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/_stdio.h:126 */

/* BEGIN FUNCTION-DECL-EXTERN putc LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:171 */
extern int putc(int  , FILE * ) ;
/* END FUNCTION-DECL-EXTERN putc LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:171 */

/* BEGIN STRUCT _opaque_pthread_attr_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_types.h:63 */
struct _opaque_pthread_attr_t {
   long __sig ;
   char __opaque[56] ;
};
/* END STRUCT _opaque_pthread_attr_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_types.h:63 */

/* BEGIN TYPEDEF __darwin_pthread_attr_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_types.h:109 */
typedef struct _opaque_pthread_attr_t __darwin_pthread_attr_t;
/* END TYPEDEF __darwin_pthread_attr_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_types.h:109 */

/* BEGIN TYPEDEF pthread_attr_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_attr_t.h:31 */
typedef __darwin_pthread_attr_t pthread_attr_t;
/* END TYPEDEF pthread_attr_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_attr_t.h:31 */

/* BEGIN TYPEDEF qos_class_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/qos.h:130 */
typedef unsigned int qos_class_t;
/* END TYPEDEF qos_class_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/qos.h:130 */

/* BEGIN FUNCTION-DECL-EXTERN pthread_attr_get_qos_class_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread/qos.h:114 */
extern int __attribute__((__availability__(ios,introduced=8.0), __availability__(macos,introduced=10.10)))  pthread_attr_get_qos_class_np(pthread_attr_t * __restrict  __attr ,
                                                                                                                                          qos_class_t * _Nullable __restrict  __qos_class ,
                                                                                                                                          int * _Nullable __restrict  __relative_priority ) ;
/* END FUNCTION-DECL-EXTERN pthread_attr_get_qos_class_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread/qos.h:114 */

/* BEGIN FUNCTION-DECL __builtin_strcmp LOC=BUILTIN */
/* compiler builtin: 
   int __builtin_strcmp(char const   * , char const   * ) ;  */
/* END FUNCTION-DECL __builtin_strcmp LOC=BUILTIN */

/* BEGIN FUNCTION-DECL jit_arg_layout_create LOC=UNKNOWN */
static struct jit_arg_layout *jit_arg_layout_create(struct jit *jit , int arg_cnt ) ;
/* END FUNCTION-DECL jit_arg_layout_create LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __darwin_fd_isset LOC=UNKNOWN */
__inline int ( __attribute__((__always_inline__)) __darwin_fd_isset)(int _fd , struct fd_set  const  *_p ) ;
/* END FUNCTION-DECL __darwin_fd_isset LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_fmodf128 LOC=BUILTIN */
/* compiler builtin: 
   _Float128 __builtin_fmodf128(_Float128  , _Float128  ) ;  */
/* END FUNCTION-DECL __builtin_fmodf128 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN pthread_exit LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:349 */
extern  __attribute__((__noreturn__)) void __attribute__((__availability__(macos,introduced=10.4),
__availability__(ios,introduced=2.0)))  pthread_exit(void * _Nullable   ) ;
/* END FUNCTION-DECL-EXTERN pthread_exit LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:349 */

/* BEGIN FUNCTION-DECL jit_patch_external_calls LOC=UNKNOWN */
void jit_patch_external_calls(struct jit *jit ) ;
/* END FUNCTION-DECL jit_patch_external_calls LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_abort LOC=BUILTIN */
/* compiler builtin: 
   void __builtin_abort(void) ;  */
/* END FUNCTION-DECL __builtin_abort LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_clrsb LOC=BUILTIN */
/* compiler builtin: 
   int __builtin_clrsb(int  ) ;  */
/* END FUNCTION-DECL __builtin_clrsb LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN ctermid LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/_ctermid.h:26 */
extern char *ctermid(char * ) ;
/* END FUNCTION-DECL-EXTERN ctermid LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/_ctermid.h:26 */

/* BEGIN FUNCTION-DECL __builtin_va_arg LOC=BUILTIN */
/* compiler builtin: 
   void __builtin_va_arg(__builtin_va_list  , unsigned long long  , void * ) ;  */
/* END FUNCTION-DECL __builtin_va_arg LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_fmodf LOC=BUILTIN */
/* compiler builtin: 
   float __builtin_fmodf(float  ) ;  */
/* END FUNCTION-DECL __builtin_fmodf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_fmodf16 LOC=BUILTIN */
/* compiler builtin: 
   _Float16 __builtin_fmodf16(_Float16  , _Float16  ) ;  */
/* END FUNCTION-DECL __builtin_fmodf16 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN arc4random_addrandom LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:265 */
extern void arc4random_addrandom(unsigned char * , int  )  __attribute__((__availability__(watchos,deprecated=3.0,message="use arc4random_stir"),
__availability__(watchos,introduced=1.0), __availability__(tvos,deprecated=10.0,message="use arc4random_stir"),
__availability__(tvos,introduced=2.0), __availability__(ios,deprecated=10.0,message="use arc4random_stir"),
__availability__(ios,introduced=2.0), __availability__(macosx,deprecated=10.12,message="use arc4random_stir"),
__availability__(macosx,introduced=10.0))) ;
/* END FUNCTION-DECL-EXTERN arc4random_addrandom LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:265 */

/* BEGIN FUNCTION-DECL-EXTERN fputs LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:157 */
extern int fputs(char const   * __restrict   , FILE * __restrict   )  __asm__("_fputs")  ;
/* END FUNCTION-DECL-EXTERN fputs LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:157 */

/* BEGIN TYPEDEF __int32_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_types.h:44 */
typedef int __int32_t;
/* END TYPEDEF __int32_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_types.h:44 */

/* BEGIN TYPEDEF __darwin_suseconds_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types.h:74 */
typedef __int32_t __darwin_suseconds_t;
/* END TYPEDEF __darwin_suseconds_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types.h:74 */

/* BEGIN TYPEDEF __darwin_time_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_types.h:120 */
typedef long __darwin_time_t;
/* END TYPEDEF __darwin_time_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_types.h:120 */

/* BEGIN STRUCT timeval LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_timeval.h:34 */
struct timeval {
   __darwin_time_t tv_sec ;
   __darwin_suseconds_t tv_usec ;
};
/* END STRUCT timeval LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_timeval.h:34 */

/* BEGIN STRUCT rusage LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/resource.h:152 */
struct rusage {
   struct timeval ru_utime ;
   struct timeval ru_stime ;
   long ru_maxrss ;
   long ru_ixrss ;
   long ru_idrss ;
   long ru_isrss ;
   long ru_minflt ;
   long ru_majflt ;
   long ru_nswap ;
   long ru_inblock ;
   long ru_oublock ;
   long ru_msgsnd ;
   long ru_msgrcv ;
   long ru_nsignals ;
   long ru_nvcsw ;
   long ru_nivcsw ;
};
/* END STRUCT rusage LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/resource.h:152 */

/* BEGIN FUNCTION-DECL-EXTERN funlockfile LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:288 */
extern void funlockfile(FILE * ) ;
/* END FUNCTION-DECL-EXTERN funlockfile LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:288 */

/* BEGIN FUNCTION-DECL-EXTERN setiopolicy_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/resource.h:453 */
extern int setiopolicy_np(int  , int  , int  )  __attribute__((__availability__(macosx,introduced=10.5))) ;
/* END FUNCTION-DECL-EXTERN setiopolicy_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/resource.h:453 */

/* BEGIN FUNCTION-DECL-EXTERN pthread_attr_setstackaddr LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:284 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_attr_setstackaddr(pthread_attr_t * ,
                                                                                                                                     void * ) ;
/* END FUNCTION-DECL-EXTERN pthread_attr_setstackaddr LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:284 */

/* BEGIN FUNCTION-DECL-EXTERN pthread_attr_set_qos_class_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread/qos.h:83 */
extern int __attribute__((__availability__(ios,introduced=8.0), __availability__(macos,introduced=10.10)))  pthread_attr_set_qos_class_np(pthread_attr_t *__attr ,
                                                                                                                                          qos_class_t __qos_class ,
                                                                                                                                          int __relative_priority ) ;
/* END FUNCTION-DECL-EXTERN pthread_attr_set_qos_class_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread/qos.h:83 */

/* BEGIN FUNCTION-DECL-EXTERN brk LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:540 */
extern  __attribute__((__deprecated__)) void __attribute__((__availability__(watchos,unavailable),
__availability__(tvos,unavailable)))  *brk(void const   * ) ;
/* END FUNCTION-DECL-EXTERN brk LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:540 */

/* BEGIN FUNCTION-DECL-EXTERN setitimer LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/time.h:201 */
extern int setitimer(int  , struct itimerval  const  * __restrict   , struct itimerval * __restrict   ) ;
/* END FUNCTION-DECL-EXTERN setitimer LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/time.h:201 */

/* BEGIN FUNCTION-DECL __builtin_acos LOC=BUILTIN */
/* compiler builtin: 
   double __builtin_acos(double  ) ;  */
/* END FUNCTION-DECL __builtin_acos LOC=BUILTIN */

/* BEGIN FUNCTION-DECL ob_new LOC=UNKNOWN */
static struct output_buf *ob_new(void) ;
/* END FUNCTION-DECL ob_new LOC=UNKNOWN */

/* BEGIN VARIABLE-DECL-EXTERN optreset LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:782 */
extern int optreset ;
/* END VARIABLE-DECL-EXTERN optreset LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:782 */

/* BEGIN FUNCTION-DECL __builtin_ctanl LOC=BUILTIN */
/* compiler builtin: 
   _Complex long double __builtin_ctanl(_Complex long double  ) ;  */
/* END FUNCTION-DECL __builtin_ctanl LOC=BUILTIN */

/* BEGIN TYPEDEF u_int64_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_u_int64_t.h:30 */
typedef unsigned long long u_int64_t;
/* END TYPEDEF u_int64_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_u_int64_t.h:30 */

/* BEGIN FUNCTION-DECL-EXTERN tmpfile LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:182 */
extern FILE *tmpfile(void) ;
/* END FUNCTION-DECL-EXTERN tmpfile LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:182 */

/* BEGIN FUNCTION-DECL __builtin_ctanhf LOC=BUILTIN */
/* compiler builtin: 
   _Complex float __builtin_ctanhf(_Complex float  ) ;  */
/* END FUNCTION-DECL __builtin_ctanhf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN getloadavg LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:296 */
extern int getloadavg(double * , int  ) ;
/* END FUNCTION-DECL-EXTERN getloadavg LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:296 */

/* BEGIN FUNCTION-DECL-EXTERN getpass LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:559 */
extern char *getpass(char const   * ) ;
/* END FUNCTION-DECL-EXTERN getpass LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:559 */

/* BEGIN TYPEDEF jit_tree LOC=UNKNOWN */
typedef struct jit_tree jit_tree;
/* END TYPEDEF jit_tree LOC=UNKNOWN */

/* BEGIN TYPEDEF jit_value LOC=UNKNOWN */
typedef long jit_value;
/* END TYPEDEF jit_value LOC=UNKNOWN */

/* BEGIN TYPEDEF jit_tree_key LOC=UNKNOWN */
typedef jit_value jit_tree_key;
/* END TYPEDEF jit_tree_key LOC=UNKNOWN */

/* BEGIN TYPEDEF jit_tree_value LOC=UNKNOWN */
typedef void *jit_tree_value;
/* END TYPEDEF jit_tree_value LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL node_new LOC=UNKNOWN */
__inline static jit_tree *node_new(jit_tree_key key , jit_tree_value value ) ;
/* END FUNCTION-DECL node_new LOC=UNKNOWN */

/* BEGIN TYPEDEF __uint32_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_types.h:45 */
typedef unsigned int __uint32_t;
/* END TYPEDEF __uint32_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_types.h:45 */

/* BEGIN TYPEDEF __darwin_wctype_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/_types.h:43 */
typedef __uint32_t __darwin_wctype_t;
/* END TYPEDEF __darwin_wctype_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/_types.h:43 */

/* BEGIN FUNCTION-DECL __builtin_va_arg_pack LOC=BUILTIN */
/* compiler builtin: 
   int __builtin_va_arg_pack(void) ;  */
/* END FUNCTION-DECL __builtin_va_arg_pack LOC=BUILTIN */

/* BEGIN TYPEDEF __uint8_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_types.h:41 */
typedef unsigned char __uint8_t;
/* END TYPEDEF __uint8_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_types.h:41 */

/* BEGIN FUNCTION-DECL __builtin_casinh LOC=BUILTIN */
/* compiler builtin: 
   _Complex double __builtin_casinh(_Complex double  ) ;  */
/* END FUNCTION-DECL __builtin_casinh LOC=BUILTIN */

/* BEGIN STRUCT jit_rmap LOC=UNKNOWN */
struct jit_rmap {
   jit_tree *map ;
};
/* END STRUCT jit_rmap LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_isfinite LOC=BUILTIN */
/* compiler builtin: 
   int __builtin_isfinite(...) ;  */
/* END FUNCTION-DECL __builtin_isfinite LOC=BUILTIN */

/* BEGIN FUNCTION-DECL jit_arg_layout_create_input LOC=UNKNOWN */
static struct jit_arg_layout *jit_arg_layout_create_input(struct jit *jit , struct jit_func_info *info ,
                                                          int arg_cnt ) ;
/* END FUNCTION-DECL jit_arg_layout_create_input LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_rintl LOC=BUILTIN */
/* compiler builtin: 
   long double __builtin_rintl(long double  ) ;  */
/* END FUNCTION-DECL __builtin_rintl LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_isgreater LOC=BUILTIN */
/* compiler builtin: 
   int __builtin_isgreater(...) ;  */
/* END FUNCTION-DECL __builtin_isgreater LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN fileno LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:212 */
extern int fileno(FILE * ) ;
/* END FUNCTION-DECL-EXTERN fileno LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:212 */

/* BEGIN TYPEDEF __darwin_va_list LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_types.h:98 */
typedef __builtin_va_list __darwin_va_list;
/* END TYPEDEF __darwin_va_list LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_types.h:98 */

/* BEGIN TYPEDEF va_list LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_va_list.h:32 */
typedef __darwin_va_list va_list;
/* END TYPEDEF va_list LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_va_list.h:32 */

/* BEGIN FUNCTION-DECL-EXTERN vsprintf LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:192 */
extern int ( /* format attribute */  vsprintf)(char * __restrict   , char const   * __restrict   ,
                                               va_list  )  __attribute__((__availability__(swift,unavailable,message="Use vsnprintf instead."))) ;
/* END FUNCTION-DECL-EXTERN vsprintf LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:192 */

/* BEGIN FUNCTION-DECL-EXTERN vprintf LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:191 */
extern int ( /* format attribute */  vprintf)(char const   * __restrict   , va_list  ) ;
/* END FUNCTION-DECL-EXTERN vprintf LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:191 */

/* BEGIN TYPEDEF __darwin_gid_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types.h:60 */
typedef __uint32_t __darwin_gid_t;
/* END TYPEDEF __darwin_gid_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types.h:60 */

/* BEGIN TYPEDEF gid_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_gid_t.h:31 */
typedef __darwin_gid_t gid_t;
/* END TYPEDEF gid_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_gid_t.h:31 */

/* BEGIN FUNCTION-DECL-EXTERN getgroups LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:456 */
extern int getgroups(int  , gid_t * ) ;
/* END FUNCTION-DECL-EXTERN getgroups LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:456 */

/* BEGIN FUNCTION-DECL __builtin_expm1l LOC=BUILTIN */
/* compiler builtin: 
   long double __builtin_expm1l(long double  ) ;  */
/* END FUNCTION-DECL __builtin_expm1l LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN strtok_r LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:104 */
extern char *strtok_r(char *__str , char const   *__sep , char **__lasts ) ;
/* END FUNCTION-DECL-EXTERN strtok_r LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:104 */

/* BEGIN TYPEDEF __darwin_pthread_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_types.h:118 */
typedef struct _opaque_pthread_t *__darwin_pthread_t;
/* END TYPEDEF __darwin_pthread_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_types.h:118 */

/* BEGIN TYPEDEF pthread_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_t.h:31 */
typedef __darwin_pthread_t pthread_t;
/* END TYPEDEF pthread_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_t.h:31 */

/* BEGIN FUNCTION-DECL-EXTERN pthread_self LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:477 */
extern pthread_t __attribute__((__availability__(macos,introduced=10.4), __availability__(ios,introduced=2.0)))  pthread_self(void) ;
/* END FUNCTION-DECL-EXTERN pthread_self LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:477 */

/* BEGIN FUNCTION-DECL jit_optimize_join_addmul LOC=UNKNOWN */
int jit_optimize_join_addmul(struct jit *jit ) ;
/* END FUNCTION-DECL jit_optimize_join_addmul LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_csqrt LOC=BUILTIN */
/* compiler builtin: 
   _Complex double __builtin_csqrt(_Complex double  ) ;  */
/* END FUNCTION-DECL __builtin_csqrt LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN strcasecmp LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/strings.h:78 */
extern int strcasecmp(char const   * , char const   * ) ;
/* END FUNCTION-DECL-EXTERN strcasecmp LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/strings.h:78 */

/* BEGIN STRUCT __darwin_fp_control LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:92 */
struct __darwin_fp_control {
   unsigned short __invalid : 1 ;
   unsigned short __denorm : 1 ;
   unsigned short __zdiv : 1 ;
   unsigned short __ovrfl : 1 ;
   unsigned short __undfl : 1 ;
   unsigned short __precis : 1 ;
   unsigned short  : 2 ;
   unsigned short __pc : 2 ;
   unsigned short __rc : 2 ;
   unsigned short  : 1 ;
   unsigned short  : 3 ;
};
/* END STRUCT __darwin_fp_control LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:92 */

/* BEGIN STRUCT __darwin_fp_status LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:150 */
struct __darwin_fp_status {
   unsigned short __invalid : 1 ;
   unsigned short __denorm : 1 ;
   unsigned short __zdiv : 1 ;
   unsigned short __ovrfl : 1 ;
   unsigned short __undfl : 1 ;
   unsigned short __precis : 1 ;
   unsigned short __stkflt : 1 ;
   unsigned short __errsumm : 1 ;
   unsigned short __c0 : 1 ;
   unsigned short __c1 : 1 ;
   unsigned short __c2 : 1 ;
   unsigned short __tos : 3 ;
   unsigned short __c3 : 1 ;
   unsigned short __busy : 1 ;
};
/* END STRUCT __darwin_fp_status LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:150 */

/* BEGIN STRUCT __darwin_mmst_reg LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:194 */
struct __darwin_mmst_reg {
   char __mmst_reg[10] ;
   char __mmst_rsrv[6] ;
};
/* END STRUCT __darwin_mmst_reg LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:194 */

/* BEGIN STRUCT __darwin_xmm_reg LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:213 */
struct __darwin_xmm_reg {
   char __xmm_reg[16] ;
};
/* END STRUCT __darwin_xmm_reg LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:213 */

/* BEGIN TYPEDEF __uint16_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_types.h:43 */
typedef unsigned short __uint16_t;
/* END TYPEDEF __uint16_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_types.h:43 */

/* BEGIN STRUCT __darwin_i386_avx_state LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:318 */
struct __darwin_i386_avx_state {
   int __fpu_reserved[2] ;
   struct __darwin_fp_control __fpu_fcw ;
   struct __darwin_fp_status __fpu_fsw ;
   __uint8_t __fpu_ftw ;
   __uint8_t __fpu_rsrv1 ;
   __uint16_t __fpu_fop ;
   __uint32_t __fpu_ip ;
   __uint16_t __fpu_cs ;
   __uint16_t __fpu_rsrv2 ;
   __uint32_t __fpu_dp ;
   __uint16_t __fpu_ds ;
   __uint16_t __fpu_rsrv3 ;
   __uint32_t __fpu_mxcsr ;
   __uint32_t __fpu_mxcsrmask ;
   struct __darwin_mmst_reg __fpu_stmm0 ;
   struct __darwin_mmst_reg __fpu_stmm1 ;
   struct __darwin_mmst_reg __fpu_stmm2 ;
   struct __darwin_mmst_reg __fpu_stmm3 ;
   struct __darwin_mmst_reg __fpu_stmm4 ;
   struct __darwin_mmst_reg __fpu_stmm5 ;
   struct __darwin_mmst_reg __fpu_stmm6 ;
   struct __darwin_mmst_reg __fpu_stmm7 ;
   struct __darwin_xmm_reg __fpu_xmm0 ;
   struct __darwin_xmm_reg __fpu_xmm1 ;
   struct __darwin_xmm_reg __fpu_xmm2 ;
   struct __darwin_xmm_reg __fpu_xmm3 ;
   struct __darwin_xmm_reg __fpu_xmm4 ;
   struct __darwin_xmm_reg __fpu_xmm5 ;
   struct __darwin_xmm_reg __fpu_xmm6 ;
   struct __darwin_xmm_reg __fpu_xmm7 ;
   char __fpu_rsrv4[224] ;
   int __fpu_reserved1 ;
   char __avx_reserved1[64] ;
   struct __darwin_xmm_reg __fpu_ymmh0 ;
   struct __darwin_xmm_reg __fpu_ymmh1 ;
   struct __darwin_xmm_reg __fpu_ymmh2 ;
   struct __darwin_xmm_reg __fpu_ymmh3 ;
   struct __darwin_xmm_reg __fpu_ymmh4 ;
   struct __darwin_xmm_reg __fpu_ymmh5 ;
   struct __darwin_xmm_reg __fpu_ymmh6 ;
   struct __darwin_xmm_reg __fpu_ymmh7 ;
};
/* END STRUCT __darwin_i386_avx_state LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:318 */

/* BEGIN TYPEDEF __darwin_pid_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types.h:72 */
typedef __int32_t __darwin_pid_t;
/* END TYPEDEF __darwin_pid_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types.h:72 */

/* BEGIN TYPEDEF pid_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_pid_t.h:31 */
typedef __darwin_pid_t pid_t;
/* END TYPEDEF pid_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_pid_t.h:31 */

/* BEGIN FUNCTION-DECL-EXTERN setpgrp LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:588 */
extern pid_t setpgrp(void)  __asm__("_setpgrp")  ;
/* END FUNCTION-DECL-EXTERN setpgrp LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:588 */

/* BEGIN TYPEDEF jit_hw_reg LOC=UNKNOWN */
typedef struct __anonstruct_jit_hw_reg_312769258 jit_hw_reg;
/* END TYPEDEF jit_hw_reg LOC=UNKNOWN */

/* BEGIN TYPEDEF jit_op LOC=UNKNOWN */
typedef struct jit_op jit_op;
/* END TYPEDEF jit_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL is_active_register LOC=UNKNOWN */
static int is_active_register(struct jit_reg_allocator *al , jit_hw_reg *reg , jit_op *op ) ;
/* END FUNCTION-DECL is_active_register LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_clzs LOC=BUILTIN */
/* compiler builtin: 
   int __builtin_clzs(short  ) ;  */
/* END FUNCTION-DECL __builtin_clzs LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_ilogbf LOC=BUILTIN */
/* compiler builtin: 
   int __builtin_ilogbf(float  ) ;  */
/* END FUNCTION-DECL __builtin_ilogbf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN mkstempsat_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:689 */
extern int mkstempsat_np(int dfd , char *path , int slen )  __attribute__((__availability__(watchos,introduced=4.0),
__availability__(tvos,introduced=11.0), __availability__(ios,introduced=11.0), __availability__(macosx,introduced=10.13))) ;
/* END FUNCTION-DECL-EXTERN mkstempsat_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:689 */

/* BEGIN FUNCTION-DECL __builtin_llrintf LOC=BUILTIN */
/* compiler builtin: 
   long long __builtin_llrintf(float  ) ;  */
/* END FUNCTION-DECL __builtin_llrintf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin___get_unsafe_stack_bottom LOC=BUILTIN */
/* compiler builtin: 
   void *__builtin___get_unsafe_stack_bottom(void) ;  */
/* END FUNCTION-DECL __builtin___get_unsafe_stack_bottom LOC=BUILTIN */

/* BEGIN TYPEDEF fd_set LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_fd_def.h:50 */
typedef struct fd_set fd_set;
/* END TYPEDEF fd_set LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_fd_def.h:50 */

/* BEGIN FUNCTION-DECL jump_adjustment LOC=UNKNOWN */
__inline static void jump_adjustment(struct jit *jit , jit_op *op ) ;
/* END FUNCTION-DECL jump_adjustment LOC=UNKNOWN */

/* BEGIN STRUCT _opaque_pthread_condattr_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_types.h:73 */
struct _opaque_pthread_condattr_t {
   long __sig ;
   char __opaque[8] ;
};
/* END STRUCT _opaque_pthread_condattr_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_types.h:73 */

/* BEGIN TYPEDEF __darwin_pthread_condattr_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_types.h:111 */
typedef struct _opaque_pthread_condattr_t __darwin_pthread_condattr_t;
/* END TYPEDEF __darwin_pthread_condattr_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_types.h:111 */

/* BEGIN TYPEDEF pthread_condattr_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_condattr_t.h:31 */
typedef __darwin_pthread_condattr_t pthread_condattr_t;
/* END TYPEDEF pthread_condattr_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_condattr_t.h:31 */

/* BEGIN FUNCTION-DECL-EXTERN pthread_condattr_getpshared LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:324 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_condattr_getpshared(pthread_condattr_t const   * __restrict   ,
                                                                                                                                       int * __restrict   ) ;
/* END FUNCTION-DECL-EXTERN pthread_condattr_getpshared LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:324 */

/* BEGIN FUNCTION-DECL __builtin_asin LOC=BUILTIN */
/* compiler builtin: 
   double __builtin_asin(double  ) ;  */
/* END FUNCTION-DECL __builtin_asin LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN ptsname LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:221 */
extern char *ptsname(int  ) ;
/* END FUNCTION-DECL-EXTERN ptsname LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:221 */

/* BEGIN FUNCTION-DECL-EXTERN rand_r LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:229 */
extern int rand_r(unsigned int * )  __attribute__((__availability__(swift,unavailable,message="Use arc4random instead."))) ;
/* END FUNCTION-DECL-EXTERN rand_r LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:229 */

/* BEGIN TYPEDEF int32_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_int32_t.h:30 */
typedef int int32_t;
/* END TYPEDEF int32_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_int32_t.h:30 */

/* BEGIN TYPEDEF int_fast32_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdint.h:42 */
typedef int32_t int_fast32_t;
/* END TYPEDEF int_fast32_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdint.h:42 */

/* BEGIN TYPEDEF __int64_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_types.h:46 */
typedef long long __int64_t;
/* END TYPEDEF __int64_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_types.h:46 */

/* BEGIN TYPEDEF __darwin_off_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types.h:71 */
typedef __int64_t __darwin_off_t;
/* END TYPEDEF __darwin_off_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types.h:71 */

/* BEGIN TYPEDEF fpos_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/_stdio.h:81 */
typedef __darwin_off_t fpos_t;
/* END TYPEDEF fpos_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/_stdio.h:81 */

/* BEGIN FUNCTION-DECL-EXTERN daemon LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:292 */
extern int daemon(int  , int  )  __asm__("_daemon$1050") __attribute__((__availability__(tvos,unavailable),
__availability__(watchos,unavailable), __availability__(macosx,introduced=10.0,deprecated=10.5,message="Use posix_spawn APIs instead."))) ;
/* END FUNCTION-DECL-EXTERN daemon LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:292 */

/* BEGIN TYPEDEF time_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_time_t.h:31 */
typedef __darwin_time_t time_t;
/* END TYPEDEF time_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_time_t.h:31 */

/* BEGIN FUNCTION-DECL-EXTERN time LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:118 */
extern time_t time(time_t * ) ;
/* END FUNCTION-DECL-EXTERN time LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:118 */

/* BEGIN FUNCTION-DECL __builtin_asinf LOC=BUILTIN */
/* compiler builtin: 
   float __builtin_asinf(float  ) ;  */
/* END FUNCTION-DECL __builtin_asinf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN getopt LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:509 */
extern int getopt(int  , char ** , char const   * )  __asm__("_getopt")  ;
/* END FUNCTION-DECL-EXTERN getopt LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:509 */

/* BEGIN FUNCTION-DECL-EXTERN getsid LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:553 */
extern pid_t getsid(pid_t  ) ;
/* END FUNCTION-DECL-EXTERN getsid LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:553 */

/* BEGIN FUNCTION-DECL __builtin_fmaf128 LOC=BUILTIN */
/* compiler builtin: 
   _Float128 __builtin_fmaf128(_Float128  , _Float128  , _Float128  ) ;  */
/* END FUNCTION-DECL __builtin_fmaf128 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN __srget LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:249 */
extern int __srget(FILE * ) ;
/* END FUNCTION-DECL-EXTERN __srget LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:249 */

/* BEGIN FUNCTION-DECL-EXTERN fchdir LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:550 */
extern int fchdir(int  ) ;
/* END FUNCTION-DECL-EXTERN fchdir LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:550 */

/* BEGIN FUNCTION-DECL __builtin_coshl LOC=BUILTIN */
/* compiler builtin: 
   long double __builtin_coshl(long double  ) ;  */
/* END FUNCTION-DECL __builtin_coshl LOC=BUILTIN */

/* BEGIN TYPEDEF __darwin_size_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_types.h:92 */
typedef unsigned long __darwin_size_t;
/* END TYPEDEF __darwin_size_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_types.h:92 */

/* BEGIN TYPEDEF size_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_size_t.h:31 */
typedef __darwin_size_t size_t;
/* END TYPEDEF size_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_size_t.h:31 */

/* BEGIN FUNCTION-DECL-EXTERN malloc LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/malloc/_malloc.h:40 */
extern void *( __attribute__((__warn_unused_result__)) malloc)(size_t __size )  __attribute__((__alloc_size__(1))) ;
/* END FUNCTION-DECL-EXTERN malloc LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/malloc/_malloc.h:40 */

/* BEGIN FUNCTION-DECL-EXTERN _exit LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:430 */
extern  __attribute__((__noreturn__)) void _exit(int  ) ;
/* END FUNCTION-DECL-EXTERN _exit LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:430 */

/* BEGIN FUNCTION-DECL __builtin_llrintf128 LOC=BUILTIN */
/* compiler builtin: 
   long long __builtin_llrintf128(_Float128  ) ;  */
/* END FUNCTION-DECL __builtin_llrintf128 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_atan2f128 LOC=BUILTIN */
/* compiler builtin: 
   _Float128 __builtin_atan2f128(_Float128  , _Float128  ) ;  */
/* END FUNCTION-DECL __builtin_atan2f128 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL is_suitable_mul LOC=UNKNOWN */
__inline static int is_suitable_mul(jit_op *op ) ;
/* END FUNCTION-DECL is_suitable_mul LOC=UNKNOWN */

/* BEGIN TYPEDEF int64_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_int64_t.h:30 */
typedef long long int64_t;
/* END TYPEDEF int64_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_int64_t.h:30 */

/* BEGIN TYPEDEF register_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/types.h:87 */
typedef int64_t register_t;
/* END TYPEDEF register_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/types.h:87 */

/* BEGIN TYPEDEF amd64_imm_buf LOC=UNKNOWN */
typedef union __anonunion_amd64_imm_buf_34291009 amd64_imm_buf;
/* END TYPEDEF amd64_imm_buf LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN adjtime LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/time.h:190 */
extern int adjtime(struct timeval  const  * , struct timeval * ) ;
/* END FUNCTION-DECL-EXTERN adjtime LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/time.h:190 */

/* BEGIN FUNCTION-DECL-EXTERN tcgetpgrp LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:484 */
extern pid_t tcgetpgrp(int  ) ;
/* END FUNCTION-DECL-EXTERN tcgetpgrp LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:484 */

/* BEGIN TYPEDEF __darwin_ptrdiff_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_types.h:84 */
typedef long __darwin_ptrdiff_t;
/* END TYPEDEF __darwin_ptrdiff_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_types.h:84 */

/* BEGIN FUNCTION-DECL-EXTERN getw LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:296 */
extern int getw(FILE * ) ;
/* END FUNCTION-DECL-EXTERN getw LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:296 */

/* BEGIN FUNCTION-DECL jit_allocator_hints_free LOC=UNKNOWN */
void jit_allocator_hints_free(jit_tree *hints ) ;
/* END FUNCTION-DECL jit_allocator_hints_free LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_strpbrk LOC=BUILTIN */
/* compiler builtin: 
   char *__builtin_strpbrk(char const   * , char const   * ) ;  */
/* END FUNCTION-DECL __builtin_strpbrk LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN realpath LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:231 */
extern char *realpath(char const   * __restrict   , char * __restrict   )  __asm__("_realpath$DARWIN_EXTSN")  ;
/* END FUNCTION-DECL-EXTERN realpath LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:231 */

/* BEGIN FUNCTION-DECL emit_push_caller_saved_regs LOC=UNKNOWN */
static int emit_push_caller_saved_regs(struct jit *jit , jit_op *op ) ;
/* END FUNCTION-DECL emit_push_caller_saved_regs LOC=UNKNOWN */

/* BEGIN TYPEDEF __darwin_uid_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types.h:75 */
typedef __uint32_t __darwin_uid_t;
/* END TYPEDEF __darwin_uid_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types.h:75 */

/* BEGIN TYPEDEF uid_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_uid_t.h:31 */
typedef __darwin_uid_t uid_t;
/* END TYPEDEF uid_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_uid_t.h:31 */

/* BEGIN FUNCTION-DECL-EXTERN chown LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:435 */
extern int chown(char const   * , uid_t  , gid_t  ) ;
/* END FUNCTION-DECL-EXTERN chown LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:435 */

/* BEGIN FUNCTION-DECL jit_optimize_join_addimm LOC=UNKNOWN */
int jit_optimize_join_addimm(struct jit *jit ) ;
/* END FUNCTION-DECL jit_optimize_join_addimm LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL make_nop LOC=UNKNOWN */
__inline static void make_nop(jit_op *op ) ;
/* END FUNCTION-DECL make_nop LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL fib LOC=UNKNOWN */
void fib(int n ) ;
/* END FUNCTION-DECL fib LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_cbrt LOC=BUILTIN */
/* compiler builtin: 
   double __builtin_cbrt(double  ) ;  */
/* END FUNCTION-DECL __builtin_cbrt LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin___get_unsafe_stack_ptr LOC=BUILTIN */
/* compiler builtin: 
   void *__builtin___get_unsafe_stack_ptr(void) ;  */
/* END FUNCTION-DECL __builtin___get_unsafe_stack_ptr LOC=BUILTIN */

/* BEGIN FUNCTION-DECL make_free_reg LOC=UNKNOWN */
static jit_hw_reg *make_free_reg(struct jit_reg_allocator *al , jit_op *op , jit_value for_reg ) ;
/* END FUNCTION-DECL make_free_reg LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_lroundf LOC=BUILTIN */
/* compiler builtin: 
   long __builtin_lroundf(float  ) ;  */
/* END FUNCTION-DECL __builtin_lroundf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_scalblnl LOC=BUILTIN */
/* compiler builtin: 
   long double __builtin_scalblnl(long double  , long  ) ;  */
/* END FUNCTION-DECL __builtin_scalblnl LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __darwin_check_fd_set LOC=UNKNOWN */
__inline int ( __attribute__((__always_inline__)) __darwin_check_fd_set)(int _a ,
                                                                         void const   *_b ) ;
/* END FUNCTION-DECL __darwin_check_fd_set LOC=UNKNOWN */

/* BEGIN TYPEDEF lldiv_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:94 */
typedef struct __anonstruct_lldiv_t_86583852 lldiv_t;
/* END TYPEDEF lldiv_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:94 */

/* BEGIN FUNCTION-DECL __builtin_cimagf LOC=BUILTIN */
/* compiler builtin: 
   float __builtin_cimagf(_Complex float  ) ;  */
/* END FUNCTION-DECL __builtin_cimagf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_nontemporal_store LOC=BUILTIN */
/* compiler builtin: 
   void __builtin_nontemporal_store(...) ;  */
/* END FUNCTION-DECL __builtin_nontemporal_store LOC=BUILTIN */

/* BEGIN FUNCTION-DECL jit_current_func_info LOC=UNKNOWN */
__inline static struct jit_func_info *jit_current_func_info(struct jit *jit ) ;
/* END FUNCTION-DECL jit_current_func_info LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL emit_funcall LOC=UNKNOWN */
static void emit_funcall(struct jit *jit , struct jit_op *op , int imm ) ;
/* END FUNCTION-DECL emit_funcall LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_strcat LOC=BUILTIN */
/* compiler builtin: 
   char *__builtin_strcat(char * , char const   * ) ;  */
/* END FUNCTION-DECL __builtin_strcat LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_rotateright32 LOC=BUILTIN */
/* compiler builtin: 
   unsigned int __builtin_rotateright32(unsigned int  , unsigned int  ) ;  */
/* END FUNCTION-DECL __builtin_rotateright32 LOC=BUILTIN */

/* BEGIN STRUCT jit_disasm LOC=UNKNOWN */
struct jit_disasm {
   char *indent_template ;
   char *reg_template ;
   char *freg_template ;
   char *arg_template ;
   char *farg_template ;
   char *reg_fp_template ;
   char *reg_out_template ;
   char *reg_imm_template ;
   char *reg_fimm_template ;
   char *reg_unknown_template ;
   char *label_template ;
   char *label_forward_template ;
   char *generic_addr_template ;
   char *generic_value_template ;
};
/* END STRUCT jit_disasm LOC=UNKNOWN */

/* BEGIN VARIABLE-DECL jit_disasm_compilable LOC=UNKNOWN */
struct jit_disasm jit_disasm_compilable ;
/* END VARIABLE-DECL jit_disasm_compilable LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_popcountll LOC=BUILTIN */
/* compiler builtin: 
   int __builtin_popcountll(unsigned long long  ) ;  */
/* END FUNCTION-DECL __builtin_popcountll LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_copysignf128 LOC=BUILTIN */
/* compiler builtin: 
   _Float128 __builtin_copysignf128(_Float128  , _Float128  ) ;  */
/* END FUNCTION-DECL __builtin_copysignf128 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_isless LOC=BUILTIN */
/* compiler builtin: 
   int __builtin_isless(...) ;  */
/* END FUNCTION-DECL __builtin_isless LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN ffs LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/strings.h:77 */
extern int ffs(int  ) ;
/* END FUNCTION-DECL-EXTERN ffs LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/strings.h:77 */

/* BEGIN FUNCTION-DECL __builtin_lroundf128 LOC=BUILTIN */
/* compiler builtin: 
   long __builtin_lroundf128(_Float128  ) ;  */
/* END FUNCTION-DECL __builtin_lroundf128 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN searchfs LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:772 */
extern int searchfs(char const   * , struct fssearchblock * , unsigned long * , unsigned int  ,
                    unsigned int  , struct searchstate * )  __attribute__((__availability__(tvos,unavailable),
__availability__(watchos,unavailable))) ;
/* END FUNCTION-DECL-EXTERN searchfs LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:772 */

/* BEGIN TYPEDEF __darwin_useconds_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types.h:76 */
typedef __uint32_t __darwin_useconds_t;
/* END TYPEDEF __darwin_useconds_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types.h:76 */

/* BEGIN TYPEDEF useconds_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_useconds_t.h:31 */
typedef __darwin_useconds_t useconds_t;
/* END TYPEDEF useconds_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_useconds_t.h:31 */

/* BEGIN FUNCTION-DECL-EXTERN ualarm LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:600 */
extern useconds_t ualarm(useconds_t  , useconds_t  ) ;
/* END FUNCTION-DECL-EXTERN ualarm LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:600 */

/* BEGIN FUNCTION-DECL __builtin_unreachable LOC=BUILTIN */
/* compiler builtin: 
   void __builtin_unreachable(void) ;  */
/* END FUNCTION-DECL __builtin_unreachable LOC=BUILTIN */

/* BEGIN STRUCT transfer_info LOC=UNKNOWN */
struct transfer_info {
   int sourcereg ;
   int destreg ;
   int scrapreg ;
   int scrap_in_use ;
   int counterreg ;
   int counter_in_use ;
   int block_size ;
   unsigned char *loop_addr ;
};
/* END STRUCT transfer_info LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL emit_sse_branch LOC=UNKNOWN */
static void emit_sse_branch(struct jit *jit , jit_op *op , jit_value a1 , jit_value a2 ,
                            jit_value a3 , int x86_cond ) ;
/* END FUNCTION-DECL emit_sse_branch LOC=UNKNOWN */

/* BEGIN TYPEDEF __darwin_blkcnt_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types.h:55 */
typedef __int64_t __darwin_blkcnt_t;
/* END TYPEDEF __darwin_blkcnt_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types.h:55 */

/* BEGIN FUNCTION-DECL __builtin_fminl LOC=BUILTIN */
/* compiler builtin: 
   long double __builtin_fminl(long double  , long double  ) ;  */
/* END FUNCTION-DECL __builtin_fminl LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin___memset_chk LOC=BUILTIN */
/* compiler builtin: 
   void *__builtin___memset_chk(void * , int  , unsigned long long  , unsigned long long  ) ;  */
/* END FUNCTION-DECL __builtin___memset_chk LOC=BUILTIN */

/* BEGIN FUNCTION-DECL emit_sse_div_op LOC=UNKNOWN */
static void emit_sse_div_op(struct jit *jit , jit_value a1 , jit_value a2 , jit_value a3 ) ;
/* END FUNCTION-DECL emit_sse_div_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN pthread_cond_signal LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:305 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_cond_signal(pthread_cond_t * ) ;
/* END FUNCTION-DECL-EXTERN pthread_cond_signal LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:305 */

/* BEGIN FUNCTION-DECL emit_ldx_op LOC=UNKNOWN */
static void emit_ldx_op(struct jit *jit , jit_op *op , jit_value a1 , jit_value a2 ,
                        jit_value a3 ) ;
/* END FUNCTION-DECL emit_ldx_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN pthread_getconcurrency LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:352 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_getconcurrency(void) ;
/* END FUNCTION-DECL-EXTERN pthread_getconcurrency LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:352 */

/* BEGIN FUNCTION-DECL-EXTERN getpid LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:460 */
extern pid_t getpid(void) ;
/* END FUNCTION-DECL-EXTERN getpid LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:460 */

/* BEGIN VARIABLE-DECL _TIG_IZ_tgVA_argc LOC=UNKNOWN */
int _TIG_IZ_tgVA_argc ;
/* END VARIABLE-DECL _TIG_IZ_tgVA_argc LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL join_addi_addr LOC=UNKNOWN */
static int join_addi_addr(jit_op *op , jit_op *nextop ) ;
/* END FUNCTION-DECL join_addi_addr LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL initialize_code_refs LOC=UNKNOWN */
__inline static void initialize_code_refs(struct code_refs_cache *code_refs , struct jit_func_info *func_info ) ;
/* END FUNCTION-DECL initialize_code_refs LOC=UNKNOWN */

/* BEGIN TYPEDEF __int8_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_types.h:37 */
typedef signed char __int8_t;
/* END TYPEDEF __int8_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_types.h:37 */

/* BEGIN TYPEDEF __darwin_wctrans_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/_types.h:41 */
typedef int __darwin_wctrans_t;
/* END TYPEDEF __darwin_wctrans_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/_types.h:41 */

/* BEGIN FUNCTION-DECL __builtin_coshf LOC=BUILTIN */
/* compiler builtin: 
   float __builtin_coshf(float  ) ;  */
/* END FUNCTION-DECL __builtin_coshf LOC=BUILTIN */

/* BEGIN STRUCT-DECL __sFILEX LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/_stdio.h:98 */
struct __sFILEX ;
/* END STRUCT-DECL __sFILEX LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/_stdio.h:98 */

/* BEGIN FUNCTION-DECL-EXTERN vsnprintf LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:337 */
extern int ( /* format attribute */  vsnprintf)(char * __restrict  __str , size_t __size ,
                                                char const   * __restrict  __format ,
                                                va_list  ) ;
/* END FUNCTION-DECL-EXTERN vsnprintf LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:337 */

/* BEGIN VARIABLE-DECL _TIG_iO_tgVA_2_init_tigress_1_opaque_list_2 LOC=UNKNOWN */
struct _TIG_iO_tgVA_2_init_tigress_1_opaqueNodeStruct *_TIG_iO_tgVA_2_init_tigress_1_opaque_list_2 ;
/* END VARIABLE-DECL _TIG_iO_tgVA_2_init_tigress_1_opaque_list_2 LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_floor LOC=BUILTIN */
/* compiler builtin: 
   double __builtin_floor(double  ) ;  */
/* END FUNCTION-DECL __builtin_floor LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_infl LOC=BUILTIN */
/* compiler builtin: 
   long double __builtin_infl(void) ;  */
/* END FUNCTION-DECL __builtin_infl LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_cbrtf LOC=BUILTIN */
/* compiler builtin: 
   float __builtin_cbrtf(float  ) ;  */
/* END FUNCTION-DECL __builtin_cbrtf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN erand48 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:202 */
extern double erand48(unsigned short * ) ;
/* END FUNCTION-DECL-EXTERN erand48 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:202 */

/* BEGIN FUNCTION-DECL-EXTERN nice LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:571 */
extern int nice(int  )  __asm__("_nice")  ;
/* END FUNCTION-DECL-EXTERN nice LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:571 */

/* BEGIN FUNCTION-DECL-EXTERN pthread_mutex_lock LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:383 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_mutex_lock(pthread_mutex_t * ) ;
/* END FUNCTION-DECL-EXTERN pthread_mutex_lock LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:383 */

/* BEGIN TYPEDEF __darwin_natural_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_types.h:50 */
typedef unsigned int __darwin_natural_t;
/* END TYPEDEF __darwin_natural_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_types.h:50 */

/* BEGIN TYPEDEF __darwin_mach_port_name_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types.h:68 */
typedef __darwin_natural_t __darwin_mach_port_name_t;
/* END TYPEDEF __darwin_mach_port_name_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types.h:68 */

/* BEGIN TYPEDEF __darwin_mach_port_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types.h:69 */
typedef __darwin_mach_port_name_t __darwin_mach_port_t;
/* END TYPEDEF __darwin_mach_port_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types.h:69 */

/* BEGIN TYPEDEF mach_port_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_mach_port_t.h:50 */
typedef __darwin_mach_port_t mach_port_t;
/* END TYPEDEF mach_port_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_mach_port_t.h:50 */

/* BEGIN FUNCTION-DECL-EXTERN pthread_mach_thread_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:521 */
extern mach_port_t __attribute__((__availability__(macos,introduced=10.4), __availability__(ios,introduced=2.0)))  pthread_mach_thread_np(pthread_t  ) ;
/* END FUNCTION-DECL-EXTERN pthread_mach_thread_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:521 */

/* BEGIN FUNCTION-DECL-EXTERN gethostname LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:622 */
extern int gethostname(char * , size_t  ) ;
/* END FUNCTION-DECL-EXTERN gethostname LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:622 */

/* BEGIN FUNCTION-DECL-EXTERN getdate LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:112 */
extern struct tm *getdate(char const   * ) ;
/* END FUNCTION-DECL-EXTERN getdate LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:112 */

/* BEGIN ENUM __anonenum_idtype_t_558242672 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/wait.h:79 */
enum __anonenum_idtype_t_558242672 {
    P_ALL = 0,
    P_PID = 1,
    P_PGID = 2
} ;
/* END ENUM __anonenum_idtype_t_558242672 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/wait.h:79 */

/* BEGIN TYPEDEF __darwin_id_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types.h:61 */
typedef __uint32_t __darwin_id_t;
/* END TYPEDEF __darwin_id_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types.h:61 */

/* BEGIN TYPEDEF id_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_id_t.h:31 */
typedef __darwin_id_t id_t;
/* END TYPEDEF id_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_id_t.h:31 */

/* BEGIN TYPEDEF idtype_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/wait.h:79 */
typedef enum __anonenum_idtype_t_558242672 idtype_t;
/* END TYPEDEF idtype_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/wait.h:79 */

/* BEGIN TYPEDEF siginfo_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/signal.h:177 */
typedef struct __siginfo siginfo_t;
/* END TYPEDEF siginfo_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/signal.h:177 */

/* BEGIN FUNCTION-DECL-EXTERN waitid LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/wait.h:251 */
extern int waitid(idtype_t  , id_t  , siginfo_t * , int  )  __asm__("_waitid")  ;
/* END FUNCTION-DECL-EXTERN waitid LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/wait.h:251 */

/* BEGIN FUNCTION-DECL emit_transfer_loop LOC=UNKNOWN */
static void emit_transfer_loop(struct jit *jit , jit_op *op ) ;
/* END FUNCTION-DECL emit_transfer_loop LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_fprintf LOC=BUILTIN */
/* compiler builtin: 
   int __builtin_fprintf(void * , char const   *  , ...) ;  */
/* END FUNCTION-DECL __builtin_fprintf LOC=BUILTIN */

/* BEGIN TYPEDEF __darwin_mode_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types.h:70 */
typedef __uint16_t __darwin_mode_t;
/* END TYPEDEF __darwin_mode_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types.h:70 */

/* BEGIN FUNCTION-DECL __builtin_labs LOC=BUILTIN */
/* compiler builtin: 
   long __builtin_labs(long  ) ;  */
/* END FUNCTION-DECL __builtin_labs LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN pthread_attr_getstacksize LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:256 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_attr_getstacksize(pthread_attr_t const   * __restrict   ,
                                                                                                                                     size_t * __restrict   ) ;
/* END FUNCTION-DECL-EXTERN pthread_attr_getstacksize LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:256 */

/* BEGIN FUNCTION-DECL-EXTERN setreuid LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:595 */
extern int setreuid(uid_t  , uid_t  )  __asm__("_setreuid")  ;
/* END FUNCTION-DECL-EXTERN setreuid LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:595 */

/* BEGIN FUNCTION-DECL-EXTERN memmem LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:155 */
extern void *memmem(void const   *__big , size_t __big_len , void const   *__little ,
                    size_t __little_len )  __attribute__((__availability__(macosx,introduced=10.7))) ;
/* END FUNCTION-DECL-EXTERN memmem LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:155 */

/* BEGIN FUNCTION-DECL-EXTERN mlockall LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/mman.h:218 */
extern int mlockall(int  ) ;
/* END FUNCTION-DECL-EXTERN mlockall LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/mman.h:218 */

/* BEGIN FUNCTION-DECL-EXTERN exit LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:145 */
extern  __attribute__((__noreturn__)) void exit(int  ) ;
/* END FUNCTION-DECL-EXTERN exit LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:145 */

/* BEGIN FUNCTION-DECL-EXTERN putc_unlocked LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:291 */
extern int putc_unlocked(int  , FILE * ) ;
/* END FUNCTION-DECL-EXTERN putc_unlocked LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:291 */

/* BEGIN FUNCTION-DECL-EXTERN pthread_setschedparam LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:491 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_setschedparam(pthread_t  ,
                                                                                                                                 int  ,
                                                                                                                                 struct sched_param  const  * ) ;
/* END FUNCTION-DECL-EXTERN pthread_setschedparam LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:491 */

/* BEGIN FUNCTION-DECL __builtin_strncmp LOC=BUILTIN */
/* compiler builtin: 
   int __builtin_strncmp(char const   * , char const   * , unsigned long long  ) ;  */
/* END FUNCTION-DECL __builtin_strncmp LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_scalbn LOC=BUILTIN */
/* compiler builtin: 
   double __builtin_scalbn(double  , int  ) ;  */
/* END FUNCTION-DECL __builtin_scalbn LOC=BUILTIN */

/* BEGIN TYPEDEF jit_label LOC=UNKNOWN */
typedef struct jit_label jit_label;
/* END TYPEDEF jit_label LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL free_labels LOC=UNKNOWN */
static void free_labels(jit_label *lab ) ;
/* END FUNCTION-DECL free_labels LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_nanf128 LOC=BUILTIN */
/* compiler builtin: 
   _Float128 __builtin_nanf128(char const   * ) ;  */
/* END FUNCTION-DECL __builtin_nanf128 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN vscanf LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:336 */
extern int ( /* format attribute */  vscanf)(char const   * __restrict  __format ,
                                             va_list  ) ;
/* END FUNCTION-DECL-EXTERN vscanf LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:336 */

/* BEGIN FUNCTION-DECL-EXTERN pthread_get_qos_class_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread/qos.h:186 */
extern int __attribute__((__availability__(ios,introduced=8.0), __availability__(macos,introduced=10.10)))  pthread_get_qos_class_np(pthread_t __pthread ,
                                                                                                                                     qos_class_t * _Nullable __restrict  __qos_class ,
                                                                                                                                     int * _Nullable __restrict  __relative_priority ) ;
/* END FUNCTION-DECL-EXTERN pthread_get_qos_class_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread/qos.h:186 */

/* BEGIN STRUCT _opaque_pthread_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_types.h:103 */
struct _opaque_pthread_t {
   long __sig ;
   struct __darwin_pthread_handler_rec *__cleanup_stack ;
   char __opaque[8176] ;
};
/* END STRUCT _opaque_pthread_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_types.h:103 */

/* BEGIN FUNCTION-DECL mark_livecode LOC=UNKNOWN */
__inline static void mark_livecode(jit_op *op ) ;
/* END FUNCTION-DECL mark_livecode LOC=UNKNOWN */

/* BEGIN VARIABLE-DECL-EXTERN __mb_cur_max LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:118 */
extern int __mb_cur_max ;
/* END VARIABLE-DECL-EXTERN __mb_cur_max LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:118 */

/* BEGIN FUNCTION-DECL-EXTERN getiopolicy_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/resource.h:447 */
extern int getiopolicy_np(int  , int  )  __attribute__((__availability__(macosx,introduced=10.5))) ;
/* END FUNCTION-DECL-EXTERN getiopolicy_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/resource.h:447 */

/* BEGIN STRUCT __anonstruct_w_T_529377834 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/wait.h:194 */
struct __anonstruct_w_T_529377834 {
   unsigned int w_Termsig : 7 ;
   unsigned int w_Coredump : 1 ;
   unsigned int w_Retcode : 8 ;
   unsigned int w_Filler : 16 ;
};
/* END STRUCT __anonstruct_w_T_529377834 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/wait.h:194 */

/* BEGIN FUNCTION-DECL-EXTERN getdtablesize LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:557 */
extern int getdtablesize(void) ;
/* END FUNCTION-DECL-EXTERN getdtablesize LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:557 */

/* BEGIN FUNCTION-DECL __builtin_clrsbll LOC=BUILTIN */
/* compiler builtin: 
   int __builtin_clrsbll(long long  ) ;  */
/* END FUNCTION-DECL __builtin_clrsbll LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_ldexp LOC=BUILTIN */
/* compiler builtin: 
   double __builtin_ldexp(double  , int  ) ;  */
/* END FUNCTION-DECL __builtin_ldexp LOC=BUILTIN */

/* BEGIN ENUM __anonenum_jit_opcode_820224137 LOC=UNKNOWN */
enum __anonenum_jit_opcode_820224137 {
    JIT_DIV = 0,
    JIT_SUBX = 8,
    JIT_CEIL = 16,
    JIT_FSUB = 24,
    JIT_RSH = 32,
    JIT_FRET = 40,
    JIT_NEG = 48,
    JIT_TRANSFER_XOR = 56,
    JIT_X86_ADDMUL = 64,
    JIT_FORCE_SPILL = 72,
    JIT_FADD = 80,
    JIT_TRUNC = 88,
    JIT_BGE = 96,
    JIT_MEMSET = 104,
    JIT_HMUL = 112,
    JIT_MOV = 120,
    JIT_MARK = 128,
    JIT_LABEL = 136,
    JIT_RSB = 144,
    JIT_SUB = 152,
    JIT_DATA_BYTES = 160,
    JIT_MEMCPY = 168,
    JIT_TRANSFER_SUBS = 176,
    JIT_TRANSFER = 184,
    JIT_COMMENT = 192,
    JIT_FPUTARG = 200,
    JIT_RET = 208,
    JIT_PUTARG = 216,
    JIT_GETARG = 224,
    JIT_CALL = 232,
    JIT_EXT = 240,
    JIT_OR = 248,
    JIT_FLOOR = 256,
    JIT_TRACE = 264,
    JIT_BOSUB = 272,
    JIT_REF_CODE = 280,
    JIT_BLE = 288,
    JIT_TRANSFER_ADDS = 296,
    JIT_BNOADD = 304,
    JIT_NE = 312,
    JIT_SUBC = 320,
    JIT_EQ = 328,
    JIT_BNE = 336,
    JIT_STX = 344,
    JIT_MSG = 352,
    JIT_ROUND = 360,
    JIT_LD = 368,
    JIT_DATA_BYTE = 376,
    JIT_BOADD = 384,
    JIT_FLD = 392,
    JIT_NOT = 400,
    JIT_FLDX = 408,
    JIT_AND = 416,
    JIT_LSH = 424,
    JIT_RENAMEREG = 432,
    JIT_ALLOCA = 440,
    JIT_BGT = 448,
    JIT_TRANSFER_CPY = 456,
    JIT_UREG = 464,
    JIT_RETVAL = 472,
    JIT_ADDX = 480,
    JIT_BMC = 488,
    JIT_BEQ = 496,
    JIT_FBLE = 504,
    JIT_LREG = 512,
    JIT_DECL_ARG = 520,
    JIT_MUL = 528,
    JIT_GT = 536,
    JIT_FMOV = 544,
    JIT_TRANSFER_ADD = 552,
    JIT_TRANSFER_OR = 560,
    JIT_FRETVAL = 568,
    JIT_TOUCH = 576,
    JIT_BMS = 584,
    JIT_SYNCREG = 592,
    JIT_BNOSUB = 600,
    JIT_ADDC = 608,
    JIT_PATCH = 616,
    JIT_JMP = 624,
    JIT_FBEQ = 632,
    JIT_XOR = 640,
    JIT_FBGE = 648,
    JIT_LT = 656,
    JIT_X86_ADDIMM = 664,
    JIT_GE = 672,
    JIT_FNEG = 680,
    JIT_PROLOG = 688,
    JIT_FBGT = 696,
    JIT_DATA_REF_DATA = 704,
    JIT_FSTX = 712,
    JIT_CODESTART = 720,
    JIT_TRANSFER_AND = 728,
    JIT_FMUL = 736,
    JIT_LDX = 744,
    JIT_FST = 752,
    JIT_BLT = 760,
    JIT_FDIV = 768,
    JIT_MOD = 776,
    JIT_PREPARE = 784,
    JIT_FBNE = 792,
    JIT_ADD = 800,
    JIT_TRANSFER_SUB = 808,
    JIT_FULL_SPILL = 816,
    JIT_X86_STXI = 824,
    JIT_REF_DATA = 832,
    JIT_X86_STI = 840,
    JIT_PREPARE_OPT = 848,
    JIT_DATA_REF_CODE = 856,
    JIT_NOP = 864,
    JIT_CODE_ALIGN = 872,
    JIT_FORCE_ASSOC = 880,
    JIT_FRSB = 888,
    JIT_FBLT = 896,
    JIT_LE = 904,
    JIT_ST = 912
} ;
/* END ENUM __anonenum_jit_opcode_820224137 LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN ffsctl LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:774 */
extern int ffsctl(int  , unsigned long  , void * , unsigned int  )  __attribute__((__availability__(macosx,introduced=10.6))) ;
/* END FUNCTION-DECL-EXTERN ffsctl LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:774 */

/* BEGIN TYPEDEF ssize_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_ssize_t.h:31 */
typedef __darwin_ssize_t ssize_t;
/* END TYPEDEF ssize_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_ssize_t.h:31 */

/* BEGIN FUNCTION-DECL-EXTERN swab LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:168 */
extern void swab(void const   * __restrict   , void * __restrict   , ssize_t  ) ;
/* END FUNCTION-DECL-EXTERN swab LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:168 */

/* BEGIN FUNCTION-DECL __builtin_scalbln LOC=BUILTIN */
/* compiler builtin: 
   double __builtin_scalbln(double  , long  ) ;  */
/* END FUNCTION-DECL __builtin_scalbln LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin___vsnprintf_chk LOC=BUILTIN */
/* compiler builtin: 
   int __builtin___vsnprintf_chk(char * , unsigned long long  , int  , unsigned long long  ,
                                 char const   * , __builtin_va_list  ) ;  */
/* END FUNCTION-DECL __builtin___vsnprintf_chk LOC=BUILTIN */

/* BEGIN FUNCTION-DECL jit_exec_mem_new LOC=UNKNOWN */
static struct jit_exec_mem *jit_exec_mem_new(size_t size ) ;
/* END FUNCTION-DECL jit_exec_mem_new LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_usubl_overflow LOC=BUILTIN */
/* compiler builtin: 
   _Bool __builtin_usubl_overflow(unsigned long const    , unsigned long const    ,
                                  unsigned long * ) ;  */
/* END FUNCTION-DECL __builtin_usubl_overflow LOC=BUILTIN */

/* BEGIN FUNCTION-DECL rotate_right LOC=UNKNOWN */
__inline static jit_tree *rotate_right(jit_tree *h ) ;
/* END FUNCTION-DECL rotate_right LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_cimag LOC=BUILTIN */
/* compiler builtin: 
   double __builtin_cimag(_Complex double  ) ;  */
/* END FUNCTION-DECL __builtin_cimag LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_csinl LOC=BUILTIN */
/* compiler builtin: 
   _Complex long double __builtin_csinl(_Complex long double  ) ;  */
/* END FUNCTION-DECL __builtin_csinl LOC=BUILTIN */

/* BEGIN FUNCTION-DECL funcall_put_arg LOC=UNKNOWN */
__inline static void funcall_put_arg(struct jit *jit , jit_op *op ) ;
/* END FUNCTION-DECL funcall_put_arg LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN memmove LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:73 */
extern void *memmove(void *__dst , void const   *__src , size_t __len ) ;
/* END FUNCTION-DECL-EXTERN memmove LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:73 */

/* BEGIN VARIABLE-DEF x86_cc_unsigned_map LOC=UNKNOWN */
static unsigned char const   x86_cc_unsigned_map[12]  = 
  {      (unsigned char const   )0x74,      (unsigned char const   )0x75,      (unsigned char const   )0x72,      (unsigned char const   )0x76, 
        (unsigned char const   )0x77,      (unsigned char const   )0x73,      (unsigned char const   )0x78,      (unsigned char const   )0x79, 
        (unsigned char const   )0x7a,      (unsigned char const   )0x7b,      (unsigned char const   )0x70,      (unsigned char const   )0x71};
/* END VARIABLE-DEF x86_cc_unsigned_map LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_erfcl LOC=BUILTIN */
/* compiler builtin: 
   long double __builtin_erfcl(long double  ) ;  */
/* END FUNCTION-DECL __builtin_erfcl LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN cgetmatch LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:285 */
extern int cgetmatch(char const   * , char const   * ) ;
/* END FUNCTION-DECL-EXTERN cgetmatch LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:285 */

/* BEGIN STRUCT _opaque_pthread_mutexattr_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_types.h:83 */
struct _opaque_pthread_mutexattr_t {
   long __sig ;
   char __opaque[8] ;
};
/* END STRUCT _opaque_pthread_mutexattr_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_types.h:83 */

/* BEGIN TYPEDEF __darwin_pthread_mutexattr_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_types.h:114 */
typedef struct _opaque_pthread_mutexattr_t __darwin_pthread_mutexattr_t;
/* END TYPEDEF __darwin_pthread_mutexattr_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_types.h:114 */

/* BEGIN TYPEDEF pthread_mutexattr_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_mutexattr_t.h:31 */
typedef __darwin_pthread_mutexattr_t pthread_mutexattr_t;
/* END TYPEDEF pthread_mutexattr_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_mutexattr_t.h:31 */

/* BEGIN FUNCTION-DECL-EXTERN pthread_mutexattr_getpolicy_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:415 */
extern int __attribute__((__availability__(tvos,introduced=11.3), __availability__(watchos,introduced=4.3),
__availability__(ios,introduced=11.3), __availability__(macos,introduced=10.13.4)))  pthread_mutexattr_getpolicy_np(pthread_mutexattr_t const   * __restrict   ,
                                                                                                                    int * __restrict   ) ;
/* END FUNCTION-DECL-EXTERN pthread_mutexattr_getpolicy_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:415 */

/* BEGIN FUNCTION-DECL __builtin_asinh LOC=BUILTIN */
/* compiler builtin: 
   double __builtin_asinh(double  ) ;  */
/* END FUNCTION-DECL __builtin_asinh LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_powl LOC=BUILTIN */
/* compiler builtin: 
   long double __builtin_powl(long double  , long double  ) ;  */
/* END FUNCTION-DECL __builtin_powl LOC=BUILTIN */

/* BEGIN FUNCTION-DECL jit_correct_long_imms LOC=UNKNOWN */
static void jit_correct_long_imms(struct jit *jit ) ;
/* END FUNCTION-DECL jit_correct_long_imms LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_flt_rounds LOC=BUILTIN */
/* compiler builtin: 
   int __builtin_flt_rounds(void) ;  */
/* END FUNCTION-DECL __builtin_flt_rounds LOC=BUILTIN */

/* BEGIN TYPEDEF jit_set LOC=UNKNOWN */
typedef struct jit_set jit_set;
/* END TYPEDEF jit_set LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL jit_set_remove LOC=UNKNOWN */
__inline static void jit_set_remove(jit_set *s , int value ) ;
/* END FUNCTION-DECL jit_set_remove LOC=UNKNOWN */

/* BEGIN TYPEDEF uint8_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/_types/_uint8_t.h:31 */
typedef unsigned char uint8_t;
/* END TYPEDEF uint8_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/_types/_uint8_t.h:31 */

/* BEGIN TYPEDEF uint_least8_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdint.h:33 */
typedef uint8_t uint_least8_t;
/* END TYPEDEF uint_least8_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdint.h:33 */

/* BEGIN FUNCTION-DECL jit_prepare_reg_counts LOC=UNKNOWN */
void jit_prepare_reg_counts(struct jit *jit ) ;
/* END FUNCTION-DECL jit_prepare_reg_counts LOC=UNKNOWN */

/* BEGIN TYPEDEF intmax_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/_types/_intmax_t.h:32 */
typedef long intmax_t;
/* END TYPEDEF intmax_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/_types/_intmax_t.h:32 */

/* BEGIN FUNCTION-DECL-EXTERN pthread_attr_setscope LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:278 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_attr_setscope(pthread_attr_t * ,
                                                                                                                                 int  ) ;
/* END FUNCTION-DECL-EXTERN pthread_attr_setscope LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:278 */

/* BEGIN ENUM __anonenum_788482901 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/qos.h:130 */
enum __anonenum_788482901 {
    QOS_CLASS_USER_INTERACTIVE = 33,
    QOS_CLASS_USER_INITIATED = 25,
    QOS_CLASS_DEFAULT = 21,
    QOS_CLASS_UTILITY = 17,
    QOS_CLASS_BACKGROUND = 9,
    QOS_CLASS_UNSPECIFIED = 0
} ;
/* END ENUM __anonenum_788482901 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/qos.h:130 */

/* BEGIN FUNCTION-DECL-EXTERN fwrite LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:165 */
extern size_t fwrite(void const   * __restrict  __ptr , size_t __size , size_t __nitems ,
                     FILE * __restrict  __stream )  __asm__("_fwrite")  ;
/* END FUNCTION-DECL-EXTERN fwrite LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:165 */

/* BEGIN FUNCTION-DECL-EXTERN fcvt LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:203 */
extern char *fcvt(double  , int  , int * __restrict   , int * __restrict   ) ;
/* END FUNCTION-DECL-EXTERN fcvt LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:203 */

/* BEGIN TYPEDEF __darwin_sigset_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types.h:73 */
typedef __uint32_t __darwin_sigset_t;
/* END TYPEDEF __darwin_sigset_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types.h:73 */

/* BEGIN TYPEDEF sigset_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_sigset_t.h:31 */
typedef __darwin_sigset_t sigset_t;
/* END TYPEDEF sigset_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_sigset_t.h:31 */

/* BEGIN FUNCTION-DECL-EXTERN pselect LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/select.h:114 */
extern int pselect(int  , fd_set * __restrict   , fd_set * __restrict   , fd_set * __restrict   ,
                   struct timespec  const  * __restrict   , sigset_t const   * __restrict   )  __asm__("_pselect$1050")  ;
/* END FUNCTION-DECL-EXTERN pselect LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/select.h:114 */

/* BEGIN TYPEDEF uint32_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/_types/_uint32_t.h:31 */
typedef unsigned int uint32_t;
/* END TYPEDEF uint32_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/_types/_uint32_t.h:31 */

/* BEGIN FUNCTION-DECL-EXTERN arc4random_uniform LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:273 */
extern uint32_t arc4random_uniform(uint32_t __upper_bound )  __attribute__((__availability__(macosx,introduced=10.7))) ;
/* END FUNCTION-DECL-EXTERN arc4random_uniform LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:273 */

/* BEGIN FUNCTION-DECL-EXTERN rcmd LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:705 */
extern  __attribute__((__deprecated__)) int rcmd(char ** , int  , char const   * ,
                                                 char const   * , char const   * ,
                                                 int * ) ;
/* END FUNCTION-DECL-EXTERN rcmd LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:705 */

/* BEGIN FUNCTION-DECL-EXTERN pthread_attr_getscope LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:245 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_attr_getscope(pthread_attr_t const   * __restrict   ,
                                                                                                                                 int * __restrict   ) ;
/* END FUNCTION-DECL-EXTERN pthread_attr_getscope LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:245 */

/* BEGIN FUNCTION-DECL-EXTERN asctime LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:108 */
extern char *asctime(struct tm  const  * ) ;
/* END FUNCTION-DECL-EXTERN asctime LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:108 */

/* BEGIN FUNCTION-DECL-EXTERN pthread_attr_getschedpolicy LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:242 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_attr_getschedpolicy(pthread_attr_t const   * __restrict   ,
                                                                                                                                       int * __restrict   ) ;
/* END FUNCTION-DECL-EXTERN pthread_attr_getschedpolicy LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:242 */

/* BEGIN STRUCT __darwin_x86_avx_state64 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:765 */
struct __darwin_x86_avx_state64 {
   int __fpu_reserved[2] ;
   struct __darwin_fp_control __fpu_fcw ;
   struct __darwin_fp_status __fpu_fsw ;
   __uint8_t __fpu_ftw ;
   __uint8_t __fpu_rsrv1 ;
   __uint16_t __fpu_fop ;
   __uint32_t __fpu_ip ;
   __uint16_t __fpu_cs ;
   __uint16_t __fpu_rsrv2 ;
   __uint32_t __fpu_dp ;
   __uint16_t __fpu_ds ;
   __uint16_t __fpu_rsrv3 ;
   __uint32_t __fpu_mxcsr ;
   __uint32_t __fpu_mxcsrmask ;
   struct __darwin_mmst_reg __fpu_stmm0 ;
   struct __darwin_mmst_reg __fpu_stmm1 ;
   struct __darwin_mmst_reg __fpu_stmm2 ;
   struct __darwin_mmst_reg __fpu_stmm3 ;
   struct __darwin_mmst_reg __fpu_stmm4 ;
   struct __darwin_mmst_reg __fpu_stmm5 ;
   struct __darwin_mmst_reg __fpu_stmm6 ;
   struct __darwin_mmst_reg __fpu_stmm7 ;
   struct __darwin_xmm_reg __fpu_xmm0 ;
   struct __darwin_xmm_reg __fpu_xmm1 ;
   struct __darwin_xmm_reg __fpu_xmm2 ;
   struct __darwin_xmm_reg __fpu_xmm3 ;
   struct __darwin_xmm_reg __fpu_xmm4 ;
   struct __darwin_xmm_reg __fpu_xmm5 ;
   struct __darwin_xmm_reg __fpu_xmm6 ;
   struct __darwin_xmm_reg __fpu_xmm7 ;
   struct __darwin_xmm_reg __fpu_xmm8 ;
   struct __darwin_xmm_reg __fpu_xmm9 ;
   struct __darwin_xmm_reg __fpu_xmm10 ;
   struct __darwin_xmm_reg __fpu_xmm11 ;
   struct __darwin_xmm_reg __fpu_xmm12 ;
   struct __darwin_xmm_reg __fpu_xmm13 ;
   struct __darwin_xmm_reg __fpu_xmm14 ;
   struct __darwin_xmm_reg __fpu_xmm15 ;
   char __fpu_rsrv4[96] ;
   int __fpu_reserved1 ;
   char __avx_reserved1[64] ;
   struct __darwin_xmm_reg __fpu_ymmh0 ;
   struct __darwin_xmm_reg __fpu_ymmh1 ;
   struct __darwin_xmm_reg __fpu_ymmh2 ;
   struct __darwin_xmm_reg __fpu_ymmh3 ;
   struct __darwin_xmm_reg __fpu_ymmh4 ;
   struct __darwin_xmm_reg __fpu_ymmh5 ;
   struct __darwin_xmm_reg __fpu_ymmh6 ;
   struct __darwin_xmm_reg __fpu_ymmh7 ;
   struct __darwin_xmm_reg __fpu_ymmh8 ;
   struct __darwin_xmm_reg __fpu_ymmh9 ;
   struct __darwin_xmm_reg __fpu_ymmh10 ;
   struct __darwin_xmm_reg __fpu_ymmh11 ;
   struct __darwin_xmm_reg __fpu_ymmh12 ;
   struct __darwin_xmm_reg __fpu_ymmh13 ;
   struct __darwin_xmm_reg __fpu_ymmh14 ;
   struct __darwin_xmm_reg __fpu_ymmh15 ;
};
/* END STRUCT __darwin_x86_avx_state64 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:765 */

/* BEGIN FUNCTION-DECL-EXTERN bzero LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/strings.h:72 */
extern void bzero(void * , size_t  ) ;
/* END FUNCTION-DECL-EXTERN bzero LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/strings.h:72 */

/* BEGIN FUNCTION-DECL-EXTERN usleep LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:601 */
extern int usleep(useconds_t  )  __asm__("_usleep")  ;
/* END FUNCTION-DECL-EXTERN usleep LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:601 */

/* BEGIN FUNCTION-DECL-EXTERN nanosleep LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:142 */
extern int nanosleep(struct timespec  const  *__rqtp , struct timespec *__rmtp )  __asm__("_nanosleep")  ;
/* END FUNCTION-DECL-EXTERN nanosleep LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:142 */

/* BEGIN STRUCT _opaque_pthread_once_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_types.h:88 */
struct _opaque_pthread_once_t {
   long __sig ;
   char __opaque[8] ;
};
/* END STRUCT _opaque_pthread_once_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_types.h:88 */

/* BEGIN TYPEDEF __darwin_pthread_once_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_types.h:115 */
typedef struct _opaque_pthread_once_t __darwin_pthread_once_t;
/* END TYPEDEF __darwin_pthread_once_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_types.h:115 */

/* BEGIN TYPEDEF pthread_once_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_once_t.h:31 */
typedef __darwin_pthread_once_t pthread_once_t;
/* END TYPEDEF pthread_once_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_once_t.h:31 */

/* BEGIN FUNCTION-DECL emit_prolog_op LOC=UNKNOWN */
static void emit_prolog_op(struct jit *jit , jit_op *op ) ;
/* END FUNCTION-DECL emit_prolog_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL list_caller_saved_regs LOC=UNKNOWN */
static int list_caller_saved_regs(struct jit *jit , jit_op *op , jit_hw_reg *regs ,
                                  int reg_count , int fp , jit_hw_reg *skip_reg ,
                                  jit_hw_reg **used_regs , int *used_count ) ;
/* END FUNCTION-DECL list_caller_saved_regs LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_subcb LOC=BUILTIN */
/* compiler builtin: 
   unsigned char __builtin_subcb(unsigned char const    , unsigned char const    ,
                                 unsigned char const    , unsigned char * ) ;  */
/* END FUNCTION-DECL __builtin_subcb LOC=BUILTIN */

/* BEGIN FUNCTION-DECL prepare_labels LOC=UNKNOWN */
static jit_tree *prepare_labels(struct jit *jit ) ;
/* END FUNCTION-DECL prepare_labels LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_cbrtf128 LOC=BUILTIN */
/* compiler builtin: 
   _Float128 __builtin_cbrtf128(_Float128  ) ;  */
/* END FUNCTION-DECL __builtin_cbrtf128 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN clearerr LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:142 */
extern void clearerr(FILE * ) ;
/* END FUNCTION-DECL-EXTERN clearerr LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:142 */

/* BEGIN TYPEDEF __darwin_pthread_rwlock_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_types.h:116 */
typedef struct _opaque_pthread_rwlock_t __darwin_pthread_rwlock_t;
/* END TYPEDEF __darwin_pthread_rwlock_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_types.h:116 */

/* BEGIN FUNCTION-DECL __builtin_rintf128 LOC=BUILTIN */
/* compiler builtin: 
   _Float128 __builtin_rintf128(_Float128  ) ;  */
/* END FUNCTION-DECL __builtin_rintf128 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN posix2time LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:131 */
extern time_t posix2time(time_t  ) ;
/* END FUNCTION-DECL-EXTERN posix2time LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:131 */

/* BEGIN TYPEDEF __darwin_dev_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types.h:57 */
typedef __int32_t __darwin_dev_t;
/* END TYPEDEF __darwin_dev_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types.h:57 */

/* BEGIN TYPEDEF dev_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_dev_t.h:31 */
typedef __darwin_dev_t dev_t;
/* END TYPEDEF dev_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_dev_t.h:31 */

/* BEGIN TYPEDEF mode_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_mode_t.h:31 */
typedef __darwin_mode_t mode_t;
/* END TYPEDEF mode_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_mode_t.h:31 */

/* BEGIN FUNCTION-DECL-EXTERN devname LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:293 */
extern char *devname(dev_t  , mode_t  ) ;
/* END FUNCTION-DECL-EXTERN devname LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:293 */

/* BEGIN FUNCTION-DECL-EXTERN strtoll LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:172 */
extern long long strtoll(char const   *__str , char **__endptr , int __base ) ;
/* END FUNCTION-DECL-EXTERN strtoll LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:172 */

/* BEGIN STRUCT __sFILEX LOC=UNKNOWN */
struct __sFILEX {

};
/* END STRUCT __sFILEX LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_roundf LOC=BUILTIN */
/* compiler builtin: 
   float __builtin_roundf(float  ) ;  */
/* END FUNCTION-DECL __builtin_roundf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_memcpy LOC=BUILTIN */
/* compiler builtin: 
   void *__builtin_memcpy(void * , void const   * , unsigned long long  ) ;  */
/* END FUNCTION-DECL __builtin_memcpy LOC=BUILTIN */

/* BEGIN STRUCT __anonstruct_ldiv_t_748949161 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:88 */
struct __anonstruct_ldiv_t_748949161 {
   long quot ;
   long rem ;
};
/* END STRUCT __anonstruct_ldiv_t_748949161 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:88 */

/* BEGIN FUNCTION-DECL-EXTERN qos_class_self LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/qos.h:172 */
extern qos_class_t __attribute__((__availability__(macos,introduced=10.10), __availability__(ios,introduced=8.0)))  qos_class_self(void) ;
/* END FUNCTION-DECL-EXTERN qos_class_self LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/qos.h:172 */

/* BEGIN FUNCTION-DECL __builtin_huge_valf LOC=BUILTIN */
/* compiler builtin: 
   float __builtin_huge_valf(void) ;  */
/* END FUNCTION-DECL __builtin_huge_valf LOC=BUILTIN */

/* BEGIN VARIABLE-DECL jit_disasm_general LOC=UNKNOWN */
struct jit_disasm jit_disasm_general ;
/* END VARIABLE-DECL jit_disasm_general LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL jit_exec_addr LOC=UNKNOWN */
static void *jit_exec_addr(struct jit_exec_mem *mem ) ;
/* END FUNCTION-DECL jit_exec_addr LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN posix_memalign LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/malloc/_malloc.h:52 */
extern int posix_memalign(void **__memptr , size_t __alignment , size_t __size )  __attribute__((__availability__(macosx,introduced=10.6))) ;
/* END FUNCTION-DECL-EXTERN posix_memalign LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/malloc/_malloc.h:52 */

/* BEGIN FUNCTION-DECL __builtin_mul_overflow LOC=BUILTIN */
/* compiler builtin: 
   _Bool __builtin_mul_overflow(...) ;  */
/* END FUNCTION-DECL __builtin_mul_overflow LOC=BUILTIN */

/* BEGIN STRUCT _opaque_pthread_rwlockattr_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_types.h:98 */
struct _opaque_pthread_rwlockattr_t {
   long __sig ;
   char __opaque[16] ;
};
/* END STRUCT _opaque_pthread_rwlockattr_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_types.h:98 */

/* BEGIN TYPEDEF __darwin_pthread_rwlockattr_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_types.h:117 */
typedef struct _opaque_pthread_rwlockattr_t __darwin_pthread_rwlockattr_t;
/* END TYPEDEF __darwin_pthread_rwlockattr_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_types.h:117 */

/* BEGIN TYPEDEF pthread_rwlockattr_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_rwlockattr_t.h:31 */
typedef __darwin_pthread_rwlockattr_t pthread_rwlockattr_t;
/* END TYPEDEF pthread_rwlockattr_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_rwlockattr_t.h:31 */

/* BEGIN TYPEDEF uint64_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/_types/_uint64_t.h:31 */
typedef unsigned long long uint64_t;
/* END TYPEDEF uint64_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/_types/_uint64_t.h:31 */

/* BEGIN STRUCT rusage_info_v1 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/resource.h:209 */
struct rusage_info_v1 {
   uint8_t ri_uuid[16] ;
   uint64_t ri_user_time ;
   uint64_t ri_system_time ;
   uint64_t ri_pkg_idle_wkups ;
   uint64_t ri_interrupt_wkups ;
   uint64_t ri_pageins ;
   uint64_t ri_wired_size ;
   uint64_t ri_resident_size ;
   uint64_t ri_phys_footprint ;
   uint64_t ri_proc_start_abstime ;
   uint64_t ri_proc_exit_abstime ;
   uint64_t ri_child_user_time ;
   uint64_t ri_child_system_time ;
   uint64_t ri_child_pkg_idle_wkups ;
   uint64_t ri_child_interrupt_wkups ;
   uint64_t ri_child_pageins ;
   uint64_t ri_child_elapsed_abstime ;
};
/* END STRUCT rusage_info_v1 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/resource.h:209 */

/* BEGIN FUNCTION-DECL __builtin_nextafterf128 LOC=BUILTIN */
/* compiler builtin: 
   _Float128 __builtin_nextafterf128(_Float128  , _Float128  ) ;  */
/* END FUNCTION-DECL __builtin_nextafterf128 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN random LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:228 */
extern long random(void)  __attribute__((__availability__(swift,unavailable,message="Use arc4random instead."))) ;
/* END FUNCTION-DECL-EXTERN random LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:228 */

/* BEGIN FUNCTION-DECL-EXTERN getpeereid LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:661 */
extern int getpeereid(int  , uid_t * , gid_t * ) ;
/* END FUNCTION-DECL-EXTERN getpeereid LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:661 */

/* BEGIN TYPEDEF u_int16_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_u_int16_t.h:30 */
typedef unsigned short u_int16_t;
/* END TYPEDEF u_int16_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_u_int16_t.h:30 */

/* BEGIN FUNCTION-DECL __builtin_cosf16 LOC=BUILTIN */
/* compiler builtin: 
   _Float16 __builtin_cosf16(_Float16  ) ;  */
/* END FUNCTION-DECL __builtin_cosf16 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_memcpy_inline LOC=BUILTIN */
/* compiler builtin: 
   void __builtin_memcpy_inline(void * , void const   * , unsigned long long  ) ;  */
/* END FUNCTION-DECL __builtin_memcpy_inline LOC=BUILTIN */

/* BEGIN FUNCTION-DECL emit_sse_fldx_op LOC=UNKNOWN */
static void emit_sse_fldx_op(struct jit *jit , jit_op *op , jit_value a1 , jit_value a2 ,
                             jit_value a3 ) ;
/* END FUNCTION-DECL emit_sse_fldx_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN memcmp LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:71 */
extern int memcmp(void const   *__s1 , void const   *__s2 , size_t __n ) ;
/* END FUNCTION-DECL-EXTERN memcmp LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:71 */

/* BEGIN FUNCTION-DECL-EXTERN flockfile LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:286 */
extern void flockfile(FILE * ) ;
/* END FUNCTION-DECL-EXTERN flockfile LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:286 */

/* BEGIN FUNCTION-DECL-EXTERN putenv LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:227 */
extern int putenv(char * )  __asm__("_putenv")  ;
/* END FUNCTION-DECL-EXTERN putenv LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:227 */

/* BEGIN STRUCT sigvec LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/signal.h:348 */
struct sigvec {
   void (*sv_handler)(int  ) ;
   int sv_mask ;
   int sv_flags ;
};
/* END STRUCT sigvec LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/signal.h:348 */

/* BEGIN FUNCTION-DECL __builtin_lround LOC=BUILTIN */
/* compiler builtin: 
   long __builtin_lround(double  ) ;  */
/* END FUNCTION-DECL __builtin_lround LOC=BUILTIN */

/* BEGIN FUNCTION-DECL emit_branch_op LOC=UNKNOWN */
static void emit_branch_op(struct jit *jit , struct jit_op *op , int cond , int imm ,
                           int sign ) ;
/* END FUNCTION-DECL emit_branch_op LOC=UNKNOWN */

/* BEGIN TYPEDEF __darwin_pthread_key_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_types.h:112 */
typedef unsigned long __darwin_pthread_key_t;
/* END TYPEDEF __darwin_pthread_key_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_types.h:112 */

/* BEGIN TYPEDEF pthread_key_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_key_t.h:31 */
typedef __darwin_pthread_key_t pthread_key_t;
/* END TYPEDEF pthread_key_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_key_t.h:31 */

/* BEGIN FUNCTION-DECL-EXTERN pthread_key_create LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:366 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_key_create(pthread_key_t * ,
                                                                                                                              void (* _Nullable  )(void * ) ) ;
/* END FUNCTION-DECL-EXTERN pthread_key_create LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:366 */

/* BEGIN FUNCTION-DECL __builtin_addcl LOC=BUILTIN */
/* compiler builtin: 
   unsigned long __builtin_addcl(unsigned long const    , unsigned long const    ,
                                 unsigned long const    , unsigned long * ) ;  */
/* END FUNCTION-DECL __builtin_addcl LOC=BUILTIN */

/* BEGIN FUNCTION-DECL join_muli_addr LOC=UNKNOWN */
static int join_muli_addr(jit_op *op , jit_op *nextop ) ;
/* END FUNCTION-DECL join_muli_addr LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL jit_set_clone LOC=UNKNOWN */
__inline static jit_set *jit_set_clone(jit_set *s ) ;
/* END FUNCTION-DECL jit_set_clone LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_cacoshl LOC=BUILTIN */
/* compiler builtin: 
   _Complex long double __builtin_cacoshl(_Complex long double  ) ;  */
/* END FUNCTION-DECL __builtin_cacoshl LOC=BUILTIN */

/* BEGIN TYPEDEF pthread_override_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread/qos.h:211 */
typedef struct pthread_override_s *pthread_override_t;
/* END TYPEDEF pthread_override_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread/qos.h:211 */

/* BEGIN FUNCTION-DECL-EXTERN pthread_override_qos_class_start_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread/qos.h:265 */
extern pthread_override_t __attribute__((__availability__(macos,introduced=10.10),
__availability__(ios,introduced=8.0)))  pthread_override_qos_class_start_np(pthread_t __pthread ,
                                                                            qos_class_t __qos_class ,
                                                                            int __relative_priority ) ;
/* END FUNCTION-DECL-EXTERN pthread_override_qos_class_start_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread/qos.h:265 */

/* BEGIN FUNCTION-DECL __builtin_sinf128 LOC=BUILTIN */
/* compiler builtin: 
   _Float128 __builtin_sinf128(_Float128  ) ;  */
/* END FUNCTION-DECL __builtin_sinf128 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_exp2f LOC=BUILTIN */
/* compiler builtin: 
   float __builtin_exp2f(float  ) ;  */
/* END FUNCTION-DECL __builtin_exp2f LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN getsubopt LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:205 */
extern int getsubopt(char ** , char ** , char ** ) ;
/* END FUNCTION-DECL-EXTERN getsubopt LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:205 */

/* BEGIN FUNCTION-DECL __builtin_huge_val LOC=BUILTIN */
/* compiler builtin: 
   double __builtin_huge_val(void) ;  */
/* END FUNCTION-DECL __builtin_huge_val LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_alloca_with_align LOC=BUILTIN */
/* compiler builtin: 
   void *__builtin_alloca_with_align(unsigned long long  , unsigned long long  ) ;  */
/* END FUNCTION-DECL __builtin_alloca_with_align LOC=BUILTIN */

/* BEGIN FUNCTION-DECL spill_ret_retreg LOC=UNKNOWN */
static void spill_ret_retreg(jit_op *op , jit_hw_reg *ret_reg ) ;
/* END FUNCTION-DECL spill_ret_retreg LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL jit_enable_optimization LOC=UNKNOWN */
void jit_enable_optimization(struct jit *jit , int opt ) ;
/* END FUNCTION-DECL jit_enable_optimization LOC=UNKNOWN */

/* BEGIN STRUCT timeval64 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_timeval64.h:34 */
struct timeval64 {
   __int64_t tv_sec ;
   __int64_t tv_usec ;
};
/* END STRUCT timeval64 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_timeval64.h:34 */

/* BEGIN STRUCT jit_arg_layout_location LOC=UNKNOWN */
struct jit_arg_layout_location {
   int index ;
   char isfp ;
   char passed_in_reg ;
   struct jit_out_arg *oarg ;
};
/* END STRUCT jit_arg_layout_location LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN waitpid LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/wait.h:249 */
extern pid_t waitpid(pid_t  , int * , int  )  __asm__("_waitpid")  ;
/* END FUNCTION-DECL-EXTERN waitpid LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/wait.h:249 */

/* BEGIN FUNCTION-DECL __builtin_csin LOC=BUILTIN */
/* compiler builtin: 
   _Complex double __builtin_csin(_Complex double  ) ;  */
/* END FUNCTION-DECL __builtin_csin LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_hypotl LOC=BUILTIN */
/* compiler builtin: 
   long double __builtin_hypotl(long double  , long double  ) ;  */
/* END FUNCTION-DECL __builtin_hypotl LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN strpbrk LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:86 */
extern char *strpbrk(char const   *__s , char const   *__charset ) ;
/* END FUNCTION-DECL-EXTERN strpbrk LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:86 */

/* BEGIN FUNCTION-DECL __builtin_ilogbl LOC=BUILTIN */
/* compiler builtin: 
   int __builtin_ilogbl(long double  ) ;  */
/* END FUNCTION-DECL __builtin_ilogbl LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_extract_return_addr LOC=BUILTIN */
/* compiler builtin: 
   void *__builtin_extract_return_addr(void * ) ;  */
/* END FUNCTION-DECL __builtin_extract_return_addr LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_erff LOC=BUILTIN */
/* compiler builtin: 
   float __builtin_erff(float  ) ;  */
/* END FUNCTION-DECL __builtin_erff LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_smulll_overflow LOC=BUILTIN */
/* compiler builtin: 
   _Bool __builtin_smulll_overflow(long long const    , long long const    , long long * ) ;  */
/* END FUNCTION-DECL __builtin_smulll_overflow LOC=BUILTIN */

/* BEGIN STRUCT __darwin_i386_thread_state LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:46 */
struct __darwin_i386_thread_state {
   unsigned int __eax ;
   unsigned int __ebx ;
   unsigned int __ecx ;
   unsigned int __edx ;
   unsigned int __edi ;
   unsigned int __esi ;
   unsigned int __ebp ;
   unsigned int __esp ;
   unsigned int __ss ;
   unsigned int __eflags ;
   unsigned int __eip ;
   unsigned int __cs ;
   unsigned int __ds ;
   unsigned int __es ;
   unsigned int __fs ;
   unsigned int __gs ;
};
/* END STRUCT __darwin_i386_thread_state LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:46 */

/* BEGIN FUNCTION-DECL-EXTERN signal LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/signal.h:390 */
extern void (*signal(int  , void (*)(int  ) ))(int  ) ;
/* END FUNCTION-DECL-EXTERN signal LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/signal.h:390 */

/* BEGIN FUNCTION-DECL-EXTERN pthread_attr_getstackaddr LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:252 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_attr_getstackaddr(pthread_attr_t const   * __restrict   ,
                                                                                                                                     void * _Nullable  * _Nonnull __restrict   ) ;
/* END FUNCTION-DECL-EXTERN pthread_attr_getstackaddr LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:252 */

/* BEGIN TYPEDEF uintptr_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_uintptr_t.h:30 */
typedef unsigned long uintptr_t;
/* END TYPEDEF uintptr_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_uintptr_t.h:30 */

/* BEGIN FUNCTION-DECL-EXTERN pthread_mutex_getprioceiling LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:375 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_mutex_getprioceiling(pthread_mutex_t const   * __restrict   ,
                                                                                                                                        int * __restrict   ) ;
/* END FUNCTION-DECL-EXTERN pthread_mutex_getprioceiling LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:375 */

/* BEGIN FUNCTION-DECL __builtin_fmaxf128 LOC=BUILTIN */
/* compiler builtin: 
   _Float128 __builtin_fmaxf128(_Float128  , _Float128  ) ;  */
/* END FUNCTION-DECL __builtin_fmaxf128 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL jit_op_is_cond_branch LOC=UNKNOWN */
static int jit_op_is_cond_branch(jit_op *op ) ;
/* END FUNCTION-DECL jit_op_is_cond_branch LOC=UNKNOWN */

/* BEGIN VARIABLE-DECL _TIG_IZ_tgVA_argv LOC=UNKNOWN */
char **_TIG_IZ_tgVA_argv ;
/* END VARIABLE-DECL _TIG_IZ_tgVA_argv LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_fmax LOC=BUILTIN */
/* compiler builtin: 
   double __builtin_fmax(double  , double  ) ;  */
/* END FUNCTION-DECL __builtin_fmax LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN setstate LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:243 */
extern char *setstate(char const   * ) ;
/* END FUNCTION-DECL-EXTERN setstate LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:243 */

/* BEGIN FUNCTION-DECL assign_call LOC=UNKNOWN */
static int assign_call(jit_op *op , struct jit_reg_allocator *al ) ;
/* END FUNCTION-DECL assign_call LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_ctzll LOC=BUILTIN */
/* compiler builtin: 
   int __builtin_ctzll(unsigned long long  ) ;  */
/* END FUNCTION-DECL __builtin_ctzll LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_ccosl LOC=BUILTIN */
/* compiler builtin: 
   _Complex long double __builtin_ccosl(_Complex long double  ) ;  */
/* END FUNCTION-DECL __builtin_ccosl LOC=BUILTIN */

/* BEGIN TYPEDEF __uint64_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_types.h:47 */
typedef unsigned long long __uint64_t;
/* END TYPEDEF __uint64_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_types.h:47 */

/* BEGIN TYPEDEF __darwin_ino64_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types.h:62 */
typedef __uint64_t __darwin_ino64_t;
/* END TYPEDEF __darwin_ino64_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types.h:62 */

/* BEGIN TYPEDEF __darwin_ino_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types.h:64 */
typedef __darwin_ino64_t __darwin_ino_t;
/* END TYPEDEF __darwin_ino_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types.h:64 */

/* BEGIN FUNCTION-DECL-EXTERN rewind LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:176 */
extern void rewind(FILE * ) ;
/* END FUNCTION-DECL-EXTERN rewind LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:176 */

/* BEGIN FUNCTION-DECL __builtin_atanf128 LOC=BUILTIN */
/* compiler builtin: 
   _Float128 __builtin_atanf128(_Float128  ) ;  */
/* END FUNCTION-DECL __builtin_atanf128 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN localtime LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:114 */
extern struct tm *localtime(time_t const   * ) ;
/* END FUNCTION-DECL-EXTERN localtime LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:114 */

/* BEGIN FUNCTION-DECL jit_op_new LOC=UNKNOWN */
static struct jit_op *jit_op_new(unsigned short code , unsigned char spec , jit_value arg1 ,
                                 jit_value arg2 , jit_value arg3 , unsigned char arg_size ) ;
/* END FUNCTION-DECL jit_op_new LOC=UNKNOWN */

/* BEGIN TYPEDEF __darwin_ct_rune_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_types.h:70 */
typedef int __darwin_ct_rune_t;
/* END TYPEDEF __darwin_ct_rune_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_types.h:70 */

/* BEGIN STRUCT __darwin_i386_exception_state LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:575 */
struct __darwin_i386_exception_state {
   __uint16_t __trapno ;
   __uint16_t __cpu ;
   __uint32_t __err ;
   __uint32_t __faultvaddr ;
};
/* END STRUCT __darwin_i386_exception_state LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:575 */

/* BEGIN STRUCT __darwin_i386_float_state LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:281 */
struct __darwin_i386_float_state {
   int __fpu_reserved[2] ;
   struct __darwin_fp_control __fpu_fcw ;
   struct __darwin_fp_status __fpu_fsw ;
   __uint8_t __fpu_ftw ;
   __uint8_t __fpu_rsrv1 ;
   __uint16_t __fpu_fop ;
   __uint32_t __fpu_ip ;
   __uint16_t __fpu_cs ;
   __uint16_t __fpu_rsrv2 ;
   __uint32_t __fpu_dp ;
   __uint16_t __fpu_ds ;
   __uint16_t __fpu_rsrv3 ;
   __uint32_t __fpu_mxcsr ;
   __uint32_t __fpu_mxcsrmask ;
   struct __darwin_mmst_reg __fpu_stmm0 ;
   struct __darwin_mmst_reg __fpu_stmm1 ;
   struct __darwin_mmst_reg __fpu_stmm2 ;
   struct __darwin_mmst_reg __fpu_stmm3 ;
   struct __darwin_mmst_reg __fpu_stmm4 ;
   struct __darwin_mmst_reg __fpu_stmm5 ;
   struct __darwin_mmst_reg __fpu_stmm6 ;
   struct __darwin_mmst_reg __fpu_stmm7 ;
   struct __darwin_xmm_reg __fpu_xmm0 ;
   struct __darwin_xmm_reg __fpu_xmm1 ;
   struct __darwin_xmm_reg __fpu_xmm2 ;
   struct __darwin_xmm_reg __fpu_xmm3 ;
   struct __darwin_xmm_reg __fpu_xmm4 ;
   struct __darwin_xmm_reg __fpu_xmm5 ;
   struct __darwin_xmm_reg __fpu_xmm6 ;
   struct __darwin_xmm_reg __fpu_xmm7 ;
   char __fpu_rsrv4[224] ;
   int __fpu_reserved1 ;
};
/* END STRUCT __darwin_i386_float_state LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:281 */

/* BEGIN STRUCT __darwin_mcontext32 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_mcontext.h:39 */
struct __darwin_mcontext32 {
   struct __darwin_i386_exception_state __es ;
   struct __darwin_i386_thread_state __ss ;
   struct __darwin_i386_float_state __fs ;
};
/* END STRUCT __darwin_mcontext32 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_mcontext.h:39 */

/* BEGIN STRUCT code_refs_cache LOC=UNKNOWN */
struct code_refs_cache {
   int size ;
   jit_op **ops ;
};
/* END STRUCT code_refs_cache LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL emit_sse_alu_op LOC=UNKNOWN */
static void emit_sse_alu_op(struct jit *jit , jit_op *op , int sse_op ) ;
/* END FUNCTION-DECL emit_sse_alu_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN pthread_testcancel LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:497 */
extern void __attribute__((__availability__(macos,introduced=10.4), __availability__(ios,introduced=2.0)))  pthread_testcancel(void)  __asm__("_pthread_testcancel")  ;
/* END FUNCTION-DECL-EXTERN pthread_testcancel LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:497 */

/* BEGIN FUNCTION-DECL-EXTERN cgetfirst LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:284 */
extern int cgetfirst(char ** , char ** ) ;
/* END FUNCTION-DECL-EXTERN cgetfirst LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:284 */

/* BEGIN FUNCTION-DECL-EXTERN crypt LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:544 */
extern char *crypt(char const   * , char const   * ) ;
/* END FUNCTION-DECL-EXTERN crypt LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:544 */

/* BEGIN FUNCTION-DECL-EXTERN strxfrm LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:91 */
extern size_t strxfrm(char *__s1 , char const   *__s2 , size_t __n ) ;
/* END FUNCTION-DECL-EXTERN strxfrm LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:91 */

/* BEGIN TYPEDEF __darwin_intptr_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_types.h:49 */
typedef long __darwin_intptr_t;
/* END TYPEDEF __darwin_intptr_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_types.h:49 */

/* BEGIN FUNCTION-DECL-EXTERN strtoull LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:178 */
extern unsigned long long strtoull(char const   *__str , char **__endptr , int __base ) ;
/* END FUNCTION-DECL-EXTERN strtoull LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:178 */

/* BEGIN FUNCTION-DECL-EXTERN ctermid_r LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:371 */
extern char *ctermid_r(char * ) ;
/* END FUNCTION-DECL-EXTERN ctermid_r LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:371 */

/* BEGIN FUNCTION-DECL-EXTERN getwd LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:564 */
extern char *getwd(char * ) ;
/* END FUNCTION-DECL-EXTERN getwd LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:564 */

/* BEGIN FUNCTION-DECL-EXTERN execve LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:445 */
extern int execve(char const   *__file , char **__argv , char **__envp )  __attribute__((__availability__(tvos,unavailable),
__availability__(watchos,unavailable))) ;
/* END FUNCTION-DECL-EXTERN execve LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:445 */

/* BEGIN FUNCTION-DECL __builtin_lgammaf LOC=BUILTIN */
/* compiler builtin: 
   float __builtin_lgammaf(float  ) ;  */
/* END FUNCTION-DECL __builtin_lgammaf LOC=BUILTIN */

/* BEGIN STRUCT _opaque_pthread_rwlock_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_types.h:93 */
struct _opaque_pthread_rwlock_t {
   long __sig ;
   char __opaque[192] ;
};
/* END STRUCT _opaque_pthread_rwlock_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_types.h:93 */

/* BEGIN TYPEDEF pthread_rwlock_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_rwlock_t.h:31 */
typedef __darwin_pthread_rwlock_t pthread_rwlock_t;
/* END TYPEDEF pthread_rwlock_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_rwlock_t.h:31 */

/* BEGIN FUNCTION-DECL-EXTERN pthread_rwlock_init LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:444 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_rwlock_init(pthread_rwlock_t * __restrict   ,
                                                                                                                               pthread_rwlockattr_t const   * _Nullable __restrict   )  __asm__("_pthread_rwlock_init")  ;
/* END FUNCTION-DECL-EXTERN pthread_rwlock_init LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:444 */

/* BEGIN FUNCTION-DECL __builtin_cabs LOC=BUILTIN */
/* compiler builtin: 
   double __builtin_cabs(_Complex double  ) ;  */
/* END FUNCTION-DECL __builtin_cabs LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_fdim LOC=BUILTIN */
/* compiler builtin: 
   double __builtin_fdim(double  , double  ) ;  */
/* END FUNCTION-DECL __builtin_fdim LOC=BUILTIN */

/* BEGIN STRUCT jit_allocator_hint LOC=UNKNOWN */
struct jit_allocator_hint {
   int last_pos ;
   int should_be_calleesaved ;
   int should_be_eax ;
   int refs ;
};
/* END STRUCT jit_allocator_hint LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL print_args LOC=UNKNOWN */
static void print_args(struct jit_disasm *disasm , struct output_buf *linebuf , jit_op *op ,
                       jit_tree *labels ) ;
/* END FUNCTION-DECL print_args LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN strcmp LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:77 */
extern int strcmp(char const   *__s1 , char const   *__s2 ) ;
/* END FUNCTION-DECL-EXTERN strcmp LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:77 */

/* BEGIN FUNCTION-DECL emit_fret_op LOC=UNKNOWN */
static void emit_fret_op(struct jit *jit , jit_op *op ) ;
/* END FUNCTION-DECL emit_fret_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN index LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/strings.h:73 */
extern char *index(char const   * , int  ) ;
/* END FUNCTION-DECL-EXTERN index LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/strings.h:73 */

/* BEGIN TYPEDEF suseconds_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_suseconds_t.h:31 */
typedef __darwin_suseconds_t suseconds_t;
/* END TYPEDEF suseconds_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_suseconds_t.h:31 */

/* BEGIN FUNCTION-DECL jit_regs_active LOC=UNKNOWN */
void jit_regs_active(jit_op *op , jit_value *dest ) ;
/* END FUNCTION-DECL jit_regs_active LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin___strlcat_chk LOC=BUILTIN */
/* compiler builtin: 
   unsigned long long __builtin___strlcat_chk(char * , char const   * , unsigned long long  ,
                                              unsigned long long  ) ;  */
/* END FUNCTION-DECL __builtin___strlcat_chk LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_scalbnf128 LOC=BUILTIN */
/* compiler builtin: 
   _Float128 __builtin_scalbnf128(_Float128  , int  ) ;  */
/* END FUNCTION-DECL __builtin_scalbnf128 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN pthread_getspecific LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:359 */
extern void __attribute__((__availability__(macos,introduced=10.4), __availability__(ios,introduced=2.0)))  * _Nullable  pthread_getspecific(pthread_key_t  ) ;
/* END FUNCTION-DECL-EXTERN pthread_getspecific LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:359 */

/* BEGIN FUNCTION-DECL associate_register_alias LOC=UNKNOWN */
static void associate_register_alias(struct jit_reg_allocator *al , jit_op *op , int i ) ;
/* END FUNCTION-DECL associate_register_alias LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_launder LOC=BUILTIN */
/* compiler builtin: 
   void *__builtin_launder(void * ) ;  */
/* END FUNCTION-DECL __builtin_launder LOC=BUILTIN */

/* BEGIN TYPEDEF __darwin_uuid_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types.h:77 */
typedef unsigned char __darwin_uuid_t[16];
/* END TYPEDEF __darwin_uuid_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types.h:77 */

/* BEGIN FUNCTION-DECL-EXTERN strcspn LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:80 */
extern size_t strcspn(char const   *__s , char const   *__charset ) ;
/* END FUNCTION-DECL-EXTERN strcspn LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:80 */

/* BEGIN UNION sigval LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/signal.h:158 */
union sigval {
   int sival_int ;
   void *sival_ptr ;
};
/* END UNION sigval LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/signal.h:158 */

/* BEGIN STRUCT sigevent LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/signal.h:168 */
struct sigevent {
   int sigev_notify ;
   int sigev_signo ;
   union sigval sigev_value ;
   void (*sigev_notify_function)(union sigval  ) ;
   pthread_attr_t *sigev_notify_attributes ;
};
/* END STRUCT sigevent LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/signal.h:168 */

/* BEGIN FUNCTION-DECL __builtin_strrchr LOC=BUILTIN */
/* compiler builtin: 
   char *__builtin_strrchr(char const   * , int  ) ;  */
/* END FUNCTION-DECL __builtin_strrchr LOC=BUILTIN */

/* BEGIN STRUCT-DECL fssearchblock LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:769 */
struct fssearchblock ;
/* END STRUCT-DECL fssearchblock LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:769 */

/* BEGIN STRUCT __darwin_x86_exception_state64 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:1172 */
struct __darwin_x86_exception_state64 {
   __uint16_t __trapno ;
   __uint16_t __cpu ;
   __uint32_t __err ;
   __uint64_t __faultvaddr ;
};
/* END STRUCT __darwin_x86_exception_state64 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:1172 */

/* BEGIN FUNCTION-DECL-EXTERN pthread_mutex_unlock LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:393 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_mutex_unlock(pthread_mutex_t * ) ;
/* END FUNCTION-DECL-EXTERN pthread_mutex_unlock LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:393 */

/* BEGIN FUNCTION-DECL __builtin_sadd_overflow LOC=BUILTIN */
/* compiler builtin: 
   _Bool __builtin_sadd_overflow(int const    , int const    , int * ) ;  */
/* END FUNCTION-DECL __builtin_sadd_overflow LOC=BUILTIN */

/* BEGIN FUNCTION-DECL emit_rsb_op LOC=UNKNOWN */
static void emit_rsb_op(struct jit *jit , struct jit_op *op , int imm ) ;
/* END FUNCTION-DECL emit_rsb_op LOC=UNKNOWN */

/* BEGIN TYPEDEF __mbstate_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_types.h:76 */
typedef union __anonunion___mbstate_t_250061491 __mbstate_t;
/* END TYPEDEF __mbstate_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_types.h:76 */

/* BEGIN FUNCTION-DECL delete_min LOC=UNKNOWN */
static jit_tree *delete_min(jit_tree *h ) ;
/* END FUNCTION-DECL delete_min LOC=UNKNOWN */

/* BEGIN VARIABLE-DECL _TIG_VZ_tgVA_3_fib_$strings LOC=UNKNOWN */
char const   *_TIG_VZ_tgVA_3_fib_$strings ;
/* END VARIABLE-DECL _TIG_VZ_tgVA_3_fib_$strings LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_llroundf LOC=BUILTIN */
/* compiler builtin: 
   long long __builtin_llroundf(float  ) ;  */
/* END FUNCTION-DECL __builtin_llroundf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL jit_collect_statistics LOC=UNKNOWN */
void jit_collect_statistics(struct jit *jit ) ;
/* END FUNCTION-DECL jit_collect_statistics LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN reallocf LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:349 */
extern void *reallocf(void *__ptr , size_t __size )  __attribute__((__alloc_size__(2))) ;
/* END FUNCTION-DECL-EXTERN reallocf LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:349 */

/* BEGIN FUNCTION-DECL-EXTERN posix_openpt LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:220 */
extern int posix_openpt(int  ) ;
/* END FUNCTION-DECL-EXTERN posix_openpt LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:220 */

/* BEGIN FUNCTION-DECL emit_branch_overflow_op LOC=UNKNOWN */
static void emit_branch_overflow_op(struct jit *jit , struct jit_op *op , int alu_op ,
                                    int imm , int negation ) ;
/* END FUNCTION-DECL emit_branch_overflow_op LOC=UNKNOWN */

/* BEGIN TYPEDEF user_addr_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/types.h:97 */
typedef u_int64_t user_addr_t;
/* END TYPEDEF user_addr_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/types.h:97 */

/* BEGIN FUNCTION-DECL __builtin_fabsl LOC=BUILTIN */
/* compiler builtin: 
   long double __builtin_fabsl(long double  ) ;  */
/* END FUNCTION-DECL __builtin_fabsl LOC=BUILTIN */

/* BEGIN VARIABLE-DECL-EXTERN optopt LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:512 */
extern int optopt ;
/* END VARIABLE-DECL-EXTERN optopt LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:512 */

/* BEGIN UNION _TIG_VZ_tgVA_3_fib_$node LOC=UNKNOWN */
union _TIG_VZ_tgVA_3_fib_$node {
   unsigned int _unsigned_int ;
   void *_void_star ;
   signed char _signed_char ;
   unsigned long long _unsigned_long_long ;
   int _int ;
   short _short ;
   long long _long_long ;
   unsigned char _unsigned_char ;
   unsigned short _unsigned_short ;
   float _float ;
   unsigned long _unsigned_long ;
   long _long ;
   long double _long_double ;
   char _char ;
   double _double ;
};
/* END UNION _TIG_VZ_tgVA_3_fib_$node LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN pthread_mutexattr_setpolicy_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:434 */
extern int __attribute__((__availability__(ios,introduced=5.0), __availability__(macos,introduced=10.7)))  pthread_mutexattr_setpolicy_np(pthread_mutexattr_t * ,
                                                                                                                                          int  ) ;
/* END FUNCTION-DECL-EXTERN pthread_mutexattr_setpolicy_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:434 */

/* BEGIN FUNCTION-DECL __builtin_csinh LOC=BUILTIN */
/* compiler builtin: 
   _Complex double __builtin_csinh(_Complex double  ) ;  */
/* END FUNCTION-DECL __builtin_csinh LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_lrintl LOC=BUILTIN */
/* compiler builtin: 
   long __builtin_lrintl(long double  ) ;  */
/* END FUNCTION-DECL __builtin_lrintl LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_tgammaf LOC=BUILTIN */
/* compiler builtin: 
   float __builtin_tgammaf(float  ) ;  */
/* END FUNCTION-DECL __builtin_tgammaf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_assume_aligned LOC=BUILTIN */
/* compiler builtin: 
   void *__builtin_assume_aligned(void const   * , unsigned long long   , ...) ;  */
/* END FUNCTION-DECL __builtin_assume_aligned LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN strncpy LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:85 */
extern char *strncpy(char *__dst , char const   *__src , size_t __n ) ;
/* END FUNCTION-DECL-EXTERN strncpy LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:85 */

/* BEGIN FUNCTION-DECL __builtin_ctanhl LOC=BUILTIN */
/* compiler builtin: 
   _Complex long double __builtin_ctanhl(_Complex long double  ) ;  */
/* END FUNCTION-DECL __builtin_ctanhl LOC=BUILTIN */

/* BEGIN TYPEDEF div_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:83 */
typedef struct __anonstruct_div_t_773697287 div_t;
/* END TYPEDEF div_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:83 */

/* BEGIN FUNCTION-DECL __builtin_lgamma LOC=BUILTIN */
/* compiler builtin: 
   double __builtin_lgamma(double  ) ;  */
/* END FUNCTION-DECL __builtin_lgamma LOC=BUILTIN */

/* BEGIN FUNCTION-DECL jit_trace_op LOC=UNKNOWN */
void jit_trace_op(struct jit *jit , jit_op *op , int verbosity ) ;
/* END FUNCTION-DECL jit_trace_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN execvP LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:647 */
extern int execvP(char const   *__file , char const   *__searchpath , char **__argv )  __attribute__((__availability__(tvos,unavailable),
__availability__(watchos,unavailable))) ;
/* END FUNCTION-DECL-EXTERN execvP LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:647 */

/* BEGIN FUNCTION-DECL-EXTERN profil LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:696 */
extern int profil(char * , size_t  , unsigned long  , unsigned int  ) ;
/* END FUNCTION-DECL-EXTERN profil LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:696 */

/* BEGIN FUNCTION-DECL jit_tree_walk LOC=UNKNOWN */
static void jit_tree_walk(jit_tree *h , void (*func)(jit_tree_key key , jit_tree_value value ,
                                                     void *thunk ) , void *thunk ) ;
/* END FUNCTION-DECL jit_tree_walk LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN printf LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:170 */
extern int ( /* format attribute */  printf)(char const   * __restrict    , ...) ;
/* END FUNCTION-DECL-EXTERN printf LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:170 */

/* BEGIN FUNCTION-DECL-EXTERN fmtcheck LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:373 */
extern char const   *fmtcheck(char const   * , char const   * ) ;
/* END FUNCTION-DECL-EXTERN fmtcheck LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:373 */

/* BEGIN FUNCTION-DECL __builtin_conj LOC=BUILTIN */
/* compiler builtin: 
   _Complex double __builtin_conj(_Complex double  ) ;  */
/* END FUNCTION-DECL __builtin_conj LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_fminf LOC=BUILTIN */
/* compiler builtin: 
   float __builtin_fminf(float  , float  ) ;  */
/* END FUNCTION-DECL __builtin_fminf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN pthread_rwlock_wrlock LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:458 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_rwlock_wrlock(pthread_rwlock_t * )  __asm__("_pthread_rwlock_wrlock")  ;
/* END FUNCTION-DECL-EXTERN pthread_rwlock_wrlock LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:458 */

/* BEGIN FUNCTION-DECL __builtin_operator_new LOC=BUILTIN */
/* compiler builtin: 
   void *__builtin_operator_new(unsigned long long  ) ;  */
/* END FUNCTION-DECL __builtin_operator_new LOC=BUILTIN */

/* BEGIN FUNCTION-DECL move_red_right LOC=UNKNOWN */
__inline static jit_tree *move_red_right(jit_tree *h ) ;
/* END FUNCTION-DECL move_red_right LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin___vsprintf_chk LOC=BUILTIN */
/* compiler builtin: 
   int __builtin___vsprintf_chk(char * , int  , unsigned long long  , char const   * ,
                                __builtin_va_list  ) ;  */
/* END FUNCTION-DECL __builtin___vsprintf_chk LOC=BUILTIN */

/* BEGIN VARIABLE-DECL-EXTERN daylight LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:105 */
extern int daylight ;
/* END VARIABLE-DECL-EXTERN daylight LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:105 */

/* BEGIN FUNCTION-DECL-EXTERN setmode LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:724 */
extern void *setmode(char const   * )  __asm__("_setmode")  ;
/* END FUNCTION-DECL-EXTERN setmode LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:724 */

/* BEGIN FUNCTION-DECL __builtin_atan2f LOC=BUILTIN */
/* compiler builtin: 
   float __builtin_atan2f(float  , float  ) ;  */
/* END FUNCTION-DECL __builtin_atan2f LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN lrand48 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:215 */
extern long lrand48(void)  __attribute__((__availability__(swift,unavailable,message="Use arc4random instead."))) ;
/* END FUNCTION-DECL-EXTERN lrand48 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:215 */

/* BEGIN FUNCTION-DECL __builtin_creall LOC=BUILTIN */
/* compiler builtin: 
   long double __builtin_creall(_Complex long double  ) ;  */
/* END FUNCTION-DECL __builtin_creall LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_clzll LOC=BUILTIN */
/* compiler builtin: 
   int __builtin_clzll(unsigned long long  ) ;  */
/* END FUNCTION-DECL __builtin_clzll LOC=BUILTIN */

/* BEGIN FUNCTION-DECL sse_alu_pd_reg_safeimm LOC=UNKNOWN */
static void sse_alu_pd_reg_safeimm(struct jit *jit , jit_op *op , int op_id , int reg ,
                                   double *imm ) ;
/* END FUNCTION-DECL sse_alu_pd_reg_safeimm LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_bswap64 LOC=BUILTIN */
/* compiler builtin: 
   long __builtin_bswap64(long  ) ;  */
/* END FUNCTION-DECL __builtin_bswap64 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN setgid LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:475 */
extern int setgid(gid_t  ) ;
/* END FUNCTION-DECL-EXTERN setgid LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:475 */

/* BEGIN FUNCTION-DECL-EXTERN chroot LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:541 */
extern int chroot(char const   * ) ;
/* END FUNCTION-DECL-EXTERN chroot LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:541 */

/* BEGIN FUNCTION-DECL __builtin_va_end LOC=BUILTIN */
/* compiler builtin: 
   void __builtin_va_end(__builtin_va_list  ) ;  */
/* END FUNCTION-DECL __builtin_va_end LOC=BUILTIN */

/* BEGIN TYPEDEF jit_rmap LOC=UNKNOWN */
typedef struct jit_rmap jit_rmap;
/* END TYPEDEF jit_rmap LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL rmap_unassoc LOC=UNKNOWN */
static void rmap_unassoc(jit_rmap *rmap , jit_value reg ) ;
/* END FUNCTION-DECL rmap_unassoc LOC=UNKNOWN */

/* BEGIN TYPEDEF int_least32_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdint.h:31 */
typedef int32_t int_least32_t;
/* END TYPEDEF int_least32_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdint.h:31 */

/* BEGIN FUNCTION-DECL __builtin_truncf128 LOC=BUILTIN */
/* compiler builtin: 
   _Float128 __builtin_truncf128(_Float128  ) ;  */
/* END FUNCTION-DECL __builtin_truncf128 LOC=BUILTIN */

/* BEGIN TYPEDEF uint_fast64_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdint.h:47 */
typedef uint64_t uint_fast64_t;
/* END TYPEDEF uint_fast64_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdint.h:47 */

/* BEGIN FUNCTION-DECL __builtin_index LOC=BUILTIN */
/* compiler builtin: 
   char *__builtin_index(char const   * , int  ) ;  */
/* END FUNCTION-DECL __builtin_index LOC=BUILTIN */

/* BEGIN VARIABLE-DECL-EXTERN __stderrp LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:69 */
extern FILE *__stderrp ;
/* END VARIABLE-DECL-EXTERN __stderrp LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:69 */

/* BEGIN TYPEDEF jit_prepared_args LOC=UNKNOWN */
typedef struct jit_prepared_args jit_prepared_args;
/* END TYPEDEF jit_prepared_args LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN pthread_set_qos_class_self_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread/qos.h:155 */
extern int __attribute__((__availability__(ios,introduced=8.0), __availability__(macos,introduced=10.10)))  pthread_set_qos_class_self_np(qos_class_t __qos_class ,
                                                                                                                                          int __relative_priority ) ;
/* END FUNCTION-DECL-EXTERN pthread_set_qos_class_self_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread/qos.h:155 */

/* BEGIN FUNCTION-DECL rmap_clone LOC=UNKNOWN */
static jit_rmap *rmap_clone(jit_rmap *rmap ) ;
/* END FUNCTION-DECL rmap_clone LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN wait LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/wait.h:248 */
extern pid_t wait(int * )  __asm__("_wait")  ;
/* END FUNCTION-DECL-EXTERN wait LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/wait.h:248 */

/* BEGIN FUNCTION-DECL __builtin_frexpf LOC=BUILTIN */
/* compiler builtin: 
   float __builtin_frexpf(float  , int * ) ;  */
/* END FUNCTION-DECL __builtin_frexpf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_catanhf LOC=BUILTIN */
/* compiler builtin: 
   _Complex float __builtin_catanhf(_Complex float  ) ;  */
/* END FUNCTION-DECL __builtin_catanhf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_rotateright64 LOC=BUILTIN */
/* compiler builtin: 
   unsigned long __builtin_rotateright64(unsigned long  , unsigned long  ) ;  */
/* END FUNCTION-DECL __builtin_rotateright64 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN sranddev LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:347 */
extern void sranddev(void) ;
/* END FUNCTION-DECL-EXTERN sranddev LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:347 */

/* BEGIN FUNCTION-DECL-EXTERN pthread_yield_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:560 */
extern void __attribute__((__availability__(macos,introduced=10.4), __availability__(ios,introduced=2.0)))  pthread_yield_np(void) ;
/* END FUNCTION-DECL-EXTERN pthread_yield_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:560 */

/* BEGIN FUNCTION-DECL-EXTERN initstate LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:208 */
extern char *initstate(unsigned int  , char * , size_t  ) ;
/* END FUNCTION-DECL-EXTERN initstate LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:208 */

/* BEGIN FUNCTION-DECL __builtin_nexttowardf128 LOC=BUILTIN */
/* compiler builtin: 
   _Float128 __builtin_nexttowardf128(_Float128  , _Float128  ) ;  */
/* END FUNCTION-DECL __builtin_nexttowardf128 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_ssub_overflow LOC=BUILTIN */
/* compiler builtin: 
   _Bool __builtin_ssub_overflow(int const    , int const    , int * ) ;  */
/* END FUNCTION-DECL __builtin_ssub_overflow LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN arc4random LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:264 */
extern uint32_t arc4random(void) ;
/* END FUNCTION-DECL-EXTERN arc4random LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:264 */

/* BEGIN FUNCTION-DECL-EXTERN radixsort LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:341 */
extern int radixsort(unsigned char const   **__base , int __nel , unsigned char const   *__table ,
                     unsigned int __endbyte ) ;
/* END FUNCTION-DECL-EXTERN radixsort LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:341 */

/* BEGIN FUNCTION-DECL-EXTERN getattrlist LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:751 */
extern int getattrlist(char const   * , void * , void * , size_t  , unsigned int  )  __asm__("_getattrlist")  ;
/* END FUNCTION-DECL-EXTERN getattrlist LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:751 */

/* BEGIN FUNCTION-DECL-EXTERN pthread_rwlockattr_destroy LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:464 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_rwlockattr_destroy(pthread_rwlockattr_t * ) ;
/* END FUNCTION-DECL-EXTERN pthread_rwlockattr_destroy LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:464 */

/* BEGIN FUNCTION-DECL-EXTERN wait3 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/wait.h:254 */
extern pid_t wait3(int * , int  , struct rusage * ) ;
/* END FUNCTION-DECL-EXTERN wait3 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/wait.h:254 */

/* BEGIN FUNCTION-DECL __builtin_lrint LOC=BUILTIN */
/* compiler builtin: 
   long __builtin_lrint(double  ) ;  */
/* END FUNCTION-DECL __builtin_lrint LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_expf128 LOC=BUILTIN */
/* compiler builtin: 
   _Float128 __builtin_expf128(_Float128  ) ;  */
/* END FUNCTION-DECL __builtin_expf128 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN strspn LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:88 */
extern size_t strspn(char const   *__s , char const   *__charset ) ;
/* END FUNCTION-DECL-EXTERN strspn LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:88 */

/* BEGIN TYPEDEF u_int8_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_u_int8_t.h:30 */
typedef unsigned char u_int8_t;
/* END TYPEDEF u_int8_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_u_int8_t.h:30 */

/* BEGIN FUNCTION-DECL fixup LOC=UNKNOWN */
__inline static jit_tree *fixup(jit_tree *h ) ;
/* END FUNCTION-DECL fixup LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __darwin_fd_clr LOC=UNKNOWN */
__inline void ( __attribute__((__always_inline__)) __darwin_fd_clr)(int _fd , struct fd_set *_p ) ;
/* END FUNCTION-DECL __darwin_fd_clr LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL jit_dump_ops_general LOC=UNKNOWN */
static void jit_dump_ops_general(struct jit *jit , jit_tree *labels , int verbosity ) ;
/* END FUNCTION-DECL jit_dump_ops_general LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN getpriority LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/resource.h:445 */
extern int getpriority(int  , id_t  ) ;
/* END FUNCTION-DECL-EXTERN getpriority LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/resource.h:445 */

/* BEGIN FUNCTION-DECL-EXTERN strtofflags LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:730 */
extern int strtofflags(char ** , unsigned long * , unsigned long * ) ;
/* END FUNCTION-DECL-EXTERN strtofflags LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:730 */

/* BEGIN FUNCTION-DECL __builtin_ccos LOC=BUILTIN */
/* compiler builtin: 
   _Complex double __builtin_ccos(_Complex double  ) ;  */
/* END FUNCTION-DECL __builtin_ccos LOC=BUILTIN */

/* BEGIN FUNCTION-DECL force_assoc LOC=UNKNOWN */
static int force_assoc(jit_op *op , struct jit_reg_allocator *al ) ;
/* END FUNCTION-DECL force_assoc LOC=UNKNOWN */

/* BEGIN TYPEDEF __darwin_wchar_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_types.h:104 */
typedef int __darwin_wchar_t;
/* END TYPEDEF __darwin_wchar_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_types.h:104 */

/* BEGIN TYPEDEF wchar_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_wchar_t.h:34 */
typedef __darwin_wchar_t wchar_t;
/* END TYPEDEF wchar_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_wchar_t.h:34 */

/* BEGIN FUNCTION-DECL-EXTERN renamex_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/stdio.h:46 */
extern int renamex_np(char const   * , char const   * , unsigned int  )  __attribute__((__availability__(watchos,introduced=3.0),
__availability__(tvos,introduced=10.0), __availability__(ios,introduced=10.0), __availability__(macosx,introduced=10.12))) ;
/* END FUNCTION-DECL-EXTERN renamex_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/stdio.h:46 */

/* BEGIN FUNCTION-DECL-EXTERN cgetclose LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:282 */
extern int cgetclose(void) ;
/* END FUNCTION-DECL-EXTERN cgetclose LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:282 */

/* BEGIN FUNCTION-DECL funcall_prepare LOC=UNKNOWN */
__inline static void funcall_prepare(struct jit *jit , jit_op *op , int count ) ;
/* END FUNCTION-DECL funcall_prepare LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_isnan LOC=BUILTIN */
/* compiler builtin: 
   int __builtin_isnan(...) ;  */
/* END FUNCTION-DECL __builtin_isnan LOC=BUILTIN */

/* BEGIN FUNCTION-DECL DUMP_short LOC=UNKNOWN */
void DUMP_short(int block , struct jit *jit , struct jit_op *begin_ , struct jit_op *end_ ) ;
/* END FUNCTION-DECL DUMP_short LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_casinf LOC=BUILTIN */
/* compiler builtin: 
   _Complex float __builtin_casinf(_Complex float  ) ;  */
/* END FUNCTION-DECL __builtin_casinf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_logf LOC=BUILTIN */
/* compiler builtin: 
   float __builtin_logf(float  ) ;  */
/* END FUNCTION-DECL __builtin_logf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_cexpl LOC=BUILTIN */
/* compiler builtin: 
   _Complex long double __builtin_cexpl(_Complex long double  ) ;  */
/* END FUNCTION-DECL __builtin_cexpl LOC=BUILTIN */

/* BEGIN TYPEDEF off_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_off_t.h:31 */
typedef __darwin_off_t off_t;
/* END TYPEDEF off_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_off_t.h:31 */

/* BEGIN FUNCTION-DECL-EXTERN ftello LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:328 */
extern off_t ftello(FILE *__stream ) ;
/* END FUNCTION-DECL-EXTERN ftello LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:328 */

/* BEGIN FUNCTION-DECL __builtin_fmaf16 LOC=BUILTIN */
/* compiler builtin: 
   _Float16 __builtin_fmaf16(_Float16  , _Float16  , _Float16  ) ;  */
/* END FUNCTION-DECL __builtin_fmaf16 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL jit_tree_clone LOC=UNKNOWN */
__inline static jit_tree *jit_tree_clone(jit_tree *root ) ;
/* END FUNCTION-DECL jit_tree_clone LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN setpgid LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:476 */
extern int setpgid(pid_t  , pid_t  ) ;
/* END FUNCTION-DECL-EXTERN setpgid LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:476 */

/* BEGIN FUNCTION-DECL-EXTERN pipe LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:470 */
extern int pipe(int * ) ;
/* END FUNCTION-DECL-EXTERN pipe LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:470 */

/* BEGIN FUNCTION-DECL __builtin_nan LOC=BUILTIN */
/* compiler builtin: 
   double __builtin_nan(char const   * ) ;  */
/* END FUNCTION-DECL __builtin_nan LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_inf LOC=BUILTIN */
/* compiler builtin: 
   double __builtin_inf(void) ;  */
/* END FUNCTION-DECL __builtin_inf LOC=BUILTIN */

/* BEGIN STRUCT __sbuf LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/_stdio.h:92 */
struct __sbuf {
   unsigned char *_base ;
   int _size ;
};
/* END STRUCT __sbuf LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/_stdio.h:92 */

/* BEGIN STRUCT __sFILE LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/_stdio.h:126 */
struct __sFILE {
   unsigned char *_p ;
   int _r ;
   int _w ;
   short _flags ;
   short _file ;
   struct __sbuf _bf ;
   int _lbfsize ;
   void *_cookie ;
   int (* _Nullable  _close)(void * ) ;
   int (* _Nullable  _read)(void * , char * , int  ) ;
   fpos_t (* _Nullable  _seek)(void * , fpos_t  , int  ) ;
   int (* _Nullable  _write)(void * , char const   * , int  ) ;
   struct __sbuf _ub ;
   struct __sFILEX *_extra ;
   int _ur ;
   unsigned char _ubuf[3] ;
   unsigned char _nbuf[1] ;
   struct __sbuf _lb ;
   int _blksize ;
   fpos_t _offset ;
};
/* END STRUCT __sFILE LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/_stdio.h:126 */

/* BEGIN FUNCTION-DECL-EXTERN atoi LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:135 */
extern int atoi(char const   * ) ;
/* END FUNCTION-DECL-EXTERN atoi LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:135 */

/* BEGIN FUNCTION-DECL is_transfer_op LOC=UNKNOWN */
static int is_transfer_op(jit_op *op ) ;
/* END FUNCTION-DECL is_transfer_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN pthread_mutexattr_getprotocol LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:403 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_mutexattr_getprotocol(pthread_mutexattr_t const   * __restrict   ,
                                                                                                                                         int * __restrict   ) ;
/* END FUNCTION-DECL-EXTERN pthread_mutexattr_getprotocol LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:403 */

/* BEGIN FUNCTION-DECL-EXTERN execl LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:441 */
extern int execl(char const   *__path , char const   *__arg0  , ...)  __attribute__((__availability__(tvos,unavailable),
__availability__(watchos,unavailable))) ;
/* END FUNCTION-DECL-EXTERN execl LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:441 */

/* BEGIN FUNCTION-DECL is_spilled LOC=UNKNOWN */
static int is_spilled(jit_value arg_id , jit_op *prepare_op , int *reg ) ;
/* END FUNCTION-DECL is_spilled LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN fscanf LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:161 */
extern int ( /* format attribute */  fscanf)(FILE * __restrict   , char const   * __restrict   
                                             , ...) ;
/* END FUNCTION-DECL-EXTERN fscanf LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:161 */

/* BEGIN STRUCT sigstack LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/signal.h:367 */
struct sigstack {
   char *ss_sp ;
   int ss_onstack ;
};
/* END STRUCT sigstack LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/signal.h:367 */

/* BEGIN FUNCTION-DECL __builtin_objc_memmove_collectable LOC=BUILTIN */
/* compiler builtin: 
   void *__builtin_objc_memmove_collectable(void * , void const   * , unsigned long long  ) ;  */
/* END FUNCTION-DECL __builtin_objc_memmove_collectable LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_modff LOC=BUILTIN */
/* compiler builtin: 
   float __builtin_modff(float  , float * ) ;  */
/* END FUNCTION-DECL __builtin_modff LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_nearbyintf128 LOC=BUILTIN */
/* compiler builtin: 
   _Float128 __builtin_nearbyintf128(_Float128  ) ;  */
/* END FUNCTION-DECL __builtin_nearbyintf128 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_eh_return LOC=BUILTIN */
/* compiler builtin: 
   void __builtin_eh_return(unsigned long long  , void * ) ;  */
/* END FUNCTION-DECL __builtin_eh_return LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_free LOC=BUILTIN */
/* compiler builtin: 
   void __builtin_free(void * ) ;  */
/* END FUNCTION-DECL __builtin_free LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_convertvector LOC=BUILTIN */
/* compiler builtin: 
   void __builtin_convertvector(...) ;  */
/* END FUNCTION-DECL __builtin_convertvector LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN execle LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:442 */
extern int execle(char const   *__path , char const   *__arg0  , ...)  __attribute__((__availability__(tvos,unavailable),
__availability__(watchos,unavailable))) ;
/* END FUNCTION-DECL-EXTERN execle LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:442 */

/* BEGIN FUNCTION-DECL rmap_is_associated_aux LOC=UNKNOWN */
__inline static jit_hw_reg *rmap_is_associated_aux(jit_tree *n , int reg_id , int fp ,
                                                   jit_value *virt_reg ) ;
/* END FUNCTION-DECL rmap_is_associated_aux LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN lcong48 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:214 */
extern void lcong48(unsigned short * ) ;
/* END FUNCTION-DECL-EXTERN lcong48 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:214 */

/* BEGIN FUNCTION-DECL __builtin_remainderf128 LOC=BUILTIN */
/* compiler builtin: 
   _Float128 __builtin_remainderf128(_Float128  , _Float128  ) ;  */
/* END FUNCTION-DECL __builtin_remainderf128 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN munlock LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/mman.h:232 */
extern int munlock(void const   * , size_t  ) ;
/* END FUNCTION-DECL-EXTERN munlock LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/mman.h:232 */

/* BEGIN STRUCT timespec LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_timespec.h:33 */
struct timespec {
   __darwin_time_t tv_sec ;
   long tv_nsec ;
};
/* END STRUCT timespec LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_timespec.h:33 */

/* BEGIN FUNCTION-DECL-EXTERN acct LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:644 */
extern int acct(char const   * ) ;
/* END FUNCTION-DECL-EXTERN acct LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:644 */

/* BEGIN FUNCTION-DECL __builtin_cosh LOC=BUILTIN */
/* compiler builtin: 
   double __builtin_cosh(double  ) ;  */
/* END FUNCTION-DECL __builtin_cosh LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_subcl LOC=BUILTIN */
/* compiler builtin: 
   unsigned long __builtin_subcl(unsigned long const    , unsigned long const    ,
                                 unsigned long const    , unsigned long * ) ;  */
/* END FUNCTION-DECL __builtin_subcl LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_sinhl LOC=BUILTIN */
/* compiler builtin: 
   long double __builtin_sinhl(long double  ) ;  */
/* END FUNCTION-DECL __builtin_sinhl LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_log10f LOC=BUILTIN */
/* compiler builtin: 
   float __builtin_log10f(float  ) ;  */
/* END FUNCTION-DECL __builtin_log10f LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN pthread_condattr_init LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:321 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_condattr_init(pthread_condattr_t * ) ;
/* END FUNCTION-DECL-EXTERN pthread_condattr_init LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:321 */

/* BEGIN FUNCTION-DECL-EXTERN mkstemp LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:217 */
extern int mkstemp(char * ) ;
/* END FUNCTION-DECL-EXTERN mkstemp LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:217 */

/* BEGIN FUNCTION-DECL __builtin___vprintf_chk LOC=BUILTIN */
/* compiler builtin: 
   int __builtin___vprintf_chk(int  , char const   * , __builtin_va_list  ) ;  */
/* END FUNCTION-DECL __builtin___vprintf_chk LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_addcb LOC=BUILTIN */
/* compiler builtin: 
   unsigned char __builtin_addcb(unsigned char const    , unsigned char const    ,
                                 unsigned char const    , unsigned char * ) ;  */
/* END FUNCTION-DECL __builtin_addcb LOC=BUILTIN */

/* BEGIN STRUCT __darwin_x86_thread_state64 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:633 */
struct __darwin_x86_thread_state64 {
   __uint64_t __rax ;
   __uint64_t __rbx ;
   __uint64_t __rcx ;
   __uint64_t __rdx ;
   __uint64_t __rdi ;
   __uint64_t __rsi ;
   __uint64_t __rbp ;
   __uint64_t __rsp ;
   __uint64_t __r8 ;
   __uint64_t __r9 ;
   __uint64_t __r10 ;
   __uint64_t __r11 ;
   __uint64_t __r12 ;
   __uint64_t __r13 ;
   __uint64_t __r14 ;
   __uint64_t __r15 ;
   __uint64_t __rip ;
   __uint64_t __rflags ;
   __uint64_t __cs ;
   __uint64_t __fs ;
   __uint64_t __gs ;
};
/* END STRUCT __darwin_x86_thread_state64 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:633 */

/* BEGIN STRUCT __darwin_mcontext_avx64 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_mcontext.h:113 */
struct __darwin_mcontext_avx64 {
   struct __darwin_x86_exception_state64 __es ;
   struct __darwin_x86_thread_state64 __ss ;
   struct __darwin_x86_avx_state64 __fs ;
};
/* END STRUCT __darwin_mcontext_avx64 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_mcontext.h:113 */

/* BEGIN FUNCTION-DECL-EXTERN a64l LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:199 */
extern long a64l(char const   * ) ;
/* END FUNCTION-DECL-EXTERN a64l LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:199 */

/* BEGIN FUNCTION-DECL emit_div_op LOC=UNKNOWN */
static void emit_div_op(struct jit *jit , struct jit_op *op , int imm , int sign ,
                        int modulo ) ;
/* END FUNCTION-DECL emit_div_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL ob_pad LOC=UNKNOWN */
static void ob_pad(struct output_buf *ob , int size ) ;
/* END FUNCTION-DECL ob_pad LOC=UNKNOWN */

/* BEGIN STRUCT jit_exec_mem LOC=UNKNOWN */
struct jit_exec_mem {
   void *data ;
   size_t size ;
};
/* END STRUCT jit_exec_mem LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN cgetnum LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:287 */
extern int cgetnum(char * , char const   * , long * ) ;
/* END FUNCTION-DECL-EXTERN cgetnum LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:287 */

/* BEGIN FUNCTION-DECL print_rmap_callback LOC=UNKNOWN */
static void print_rmap_callback(jit_tree_key key , jit_tree_value value , void *disasm ) ;
/* END FUNCTION-DECL print_rmap_callback LOC=UNKNOWN */

/* BEGIN TYPEDEF int8_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_int8_t.h:30 */
typedef signed char int8_t;
/* END TYPEDEF int8_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_int8_t.h:30 */

/* BEGIN TYPEDEF int_fast8_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdint.h:40 */
typedef int8_t int_fast8_t;
/* END TYPEDEF int_fast8_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdint.h:40 */

/* BEGIN STRUCT __darwin_pthread_handler_rec LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_types.h:57 */
struct __darwin_pthread_handler_rec {
   void (*__routine)(void * ) ;
   void *__arg ;
   struct __darwin_pthread_handler_rec *__next ;
};
/* END STRUCT __darwin_pthread_handler_rec LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_types.h:57 */

/* BEGIN FUNCTION-DECL __builtin_wmemmove LOC=BUILTIN */
/* compiler builtin: 
   unsigned short *__builtin_wmemmove(unsigned short * , unsigned short * const   ,
                                      unsigned long long  ) ;  */
/* END FUNCTION-DECL __builtin_wmemmove LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_log10f128 LOC=BUILTIN */
/* compiler builtin: 
   _Float128 __builtin_log10f128(_Float128  ) ;  */
/* END FUNCTION-DECL __builtin_log10f128 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL print_addr LOC=UNKNOWN */
__inline static void print_addr(struct jit_disasm *disasm , struct output_buf *buf ,
                                jit_tree *labels , jit_op *op , int arg_pos ) ;
/* END FUNCTION-DECL print_addr LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN mincore LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/mman.h:243 */
extern int mincore(void const   * , size_t  , char * ) ;
/* END FUNCTION-DECL-EXTERN mincore LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/mman.h:243 */

/* BEGIN TYPEDEF uint16_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/_types/_uint16_t.h:31 */
typedef unsigned short uint16_t;
/* END TYPEDEF uint16_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/_types/_uint16_t.h:31 */

/* BEGIN TYPEDEF uint_fast16_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdint.h:45 */
typedef uint16_t uint_fast16_t;
/* END TYPEDEF uint_fast16_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdint.h:45 */

/* BEGIN FUNCTION-DECL-EXTERN sched_yield LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread/sched.h:38 */
extern int sched_yield(void) ;
/* END FUNCTION-DECL-EXTERN sched_yield LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread/sched.h:38 */

/* BEGIN FUNCTION-DECL-EXTERN setenv LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:237 */
extern int setenv(char const   *__name , char const   *__value , int __overwrite )  __asm__("_setenv")  ;
/* END FUNCTION-DECL-EXTERN setenv LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:237 */

/* BEGIN FUNCTION-DECL __builtin_wmemchr LOC=BUILTIN */
/* compiler builtin: 
   unsigned short *__builtin_wmemchr(unsigned short * const   , unsigned short  ,
                                     unsigned long long  ) ;  */
/* END FUNCTION-DECL __builtin_wmemchr LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN pthread_condattr_destroy LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:318 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_condattr_destroy(pthread_condattr_t * ) ;
/* END FUNCTION-DECL-EXTERN pthread_condattr_destroy LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:318 */

/* BEGIN FUNCTION-DECL DUMP_byte LOC=UNKNOWN */
void DUMP_byte(int block , struct jit *jit , struct jit_op *begin_ , struct jit_op *end_ ) ;
/* END FUNCTION-DECL DUMP_byte LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL jit_init LOC=UNKNOWN */
struct jit *jit_init(void) ;
/* END FUNCTION-DECL jit_init LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN setprogname LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:299 */
extern void setprogname(char const   * ) ;
/* END FUNCTION-DECL-EXTERN setprogname LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:299 */

/* BEGIN FUNCTION-DECL __builtin_rint LOC=BUILTIN */
/* compiler builtin: 
   double __builtin_rint(double  ) ;  */
/* END FUNCTION-DECL __builtin_rint LOC=BUILTIN */

/* BEGIN FUNCTION-DECL jit_regs_active_count LOC=UNKNOWN */
int jit_regs_active_count(jit_op *op ) ;
/* END FUNCTION-DECL jit_regs_active_count LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL emit_mul_op LOC=UNKNOWN */
static void emit_mul_op(struct jit *jit , struct jit_op *op , int imm , int sign ,
                        int high_bytes ) ;
/* END FUNCTION-DECL emit_mul_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_umul_overflow LOC=BUILTIN */
/* compiler builtin: 
   _Bool __builtin_umul_overflow(unsigned int const    , unsigned int const    , unsigned int * ) ;  */
/* END FUNCTION-DECL __builtin_umul_overflow LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN sscanf LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:181 */
extern int ( /* format attribute */  sscanf)(char const   * __restrict   , char const   * __restrict   
                                             , ...) ;
/* END FUNCTION-DECL-EXTERN sscanf LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:181 */

/* BEGIN FUNCTION-DECL __builtin_prefetch LOC=BUILTIN */
/* compiler builtin: 
   void __builtin_prefetch(void const   *  , ...) ;  */
/* END FUNCTION-DECL __builtin_prefetch LOC=BUILTIN */

/* BEGIN FUNCTION-DECL jit_patch_local_addrs LOC=UNKNOWN */
void jit_patch_local_addrs(struct jit *jit ) ;
/* END FUNCTION-DECL jit_patch_local_addrs LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_truncf LOC=BUILTIN */
/* compiler builtin: 
   float __builtin_truncf(float  ) ;  */
/* END FUNCTION-DECL __builtin_truncf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN fpurge LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:374 */
extern int fpurge(FILE * ) ;
/* END FUNCTION-DECL-EXTERN fpurge LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:374 */

/* BEGIN FUNCTION-DECL-EXTERN strcasestr LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:160 */
extern char *strcasestr(char const   *__big , char const   *__little ) ;
/* END FUNCTION-DECL-EXTERN strcasestr LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:160 */

/* BEGIN FUNCTION-DECL-EXTERN pthread_rwlock_unlock LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:461 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_rwlock_unlock(pthread_rwlock_t * )  __asm__("_pthread_rwlock_unlock")  ;
/* END FUNCTION-DECL-EXTERN pthread_rwlock_unlock LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:461 */

/* BEGIN FUNCTION-DECL-EXTERN getchar LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:167 */
extern int getchar(void) ;
/* END FUNCTION-DECL-EXTERN getchar LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:167 */

/* BEGIN FUNCTION-DECL __builtin_clrsbl LOC=BUILTIN */
/* compiler builtin: 
   int __builtin_clrsbl(long  ) ;  */
/* END FUNCTION-DECL __builtin_clrsbl LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_mempcpy LOC=BUILTIN */
/* compiler builtin: 
   void *__builtin_mempcpy(void * , void const   * , unsigned long long  ) ;  */
/* END FUNCTION-DECL __builtin_mempcpy LOC=BUILTIN */

/* BEGIN FUNCTION-DECL move_red_left LOC=UNKNOWN */
__inline static jit_tree *move_red_left(jit_tree *h ) ;
/* END FUNCTION-DECL move_red_left LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_fminf128 LOC=BUILTIN */
/* compiler builtin: 
   _Float128 __builtin_fminf128(_Float128  , _Float128  ) ;  */
/* END FUNCTION-DECL __builtin_fminf128 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN isatty LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:463 */
extern int isatty(int  ) ;
/* END FUNCTION-DECL-EXTERN isatty LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:463 */

/* BEGIN FUNCTION-DECL-EXTERN pthread_mutexattr_setprotocol LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:425 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_mutexattr_setprotocol(pthread_mutexattr_t * ,
                                                                                                                                         int  ) ;
/* END FUNCTION-DECL-EXTERN pthread_mutexattr_setprotocol LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:425 */

/* BEGIN FUNCTION-DECL-EXTERN __swbuf LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:251 */
extern int __swbuf(int  , FILE * ) ;
/* END FUNCTION-DECL-EXTERN __swbuf LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:251 */

/* BEGIN FUNCTION-DECL jit_imm_overflow LOC=UNKNOWN */
static int jit_imm_overflow(struct jit *jit , jit_op *op , jit_value value ) ;
/* END FUNCTION-DECL jit_imm_overflow LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN atol LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:136 */
extern long atol(char const   * ) ;
/* END FUNCTION-DECL-EXTERN atol LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:136 */

/* BEGIN FUNCTION-DECL __builtin_bcmp LOC=BUILTIN */
/* compiler builtin: 
   int __builtin_bcmp(void const   * , void const   * , unsigned long long  ) ;  */
/* END FUNCTION-DECL __builtin_bcmp LOC=BUILTIN */

/* BEGIN FUNCTION-DECL emit_branch_mask_op LOC=UNKNOWN */
static void emit_branch_mask_op(struct jit *jit , struct jit_op *op , int cond , int imm ) ;
/* END FUNCTION-DECL emit_branch_mask_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_cpowf LOC=BUILTIN */
/* compiler builtin: 
   _Complex float __builtin_cpowf(_Complex float  , _Complex float  ) ;  */
/* END FUNCTION-DECL __builtin_cpowf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN strlcpy LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:163 */
extern size_t strlcpy(char *__dst , char const   *__source , size_t __size ) ;
/* END FUNCTION-DECL-EXTERN strlcpy LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:163 */

/* BEGIN FUNCTION-DECL __builtin_saddll_overflow LOC=BUILTIN */
/* compiler builtin: 
   _Bool __builtin_saddll_overflow(long long const    , long long const    , long long * ) ;  */
/* END FUNCTION-DECL __builtin_saddll_overflow LOC=BUILTIN */

/* BEGIN FUNCTION-DECL emit_msg_op LOC=UNKNOWN */
static void emit_msg_op(struct jit *jit , jit_op *op ) ;
/* END FUNCTION-DECL emit_msg_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN mkstemps LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:674 */
extern int mkstemps(char * , int  ) ;
/* END FUNCTION-DECL-EXTERN mkstemps LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:674 */

/* BEGIN FUNCTION-DECL-EXTERN pthread_from_mach_thread_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:553 */
extern pthread_t __attribute__((__nullable__, __availability__(macos,introduced=10.5),
__availability__(ios,introduced=2.0)))  pthread_from_mach_thread_np(mach_port_t  ) ;
/* END FUNCTION-DECL-EXTERN pthread_from_mach_thread_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:553 */

/* BEGIN FUNCTION-DECL-EXTERN fseeko LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:327 */
extern int fseeko(FILE *__stream , off_t __offset , int __whence ) ;
/* END FUNCTION-DECL-EXTERN fseeko LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:327 */

/* BEGIN FUNCTION-DECL-EXTERN ftruncate LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:607 */
extern int ftruncate(int  , off_t  ) ;
/* END FUNCTION-DECL-EXTERN ftruncate LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:607 */

/* BEGIN FUNCTION-DECL-EXTERN setattrlist LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:752 */
extern int setattrlist(char const   * , void * , void * , size_t  , unsigned int  )  __asm__("_setattrlist")  ;
/* END FUNCTION-DECL-EXTERN setattrlist LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:752 */

/* BEGIN FUNCTION-DECL-EXTERN strcat LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:75 */
extern char *strcat(char *__s1 , char const   *__s2 ) ;
/* END FUNCTION-DECL-EXTERN strcat LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:75 */

/* BEGIN FUNCTION-DECL jit_set_get LOC=UNKNOWN */
__inline static int jit_set_get(jit_set *s , int value ) ;
/* END FUNCTION-DECL jit_set_get LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_subcll LOC=BUILTIN */
/* compiler builtin: 
   unsigned __int128 __builtin_subcll(unsigned long long const    , unsigned long long const    ,
                                      unsigned long long const    , unsigned long long * ) ;  */
/* END FUNCTION-DECL __builtin_subcll LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN setusershell LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:728 */
extern void setusershell(void) ;
/* END FUNCTION-DECL-EXTERN setusershell LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:728 */

/* BEGIN FUNCTION-DECL __builtin_realloc LOC=BUILTIN */
/* compiler builtin: 
   void *__builtin_realloc(void * , unsigned long long  ) ;  */
/* END FUNCTION-DECL __builtin_realloc LOC=BUILTIN */

/* BEGIN FUNCTION-DECL assign_regs_for_args LOC=UNKNOWN */
static void assign_regs_for_args(struct jit_reg_allocator *al , jit_op *op ) ;
/* END FUNCTION-DECL assign_regs_for_args LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_acosh LOC=BUILTIN */
/* compiler builtin: 
   double __builtin_acosh(double  ) ;  */
/* END FUNCTION-DECL __builtin_acosh LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_remquof LOC=BUILTIN */
/* compiler builtin: 
   float __builtin_remquof(float  , float  , int * ) ;  */
/* END FUNCTION-DECL __builtin_remquof LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_cbrtl LOC=BUILTIN */
/* compiler builtin: 
   long double __builtin_cbrtl(long double  ) ;  */
/* END FUNCTION-DECL __builtin_cbrtl LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_nextafterf LOC=BUILTIN */
/* compiler builtin: 
   float __builtin_nextafterf(float  , float  ) ;  */
/* END FUNCTION-DECL __builtin_nextafterf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN pthread_main_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:517 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_main_np(void) ;
/* END FUNCTION-DECL-EXTERN pthread_main_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:517 */

/* BEGIN VARIABLE-DECL-EXTERN optind LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:512 */
extern int optind ;
/* END VARIABLE-DECL-EXTERN optind LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:512 */

/* BEGIN FUNCTION-DECL __builtin_nearbyintl LOC=BUILTIN */
/* compiler builtin: 
   long double __builtin_nearbyintl(long double  ) ;  */
/* END FUNCTION-DECL __builtin_nearbyintl LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN strlcat LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:162 */
extern size_t strlcat(char *__dst , char const   *__source , size_t __size ) ;
/* END FUNCTION-DECL-EXTERN strlcat LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:162 */

/* BEGIN FUNCTION-DECL __builtin_roundl LOC=BUILTIN */
/* compiler builtin: 
   long double __builtin_roundl(long double  ) ;  */
/* END FUNCTION-DECL __builtin_roundl LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN strncmp LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:84 */
extern int strncmp(char const   *__s1 , char const   *__s2 , size_t __n ) ;
/* END FUNCTION-DECL-EXTERN strncmp LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:84 */

/* BEGIN FUNCTION-DECL-EXTERN shm_open LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/mman.h:236 */
extern int shm_open(char const   * , int   , ...) ;
/* END FUNCTION-DECL-EXTERN shm_open LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/mman.h:236 */

/* BEGIN FUNCTION-DECL-EXTERN sync LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:598 */
extern void sync(void) ;
/* END FUNCTION-DECL-EXTERN sync LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:598 */

/* BEGIN FUNCTION-DECL __builtin_casinhf LOC=BUILTIN */
/* compiler builtin: 
   _Complex float __builtin_casinhf(_Complex float  ) ;  */
/* END FUNCTION-DECL __builtin_casinhf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_ia32_addps LOC=BUILTIN */
/* compiler builtin: 
   float __attribute__((____vector_size____(16)))  __builtin_ia32_addps(float __attribute__((____vector_size____(16)))   ,
                                                                        float __attribute__((____vector_size____(16)))   ) ;  */
/* END FUNCTION-DECL __builtin_ia32_addps LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN ecvt LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:201 */
extern char *ecvt(double  , int  , int * __restrict   , int * __restrict   ) ;
/* END FUNCTION-DECL-EXTERN ecvt LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:201 */

/* BEGIN FUNCTION-DECL get_related_op LOC=UNKNOWN */
static jit_op *get_related_op(jit_op *op , int result_reg ) ;
/* END FUNCTION-DECL get_related_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL jit_prepare_arguments LOC=UNKNOWN */
void jit_prepare_arguments(struct jit *jit ) ;
/* END FUNCTION-DECL jit_prepare_arguments LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN realloc LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/malloc/_malloc.h:43 */
extern void *( __attribute__((__warn_unused_result__)) realloc)(void *__ptr , size_t __size )  __attribute__((__alloc_size__(2))) ;
/* END FUNCTION-DECL-EXTERN realloc LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/malloc/_malloc.h:43 */

/* BEGIN VARIABLE-DECL-EXTERN opterr LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:512 */
extern int opterr ;
/* END VARIABLE-DECL-EXTERN opterr LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:512 */

/* BEGIN FUNCTION-DECL-EXTERN pthread_setconcurrency LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:488 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_setconcurrency(int  ) ;
/* END FUNCTION-DECL-EXTERN pthread_setconcurrency LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:488 */

/* BEGIN FUNCTION-DECL-EXTERN pthread_attr_setguardsize LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:265 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_attr_setguardsize(pthread_attr_t * ,
                                                                                                                                     size_t  ) ;
/* END FUNCTION-DECL-EXTERN pthread_attr_setguardsize LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:265 */

/* BEGIN FUNCTION-DECL jit_trace_callback LOC=UNKNOWN */
void jit_trace_callback(struct jit *jit , jit_op *op , int verbosity , int trace ) ;
/* END FUNCTION-DECL jit_trace_callback LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN endusershell LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:646 */
extern void endusershell(void) ;
/* END FUNCTION-DECL-EXTERN endusershell LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:646 */

/* BEGIN FUNCTION-DECL associate_register LOC=UNKNOWN */
static void associate_register(struct jit_reg_allocator *al , jit_op *op , int i ) ;
/* END FUNCTION-DECL associate_register LOC=UNKNOWN */

/* BEGIN STRUCT __darwin_x86_float_state64 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:714 */
struct __darwin_x86_float_state64 {
   int __fpu_reserved[2] ;
   struct __darwin_fp_control __fpu_fcw ;
   struct __darwin_fp_status __fpu_fsw ;
   __uint8_t __fpu_ftw ;
   __uint8_t __fpu_rsrv1 ;
   __uint16_t __fpu_fop ;
   __uint32_t __fpu_ip ;
   __uint16_t __fpu_cs ;
   __uint16_t __fpu_rsrv2 ;
   __uint32_t __fpu_dp ;
   __uint16_t __fpu_ds ;
   __uint16_t __fpu_rsrv3 ;
   __uint32_t __fpu_mxcsr ;
   __uint32_t __fpu_mxcsrmask ;
   struct __darwin_mmst_reg __fpu_stmm0 ;
   struct __darwin_mmst_reg __fpu_stmm1 ;
   struct __darwin_mmst_reg __fpu_stmm2 ;
   struct __darwin_mmst_reg __fpu_stmm3 ;
   struct __darwin_mmst_reg __fpu_stmm4 ;
   struct __darwin_mmst_reg __fpu_stmm5 ;
   struct __darwin_mmst_reg __fpu_stmm6 ;
   struct __darwin_mmst_reg __fpu_stmm7 ;
   struct __darwin_xmm_reg __fpu_xmm0 ;
   struct __darwin_xmm_reg __fpu_xmm1 ;
   struct __darwin_xmm_reg __fpu_xmm2 ;
   struct __darwin_xmm_reg __fpu_xmm3 ;
   struct __darwin_xmm_reg __fpu_xmm4 ;
   struct __darwin_xmm_reg __fpu_xmm5 ;
   struct __darwin_xmm_reg __fpu_xmm6 ;
   struct __darwin_xmm_reg __fpu_xmm7 ;
   struct __darwin_xmm_reg __fpu_xmm8 ;
   struct __darwin_xmm_reg __fpu_xmm9 ;
   struct __darwin_xmm_reg __fpu_xmm10 ;
   struct __darwin_xmm_reg __fpu_xmm11 ;
   struct __darwin_xmm_reg __fpu_xmm12 ;
   struct __darwin_xmm_reg __fpu_xmm13 ;
   struct __darwin_xmm_reg __fpu_xmm14 ;
   struct __darwin_xmm_reg __fpu_xmm15 ;
   char __fpu_rsrv4[96] ;
   int __fpu_reserved1 ;
};
/* END STRUCT __darwin_x86_float_state64 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:714 */

/* BEGIN FUNCTION-DECL node_min LOC=UNKNOWN */
__inline static jit_tree_key node_min(jit_tree *x ) ;
/* END FUNCTION-DECL node_min LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL print_combined_op LOC=UNKNOWN */
static jit_op *print_combined_op(FILE *f , struct jit *jit , struct jit_op *op , jit_tree *labels ) ;
/* END FUNCTION-DECL print_combined_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN pread LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:573 */
extern ssize_t pread(int __fd , void *__buf , size_t __nbyte , off_t __offset )  __asm__("_pread")  ;
/* END FUNCTION-DECL-EXTERN pread LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:573 */

/* BEGIN FUNCTION-DECL __builtin_strspn LOC=BUILTIN */
/* compiler builtin: 
   unsigned long long __builtin_strspn(char const   * , char const   * ) ;  */
/* END FUNCTION-DECL __builtin_strspn LOC=BUILTIN */

/* BEGIN FUNCTION-DECL rmap_get LOC=UNKNOWN */
static jit_hw_reg *rmap_get(jit_rmap *rmap , jit_value reg ) ;
/* END FUNCTION-DECL rmap_get LOC=UNKNOWN */

/* BEGIN TYPEDEF ucontext_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_ucontext.h:56 */
typedef struct __darwin_ucontext ucontext_t;
/* END TYPEDEF ucontext_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_ucontext.h:56 */

/* BEGIN FUNCTION-DECL-EXTERN futimes LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/time.h:191 */
extern int futimes(int  , struct timeval  const  * ) ;
/* END FUNCTION-DECL-EXTERN futimes LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/time.h:191 */

/* BEGIN FUNCTION-DECL-EXTERN getprogname LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:298 */
extern char const   *getprogname(void) ;
/* END FUNCTION-DECL-EXTERN getprogname LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:298 */

/* BEGIN VARIABLE-DECL-EXTERN tzname LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:98 */
extern char *tzname[] ;
/* END VARIABLE-DECL-EXTERN tzname LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:98 */

/* BEGIN FUNCTION-DECL assign_regs LOC=UNKNOWN */
static void assign_regs(struct jit *jit , struct jit_op *op ) ;
/* END FUNCTION-DECL assign_regs LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN execvp LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:446 */
extern int execvp(char const   *__file , char **__argv )  __attribute__((__availability__(tvos,unavailable),
__availability__(watchos,unavailable))) ;
/* END FUNCTION-DECL-EXTERN execvp LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:446 */

/* BEGIN STRUCT rusage_info_v0 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/resource.h:195 */
struct rusage_info_v0 {
   uint8_t ri_uuid[16] ;
   uint64_t ri_user_time ;
   uint64_t ri_system_time ;
   uint64_t ri_pkg_idle_wkups ;
   uint64_t ri_interrupt_wkups ;
   uint64_t ri_pageins ;
   uint64_t ri_wired_size ;
   uint64_t ri_resident_size ;
   uint64_t ri_phys_footprint ;
   uint64_t ri_proc_start_abstime ;
   uint64_t ri_proc_exit_abstime ;
};
/* END STRUCT rusage_info_v0 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/resource.h:195 */

/* BEGIN FUNCTION-DECL __builtin_sin LOC=BUILTIN */
/* compiler builtin: 
   double __builtin_sin(double  ) ;  */
/* END FUNCTION-DECL __builtin_sin LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_carg LOC=BUILTIN */
/* compiler builtin: 
   double __builtin_carg(_Complex double  ) ;  */
/* END FUNCTION-DECL __builtin_carg LOC=BUILTIN */

/* BEGIN FUNCTION-DECL node_insert LOC=UNKNOWN */
static jit_tree *node_insert(jit_tree *h , jit_tree_key key , jit_tree_value value ,
                             int *found ) ;
/* END FUNCTION-DECL node_insert LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_remainderl LOC=BUILTIN */
/* compiler builtin: 
   long double __builtin_remainderl(long double  , long double  ) ;  */
/* END FUNCTION-DECL __builtin_remainderl LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_wcscmp LOC=BUILTIN */
/* compiler builtin: 
   int __builtin_wcscmp(unsigned short * const   , unsigned short * const   ) ;  */
/* END FUNCTION-DECL __builtin_wcscmp LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_hypotf128 LOC=BUILTIN */
/* compiler builtin: 
   _Float128 __builtin_hypotf128(_Float128  , _Float128  ) ;  */
/* END FUNCTION-DECL __builtin_hypotf128 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN pthread_attr_getguardsize LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:232 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_attr_getguardsize(pthread_attr_t const   * __restrict   ,
                                                                                                                                     size_t * __restrict   ) ;
/* END FUNCTION-DECL-EXTERN pthread_attr_getguardsize LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:232 */

/* BEGIN FUNCTION-DECL __builtin_log2f16 LOC=BUILTIN */
/* compiler builtin: 
   _Float16 __builtin_log2f16(_Float16  ) ;  */
/* END FUNCTION-DECL __builtin_log2f16 LOC=BUILTIN */

/* BEGIN STRUCT proc_rlimit_control_wakeupmon LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/resource.h:400 */
struct proc_rlimit_control_wakeupmon {
   uint32_t wm_flags ;
   int32_t wm_rate ;
};
/* END STRUCT proc_rlimit_control_wakeupmon LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/resource.h:400 */

/* BEGIN FUNCTION-DECL-EXTERN atexit LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:133 */
extern int atexit(void (* _Nonnull  )(void) ) ;
/* END FUNCTION-DECL-EXTERN atexit LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:133 */

/* BEGIN FUNCTION-DECL join_muli_addi LOC=UNKNOWN */
static int join_muli_addi(jit_op *op , jit_op *nextop ) ;
/* END FUNCTION-DECL join_muli_addi LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN timespec_get LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:199 */
extern int __attribute__((__availability__(watchos,introduced=6.0), __availability__(tvos,introduced=13.0),
__availability__(ios,introduced=13.0), __availability__(macosx,introduced=10.15)))  timespec_get(struct timespec *ts ,
                                                                                                 int base ) ;
/* END FUNCTION-DECL-EXTERN timespec_get LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:199 */

/* BEGIN FUNCTION-DECL __builtin_cpowl LOC=BUILTIN */
/* compiler builtin: 
   _Complex long double __builtin_cpowl(_Complex long double  , _Complex long double  ) ;  */
/* END FUNCTION-DECL __builtin_cpowl LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN strncasecmp LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/strings.h:79 */
extern int strncasecmp(char const   * , char const   * , size_t  ) ;
/* END FUNCTION-DECL-EXTERN strncasecmp LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/strings.h:79 */

/* BEGIN FUNCTION-DECL emit_push_callee_saved_regs LOC=UNKNOWN */
static int emit_push_callee_saved_regs(struct jit *jit , jit_op *op ) ;
/* END FUNCTION-DECL emit_push_callee_saved_regs LOC=UNKNOWN */

/* BEGIN STRUCT __darwin_sigaltstack LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_sigaltstack.h:42 */
struct __darwin_sigaltstack {
   void *ss_sp ;
   __darwin_size_t ss_size ;
   int ss_flags ;
};
/* END STRUCT __darwin_sigaltstack LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_sigaltstack.h:42 */

/* BEGIN STRUCT __darwin_ucontext LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_ucontext.h:42 */
struct __darwin_ucontext {
   int uc_onstack ;
   __darwin_sigset_t uc_sigmask ;
   struct __darwin_sigaltstack uc_stack ;
   struct __darwin_ucontext *uc_link ;
   __darwin_size_t uc_mcsize ;
   struct __darwin_mcontext64 *uc_mcontext ;
};
/* END STRUCT __darwin_ucontext LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_ucontext.h:42 */

/* BEGIN FUNCTION-DECL __builtin_acosf128 LOC=BUILTIN */
/* compiler builtin: 
   long double __builtin_acosf128(long double  , _Float128  ) ;  */
/* END FUNCTION-DECL __builtin_acosf128 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_fdimf LOC=BUILTIN */
/* compiler builtin: 
   float __builtin_fdimf(float  , float  ) ;  */
/* END FUNCTION-DECL __builtin_fdimf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN iruserok LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:710 */
extern  __attribute__((__deprecated__)) int iruserok(unsigned long  , int  , char const   * ,
                                                     char const   * ) ;
/* END FUNCTION-DECL-EXTERN iruserok LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:710 */

/* BEGIN VARIABLE-DECL _TIG_iO_tgVA_2_init_tigress_1_opaque_list_1 LOC=UNKNOWN */
struct _TIG_iO_tgVA_2_init_tigress_1_opaqueNodeStruct *_TIG_iO_tgVA_2_init_tigress_1_opaque_list_1 ;
/* END VARIABLE-DECL _TIG_iO_tgVA_2_init_tigress_1_opaque_list_1 LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL emit_set_fparg LOC=UNKNOWN */
__inline static void emit_set_fparg(struct jit *jit , struct jit_out_arg *arg ) ;
/* END FUNCTION-DECL emit_set_fparg LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN ttyname_r LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:489 */
extern int ttyname_r(int  , char * , size_t  )  __asm__("_ttyname_r")  ;
/* END FUNCTION-DECL-EXTERN ttyname_r LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:489 */

/* BEGIN FUNCTION-DECL-EXTERN setwgroups_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:729 */
extern int setwgroups_np(int  , unsigned char * const   ) ;
/* END FUNCTION-DECL-EXTERN setwgroups_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:729 */

/* BEGIN FUNCTION-DECL jit_flw_analysis LOC=UNKNOWN */
__inline static void jit_flw_analysis(struct jit *jit ) ;
/* END FUNCTION-DECL jit_flw_analysis LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_nexttowardf LOC=BUILTIN */
/* compiler builtin: 
   float __builtin_nexttowardf(float  , long double  ) ;  */
/* END FUNCTION-DECL __builtin_nexttowardf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_islessgreater LOC=BUILTIN */
/* compiler builtin: 
   int __builtin_islessgreater(...) ;  */
/* END FUNCTION-DECL __builtin_islessgreater LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_clog LOC=BUILTIN */
/* compiler builtin: 
   _Complex double __builtin_clog(_Complex double  ) ;  */
/* END FUNCTION-DECL __builtin_clog LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN strnlen LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:133 */
extern size_t strnlen(char const   *__s1 , size_t __n )  __attribute__((__availability__(macosx,introduced=10.7))) ;
/* END FUNCTION-DECL-EXTERN strnlen LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:133 */

/* BEGIN STRUCT __darwin_x86_debug_state32 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:595 */
struct __darwin_x86_debug_state32 {
   unsigned int __dr0 ;
   unsigned int __dr1 ;
   unsigned int __dr2 ;
   unsigned int __dr3 ;
   unsigned int __dr4 ;
   unsigned int __dr5 ;
   unsigned int __dr6 ;
   unsigned int __dr7 ;
};
/* END STRUCT __darwin_x86_debug_state32 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:595 */

/* BEGIN FUNCTION-DECL __builtin_strncat LOC=BUILTIN */
/* compiler builtin: 
   char *__builtin_strncat(char * , char const   * , unsigned long long  ) ;  */
/* END FUNCTION-DECL __builtin_strncat LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN bcmp LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/strings.h:70 */
extern int bcmp(void const   * , void const   * , size_t  ) ;
/* END FUNCTION-DECL-EXTERN bcmp LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/strings.h:70 */

/* BEGIN TYPEDEF u_int32_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_u_int32_t.h:30 */
typedef unsigned int u_int32_t;
/* END TYPEDEF u_int32_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_u_int32_t.h:30 */

/* BEGIN FUNCTION-DECL emit_sse_fstx_op LOC=UNKNOWN */
static void emit_sse_fstx_op(struct jit *jit , jit_op *op , jit_value a1 , jit_value a2 ,
                             jit_value a3 ) ;
/* END FUNCTION-DECL emit_sse_fstx_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_snprintf LOC=BUILTIN */
/* compiler builtin: 
   int __builtin_snprintf(char * , unsigned long long  , char const   *  , ...) ;  */
/* END FUNCTION-DECL __builtin_snprintf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN fopen LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:153 */
extern FILE *fopen(char const   * __restrict  __filename , char const   * __restrict  __mode )  __asm__("_fopen")  ;
/* END FUNCTION-DECL-EXTERN fopen LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:153 */

/* BEGIN FUNCTION-DECL __builtin_ia32_maxps LOC=BUILTIN */
/* compiler builtin: 
   float __attribute__((____vector_size____(16)))  __builtin_ia32_maxps(float __attribute__((____vector_size____(16)))   ,
                                                                        float __attribute__((____vector_size____(16)))   ) ;  */
/* END FUNCTION-DECL __builtin_ia32_maxps LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN truncate LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:599 */
extern int truncate(char const   * , off_t  ) ;
/* END FUNCTION-DECL-EXTERN truncate LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:599 */

/* BEGIN FUNCTION-DECL-EXTERN setsgroups_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:727 */
extern int setsgroups_np(int  , unsigned char * const   ) ;
/* END FUNCTION-DECL-EXTERN setsgroups_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:727 */

/* BEGIN FUNCTION-DECL-EXTERN mkdtemp LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:667 */
extern char *mkdtemp(char * ) ;
/* END FUNCTION-DECL-EXTERN mkdtemp LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:667 */

/* BEGIN FUNCTION-DECL-EXTERN mknod LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:668 */
extern int mknod(char const   * , mode_t  , dev_t  ) ;
/* END FUNCTION-DECL-EXTERN mknod LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:668 */

/* BEGIN FUNCTION-DECL __builtin_fabs LOC=BUILTIN */
/* compiler builtin: 
   double __builtin_fabs(double  ) ;  */
/* END FUNCTION-DECL __builtin_fabs LOC=BUILTIN */

/* BEGIN VARIABLE-DECL-EXTERN timezone LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:103 */
extern long timezone  __asm__("_timezone")  ;
/* END VARIABLE-DECL-EXTERN timezone LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:103 */

/* BEGIN FUNCTION-DECL emit_trace_op LOC=UNKNOWN */
static void emit_trace_op(struct jit *jit , jit_op *op ) ;
/* END FUNCTION-DECL emit_trace_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_acoshl LOC=BUILTIN */
/* compiler builtin: 
   long double __builtin_acoshl(long double  ) ;  */
/* END FUNCTION-DECL __builtin_acoshl LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN mlock LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/mman.h:221 */
extern int mlock(void const   * , size_t  ) ;
/* END FUNCTION-DECL-EXTERN mlock LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/mman.h:221 */

/* BEGIN FUNCTION-DECL __builtin___memmove_chk LOC=BUILTIN */
/* compiler builtin: 
   void *__builtin___memmove_chk(void * , void const   * , unsigned long long  , unsigned long long  ) ;  */
/* END FUNCTION-DECL __builtin___memmove_chk LOC=BUILTIN */

/* BEGIN STRUCT rusage_info_v4 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/resource.h:282 */
struct rusage_info_v4 {
   uint8_t ri_uuid[16] ;
   uint64_t ri_user_time ;
   uint64_t ri_system_time ;
   uint64_t ri_pkg_idle_wkups ;
   uint64_t ri_interrupt_wkups ;
   uint64_t ri_pageins ;
   uint64_t ri_wired_size ;
   uint64_t ri_resident_size ;
   uint64_t ri_phys_footprint ;
   uint64_t ri_proc_start_abstime ;
   uint64_t ri_proc_exit_abstime ;
   uint64_t ri_child_user_time ;
   uint64_t ri_child_system_time ;
   uint64_t ri_child_pkg_idle_wkups ;
   uint64_t ri_child_interrupt_wkups ;
   uint64_t ri_child_pageins ;
   uint64_t ri_child_elapsed_abstime ;
   uint64_t ri_diskio_bytesread ;
   uint64_t ri_diskio_byteswritten ;
   uint64_t ri_cpu_time_qos_default ;
   uint64_t ri_cpu_time_qos_maintenance ;
   uint64_t ri_cpu_time_qos_background ;
   uint64_t ri_cpu_time_qos_utility ;
   uint64_t ri_cpu_time_qos_legacy ;
   uint64_t ri_cpu_time_qos_user_initiated ;
   uint64_t ri_cpu_time_qos_user_interactive ;
   uint64_t ri_billed_system_time ;
   uint64_t ri_serviced_system_time ;
   uint64_t ri_logical_writes ;
   uint64_t ri_lifetime_max_phys_footprint ;
   uint64_t ri_instructions ;
   uint64_t ri_cycles ;
   uint64_t ri_billed_energy ;
   uint64_t ri_serviced_energy ;
   uint64_t ri_interval_max_phys_footprint ;
   uint64_t ri_runnable_time ;
};
/* END STRUCT rusage_info_v4 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/resource.h:282 */

/* BEGIN FUNCTION-DECL jit_op_delete LOC=UNKNOWN */
__inline static void jit_op_delete(jit_op *op ) ;
/* END FUNCTION-DECL jit_op_delete LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN fseek LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:162 */
extern int fseek(FILE * , long  , int  ) ;
/* END FUNCTION-DECL-EXTERN fseek LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:162 */

/* BEGIN FUNCTION-DECL emit_get_arg_from_stack LOC=UNKNOWN */
static void emit_get_arg_from_stack(struct jit *jit , int type , int size , int dreg ,
                                    int stack_reg , int stack_pos ) ;
/* END FUNCTION-DECL emit_get_arg_from_stack LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_erfc LOC=BUILTIN */
/* compiler builtin: 
   double __builtin_erfc(double  ) ;  */
/* END FUNCTION-DECL __builtin_erfc LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN atof LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:134 */
extern double atof(char const   * ) ;
/* END FUNCTION-DECL-EXTERN atof LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:134 */

/* BEGIN FUNCTION-DECL print_full_op_name LOC=UNKNOWN */
void print_full_op_name(struct output_buf *linebuf , jit_op *op ) ;
/* END FUNCTION-DECL print_full_op_name LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN setsid LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:477 */
extern pid_t setsid(void) ;
/* END FUNCTION-DECL-EXTERN setsid LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:477 */

/* BEGIN FUNCTION-DECL __builtin_tanh LOC=BUILTIN */
/* compiler builtin: 
   double __builtin_tanh(double  ) ;  */
/* END FUNCTION-DECL __builtin_tanh LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN mergesort LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:316 */
extern int mergesort(void *__base , size_t __nel , size_t __width , int (* _Nonnull  __compar)(void const   * ,
                                                                                               void const   * ) ) ;
/* END FUNCTION-DECL-EXTERN mergesort LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:316 */

/* BEGIN FUNCTION-DECL __builtin_ffsl LOC=BUILTIN */
/* compiler builtin: 
   int __builtin_ffsl(unsigned long  ) ;  */
/* END FUNCTION-DECL __builtin_ffsl LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN gmtime LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:113 */
extern struct tm *gmtime(time_t const   * ) ;
/* END FUNCTION-DECL-EXTERN gmtime LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:113 */

/* BEGIN STRUCT _TIG_iO_tgVA_2_init_tigress_1_opaqueNodeStruct LOC=UNKNOWN */
struct _TIG_iO_tgVA_2_init_tigress_1_opaqueNodeStruct {
   struct _TIG_iO_tgVA_2_init_tigress_1_opaqueNodeStruct *prev ;
   struct _TIG_iO_tgVA_2_init_tigress_1_opaqueNodeStruct *next ;
   int data ;
};
/* END STRUCT _TIG_iO_tgVA_2_init_tigress_1_opaqueNodeStruct LOC=UNKNOWN */

/* BEGIN VARIABLE-DEF _TIG_iE_tgVA_1_alwaysZero LOC=UNKNOWN */
unsigned long _TIG_iE_tgVA_1_alwaysZero  =    0UL;
/* END VARIABLE-DEF _TIG_iE_tgVA_1_alwaysZero LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL _cipher$_xtea_decipherBlock LOC=UNKNOWN */
void _cipher$_xtea_decipherBlock(unsigned int num_rounds , unsigned int *v , unsigned int *key ) ;
/* END FUNCTION-DECL _cipher$_xtea_decipherBlock LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL emit_sse_sub_op LOC=UNKNOWN */
static void emit_sse_sub_op(struct jit *jit , jit_op *op , jit_value a1 , jit_value a2 ,
                            jit_value a3 ) ;
/* END FUNCTION-DECL emit_sse_sub_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_fmodl LOC=BUILTIN */
/* compiler builtin: 
   long double __builtin_fmodl(long double  ) ;  */
/* END FUNCTION-DECL __builtin_fmodl LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_ccosf LOC=BUILTIN */
/* compiler builtin: 
   _Complex float __builtin_ccosf(_Complex float  ) ;  */
/* END FUNCTION-DECL __builtin_ccosf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_sinl LOC=BUILTIN */
/* compiler builtin: 
   long double __builtin_sinl(long double  ) ;  */
/* END FUNCTION-DECL __builtin_sinl LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_scalbnf LOC=BUILTIN */
/* compiler builtin: 
   float __builtin_scalbnf(float  , int  ) ;  */
/* END FUNCTION-DECL __builtin_scalbnf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN strptime LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:117 */
extern char *strptime(char const   * __restrict   , char const   * __restrict   ,
                      struct tm * __restrict   )  __asm__("_strptime")  ;
/* END FUNCTION-DECL-EXTERN strptime LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:117 */

/* BEGIN FUNCTION-DECL-EXTERN getmode LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:660 */
extern mode_t getmode(void const   * , mode_t  ) ;
/* END FUNCTION-DECL-EXTERN getmode LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:660 */

/* BEGIN FUNCTION-DECL-EXTERN getchar_unlocked LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:290 */
extern int getchar_unlocked(void) ;
/* END FUNCTION-DECL-EXTERN getchar_unlocked LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:290 */

/* BEGIN FUNCTION-DECL-EXTERN setlinebuf LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:376 */
extern int setlinebuf(FILE * ) ;
/* END FUNCTION-DECL-EXTERN setlinebuf LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:376 */

/* BEGIN TYPEDEF int_fast64_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdint.h:43 */
typedef int64_t int_fast64_t;
/* END TYPEDEF int_fast64_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdint.h:43 */

/* BEGIN FUNCTION-DECL-EXTERN pthread_mutexattr_settype LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:431 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_mutexattr_settype(pthread_mutexattr_t * ,
                                                                                                                                     int  ) ;
/* END FUNCTION-DECL-EXTERN pthread_mutexattr_settype LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:431 */

/* BEGIN FUNCTION-DECL-EXTERN mkdtempat_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:686 */
extern char *mkdtempat_np(int dfd , char *path )  __attribute__((__availability__(watchos,introduced=4.0),
__availability__(tvos,introduced=11.0), __availability__(ios,introduced=11.0), __availability__(macosx,introduced=10.13))) ;
/* END FUNCTION-DECL-EXTERN mkdtempat_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:686 */

/* BEGIN FUNCTION-DECL __builtin_ia32_mulps LOC=BUILTIN */
/* compiler builtin: 
   float __attribute__((____vector_size____(16)))  __builtin_ia32_mulps(float __attribute__((____vector_size____(16)))   ,
                                                                        float __attribute__((____vector_size____(16)))   ) ;  */
/* END FUNCTION-DECL __builtin_ia32_mulps LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN vasprintf LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:377 */
extern int ( /* format attribute */  vasprintf)(char ** __restrict   , char const   * __restrict   ,
                                                va_list  ) ;
/* END FUNCTION-DECL-EXTERN vasprintf LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:377 */

/* BEGIN FUNCTION-DECL __builtin_smull_overflow LOC=BUILTIN */
/* compiler builtin: 
   _Bool __builtin_smull_overflow(long const    , long const    , long * ) ;  */
/* END FUNCTION-DECL __builtin_smull_overflow LOC=BUILTIN */

/* BEGIN TYPEDEF stack_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_sigaltstack.h:48 */
typedef struct __darwin_sigaltstack stack_t;
/* END TYPEDEF stack_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_sigaltstack.h:48 */

/* BEGIN UNION __sigaction_u LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/signal.h:269 */
union __sigaction_u {
   void (*__sa_handler)(int  ) ;
   void (*__sa_sigaction)(int  , struct __siginfo * , void * ) ;
};
/* END UNION __sigaction_u LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/signal.h:269 */

/* BEGIN FUNCTION-DECL-EXTERN pthread_override_qos_class_end_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread/qos.h:293 */
extern int __attribute__((__availability__(ios,introduced=8.0), __availability__(macos,introduced=10.10)))  pthread_override_qos_class_end_np(pthread_override_t __override ) ;
/* END FUNCTION-DECL-EXTERN pthread_override_qos_class_end_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread/qos.h:293 */

/* BEGIN STRUCT jit_arg_layout LOC=UNKNOWN */
struct jit_arg_layout {
   struct jit *jit ;
   int arg_index ;
   int gp_index ;
   int fp_index ;
   int stack_index ;
   struct jit_arg_layout_location arguments[] ;
};
/* END STRUCT jit_arg_layout LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_ceilf LOC=BUILTIN */
/* compiler builtin: 
   float __builtin_ceilf(float  ) ;  */
/* END FUNCTION-DECL __builtin_ceilf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_csqrtl LOC=BUILTIN */
/* compiler builtin: 
   _Complex long double __builtin_csqrtl(_Complex long double  ) ;  */
/* END FUNCTION-DECL __builtin_csqrtl LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_nansl LOC=BUILTIN */
/* compiler builtin: 
   long double __builtin_nansl(char const   * ) ;  */
/* END FUNCTION-DECL __builtin_nansl LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN getc LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:166 */
extern int getc(FILE * ) ;
/* END FUNCTION-DECL-EXTERN getc LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:166 */

/* BEGIN FUNCTION-DECL-EXTERN timegm LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:138 */
extern time_t timegm(struct tm * ) ;
/* END FUNCTION-DECL-EXTERN timegm LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:138 */

/* BEGIN FUNCTION-DECL __builtin_classify_type LOC=BUILTIN */
/* compiler builtin: 
   int __builtin_classify_type(...) ;  */
/* END FUNCTION-DECL __builtin_classify_type LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_parityl LOC=BUILTIN */
/* compiler builtin: 
   int __builtin_parityl(unsigned long  ) ;  */
/* END FUNCTION-DECL __builtin_parityl LOC=BUILTIN */

/* BEGIN FUNCTION-DECL jit_get_op_name LOC=UNKNOWN */
char *jit_get_op_name(struct jit_op *op ) ;
/* END FUNCTION-DECL jit_get_op_name LOC=UNKNOWN */

/* BEGIN TYPEDEF jit_unsigned_value LOC=UNKNOWN */
typedef unsigned long jit_unsigned_value;
/* END TYPEDEF jit_unsigned_value LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN fdopen LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:210 */
extern FILE *fdopen(int  , char const   * )  __asm__("_fdopen")  ;
/* END FUNCTION-DECL-EXTERN fdopen LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:210 */

/* BEGIN FUNCTION-DECL emit_sse_fst_op LOC=UNKNOWN */
static void emit_sse_fst_op(struct jit *jit , jit_op *op , jit_value a1 , jit_value a2 ) ;
/* END FUNCTION-DECL emit_sse_fst_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_log1pf LOC=BUILTIN */
/* compiler builtin: 
   float __builtin_log1pf(float  ) ;  */
/* END FUNCTION-DECL __builtin_log1pf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_strlen LOC=BUILTIN */
/* compiler builtin: 
   unsigned long long __builtin_strlen(char const   * ) ;  */
/* END FUNCTION-DECL __builtin_strlen LOC=BUILTIN */

/* BEGIN STRUCT sigaction LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/signal.h:286 */
struct sigaction {
   union __sigaction_u __sigaction_u ;
   sigset_t sa_mask ;
   int sa_flags ;
};
/* END STRUCT sigaction LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/signal.h:286 */

/* BEGIN FUNCTION-DECL-EXTERN lseek LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:465 */
extern off_t lseek(int  , off_t  , int  ) ;
/* END FUNCTION-DECL-EXTERN lseek LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:465 */

/* BEGIN FUNCTION-DECL-EXTERN ungetc LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:189 */
extern int ungetc(int  , FILE * ) ;
/* END FUNCTION-DECL-EXTERN ungetc LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:189 */

/* BEGIN FUNCTION-DECL __builtin_scalblnf128 LOC=BUILTIN */
/* compiler builtin: 
   _Float128 __builtin_scalblnf128(_Float128  , long  ) ;  */
/* END FUNCTION-DECL __builtin_scalblnf128 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_uaddll_overflow LOC=BUILTIN */
/* compiler builtin: 
   _Bool __builtin_uaddll_overflow(unsigned long long const    , unsigned long long const    ,
                                   unsigned long long * ) ;  */
/* END FUNCTION-DECL __builtin_uaddll_overflow LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN pthread_attr_init LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:259 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_attr_init(pthread_attr_t * ) ;
/* END FUNCTION-DECL-EXTERN pthread_attr_init LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:259 */

/* BEGIN FUNCTION-DECL-EXTERN strcpy LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:79 */
extern char *strcpy(char *__dst , char const   *__src ) ;
/* END FUNCTION-DECL-EXTERN strcpy LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:79 */

/* BEGIN FUNCTION-DECL __builtin_sqrtf LOC=BUILTIN */
/* compiler builtin: 
   float __builtin_sqrtf(float  ) ;  */
/* END FUNCTION-DECL __builtin_sqrtf LOC=BUILTIN */

/* BEGIN VARIABLE-DEF jit_disasm_compilable LOC=UNKNOWN */
struct jit_disasm jit_disasm_compilable  = 
     {"    ", "R(%i)", "FR(%i)", "arg(%i)", "farg(%i)", "R_FP", "R_OUT", "R_IMM", "FR_IMM",
    "(unknown reg.)", "label_%03i", "/* label_%03i */ JIT_FORWARD", "<addr: 0x%zx>",
    "%zi"};
/* END VARIABLE-DEF jit_disasm_compilable LOC=UNKNOWN */

/* BEGIN STRUCT __darwin_opmask_reg LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:259 */
struct __darwin_opmask_reg {
   char __opmask_reg[8] ;
};
/* END STRUCT __darwin_opmask_reg LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:259 */

/* BEGIN FUNCTION-DECL emit_fretval_op LOC=UNKNOWN */
static void emit_fretval_op(struct jit *jit , jit_op *op ) ;
/* END FUNCTION-DECL emit_fretval_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN fpathconf LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:448 */
extern long fpathconf(int  , int  ) ;
/* END FUNCTION-DECL-EXTERN fpathconf LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:448 */

/* BEGIN STRUCT itimerval LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/time.h:91 */
struct itimerval {
   struct timeval it_interval ;
   struct timeval it_value ;
};
/* END STRUCT itimerval LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/time.h:91 */

/* BEGIN FUNCTION-DECL __builtin_ctzs LOC=BUILTIN */
/* compiler builtin: 
   int __builtin_ctzs(short  ) ;  */
/* END FUNCTION-DECL __builtin_ctzs LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_ccosh LOC=BUILTIN */
/* compiler builtin: 
   _Complex double __builtin_ccosh(_Complex double  ) ;  */
/* END FUNCTION-DECL __builtin_ccosh LOC=BUILTIN */

/* BEGIN TYPEDEF uint_least16_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdint.h:34 */
typedef uint16_t uint_least16_t;
/* END TYPEDEF uint_least16_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdint.h:34 */

/* BEGIN FUNCTION-DECL force_spill LOC=UNKNOWN */
static int force_spill(jit_op *op ) ;
/* END FUNCTION-DECL force_spill LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN getuid LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:462 */
extern uid_t getuid(void) ;
/* END FUNCTION-DECL-EXTERN getuid LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:462 */

/* BEGIN FUNCTION-DECL __builtin_log1pf128 LOC=BUILTIN */
/* compiler builtin: 
   _Float128 __builtin_log1pf128(_Float128  ) ;  */
/* END FUNCTION-DECL __builtin_log1pf128 LOC=BUILTIN */

/* BEGIN TYPEDEF __darwin_wint_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_types.h:112 */
typedef int __darwin_wint_t;
/* END TYPEDEF __darwin_wint_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_types.h:112 */

/* BEGIN FUNCTION-DECL __builtin_uadd_overflow LOC=BUILTIN */
/* compiler builtin: 
   _Bool __builtin_uadd_overflow(unsigned int const    , unsigned int const    , unsigned int * ) ;  */
/* END FUNCTION-DECL __builtin_uadd_overflow LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN __snprintf_chk LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/secure/_stdio.h:52 */
extern int __snprintf_chk(char * __restrict   , size_t  , int  , size_t  , char const   * __restrict   
                          , ...) ;
/* END FUNCTION-DECL-EXTERN __snprintf_chk LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/secure/_stdio.h:52 */

/* BEGIN ENUM jit_inp_type LOC=UNKNOWN */
enum jit_inp_type {
    JIT_SIGNED_NUM = 0,
    JIT_UNSIGNED_NUM = 1,
    JIT_FLOAT_NUM = 2,
    JIT_PTR = 3
} ;
/* END ENUM jit_inp_type LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_remainderf LOC=BUILTIN */
/* compiler builtin: 
   float __builtin_remainderf(float  , float  ) ;  */
/* END FUNCTION-DECL __builtin_remainderf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN fsync LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:605 */
extern int fsync(int  )  __asm__("_fsync")  ;
/* END FUNCTION-DECL-EXTERN fsync LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:605 */

/* BEGIN FUNCTION-DECL-EXTERN pthread_threadid_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:506 */
extern int __attribute__((__availability__(ios,introduced=3.2), __availability__(macos,introduced=10.6)))  pthread_threadid_np(pthread_t __attribute__((__nullable__))   ,
                                                                                                                               __uint64_t * _Nullable   ) ;
/* END FUNCTION-DECL-EXTERN pthread_threadid_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:506 */

/* BEGIN FUNCTION-DECL __builtin_fmod LOC=BUILTIN */
/* compiler builtin: 
   double __builtin_fmod(double  ) ;  */
/* END FUNCTION-DECL __builtin_fmod LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN pthread_create_suspended_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:541 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_create_suspended_np(pthread_t __attribute__((__nullable__))  * _Nonnull   ,
                                                                                                                                       pthread_attr_t const   * _Nullable   ,
                                                                                                                                       void * _Nullable  (* _Nonnull  )(void * _Nullable   ) ,
                                                                                                                                       void * _Nullable   ) ;
/* END FUNCTION-DECL-EXTERN pthread_create_suspended_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:541 */

/* BEGIN FUNCTION-DECL __builtin_truncl LOC=BUILTIN */
/* compiler builtin: 
   long double __builtin_truncl(long double  ) ;  */
/* END FUNCTION-DECL __builtin_truncl LOC=BUILTIN */

/* BEGIN VARIABLE-DEF _TIG_iO_tgVA_2_init_tigress_1_opaque_ptr_1 LOC=UNKNOWN */
struct _TIG_iO_tgVA_2_init_tigress_1_opaqueNodeStruct *_TIG_iO_tgVA_2_init_tigress_1_opaque_ptr_1  =    (struct _TIG_iO_tgVA_2_init_tigress_1_opaqueNodeStruct *)0;
/* END VARIABLE-DEF _TIG_iO_tgVA_2_init_tigress_1_opaque_ptr_1 LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_isgreaterequal LOC=BUILTIN */
/* compiler builtin: 
   int __builtin_isgreaterequal(...) ;  */
/* END FUNCTION-DECL __builtin_isgreaterequal LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_lgammal LOC=BUILTIN */
/* compiler builtin: 
   long double __builtin_lgammal(long double  ) ;  */
/* END FUNCTION-DECL __builtin_lgammal LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_log1p LOC=BUILTIN */
/* compiler builtin: 
   double __builtin_log1p(double  ) ;  */
/* END FUNCTION-DECL __builtin_log1p LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_return_address LOC=BUILTIN */
/* compiler builtin: 
   void *__builtin_return_address(unsigned int  ) ;  */
/* END FUNCTION-DECL __builtin_return_address LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN strtok LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:90 */
extern char *strtok(char *__str , char const   *__sep ) ;
/* END FUNCTION-DECL-EXTERN strtok LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:90 */

/* BEGIN FUNCTION-DECL jit_set_size LOC=UNKNOWN */
__inline static int jit_set_size(jit_set *s ) ;
/* END FUNCTION-DECL jit_set_size LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN gmtime_r LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:127 */
extern struct tm *gmtime_r(time_t const   * __restrict   , struct tm * __restrict   ) ;
/* END FUNCTION-DECL-EXTERN gmtime_r LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:127 */

/* BEGIN TYPEDEF user_ssize_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/types.h:99 */
typedef int64_t user_ssize_t;
/* END TYPEDEF user_ssize_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/types.h:99 */

/* BEGIN FUNCTION-DECL-EXTERN getc_unlocked LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:289 */
extern int getc_unlocked(FILE * ) ;
/* END FUNCTION-DECL-EXTERN getc_unlocked LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:289 */

/* BEGIN FUNCTION-DECL __builtin_tanl LOC=BUILTIN */
/* compiler builtin: 
   long double __builtin_tanl(long double  ) ;  */
/* END FUNCTION-DECL __builtin_tanl LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN pthread_cond_wait LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:314 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_cond_wait(pthread_cond_t * __restrict   ,
                                                                                                                             pthread_mutex_t * __restrict   )  __asm__("_pthread_cond_wait")  ;
/* END FUNCTION-DECL-EXTERN pthread_cond_wait LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:314 */

/* BEGIN FUNCTION-DECL __builtin_smul_overflow LOC=BUILTIN */
/* compiler builtin: 
   _Bool __builtin_smul_overflow(int const    , int const    , int * ) ;  */
/* END FUNCTION-DECL __builtin_smul_overflow LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN fls LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/strings.h:87 */
extern int fls(int  )  __attribute__((__availability__(macosx,introduced=10.5))) ;
/* END FUNCTION-DECL-EXTERN fls LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/strings.h:87 */

/* BEGIN FUNCTION-DECL jit_init_arg_params LOC=UNKNOWN */
void jit_init_arg_params(struct jit *jit , struct jit_func_info *info , int p , int *phys_reg ) ;
/* END FUNCTION-DECL jit_init_arg_params LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL join_2ops LOC=UNKNOWN */
static int join_2ops(jit_op *op , int opcode1 , int opcode2 , int (*joinfn)(jit_op * ,
                                                                            jit_op * ) ) ;
/* END FUNCTION-DECL join_2ops LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_bitreverse8 LOC=BUILTIN */
/* compiler builtin: 
   unsigned char __builtin_bitreverse8(unsigned char  ) ;  */
/* END FUNCTION-DECL __builtin_bitreverse8 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_inff128 LOC=BUILTIN */
/* compiler builtin: 
   _Float128 __builtin_inff128(void) ;  */
/* END FUNCTION-DECL __builtin_inff128 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_nearbyint LOC=BUILTIN */
/* compiler builtin: 
   double __builtin_nearbyint(double  ) ;  */
/* END FUNCTION-DECL __builtin_nearbyint LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_floorf128 LOC=BUILTIN */
/* compiler builtin: 
   _Float128 __builtin_floorf128(_Float128  ) ;  */
/* END FUNCTION-DECL __builtin_floorf128 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL jit_exec_mem_seal LOC=UNKNOWN */
static void jit_exec_mem_seal(struct jit_exec_mem *mem ) ;
/* END FUNCTION-DECL jit_exec_mem_seal LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_atanh LOC=BUILTIN */
/* compiler builtin: 
   double __builtin_atanh(double  ) ;  */
/* END FUNCTION-DECL __builtin_atanh LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN remove LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:174 */
extern int remove(char const   * ) ;
/* END FUNCTION-DECL-EXTERN remove LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:174 */

/* BEGIN FUNCTION-DECL __builtin_copysign LOC=BUILTIN */
/* compiler builtin: 
   double __builtin_copysign(double  , double  ) ;  */
/* END FUNCTION-DECL __builtin_copysign LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN gcvt LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:204 */
extern char *gcvt(double  , int  , char * ) ;
/* END FUNCTION-DECL-EXTERN gcvt LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:204 */

/* BEGIN FUNCTION-DECL __builtin_expl LOC=BUILTIN */
/* compiler builtin: 
   long double __builtin_expl(long double  ) ;  */
/* END FUNCTION-DECL __builtin_expl LOC=BUILTIN */

/* BEGIN TYPEDEF __darwin_clock_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_types.h:117 */
typedef unsigned long __darwin_clock_t;
/* END TYPEDEF __darwin_clock_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_types.h:117 */

/* BEGIN TYPEDEF clock_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_clock_t.h:31 */
typedef __darwin_clock_t clock_t;
/* END TYPEDEF clock_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_clock_t.h:31 */

/* BEGIN FUNCTION-DECL-EXTERN clock LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:109 */
extern clock_t clock(void)  __asm__("_clock")  ;
/* END FUNCTION-DECL-EXTERN clock LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:109 */

/* BEGIN FUNCTION-DECL __builtin_char_memchr LOC=BUILTIN */
/* compiler builtin: 
   char *__builtin_char_memchr(char const   * , int  , unsigned long long  ) ;  */
/* END FUNCTION-DECL __builtin_char_memchr LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_cpow LOC=BUILTIN */
/* compiler builtin: 
   _Complex double __builtin_cpow(_Complex double  , _Complex double  ) ;  */
/* END FUNCTION-DECL __builtin_cpow LOC=BUILTIN */

/* BEGIN TYPEDEF jit_reg LOC=UNKNOWN */
typedef jit_value jit_reg;
/* END TYPEDEF jit_reg LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN sradixsort LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:345 */
extern int sradixsort(unsigned char const   **__base , int __nel , unsigned char const   *__table ,
                      unsigned int __endbyte ) ;
/* END FUNCTION-DECL-EXTERN sradixsort LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:345 */

/* BEGIN FUNCTION-DECL __builtin_constant_p LOC=BUILTIN */
/* compiler builtin: 
   int __builtin_constant_p(int  ) ;  */
/* END FUNCTION-DECL __builtin_constant_p LOC=BUILTIN */

/* BEGIN FUNCTION-DECL emit_get_arg LOC=UNKNOWN */
static void emit_get_arg(struct jit *jit , jit_op *op ) ;
/* END FUNCTION-DECL emit_get_arg LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL emit_lreg LOC=UNKNOWN */
static void emit_lreg(struct jit *jit , int hreg_id , jit_value vreg ) ;
/* END FUNCTION-DECL emit_lreg LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_erfl LOC=BUILTIN */
/* compiler builtin: 
   long double __builtin_erfl(long double  ) ;  */
/* END FUNCTION-DECL __builtin_erfl LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin___stpncpy_chk LOC=BUILTIN */
/* compiler builtin: 
   char *__builtin___stpncpy_chk(char * , char const   * , unsigned long long  , unsigned long long  ) ;  */
/* END FUNCTION-DECL __builtin___stpncpy_chk LOC=BUILTIN */

/* BEGIN VARIABLE-DECL _TIG_iE_tgVA_1_alwaysZero LOC=UNKNOWN */
unsigned long _TIG_iE_tgVA_1_alwaysZero ;
/* END VARIABLE-DECL _TIG_iE_tgVA_1_alwaysZero LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_nans LOC=BUILTIN */
/* compiler builtin: 
   double __builtin_nans(char const   * ) ;  */
/* END FUNCTION-DECL __builtin_nans LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN munlockall LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/mman.h:219 */
extern int munlockall(void) ;
/* END FUNCTION-DECL-EXTERN munlockall LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/mman.h:219 */

/* BEGIN TYPEDEF errno_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_errno_t.h:30 */
typedef int errno_t;
/* END TYPEDEF errno_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_errno_t.h:30 */

/* BEGIN TYPEDEF jit_opcode LOC=UNKNOWN */
typedef enum __anonenum_jit_opcode_820224137 jit_opcode;
/* END TYPEDEF jit_opcode LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN tzsetwall LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:135 */
extern void tzsetwall(void) ;
/* END FUNCTION-DECL-EXTERN tzsetwall LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:135 */

/* BEGIN FUNCTION-DECL __builtin_complex LOC=BUILTIN */
/* compiler builtin: 
   void __builtin_complex(...) ;  */
/* END FUNCTION-DECL __builtin_complex LOC=BUILTIN */

/* BEGIN TYPEDEF _TIG_iO_tgVA_2_init_tigress_1_opaqueStructureType LOC=UNKNOWN */
typedef struct _TIG_iO_tgVA_2_init_tigress_1_opaqueNodeStruct *_TIG_iO_tgVA_2_init_tigress_1_opaqueStructureType;
/* END TYPEDEF _TIG_iO_tgVA_2_init_tigress_1_opaqueStructureType LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN mblen LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:156 */
extern int mblen(char const   *__s , size_t __n ) ;
/* END FUNCTION-DECL-EXTERN mblen LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:156 */

/* BEGIN FUNCTION-DECL __builtin_isinf_sign LOC=BUILTIN */
/* compiler builtin: 
   int __builtin_isinf_sign(...) ;  */
/* END FUNCTION-DECL __builtin_isinf_sign LOC=BUILTIN */

/* BEGIN UNION __anonunion_location_773697288 LOC=UNKNOWN */
union __anonunion_location_773697288 {
   int reg ;
   int stack_pos ;
};
/* END UNION __anonunion_location_773697288 LOC=UNKNOWN */

/* BEGIN STRUCT jit_inp_arg LOC=UNKNOWN */
struct jit_inp_arg {
   enum jit_inp_type type ;
   int size ;
   char passed_by_reg ;
   union __anonunion_location_773697288 location ;
   int spill_pos ;
   int gp_pos ;
   int fp_pos ;
   int overflow ;
   int phys_reg ;
};
/* END STRUCT jit_inp_arg LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN setvbuf LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:179 */
extern int setvbuf(FILE * __restrict   , char * __restrict   , int  , size_t  ) ;
/* END FUNCTION-DECL-EXTERN setvbuf LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:179 */

/* BEGIN FUNCTION-DECL __builtin_clzl LOC=BUILTIN */
/* compiler builtin: 
   int __builtin_clzl(unsigned long  ) ;  */
/* END FUNCTION-DECL __builtin_clzl LOC=BUILTIN */

/* BEGIN FUNCTION-DECL jit_dump_ops_combined LOC=UNKNOWN */
static void jit_dump_ops_combined(struct jit *jit , jit_tree *labels ) ;
/* END FUNCTION-DECL jit_dump_ops_combined LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN pthread_getschedparam LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:355 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_getschedparam(pthread_t  ,
                                                                                                                                 int * _Nullable __restrict   ,
                                                                                                                                 struct sched_param * _Nullable __restrict   ) ;
/* END FUNCTION-DECL-EXTERN pthread_getschedparam LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:355 */

/* BEGIN FUNCTION-DECL __builtin_ceill LOC=BUILTIN */
/* compiler builtin: 
   long double __builtin_ceill(long double  ) ;  */
/* END FUNCTION-DECL __builtin_ceill LOC=BUILTIN */

/* BEGIN STRUCT __x86_pagein_state LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:622 */
struct __x86_pagein_state {
   int __pagein_error ;
};
/* END STRUCT __x86_pagein_state LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:622 */

/* BEGIN FUNCTION-DECL __builtin_floorf16 LOC=BUILTIN */
/* compiler builtin: 
   _Float16 __builtin_floorf16(_Float16  ) ;  */
/* END FUNCTION-DECL __builtin_floorf16 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN sleep LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:481 */
extern unsigned int sleep(unsigned int  )  __asm__("_sleep")  ;
/* END FUNCTION-DECL-EXTERN sleep LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:481 */

/* BEGIN FUNCTION-DECL-EXTERN pthread_attr_setschedpolicy LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:275 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_attr_setschedpolicy(pthread_attr_t * ,
                                                                                                                                       int  ) ;
/* END FUNCTION-DECL-EXTERN pthread_attr_setschedpolicy LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:275 */

/* BEGIN FUNCTION-DECL emit_sse_neg_op LOC=UNKNOWN */
static void emit_sse_neg_op(struct jit *jit , jit_op *op , jit_value a1 , jit_value a2 ) ;
/* END FUNCTION-DECL emit_sse_neg_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_remquof128 LOC=BUILTIN */
/* compiler builtin: 
   _Float128 __builtin_remquof128(_Float128  , _Float128  , int * ) ;  */
/* END FUNCTION-DECL __builtin_remquof128 LOC=BUILTIN */

/* BEGIN UNION __anonunion_amd64_imm_buf_34291009 LOC=UNKNOWN */
union __anonunion_amd64_imm_buf_34291009 {
   size_t val ;
   unsigned char b[8] ;
};
/* END UNION __anonunion_amd64_imm_buf_34291009 LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_fabsf128 LOC=BUILTIN */
/* compiler builtin: 
   _Float128 __builtin_fabsf128(_Float128  ) ;  */
/* END FUNCTION-DECL __builtin_fabsf128 LOC=BUILTIN */

/* BEGIN STRUCT __darwin_x86_thread_full_state64 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:691 */
struct __darwin_x86_thread_full_state64 {
   struct __darwin_x86_thread_state64 __ss64 ;
   __uint64_t __ds ;
   __uint64_t __es ;
   __uint64_t __ss ;
   __uint64_t __gsbase ;
};
/* END STRUCT __darwin_x86_thread_full_state64 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:691 */

/* BEGIN STRUCT __darwin_mcontext_avx64_full LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_mcontext.h:121 */
struct __darwin_mcontext_avx64_full {
   struct __darwin_x86_exception_state64 __es ;
   struct __darwin_x86_thread_full_state64 __ss ;
   struct __darwin_x86_avx_state64 __fs ;
};
/* END STRUCT __darwin_mcontext_avx64_full LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_mcontext.h:121 */

/* BEGIN FUNCTION-DECL assign_jmp LOC=UNKNOWN */
static int assign_jmp(jit_op *op , struct jit_reg_allocator *al ) ;
/* END FUNCTION-DECL assign_jmp LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL emit_set_arg LOC=UNKNOWN */
__inline static void emit_set_arg(struct jit *jit , struct jit_out_arg *arg ) ;
/* END FUNCTION-DECL emit_set_arg LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL stack_reg_pos LOC=UNKNOWN */
__inline static int stack_reg_pos(struct jit *jit , int r ) ;
/* END FUNCTION-DECL stack_reg_pos LOC=UNKNOWN */

/* BEGIN TYPEDEF sig_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/signal.h:331 */
typedef void (*sig_t)(int  );
/* END TYPEDEF sig_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/signal.h:331 */

/* BEGIN FUNCTION-DECL __builtin_vsprintf LOC=BUILTIN */
/* compiler builtin: 
   int __builtin_vsprintf(char * , char const   * , __builtin_va_list  ) ;  */
/* END FUNCTION-DECL __builtin_vsprintf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin___strcat_chk LOC=BUILTIN */
/* compiler builtin: 
   char *__builtin___strcat_chk(char * , char const   * , unsigned long long  ) ;  */
/* END FUNCTION-DECL __builtin___strcat_chk LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN rpmatch LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:343 */
extern int rpmatch(char const   * )  __attribute__((__availability__(watchos,introduced=6.0),
__availability__(tvos,introduced=13.0), __availability__(ios,introduced=13.0), __availability__(macos,introduced=10.15))) ;
/* END FUNCTION-DECL-EXTERN rpmatch LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:343 */

/* BEGIN FUNCTION-DECL __builtin_dump_struct LOC=BUILTIN */
/* compiler builtin: 
   int __builtin_dump_struct(void const   * , void * ) ;  */
/* END FUNCTION-DECL __builtin_dump_struct LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN issetugid LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:666 */
extern int issetugid(void) ;
/* END FUNCTION-DECL-EXTERN issetugid LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:666 */

/* BEGIN FUNCTION-DECL jit_correct_float_imms LOC=UNKNOWN */
__inline static void jit_correct_float_imms(struct jit *jit ) ;
/* END FUNCTION-DECL jit_correct_float_imms LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN exchangedata LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:753 */
extern int exchangedata(char const   * , char const   * , unsigned int  )  __attribute__((__availability__(tvos,unavailable),
__availability__(watchos,unavailable))) ;
/* END FUNCTION-DECL-EXTERN exchangedata LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:753 */

/* BEGIN FUNCTION-DECL-EXTERN sysconf LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:483 */
extern long sysconf(int  ) ;
/* END FUNCTION-DECL-EXTERN sysconf LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:483 */

/* BEGIN FUNCTION-DECL rotate_left LOC=UNKNOWN */
__inline static jit_tree *rotate_left(jit_tree *h ) ;
/* END FUNCTION-DECL rotate_left LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_fma LOC=BUILTIN */
/* compiler builtin: 
   double __builtin_fma(double  , double  , double  ) ;  */
/* END FUNCTION-DECL __builtin_fma LOC=BUILTIN */

/* BEGIN VARIABLE-DECL _TIG_JD_tgVA_4_fib___t LOC=UNKNOWN */
char const   *_TIG_JD_tgVA_4_fib___t ;
/* END VARIABLE-DECL _TIG_JD_tgVA_4_fib___t LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN setdomainname LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:714 */
extern int setdomainname(char const   * , int  ) ;
/* END FUNCTION-DECL-EXTERN setdomainname LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:714 */

/* BEGIN FUNCTION-DECL __builtin_canonicalize LOC=BUILTIN */
/* compiler builtin: 
   double __builtin_canonicalize(double  ) ;  */
/* END FUNCTION-DECL __builtin_canonicalize LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_copysignl LOC=BUILTIN */
/* compiler builtin: 
   long double __builtin_copysignl(long double  , long double  ) ;  */
/* END FUNCTION-DECL __builtin_copysignl LOC=BUILTIN */

/* BEGIN FUNCTION-DECL jit_flw_initialize LOC=UNKNOWN */
__inline static void jit_flw_initialize(struct jit *jit ) ;
/* END FUNCTION-DECL jit_flw_initialize LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN calloc LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/malloc/_malloc.h:41 */
extern void *( __attribute__((__warn_unused_result__)) calloc)(size_t __count , size_t __size )  __attribute__((__alloc_size__(1,2))) ;
/* END FUNCTION-DECL-EXTERN calloc LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/malloc/_malloc.h:41 */

/* BEGIN FUNCTION-DECL jit_reg_allocator_create LOC=UNKNOWN */
struct jit_reg_allocator *jit_reg_allocator_create(void) ;
/* END FUNCTION-DECL jit_reg_allocator_create LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL sse_alu_sd_reg_safeimm LOC=UNKNOWN */
static void sse_alu_sd_reg_safeimm(struct jit *jit , jit_op *op , int op_id , int reg ,
                                   double *imm ) ;
/* END FUNCTION-DECL sse_alu_sd_reg_safeimm LOC=UNKNOWN */

/* BEGIN VARIABLE-DEF _TIG_IZ_tgVA_envp LOC=UNKNOWN */
char **_TIG_IZ_tgVA_envp  ;
/* END VARIABLE-DEF _TIG_IZ_tgVA_envp LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN pthread_mutexattr_init LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:419 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_mutexattr_init(pthread_mutexattr_t * ) ;
/* END FUNCTION-DECL-EXTERN pthread_mutexattr_init LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:419 */

/* BEGIN FUNCTION-DECL-EXTERN arc4random_stir LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:271 */
extern void arc4random_stir(void) ;
/* END FUNCTION-DECL-EXTERN arc4random_stir LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:271 */

/* BEGIN FUNCTION-DECL-EXTERN unlink LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:494 */
extern int unlink(char const   * ) ;
/* END FUNCTION-DECL-EXTERN unlink LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:494 */

/* BEGIN FUNCTION-DECL-EXTERN valloc LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/malloc/_malloc.h:45 */
extern void *valloc(size_t  )  __attribute__((__alloc_size__(1))) ;
/* END FUNCTION-DECL-EXTERN valloc LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/malloc/_malloc.h:45 */

/* BEGIN FUNCTION-DECL-EXTERN setpriority LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/resource.h:451 */
extern int setpriority(int  , id_t  , int  ) ;
/* END FUNCTION-DECL-EXTERN setpriority LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/resource.h:451 */

/* BEGIN FUNCTION-DECL-EXTERN vfprintf LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:190 */
extern int ( /* format attribute */  vfprintf)(FILE * __restrict   , char const   * __restrict   ,
                                               va_list  ) ;
/* END FUNCTION-DECL-EXTERN vfprintf LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:190 */

/* BEGIN FUNCTION-DECL-EXTERN pthread_attr_getinheritsched LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:235 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_attr_getinheritsched(pthread_attr_t const   * __restrict   ,
                                                                                                                                        int * __restrict   ) ;
/* END FUNCTION-DECL-EXTERN pthread_attr_getinheritsched LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:235 */

/* BEGIN FUNCTION-DECL jit_get_label LOC=UNKNOWN */
jit_label *jit_get_label(struct jit *jit ) ;
/* END FUNCTION-DECL jit_get_label LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL unload_reg LOC=UNKNOWN */
void unload_reg(jit_op *op , jit_hw_reg *hreg , jit_value virt_reg ) ;
/* END FUNCTION-DECL unload_reg LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN sched_get_priority_min LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread/sched.h:39 */
extern int sched_get_priority_min(int  ) ;
/* END FUNCTION-DECL-EXTERN sched_get_priority_min LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread/sched.h:39 */

/* BEGIN STRUCT __darwin_x86_cpmu_state64 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:1220 */
struct __darwin_x86_cpmu_state64 {
   __uint64_t __ctrs[16] ;
};
/* END STRUCT __darwin_x86_cpmu_state64 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:1220 */

/* BEGIN FUNCTION-DECL __builtin_cos LOC=BUILTIN */
/* compiler builtin: 
   double __builtin_cos(double  ) ;  */
/* END FUNCTION-DECL __builtin_cos LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_log LOC=BUILTIN */
/* compiler builtin: 
   double __builtin_log(double  ) ;  */
/* END FUNCTION-DECL __builtin_log LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN alloca LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/alloca.h:32 */
extern void *alloca(size_t  ) ;
/* END FUNCTION-DECL-EXTERN alloca LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/alloca.h:32 */

/* BEGIN FUNCTION-DECL-EXTERN rmdir LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:474 */
extern int rmdir(char const   * ) ;
/* END FUNCTION-DECL-EXTERN rmdir LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:474 */

/* BEGIN FUNCTION-DECL-EXTERN bcopy LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/strings.h:71 */
extern void bcopy(void const   * , void * , size_t  ) ;
/* END FUNCTION-DECL-EXTERN bcopy LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/strings.h:71 */

/* BEGIN FUNCTION-DECL-EXTERN free LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/malloc/_malloc.h:42 */
extern void free(void * ) ;
/* END FUNCTION-DECL-EXTERN free LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/malloc/_malloc.h:42 */

/* BEGIN FUNCTION-DECL-EXTERN fgetattrlist LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:749 */
extern int fgetattrlist(int  , void * , void * , size_t  , unsigned int  )  __attribute__((__availability__(macosx,introduced=10.6))) ;
/* END FUNCTION-DECL-EXTERN fgetattrlist LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:749 */

/* BEGIN FUNCTION-DECL jit_optimize_frame_ptr LOC=UNKNOWN */
void jit_optimize_frame_ptr(struct jit *jit ) ;
/* END FUNCTION-DECL jit_optimize_frame_ptr LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_va_start LOC=BUILTIN */
/* compiler builtin: 
   void __builtin_va_start(__builtin_va_list  ) ;  */
/* END FUNCTION-DECL __builtin_va_start LOC=BUILTIN */

/* BEGIN FUNCTION-DECL main LOC=UNKNOWN */
int main(int argc , char **argv , char **_TIG_IZ_tgVA_formal_envp ) ;
/* END FUNCTION-DECL main LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_sqrt LOC=BUILTIN */
/* compiler builtin: 
   double __builtin_sqrt(double  ) ;  */
/* END FUNCTION-DECL __builtin_sqrt LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN pthread_mutexattr_destroy LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:396 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_mutexattr_destroy(pthread_mutexattr_t * )  __asm__("_pthread_mutexattr_destroy")  ;
/* END FUNCTION-DECL-EXTERN pthread_mutexattr_destroy LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:396 */

/* BEGIN FUNCTION-DECL-EXTERN setbuf LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:178 */
extern void setbuf(FILE * __restrict   , char * __restrict   ) ;
/* END FUNCTION-DECL-EXTERN setbuf LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:178 */

/* BEGIN FUNCTION-DECL-EXTERN undelete LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:733 */
extern int undelete(char const   * ) ;
/* END FUNCTION-DECL-EXTERN undelete LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:733 */

/* BEGIN FUNCTION-DECL-EXTERN wctomb LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:195 */
extern int wctomb(char * , wchar_t  ) ;
/* END FUNCTION-DECL-EXTERN wctomb LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:195 */

/* BEGIN FUNCTION-DECL-EXTERN pthread_attr_getstack LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:248 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_attr_getstack(pthread_attr_t const   * __restrict   ,
                                                                                                                                 void * _Nullable  * _Nonnull __restrict   ,
                                                                                                                                 size_t * __restrict   ) ;
/* END FUNCTION-DECL-EXTERN pthread_attr_getstack LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:248 */

/* BEGIN FUNCTION-DECL-EXTERN rresvport_af LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:709 */
extern  __attribute__((__deprecated__)) int rresvport_af(int * , int  ) ;
/* END FUNCTION-DECL-EXTERN rresvport_af LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:709 */

/* BEGIN FUNCTION-DECL load_reg LOC=UNKNOWN */
void load_reg(jit_op *op , jit_hw_reg *hreg , jit_value reg ) ;
/* END FUNCTION-DECL load_reg LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN unlockpt LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:250 */
extern int unlockpt(int  ) ;
/* END FUNCTION-DECL-EXTERN unlockpt LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:250 */

/* BEGIN FUNCTION-DECL __builtin_tgammaf128 LOC=BUILTIN */
/* compiler builtin: 
   _Float128 __builtin_tgammaf128(_Float128  ) ;  */
/* END FUNCTION-DECL __builtin_tgammaf128 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL jit_op_prepend LOC=UNKNOWN */
__inline static void jit_op_prepend(jit_op *op , jit_op *prepended ) ;
/* END FUNCTION-DECL jit_op_prepend LOC=UNKNOWN */

/* BEGIN VARIABLE-DECL _TIG_iO_tgVA_2_init_tigress_1_opaque_ptr_2 LOC=UNKNOWN */
struct _TIG_iO_tgVA_2_init_tigress_1_opaqueNodeStruct *_TIG_iO_tgVA_2_init_tigress_1_opaque_ptr_2 ;
/* END VARIABLE-DECL _TIG_iO_tgVA_2_init_tigress_1_opaque_ptr_2 LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_strstr LOC=BUILTIN */
/* compiler builtin: 
   char *__builtin_strstr(char const   * , char const   * ) ;  */
/* END FUNCTION-DECL __builtin_strstr LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN pthread_kill LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:550 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_kill(pthread_t  ,
                                                                                                                        int  ) ;
/* END FUNCTION-DECL-EXTERN pthread_kill LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:550 */

/* BEGIN FUNCTION-DECL __builtin_addcll LOC=BUILTIN */
/* compiler builtin: 
   unsigned __int128 __builtin_addcll(unsigned long long const    , unsigned long long const    ,
                                      unsigned long long const    , unsigned long long * ) ;  */
/* END FUNCTION-DECL __builtin_addcll LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_cosf LOC=BUILTIN */
/* compiler builtin: 
   float __builtin_cosf(float  ) ;  */
/* END FUNCTION-DECL __builtin_cosf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN strerror_r LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:116 */
extern int strerror_r(int __errnum , char *__strerrbuf , size_t __buflen ) ;
/* END FUNCTION-DECL-EXTERN strerror_r LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:116 */

/* BEGIN FUNCTION-DECL __builtin_atanhf128 LOC=BUILTIN */
/* compiler builtin: 
   _Float128 __builtin_atanhf128(_Float128  ) ;  */
/* END FUNCTION-DECL __builtin_atanhf128 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_huge_vall LOC=BUILTIN */
/* compiler builtin: 
   long double __builtin_huge_vall(void) ;  */
/* END FUNCTION-DECL __builtin_huge_vall LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN vsscanf LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:338 */
extern int ( /* format attribute */  vsscanf)(char const   * __restrict  __str , char const   * __restrict  __format ,
                                              va_list  ) ;
/* END FUNCTION-DECL-EXTERN vsscanf LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:338 */

/* BEGIN FUNCTION-DECL __builtin_strncpy LOC=BUILTIN */
/* compiler builtin: 
   char *__builtin_strncpy(char * , char const   * , unsigned long long  ) ;  */
/* END FUNCTION-DECL __builtin_strncpy LOC=BUILTIN */

/* BEGIN FUNCTION-DECL jit_optimize_unused_assignments LOC=UNKNOWN */
void jit_optimize_unused_assignments(struct jit *jit ) ;
/* END FUNCTION-DECL jit_optimize_unused_assignments LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN getlogin LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:458 */
extern char *getlogin(void) ;
/* END FUNCTION-DECL-EXTERN getlogin LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:458 */

/* BEGIN FUNCTION-DECL __builtin_rotateright8 LOC=BUILTIN */
/* compiler builtin: 
   unsigned char __builtin_rotateright8(unsigned char  , unsigned char  ) ;  */
/* END FUNCTION-DECL __builtin_rotateright8 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL ob_append LOC=UNKNOWN */
static void ob_append(struct output_buf *ob , char *str ) ;
/* END FUNCTION-DECL ob_append LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL print_comment LOC=UNKNOWN */
void print_comment(struct output_buf *linebuf , jit_op *op ) ;
/* END FUNCTION-DECL print_comment LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN srandom LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:246 */
extern void srandom(unsigned int  ) ;
/* END FUNCTION-DECL-EXTERN srandom LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:246 */

/* BEGIN FUNCTION-DECL __builtin_csinhl LOC=BUILTIN */
/* compiler builtin: 
   _Complex long double __builtin_csinhl(_Complex long double  ) ;  */
/* END FUNCTION-DECL __builtin_csinhl LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_cargl LOC=BUILTIN */
/* compiler builtin: 
   long double __builtin_cargl(_Complex long double  ) ;  */
/* END FUNCTION-DECL __builtin_cargl LOC=BUILTIN */

/* BEGIN VARIABLE-DECL x86_cc_signed_map LOC=UNKNOWN */
static unsigned char const   x86_cc_signed_map[12] ;
/* END VARIABLE-DECL x86_cc_signed_map LOC=UNKNOWN */

/* BEGIN ENUM __anonenum_clockid_t_447627989 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:153 */
enum __anonenum_clockid_t_447627989 {
    _CLOCK_REALTIME = 0,
    _CLOCK_MONOTONIC = 6,
    _CLOCK_MONOTONIC_RAW = 4,
    _CLOCK_MONOTONIC_RAW_APPROX = 5,
    _CLOCK_UPTIME_RAW = 8,
    _CLOCK_UPTIME_RAW_APPROX = 9,
    _CLOCK_PROCESS_CPUTIME_ID = 12,
    _CLOCK_THREAD_CPUTIME_ID = 16
} ;
/* END ENUM __anonenum_clockid_t_447627989 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:153 */

/* BEGIN TYPEDEF clockid_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:153 */
typedef enum __anonenum_clockid_t_447627989 clockid_t;
/* END TYPEDEF clockid_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:153 */

/* BEGIN FUNCTION-DECL-EXTERN clock_gettime_nsec_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:182 */
extern __uint64_t __attribute__((__availability__(macosx,introduced=10.12), __availability__(ios,introduced=10.0),
__availability__(tvos,introduced=10.0), __availability__(watchos,introduced=3.0)))  clock_gettime_nsec_np(clockid_t __clock_id ) ;
/* END FUNCTION-DECL-EXTERN clock_gettime_nsec_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:182 */

/* BEGIN FUNCTION-DECL-EXTERN read LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:472 */
extern ssize_t read(int  , void * , size_t  )  __asm__("_read")  ;
/* END FUNCTION-DECL-EXTERN read LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:472 */

/* BEGIN FUNCTION-DECL emit_cond_op LOC=UNKNOWN */
static void emit_cond_op(struct jit *jit , struct jit_op *op , int amd64_cond , int imm ,
                         int sign ) ;
/* END FUNCTION-DECL emit_cond_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_log2f128 LOC=BUILTIN */
/* compiler builtin: 
   _Float128 __builtin_log2f128(_Float128  ) ;  */
/* END FUNCTION-DECL __builtin_log2f128 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN drand48 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:200 */
extern double drand48(void) ;
/* END FUNCTION-DECL-EXTERN drand48 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:200 */

/* BEGIN FUNCTION-DECL __builtin_readcyclecounter LOC=BUILTIN */
/* compiler builtin: 
   unsigned __int128 __builtin_readcyclecounter(void) ;  */
/* END FUNCTION-DECL __builtin_readcyclecounter LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_fminf16 LOC=BUILTIN */
/* compiler builtin: 
   _Float16 __builtin_fminf16(_Float16  , _Float16  ) ;  */
/* END FUNCTION-DECL __builtin_fminf16 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN lockf LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:569 */
extern int lockf(int  , int  , off_t  )  __asm__("_lockf")  ;
/* END FUNCTION-DECL-EXTERN lockf LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:569 */

/* BEGIN FUNCTION-DECL __builtin_alloca LOC=BUILTIN */
/* compiler builtin: 
   void *__builtin_alloca(unsigned long long  ) ;  */
/* END FUNCTION-DECL __builtin_alloca LOC=BUILTIN */

/* BEGIN FUNCTION-DECL compiler_based_debugger LOC=UNKNOWN */
static void compiler_based_debugger(struct jit *jit ) ;
/* END FUNCTION-DECL compiler_based_debugger LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN strtouq LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:354 */
extern unsigned long long strtouq(char const   *__str , char **__endptr , int __base ) ;
/* END FUNCTION-DECL-EXTERN strtouq LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:354 */

/* BEGIN FUNCTION-DECL-EXTERN pwrite LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:575 */
extern ssize_t pwrite(int __fd , void const   *__buf , size_t __nbyte , off_t __offset )  __asm__("_pwrite")  ;
/* END FUNCTION-DECL-EXTERN pwrite LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:575 */

/* BEGIN FUNCTION-DECL __builtin_atan2 LOC=BUILTIN */
/* compiler builtin: 
   double __builtin_atan2(double  , double  ) ;  */
/* END FUNCTION-DECL __builtin_atan2 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN memset LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:74 */
extern void *memset(void *__b , int __c , size_t __len ) ;
/* END FUNCTION-DECL-EXTERN memset LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:74 */

/* BEGIN FUNCTION-DECL-EXTERN ferror LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:145 */
extern int ferror(FILE * ) ;
/* END FUNCTION-DECL-EXTERN ferror LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:145 */

/* BEGIN FUNCTION-DECL copy_reg_to_array LOC=UNKNOWN */
static void copy_reg_to_array(jit_tree_key key , jit_tree_value value , void *target ) ;
/* END FUNCTION-DECL copy_reg_to_array LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL jit_set_to_array LOC=UNKNOWN */
__inline static void jit_set_to_array(jit_set *s , jit_value *dest ) ;
/* END FUNCTION-DECL jit_set_to_array LOC=UNKNOWN */

/* BEGIN STRUCT rusage_info_v3 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/resource.h:251 */
struct rusage_info_v3 {
   uint8_t ri_uuid[16] ;
   uint64_t ri_user_time ;
   uint64_t ri_system_time ;
   uint64_t ri_pkg_idle_wkups ;
   uint64_t ri_interrupt_wkups ;
   uint64_t ri_pageins ;
   uint64_t ri_wired_size ;
   uint64_t ri_resident_size ;
   uint64_t ri_phys_footprint ;
   uint64_t ri_proc_start_abstime ;
   uint64_t ri_proc_exit_abstime ;
   uint64_t ri_child_user_time ;
   uint64_t ri_child_system_time ;
   uint64_t ri_child_pkg_idle_wkups ;
   uint64_t ri_child_interrupt_wkups ;
   uint64_t ri_child_pageins ;
   uint64_t ri_child_elapsed_abstime ;
   uint64_t ri_diskio_bytesread ;
   uint64_t ri_diskio_byteswritten ;
   uint64_t ri_cpu_time_qos_default ;
   uint64_t ri_cpu_time_qos_maintenance ;
   uint64_t ri_cpu_time_qos_background ;
   uint64_t ri_cpu_time_qos_utility ;
   uint64_t ri_cpu_time_qos_legacy ;
   uint64_t ri_cpu_time_qos_user_initiated ;
   uint64_t ri_cpu_time_qos_user_interactive ;
   uint64_t ri_billed_system_time ;
   uint64_t ri_serviced_system_time ;
};
/* END STRUCT rusage_info_v3 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/resource.h:251 */

/* BEGIN FUNCTION-DECL-EXTERN setbuffer LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:375 */
extern void setbuffer(FILE * , char * , int  ) ;
/* END FUNCTION-DECL-EXTERN setbuffer LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:375 */

/* BEGIN FUNCTION-DECL __builtin_tanhf128 LOC=BUILTIN */
/* compiler builtin: 
   _Float128 __builtin_tanhf128(_Float128  ) ;  */
/* END FUNCTION-DECL __builtin_tanhf128 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_csinf LOC=BUILTIN */
/* compiler builtin: 
   _Complex float __builtin_csinf(_Complex float  ) ;  */
/* END FUNCTION-DECL __builtin_csinf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_trunc LOC=BUILTIN */
/* compiler builtin: 
   double __builtin_trunc(double  ) ;  */
/* END FUNCTION-DECL __builtin_trunc LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN fsctl LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:773 */
extern int fsctl(char const   * , unsigned long  , void * , unsigned int  ) ;
/* END FUNCTION-DECL-EXTERN fsctl LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:773 */

/* BEGIN FUNCTION-DECL __builtin_fmal LOC=BUILTIN */
/* compiler builtin: 
   long double __builtin_fmal(long double  , long double  , long double  ) ;  */
/* END FUNCTION-DECL __builtin_fmal LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN rcmd_af LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:706 */
extern  __attribute__((__deprecated__)) int rcmd_af(char ** , int  , char const   * ,
                                                    char const   * , char const   * ,
                                                    int * , int  ) ;
/* END FUNCTION-DECL-EXTERN rcmd_af LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:706 */

/* BEGIN FUNCTION-DECL-EXTERN strstr LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:89 */
extern char *strstr(char const   *__big , char const   *__little ) ;
/* END FUNCTION-DECL-EXTERN strstr LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:89 */

/* BEGIN FUNCTION-DECL jit_arg_layout_add LOC=UNKNOWN */
static void jit_arg_layout_add(struct jit_arg_layout *layout , int isfp , struct jit_out_arg *arg ) ;
/* END FUNCTION-DECL jit_arg_layout_add LOC=UNKNOWN */

/* BEGIN VARIABLE-DEF _TIG_VZ_tgVA_3_fib_$strings LOC=UNKNOWN */
char const   *_TIG_VZ_tgVA_3_fib_$strings  =    "fib(%i)=%i\n\000";
/* END VARIABLE-DEF _TIG_VZ_tgVA_3_fib_$strings LOC=UNKNOWN */

/* BEGIN VARIABLE-DEF _TIG_IZ_tgVA_argv LOC=UNKNOWN */
char **_TIG_IZ_tgVA_argv  ;
/* END VARIABLE-DEF _TIG_IZ_tgVA_argv LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL jit_op_first LOC=UNKNOWN */
__inline static jit_op *jit_op_first(jit_op *op ) ;
/* END FUNCTION-DECL jit_op_first LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN execv LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:444 */
extern int execv(char const   *__path , char **__argv )  __attribute__((__availability__(tvos,unavailable),
__availability__(watchos,unavailable))) ;
/* END FUNCTION-DECL-EXTERN execv LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:444 */

/* BEGIN FUNCTION-DECL-EXTERN pthread_cond_broadcast LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:293 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_cond_broadcast(pthread_cond_t * ) ;
/* END FUNCTION-DECL-EXTERN pthread_cond_broadcast LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:293 */

/* BEGIN FUNCTION-DECL-EXTERN putchar_unlocked LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:292 */
extern int putchar_unlocked(int  ) ;
/* END FUNCTION-DECL-EXTERN putchar_unlocked LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:292 */

/* BEGIN TYPEDEF int16_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_int16_t.h:30 */
typedef short int16_t;
/* END TYPEDEF int16_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_int16_t.h:30 */

/* BEGIN TYPEDEF int_fast16_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdint.h:41 */
typedef int16_t int_fast16_t;
/* END TYPEDEF int_fast16_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdint.h:41 */

/* BEGIN FUNCTION-DECL-EXTERN pthread_mutexattr_setprioceiling LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:422 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_mutexattr_setprioceiling(pthread_mutexattr_t * ,
                                                                                                                                            int  ) ;
/* END FUNCTION-DECL-EXTERN pthread_mutexattr_setprioceiling LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:422 */

/* BEGIN STRUCT __darwin_ymm_reg LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:229 */
struct __darwin_ymm_reg {
   char __ymm_reg[32] ;
};
/* END STRUCT __darwin_ymm_reg LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:229 */

/* BEGIN STRUCT __darwin_i386_avx512_state LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:364 */
struct __darwin_i386_avx512_state {
   int __fpu_reserved[2] ;
   struct __darwin_fp_control __fpu_fcw ;
   struct __darwin_fp_status __fpu_fsw ;
   __uint8_t __fpu_ftw ;
   __uint8_t __fpu_rsrv1 ;
   __uint16_t __fpu_fop ;
   __uint32_t __fpu_ip ;
   __uint16_t __fpu_cs ;
   __uint16_t __fpu_rsrv2 ;
   __uint32_t __fpu_dp ;
   __uint16_t __fpu_ds ;
   __uint16_t __fpu_rsrv3 ;
   __uint32_t __fpu_mxcsr ;
   __uint32_t __fpu_mxcsrmask ;
   struct __darwin_mmst_reg __fpu_stmm0 ;
   struct __darwin_mmst_reg __fpu_stmm1 ;
   struct __darwin_mmst_reg __fpu_stmm2 ;
   struct __darwin_mmst_reg __fpu_stmm3 ;
   struct __darwin_mmst_reg __fpu_stmm4 ;
   struct __darwin_mmst_reg __fpu_stmm5 ;
   struct __darwin_mmst_reg __fpu_stmm6 ;
   struct __darwin_mmst_reg __fpu_stmm7 ;
   struct __darwin_xmm_reg __fpu_xmm0 ;
   struct __darwin_xmm_reg __fpu_xmm1 ;
   struct __darwin_xmm_reg __fpu_xmm2 ;
   struct __darwin_xmm_reg __fpu_xmm3 ;
   struct __darwin_xmm_reg __fpu_xmm4 ;
   struct __darwin_xmm_reg __fpu_xmm5 ;
   struct __darwin_xmm_reg __fpu_xmm6 ;
   struct __darwin_xmm_reg __fpu_xmm7 ;
   char __fpu_rsrv4[224] ;
   int __fpu_reserved1 ;
   char __avx_reserved1[64] ;
   struct __darwin_xmm_reg __fpu_ymmh0 ;
   struct __darwin_xmm_reg __fpu_ymmh1 ;
   struct __darwin_xmm_reg __fpu_ymmh2 ;
   struct __darwin_xmm_reg __fpu_ymmh3 ;
   struct __darwin_xmm_reg __fpu_ymmh4 ;
   struct __darwin_xmm_reg __fpu_ymmh5 ;
   struct __darwin_xmm_reg __fpu_ymmh6 ;
   struct __darwin_xmm_reg __fpu_ymmh7 ;
   struct __darwin_opmask_reg __fpu_k0 ;
   struct __darwin_opmask_reg __fpu_k1 ;
   struct __darwin_opmask_reg __fpu_k2 ;
   struct __darwin_opmask_reg __fpu_k3 ;
   struct __darwin_opmask_reg __fpu_k4 ;
   struct __darwin_opmask_reg __fpu_k5 ;
   struct __darwin_opmask_reg __fpu_k6 ;
   struct __darwin_opmask_reg __fpu_k7 ;
   struct __darwin_ymm_reg __fpu_zmmh0 ;
   struct __darwin_ymm_reg __fpu_zmmh1 ;
   struct __darwin_ymm_reg __fpu_zmmh2 ;
   struct __darwin_ymm_reg __fpu_zmmh3 ;
   struct __darwin_ymm_reg __fpu_zmmh4 ;
   struct __darwin_ymm_reg __fpu_zmmh5 ;
   struct __darwin_ymm_reg __fpu_zmmh6 ;
   struct __darwin_ymm_reg __fpu_zmmh7 ;
};
/* END STRUCT __darwin_i386_avx512_state LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:364 */

/* BEGIN TYPEDEF __darwin_blksize_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types.h:56 */
typedef __int32_t __darwin_blksize_t;
/* END TYPEDEF __darwin_blksize_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types.h:56 */

/* BEGIN FUNCTION-DECL __builtin_sinh LOC=BUILTIN */
/* compiler builtin: 
   double __builtin_sinh(double  ) ;  */
/* END FUNCTION-DECL __builtin_sinh LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_llabs LOC=BUILTIN */
/* compiler builtin: 
   long long __builtin_llabs(long long  ) ;  */
/* END FUNCTION-DECL __builtin_llabs LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_wcsncmp LOC=BUILTIN */
/* compiler builtin: 
   int __builtin_wcsncmp(unsigned short * const   , unsigned short * const   , unsigned long long  ) ;  */
/* END FUNCTION-DECL __builtin_wcsncmp LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN pthread_mutexattr_gettype LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:411 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_mutexattr_gettype(pthread_mutexattr_t const   * __restrict   ,
                                                                                                                                     int * __restrict   ) ;
/* END FUNCTION-DECL-EXTERN pthread_mutexattr_gettype LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:411 */

/* BEGIN FUNCTION-DECL-EXTERN flsll LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/strings.h:89 */
extern int flsll(long long  )  __attribute__((__availability__(macosx,introduced=10.9))) ;
/* END FUNCTION-DECL-EXTERN flsll LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/strings.h:89 */

/* BEGIN VARIABLE-DECL-EXTERN __stdinp LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:67 */
extern FILE *__stdinp ;
/* END VARIABLE-DECL-EXTERN __stdinp LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:67 */

/* BEGIN FUNCTION-DECL __builtin_fabsf LOC=BUILTIN */
/* compiler builtin: 
   float __builtin_fabsf(float  ) ;  */
/* END FUNCTION-DECL __builtin_fabsf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN stpcpy LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:130 */
extern char *stpcpy(char *__dst , char const   *__src ) ;
/* END FUNCTION-DECL-EXTERN stpcpy LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:130 */

/* BEGIN STRUCT copy_target LOC=UNKNOWN */
struct copy_target {
   jit_value *target ;
   int index ;
};
/* END STRUCT copy_target LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL rmap_free LOC=UNKNOWN */
static void rmap_free(jit_rmap *regmap ) ;
/* END FUNCTION-DECL rmap_free LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN mktime LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:115 */
extern time_t mktime(struct tm * )  __asm__("_mktime")  ;
/* END FUNCTION-DECL-EXTERN mktime LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:115 */

/* BEGIN FUNCTION-DECL _OSSwapInt16 LOC=UNKNOWN */
__inline static __uint16_t _OSSwapInt16(__uint16_t _data ) ;
/* END FUNCTION-DECL _OSSwapInt16 LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN sethostid LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:716 */
extern void sethostid(long  ) ;
/* END FUNCTION-DECL-EXTERN sethostid LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:716 */

/* BEGIN FUNCTION-DECL-EXTERN vfork LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:602 */
extern pid_t vfork(void)  __attribute__((__availability__(tvos,unavailable), __availability__(watchos,unavailable))) ;
/* END FUNCTION-DECL-EXTERN vfork LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:602 */

/* BEGIN FUNCTION-DECL-EXTERN getlogin_r LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:608 */
extern int getlogin_r(char * , size_t  ) ;
/* END FUNCTION-DECL-EXTERN getlogin_r LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:608 */

/* BEGIN FUNCTION-DECL free_ops LOC=UNKNOWN */
static void free_ops(struct jit_op *op ) ;
/* END FUNCTION-DECL free_ops LOC=UNKNOWN */

/* BEGIN STRUCT __darwin_x86_debug_state64 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:1192 */
struct __darwin_x86_debug_state64 {
   __uint64_t __dr0 ;
   __uint64_t __dr1 ;
   __uint64_t __dr2 ;
   __uint64_t __dr3 ;
   __uint64_t __dr4 ;
   __uint64_t __dr5 ;
   __uint64_t __dr6 ;
   __uint64_t __dr7 ;
};
/* END STRUCT __darwin_x86_debug_state64 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:1192 */

/* BEGIN STRUCT jit_op LOC=UNKNOWN */
struct jit_op {
   unsigned short code ;
   unsigned char spec ;
   unsigned char arg_size ;
   unsigned char assigned ;
   unsigned char fp ;
   unsigned char in_use ;
   double flt_imm ;
   jit_value arg[3] ;
   jit_value r_arg[3] ;
   jit_value patch_addr ;
   struct jit_op *jmp_addr ;
   struct jit_op *next ;
   struct jit_op *prev ;
   struct jit_set *live_in ;
   struct jit_set *live_out ;
   struct jit_rmap *regmap ;
   int normalized_pos ;
   struct jit_tree *allocator_hints ;
   struct jit_debug_info *debug_info ;
   size_t code_offset ;
   size_t code_length ;
   void *addendum ;
};
/* END STRUCT jit_op LOC=UNKNOWN */

/* BEGIN TYPEDEF int_least8_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdint.h:29 */
typedef int8_t int_least8_t;
/* END TYPEDEF int_least8_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdint.h:29 */

/* BEGIN FUNCTION-DECL jit_tree_addall LOC=UNKNOWN */
__inline static jit_tree *jit_tree_addall(jit_tree *target , jit_tree *n ) ;
/* END FUNCTION-DECL jit_tree_addall LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN getwgroups_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:664 */
extern int getwgroups_np(int * , unsigned char * ) ;
/* END FUNCTION-DECL-EXTERN getwgroups_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:664 */

/* BEGIN FUNCTION-DECL-EXTERN fread LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:158 */
extern size_t fread(void * __restrict  __ptr , size_t __size , size_t __nitems , FILE * __restrict  __stream ) ;
/* END FUNCTION-DECL-EXTERN fread LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:158 */

/* BEGIN FUNCTION-DECL jit_expand_patches_and_labels LOC=UNKNOWN */
void jit_expand_patches_and_labels(struct jit *jit ) ;
/* END FUNCTION-DECL jit_expand_patches_and_labels LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL emit_pop_reg LOC=UNKNOWN */
static int emit_pop_reg(struct jit *jit , jit_hw_reg *r , int stack_offset ) ;
/* END FUNCTION-DECL emit_pop_reg LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL prepare_registers_for_call LOC=UNKNOWN */
static void prepare_registers_for_call(struct jit_reg_allocator *al , jit_op *op ) ;
/* END FUNCTION-DECL prepare_registers_for_call LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN abort LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:131 */
extern  __attribute__((__noreturn__)) void abort(void)  __attribute__((__cold__)) ;
/* END FUNCTION-DECL-EXTERN abort LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:131 */

/* BEGIN FUNCTION-DECL jit_set_new LOC=UNKNOWN */
__inline static jit_set *jit_set_new(void) ;
/* END FUNCTION-DECL jit_set_new LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_shufflevector LOC=BUILTIN */
/* compiler builtin: 
   void __builtin_shufflevector(...) ;  */
/* END FUNCTION-DECL __builtin_shufflevector LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_roundf16 LOC=BUILTIN */
/* compiler builtin: 
   _Float16 __builtin_roundf16(_Float16  ) ;  */
/* END FUNCTION-DECL __builtin_roundf16 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN wait4 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/wait.h:255 */
extern pid_t wait4(pid_t  , int * , int  , struct rusage * ) ;
/* END FUNCTION-DECL-EXTERN wait4 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/wait.h:255 */

/* BEGIN FUNCTION-DECL-EXTERN pthread_setugid_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:699 */
extern  __attribute__((__deprecated__("Use of per-thread security contexts is error-prone and discouraged."))) int pthread_setugid_np(uid_t  ,
                                                                                                                                      gid_t  ) ;
/* END FUNCTION-DECL-EXTERN pthread_setugid_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:699 */

/* BEGIN FUNCTION-DECL required_stack_space_for_regs LOC=UNKNOWN */
static int required_stack_space_for_regs(struct jit *jit , jit_op *op ) ;
/* END FUNCTION-DECL required_stack_space_for_regs LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN mprotect LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/mman.h:228 */
extern int mprotect(void * , size_t  , int  )  __asm__("_mprotect")  ;
/* END FUNCTION-DECL-EXTERN mprotect LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/mman.h:228 */

/* BEGIN FUNCTION-DECL print_op_bytes LOC=UNKNOWN */
__inline static void print_op_bytes(FILE *f , struct jit *jit , jit_op *op ) ;
/* END FUNCTION-DECL print_op_bytes LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL jit_set_addall LOC=UNKNOWN */
__inline static void jit_set_addall(jit_set *target , jit_set *s ) ;
/* END FUNCTION-DECL jit_set_addall LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_dwarf_cfa LOC=BUILTIN */
/* compiler builtin: 
   void *__builtin_dwarf_cfa(void) ;  */
/* END FUNCTION-DECL __builtin_dwarf_cfa LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_asinf128 LOC=BUILTIN */
/* compiler builtin: 
   _Float128 __builtin_asinf128(_Float128  ) ;  */
/* END FUNCTION-DECL __builtin_asinf128 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN tempnam LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:304 */
extern  __attribute__((__deprecated__("This function is provided for compatibility reasons only.  Due to security concerns inherent in the design of tempnam(3), it is highly recommended that you use mkstemp(3) instead."))) char __attribute__((__availability__(swift,unavailable,message="Use mkstemp(3) instead.")))  *tempnam(char const   *__dir ,
                                                                                                                                                                                                                                                                                                                                     char const   *__prefix )  __asm__("_tempnam")  ;
/* END FUNCTION-DECL-EXTERN tempnam LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:304 */

/* BEGIN STRUCT tm LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:75 */
struct tm {
   int tm_sec ;
   int tm_min ;
   int tm_hour ;
   int tm_mday ;
   int tm_mon ;
   int tm_year ;
   int tm_wday ;
   int tm_yday ;
   int tm_isdst ;
   long tm_gmtoff ;
   char *tm_zone ;
};
/* END STRUCT tm LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:75 */

/* BEGIN STRUCT sched_param LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread/sched.h:35 */
struct sched_param {
   int sched_priority ;
   char __opaque[4] ;
};
/* END STRUCT sched_param LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread/sched.h:35 */

/* BEGIN FUNCTION-DECL-EXTERN getline LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:355 */
extern ssize_t getline(char ** __restrict  __linep , size_t * __restrict  __linecapp ,
                       FILE * __restrict  __stream )  __attribute__((__availability__(macosx,introduced=10.7))) ;
/* END FUNCTION-DECL-EXTERN getline LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:355 */

/* BEGIN FUNCTION-DECL-EXTERN getsgroups_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:662 */
extern int getsgroups_np(int * , unsigned char * ) ;
/* END FUNCTION-DECL-EXTERN getsgroups_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:662 */

/* BEGIN FUNCTION-DECL jit_optimize_st_ops LOC=UNKNOWN */
void jit_optimize_st_ops(struct jit *jit ) ;
/* END FUNCTION-DECL jit_optimize_st_ops LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_modff128 LOC=BUILTIN */
/* compiler builtin: 
   _Float128 __builtin_modff128(_Float128  , _Float128 * ) ;  */
/* END FUNCTION-DECL __builtin_modff128 LOC=BUILTIN */

/* BEGIN TYPEDEF user_ulong_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/types.h:101 */
typedef u_int64_t user_ulong_t;
/* END TYPEDEF user_ulong_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/types.h:101 */

/* BEGIN FUNCTION-DECL emit_subx_op LOC=UNKNOWN */
static void emit_subx_op(struct jit *jit , struct jit_op *op , int x86_op , int imm ) ;
/* END FUNCTION-DECL emit_subx_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_stpcpy LOC=BUILTIN */
/* compiler builtin: 
   char *__builtin_stpcpy(char * , char const   * ) ;  */
/* END FUNCTION-DECL __builtin_stpcpy LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN getrusage LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/resource.h:450 */
extern int getrusage(int  , struct rusage * ) ;
/* END FUNCTION-DECL-EXTERN getrusage LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/resource.h:450 */

/* BEGIN FUNCTION-DECL-EXTERN pthread_sigmask LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:556 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_sigmask(int  ,
                                                                                                                           sigset_t const   * _Nullable   ,
                                                                                                                           sigset_t * _Nullable   )  __asm__("_pthread_sigmask")  ;
/* END FUNCTION-DECL-EXTERN pthread_sigmask LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:556 */

/* BEGIN VARIABLE-DEF _TIG_IZ_tgVA_argc LOC=UNKNOWN */
int _TIG_IZ_tgVA_argc  ;
/* END VARIABLE-DEF _TIG_IZ_tgVA_argc LOC=UNKNOWN */

/* BEGIN STRUCT jit_prepared_args LOC=UNKNOWN */
struct jit_prepared_args {
   int count ;
   int ready ;
   int gp_args ;
   int fp_args ;
   int stack_size ;
   jit_op *op ;
   int variadic ;
   struct jit_out_arg *args ;
};
/* END STRUCT jit_prepared_args LOC=UNKNOWN */

/* BEGIN STRUCT jit LOC=UNKNOWN */
struct jit {
   unsigned char *buf ;
   unsigned int buf_capacity ;
   unsigned char *ip ;
   struct jit_op *ops ;
   struct jit_op *last_op ;
   struct jit_reg_allocator *reg_al ;
   struct jit_op *current_func ;
   jit_label *labels ;
   jit_prepared_args prepared_args ;
   int push_count ;
   unsigned int optimizations ;
   struct jit_exec_mem *mmaped_buf ;
};
/* END STRUCT jit LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL make_addmuli LOC=UNKNOWN */
__inline static int make_addmuli(jit_op *op , jit_op *nextop ) ;
/* END FUNCTION-DECL make_addmuli LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_matrix_transpose LOC=BUILTIN */
/* compiler builtin: 
   void __builtin_matrix_transpose(...) ;  */
/* END FUNCTION-DECL __builtin_matrix_transpose LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN cgetent LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:283 */
extern int cgetent(char ** , char ** , char const   * ) ;
/* END FUNCTION-DECL-EXTERN cgetent LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:283 */

/* BEGIN FUNCTION-DECL jit_debug_info_new LOC=UNKNOWN */
struct jit_debug_info *jit_debug_info_new(char const   *filename , char const   *function ,
                                          int lineno ) ;
/* END FUNCTION-DECL jit_debug_info_new LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN tzset LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:121 */
extern void tzset(void) ;
/* END FUNCTION-DECL-EXTERN tzset LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:121 */

/* BEGIN FUNCTION-DECL __builtin_asinhf LOC=BUILTIN */
/* compiler builtin: 
   float __builtin_asinhf(float  ) ;  */
/* END FUNCTION-DECL __builtin_asinhf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL delete_node LOC=UNKNOWN */
static jit_tree *delete_node(jit_tree *h , jit_tree_key key , int *found ) ;
/* END FUNCTION-DECL delete_node LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_ia32_subps LOC=BUILTIN */
/* compiler builtin: 
   float __attribute__((____vector_size____(16)))  __builtin_ia32_subps(float __attribute__((____vector_size____(16)))   ,
                                                                        float __attribute__((____vector_size____(16)))   ) ;  */
/* END FUNCTION-DECL __builtin_ia32_subps LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_roundf128 LOC=BUILTIN */
/* compiler builtin: 
   _Float128 __builtin_roundf128(_Float128  ) ;  */
/* END FUNCTION-DECL __builtin_roundf128 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_frexpl LOC=BUILTIN */
/* compiler builtin: 
   long double __builtin_frexpl(long double  , int * ) ;  */
/* END FUNCTION-DECL __builtin_frexpl LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN gets LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:168 */
extern char *gets(char * ) ;
/* END FUNCTION-DECL-EXTERN gets LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:168 */

/* BEGIN FUNCTION-DECL fac LOC=UNKNOWN */
void fac(int n ) ;
/* END FUNCTION-DECL fac LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN pthread_rwlock_tryrdlock LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:452 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_rwlock_tryrdlock(pthread_rwlock_t * )  __asm__("_pthread_rwlock_tryrdlock")  ;
/* END FUNCTION-DECL-EXTERN pthread_rwlock_tryrdlock LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:452 */

/* BEGIN FUNCTION-DECL-EXTERN mkostempsat_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:692 */
extern int mkostempsat_np(int dfd , char *path , int slen , int oflags )  __attribute__((__availability__(watchos,introduced=4.0),
__availability__(tvos,introduced=11.0), __availability__(ios,introduced=11.0), __availability__(macosx,introduced=10.13))) ;
/* END FUNCTION-DECL-EXTERN mkostempsat_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:692 */

/* BEGIN FUNCTION-DECL __builtin_object_size LOC=BUILTIN */
/* compiler builtin: 
   unsigned long long __builtin_object_size(void * , int  ) ;  */
/* END FUNCTION-DECL __builtin_object_size LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_hypotf LOC=BUILTIN */
/* compiler builtin: 
   float __builtin_hypotf(float  , float  ) ;  */
/* END FUNCTION-DECL __builtin_hypotf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_huge_valf128 LOC=BUILTIN */
/* compiler builtin: 
   _Float128 __builtin_huge_valf128(void) ;  */
/* END FUNCTION-DECL __builtin_huge_valf128 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_unwind_init LOC=BUILTIN */
/* compiler builtin: 
   void __builtin_unwind_init(void) ;  */
/* END FUNCTION-DECL __builtin_unwind_init LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin___get_unsafe_stack_start LOC=BUILTIN */
/* compiler builtin: 
   void *__builtin___get_unsafe_stack_start(void) ;  */
/* END FUNCTION-DECL __builtin___get_unsafe_stack_start LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN setegid LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:624 */
extern int setegid(gid_t  ) ;
/* END FUNCTION-DECL-EXTERN setegid LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:624 */

/* BEGIN STRUCT-DECL pthread_override_s LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread/qos.h:211 */
struct pthread_override_s ;
/* END STRUCT-DECL pthread_override_s LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread/qos.h:211 */

/* BEGIN FUNCTION-DECL __builtin_tan LOC=BUILTIN */
/* compiler builtin: 
   double __builtin_tan(double  ) ;  */
/* END FUNCTION-DECL __builtin_tan LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_casinl LOC=BUILTIN */
/* compiler builtin: 
   _Complex long double __builtin_casinl(_Complex long double  ) ;  */
/* END FUNCTION-DECL __builtin_casinl LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN atoll LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:139 */
extern long long atoll(char const   * ) ;
/* END FUNCTION-DECL-EXTERN atoll LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:139 */

/* BEGIN FUNCTION-DECL-EXTERN unlinkat LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/unistd.h:212 */
extern int unlinkat(int  , char const   * , int  )  __attribute__((__availability__(macosx,introduced=10.10))) ;
/* END FUNCTION-DECL-EXTERN unlinkat LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/unistd.h:212 */

/* BEGIN FUNCTION-DECL jit_get_unused_reg_with_index LOC=UNKNOWN */
jit_hw_reg *jit_get_unused_reg_with_index(struct jit_reg_allocator *al , jit_op *op ,
                                          int fp , int index___0 ) ;
/* END FUNCTION-DECL jit_get_unused_reg_with_index LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN getattrlistbulk LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/unistd.h:187 */
extern int getattrlistbulk(int  , void * , void * , size_t  , uint64_t  )  __attribute__((__availability__(macosx,introduced=10.10))) ;
/* END FUNCTION-DECL-EXTERN getattrlistbulk LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/unistd.h:187 */

/* BEGIN TYPEDEF ldiv_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:88 */
typedef struct __anonstruct_ldiv_t_748949161 ldiv_t;
/* END TYPEDEF ldiv_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:88 */

/* BEGIN FUNCTION-DECL __builtin_fdimf128 LOC=BUILTIN */
/* compiler builtin: 
   _Float128 __builtin_fdimf128(_Float128  , _Float128  ) ;  */
/* END FUNCTION-DECL __builtin_fdimf128 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL jit_op_last LOC=UNKNOWN */
__inline static jit_op *jit_op_last(jit_op *op ) ;
/* END FUNCTION-DECL jit_op_last LOC=UNKNOWN */

/* BEGIN TYPEDEF rsize_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_rsize_t.h:31 */
typedef __darwin_size_t rsize_t;
/* END TYPEDEF rsize_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_rsize_t.h:31 */

/* BEGIN FUNCTION-DECL-EXTERN memset_s LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:145 */
extern errno_t memset_s(void *__s , rsize_t __smax , int __c , rsize_t __n )  __attribute__((__availability__(macosx,introduced=10.9))) ;
/* END FUNCTION-DECL-EXTERN memset_s LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:145 */

/* BEGIN FUNCTION-DECL __builtin___stpcpy_chk LOC=BUILTIN */
/* compiler builtin: 
   char *__builtin___stpcpy_chk(char * , char const   * , unsigned long long  ) ;  */
/* END FUNCTION-DECL __builtin___stpcpy_chk LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_next_arg LOC=BUILTIN */
/* compiler builtin: 
   __builtin_va_list __builtin_next_arg(void) ;  */
/* END FUNCTION-DECL __builtin_next_arg LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_os_log_format_buffer_size LOC=BUILTIN */
/* compiler builtin: 
   unsigned long long __builtin_os_log_format_buffer_size(char const   *  , ...) ;  */
/* END FUNCTION-DECL __builtin_os_log_format_buffer_size LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_usub_overflow LOC=BUILTIN */
/* compiler builtin: 
   _Bool __builtin_usub_overflow(unsigned int const    , unsigned int const    , unsigned int * ) ;  */
/* END FUNCTION-DECL __builtin_usub_overflow LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_annotation LOC=BUILTIN */
/* compiler builtin: 
   void __builtin_annotation(...) ;  */
/* END FUNCTION-DECL __builtin_annotation LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_erf LOC=BUILTIN */
/* compiler builtin: 
   double __builtin_erf(double  ) ;  */
/* END FUNCTION-DECL __builtin_erf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_cabsl LOC=BUILTIN */
/* compiler builtin: 
   long double __builtin_cabsl(_Complex long double  ) ;  */
/* END FUNCTION-DECL __builtin_cabsl LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_canonicalizef LOC=BUILTIN */
/* compiler builtin: 
   float __builtin_canonicalizef(float  ) ;  */
/* END FUNCTION-DECL __builtin_canonicalizef LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN sched_get_priority_max LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread/sched.h:40 */
extern int sched_get_priority_max(int  ) ;
/* END FUNCTION-DECL-EXTERN sched_get_priority_max LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread/sched.h:40 */

/* BEGIN FUNCTION-DECL emit_push_reg LOC=UNKNOWN */
static int emit_push_reg(struct jit *jit , jit_hw_reg *r , int stack_offset ) ;
/* END FUNCTION-DECL emit_push_reg LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN __darwin_check_fd_set_overflow LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_fd_def.h:54 */
extern int __darwin_check_fd_set_overflow(int  , void const   * , int  )  __attribute__((__weak_import__)) ;
/* END FUNCTION-DECL-EXTERN __darwin_check_fd_set_overflow LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_fd_def.h:54 */

/* BEGIN FUNCTION-DECL __builtin_bswap32 LOC=BUILTIN */
/* compiler builtin: 
   int __builtin_bswap32(int  ) ;  */
/* END FUNCTION-DECL __builtin_bswap32 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL emit_pop_caller_saved_regs LOC=UNKNOWN */
static int emit_pop_caller_saved_regs(struct jit *jit , jit_op *op ) ;
/* END FUNCTION-DECL emit_pop_caller_saved_regs LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_logf128 LOC=BUILTIN */
/* compiler builtin: 
   _Float128 __builtin_logf128(_Float128  ) ;  */
/* END FUNCTION-DECL __builtin_logf128 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_fmaxf LOC=BUILTIN */
/* compiler builtin: 
   float __builtin_fmaxf(float  , float  ) ;  */
/* END FUNCTION-DECL __builtin_fmaxf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN getenv LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:147 */
extern char *getenv(char const   * ) ;
/* END FUNCTION-DECL-EXTERN getenv LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:147 */

/* BEGIN FUNCTION-DECL-EXTERN pthread_join LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:362 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_join(pthread_t  ,
                                                                                                                        void * _Nullable  * _Nullable   )  __asm__("_pthread_join")  ;
/* END FUNCTION-DECL-EXTERN pthread_join LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:362 */

/* BEGIN FUNCTION-DECL jit_free LOC=UNKNOWN */
void jit_free(struct jit *jit ) ;
/* END FUNCTION-DECL jit_free LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_debugtrap LOC=BUILTIN */
/* compiler builtin: 
   void __builtin_debugtrap(void) ;  */
/* END FUNCTION-DECL __builtin_debugtrap LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN strlen LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:82 */
extern size_t strlen(char const   *__s ) ;
/* END FUNCTION-DECL-EXTERN strlen LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:82 */

/* BEGIN FUNCTION-DECL __builtin_nearbyintf LOC=BUILTIN */
/* compiler builtin: 
   float __builtin_nearbyintf(float  ) ;  */
/* END FUNCTION-DECL __builtin_nearbyintf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_stdarg_start LOC=BUILTIN */
/* compiler builtin: 
   void __builtin_stdarg_start(__builtin_va_list  ) ;  */
/* END FUNCTION-DECL __builtin_stdarg_start LOC=BUILTIN */

/* BEGIN FUNCTION-DECL stack_arg_pos LOC=UNKNOWN */
__inline static int stack_arg_pos(struct jit *jit , struct jit_func_info *info , int arg ) ;
/* END FUNCTION-DECL stack_arg_pos LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_log10f16 LOC=BUILTIN */
/* compiler builtin: 
   _Float16 __builtin_log10f16(_Float16  ) ;  */
/* END FUNCTION-DECL __builtin_log10f16 LOC=BUILTIN */

/* BEGIN TYPEDEF uint_least32_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdint.h:35 */
typedef uint32_t uint_least32_t;
/* END TYPEDEF uint_least32_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdint.h:35 */

/* BEGIN FUNCTION-DECL __builtin___get_unsafe_stack_top LOC=BUILTIN */
/* compiler builtin: 
   void *__builtin___get_unsafe_stack_top(void) ;  */
/* END FUNCTION-DECL __builtin___get_unsafe_stack_top LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_acoshf LOC=BUILTIN */
/* compiler builtin: 
   float __builtin_acoshf(float  ) ;  */
/* END FUNCTION-DECL __builtin_acoshf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL open_disasm LOC=UNKNOWN */
static FILE *open_disasm(void) ;
/* END FUNCTION-DECL open_disasm LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_catanh LOC=BUILTIN */
/* compiler builtin: 
   _Complex double __builtin_catanh(_Complex double  ) ;  */
/* END FUNCTION-DECL __builtin_catanh LOC=BUILTIN */

/* BEGIN VARIABLE-DEF x86_cc_signed_map LOC=UNKNOWN */
static unsigned char const   x86_cc_signed_map[12]  = 
  {      (unsigned char const   )0x74,      (unsigned char const   )0x75,      (unsigned char const   )0x7c,      (unsigned char const   )0x7e, 
        (unsigned char const   )0x7f,      (unsigned char const   )0x7d,      (unsigned char const   )0x78,      (unsigned char const   )0x79, 
        (unsigned char const   )0x7a,      (unsigned char const   )0x7b,      (unsigned char const   )0x70,      (unsigned char const   )0x71};
/* END VARIABLE-DEF x86_cc_signed_map LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_llroundl LOC=BUILTIN */
/* compiler builtin: 
   long long __builtin_llroundl(long double  ) ;  */
/* END FUNCTION-DECL __builtin_llroundl LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_bitreverse64 LOC=BUILTIN */
/* compiler builtin: 
   unsigned long __builtin_bitreverse64(unsigned long  ) ;  */
/* END FUNCTION-DECL __builtin_bitreverse64 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_eh_return_data_regno LOC=BUILTIN */
/* compiler builtin: 
   int __builtin_eh_return_data_regno(int  ) ;  */
/* END FUNCTION-DECL __builtin_eh_return_data_regno LOC=BUILTIN */

/* BEGIN FUNCTION-DECL rmap_assoc LOC=UNKNOWN */
static void rmap_assoc(jit_rmap *rmap , jit_value reg , jit_hw_reg *hreg ) ;
/* END FUNCTION-DECL rmap_assoc LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN mmap LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/mman.h:225 */
extern void *mmap(void * , size_t  , int  , int  , int  , off_t  )  __asm__("_mmap")  ;
/* END FUNCTION-DECL-EXTERN mmap LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/mman.h:225 */

/* BEGIN FUNCTION-DECL __builtin_sinf LOC=BUILTIN */
/* compiler builtin: 
   float __builtin_sinf(float  ) ;  */
/* END FUNCTION-DECL __builtin_sinf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_matrix_column_major_load LOC=BUILTIN */
/* compiler builtin: 
   void __builtin_matrix_column_major_load(...) ;  */
/* END FUNCTION-DECL __builtin_matrix_column_major_load LOC=BUILTIN */

/* BEGIN VARIABLE-DECL _TIG_iO_tgVA_2_init_tigress_1_opaque_ptr_1 LOC=UNKNOWN */
struct _TIG_iO_tgVA_2_init_tigress_1_opaqueNodeStruct *_TIG_iO_tgVA_2_init_tigress_1_opaque_ptr_1 ;
/* END VARIABLE-DECL _TIG_iO_tgVA_2_init_tigress_1_opaque_ptr_1 LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_init_dwarf_reg_size_table LOC=BUILTIN */
/* compiler builtin: 
   void __builtin_init_dwarf_reg_size_table(void * ) ;  */
/* END FUNCTION-DECL __builtin_init_dwarf_reg_size_table LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN difftime LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:111 */
extern double difftime(time_t  , time_t  ) ;
/* END FUNCTION-DECL-EXTERN difftime LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:111 */

/* BEGIN FUNCTION-DECL-EXTERN pthread_atfork LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:222 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_atfork(void (* _Nullable  )(void) ,
                                                                                                                          void (* _Nullable  )(void) ,
                                                                                                                          void (* _Nullable  )(void) ) ;
/* END FUNCTION-DECL-EXTERN pthread_atfork LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:222 */

/* BEGIN FUNCTION-DECL __builtin_nanf LOC=BUILTIN */
/* compiler builtin: 
   float __builtin_nanf(char const   * ) ;  */
/* END FUNCTION-DECL __builtin_nanf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN sprintf LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:180 */
extern int ( /* format attribute */  sprintf)(char * __restrict   , char const   * __restrict   
                                              , ...)  __attribute__((__availability__(swift,unavailable,message="Use snprintf instead."))) ;
/* END FUNCTION-DECL-EXTERN sprintf LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:180 */

/* BEGIN FUNCTION-DECL __builtin_modfl LOC=BUILTIN */
/* compiler builtin: 
   long double __builtin_modfl(long double  , long double * ) ;  */
/* END FUNCTION-DECL __builtin_modfl LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_frexpf128 LOC=BUILTIN */
/* compiler builtin: 
   _Float128 __builtin_frexpf128(_Float128  , int * ) ;  */
/* END FUNCTION-DECL __builtin_frexpf128 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN renameatx_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/stdio.h:47 */
extern int renameatx_np(int  , char const   * , int  , char const   * , unsigned int  )  __attribute__((__availability__(watchos,introduced=3.0),
__availability__(tvos,introduced=10.0), __availability__(ios,introduced=10.0), __availability__(macosx,introduced=10.12))) ;
/* END FUNCTION-DECL-EXTERN renameatx_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/stdio.h:47 */

/* BEGIN FUNCTION-DECL __builtin_exp2f16 LOC=BUILTIN */
/* compiler builtin: 
   _Float16 __builtin_exp2f16(_Float16  ) ;  */
/* END FUNCTION-DECL __builtin_exp2f16 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN nfssvc LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:695 */
extern int nfssvc(int  , void * ) ;
/* END FUNCTION-DECL-EXTERN nfssvc LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:695 */

/* BEGIN FUNCTION-DECL __builtin_expf LOC=BUILTIN */
/* compiler builtin: 
   float __builtin_expf(float  ) ;  */
/* END FUNCTION-DECL __builtin_expf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_ffs LOC=BUILTIN */
/* compiler builtin: 
   int __builtin_ffs(unsigned int  ) ;  */
/* END FUNCTION-DECL __builtin_ffs LOC=BUILTIN */

/* BEGIN FUNCTION-DECL emit_alu_op LOC=UNKNOWN */
static void emit_alu_op(struct jit *jit , struct jit_op *op , int x86_op , int imm ) ;
/* END FUNCTION-DECL emit_alu_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN abs LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:132 */
extern int abs(int  )  __attribute__((__const__)) ;
/* END FUNCTION-DECL-EXTERN abs LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:132 */

/* BEGIN FUNCTION-DECL-EXTERN getcwd LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:449 */
extern char *getcwd(char * , size_t  ) ;
/* END FUNCTION-DECL-EXTERN getcwd LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:449 */

/* BEGIN FUNCTION-DECL-EXTERN mbtowc LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:158 */
extern int mbtowc(wchar_t * __restrict   , char const   * __restrict   , size_t  ) ;
/* END FUNCTION-DECL-EXTERN mbtowc LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:158 */

/* BEGIN FUNCTION-DECL-EXTERN pthread_mutex_trylock LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:390 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_mutex_trylock(pthread_mutex_t * ) ;
/* END FUNCTION-DECL-EXTERN pthread_mutex_trylock LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:390 */

/* BEGIN FUNCTION-DECL-EXTERN encrypt LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:546 */
extern void encrypt(char * , int  )  __asm__("_encrypt")  ;
/* END FUNCTION-DECL-EXTERN encrypt LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:546 */

/* BEGIN FUNCTION-DECL-EXTERN labs LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:148 */
extern long labs(long  )  __attribute__((__const__)) ;
/* END FUNCTION-DECL-EXTERN labs LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:148 */

/* BEGIN FUNCTION-DECL __builtin_copysignf16 LOC=BUILTIN */
/* compiler builtin: 
   _Float16 __builtin_copysignf16(_Float16  , _Float16  ) ;  */
/* END FUNCTION-DECL __builtin_copysignf16 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN pthread_attr_setstacksize LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:287 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_attr_setstacksize(pthread_attr_t * ,
                                                                                                                                     size_t  ) ;
/* END FUNCTION-DECL-EXTERN pthread_attr_setstacksize LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:287 */

/* BEGIN FUNCTION-DECL jit_tree_insert LOC=UNKNOWN */
static jit_tree *jit_tree_insert(jit_tree *root , jit_tree_key key , jit_tree_value value ,
                                 int *found ) ;
/* END FUNCTION-DECL jit_tree_insert LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN lutimes LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/time.h:192 */
extern int lutimes(char const   * , struct timeval  const  * )  __attribute__((__availability__(macosx,introduced=10.5))) ;
/* END FUNCTION-DECL-EXTERN lutimes LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/time.h:192 */

/* BEGIN FUNCTION-DECL __builtin_tgamma LOC=BUILTIN */
/* compiler builtin: 
   double __builtin_tgamma(double  ) ;  */
/* END FUNCTION-DECL __builtin_tgamma LOC=BUILTIN */

/* BEGIN TYPEDEF int_least64_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdint.h:32 */
typedef int64_t int_least64_t;
/* END TYPEDEF int_least64_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdint.h:32 */

/* BEGIN UNION __anonunion_x86_imm_buf_876386805 LOC=UNKNOWN */
union __anonunion_x86_imm_buf_876386805 {
   int val ;
   unsigned char b[4] ;
};
/* END UNION __anonunion_x86_imm_buf_876386805 LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN rindex LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/strings.h:74 */
extern char *rindex(char const   * , int  ) ;
/* END FUNCTION-DECL-EXTERN rindex LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/strings.h:74 */

/* BEGIN FUNCTION-DECL-EXTERN memset_pattern4 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:156 */
extern void memset_pattern4(void *__b , void const   *__pattern4 , size_t __len )  __attribute__((__availability__(macosx,introduced=10.5))) ;
/* END FUNCTION-DECL-EXTERN memset_pattern4 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:156 */

/* BEGIN TYPEDEF syscall_arg_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/types.h:111 */
typedef u_int64_t syscall_arg_t;
/* END TYPEDEF syscall_arg_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/types.h:111 */

/* BEGIN FUNCTION-DECL-EXTERN cgetcap LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:281 */
extern char *cgetcap(char * , char const   * , int  ) ;
/* END FUNCTION-DECL-EXTERN cgetcap LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:281 */

/* BEGIN FUNCTION-DECL-EXTERN __vsprintf_chk LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/secure/_stdio.h:61 */
extern int __vsprintf_chk(char * __restrict   , int  , size_t  , char const   * __restrict   ,
                          va_list  ) ;
/* END FUNCTION-DECL-EXTERN __vsprintf_chk LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/secure/_stdio.h:61 */

/* BEGIN FUNCTION-DECL jit_add_prolog LOC=UNKNOWN */
jit_op *jit_add_prolog(struct jit *jit , void *func , struct jit_debug_info *debug_info ) ;
/* END FUNCTION-DECL jit_add_prolog LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN system LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:190 */
extern int __attribute__((__availability__(tvos,unavailable), __availability__(watchos,unavailable),
__availability__(ios,unavailable), __availability__(macos,introduced=10.0), __availability__(swift,unavailable,message="Use posix_spawn APIs or NSTask instead.")))  system(char const   * )  __asm__("_system")  ;
/* END FUNCTION-DECL-EXTERN system LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:190 */

/* BEGIN FUNCTION-DECL __builtin_rotateleft32 LOC=BUILTIN */
/* compiler builtin: 
   unsigned int __builtin_rotateleft32(unsigned int  , unsigned int  ) ;  */
/* END FUNCTION-DECL __builtin_rotateleft32 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_strdup LOC=BUILTIN */
/* compiler builtin: 
   char *__builtin_strdup(char const   * ) ;  */
/* END FUNCTION-DECL __builtin_strdup LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_sinhf LOC=BUILTIN */
/* compiler builtin: 
   float __builtin_sinhf(float  ) ;  */
/* END FUNCTION-DECL __builtin_sinhf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN mkostemp LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:676 */
extern int mkostemp(char *path , int oflags )  __attribute__((__availability__(watchos,introduced=3.0),
__availability__(tvos,introduced=10.0), __availability__(ios,introduced=10.0), __availability__(macosx,introduced=10.12))) ;
/* END FUNCTION-DECL-EXTERN mkostemp LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:676 */

/* BEGIN FUNCTION-DECL-EXTERN reboot LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:702 */
extern int reboot(int  ) ;
/* END FUNCTION-DECL-EXTERN reboot LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:702 */

/* BEGIN FUNCTION-DECL-EXTERN utimes LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/time.h:203 */
extern int utimes(char const   * , struct timeval  const  * ) ;
/* END FUNCTION-DECL-EXTERN utimes LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/time.h:203 */

/* BEGIN FUNCTION-DECL insert_reg_op LOC=UNKNOWN */
static void insert_reg_op(int opcode , jit_op *op , jit_value r1 , jit_value r2 ) ;
/* END FUNCTION-DECL insert_reg_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN strtof LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:166 */
extern float strtof(char const   * , char ** )  __asm__("_strtof")  ;
/* END FUNCTION-DECL-EXTERN strtof LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:166 */

/* BEGIN FUNCTION-DECL-EXTERN mkpath_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:669 */
extern int mkpath_np(char const   *path , mode_t omode )  __attribute__((__availability__(macosx,introduced=10.8))) ;
/* END FUNCTION-DECL-EXTERN mkpath_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:669 */

/* BEGIN FUNCTION-DECL-EXTERN pthread_rwlockattr_setpshared LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:474 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_rwlockattr_setpshared(pthread_rwlockattr_t * ,
                                                                                                                                         int  ) ;
/* END FUNCTION-DECL-EXTERN pthread_rwlockattr_setpshared LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:474 */

/* BEGIN FUNCTION-DECL-EXTERN fchown LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:621 */
extern int fchown(int  , uid_t  , gid_t  ) ;
/* END FUNCTION-DECL-EXTERN fchown LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:621 */

/* BEGIN FUNCTION-DECL __builtin___clear_cache LOC=BUILTIN */
/* compiler builtin: 
   void __builtin___clear_cache(void * ) ;  */
/* END FUNCTION-DECL __builtin___clear_cache LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN faccessat LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/unistd.h:207 */
extern int faccessat(int  , char const   * , int  , int  )  __attribute__((__availability__(macosx,introduced=10.10))) ;
/* END FUNCTION-DECL-EXTERN faccessat LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/unistd.h:207 */

/* BEGIN FUNCTION-DECL ob_printf LOC=UNKNOWN */
static void ob_printf(struct output_buf *ob , char const   *fmt  , ...) ;
/* END FUNCTION-DECL ob_printf LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_floorf LOC=BUILTIN */
/* compiler builtin: 
   float __builtin_floorf(float  ) ;  */
/* END FUNCTION-DECL __builtin_floorf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN pthread_mutex_setprioceiling LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:386 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_mutex_setprioceiling(pthread_mutex_t * __restrict   ,
                                                                                                                                        int  ,
                                                                                                                                        int * __restrict   ) ;
/* END FUNCTION-DECL-EXTERN pthread_mutex_setprioceiling LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:386 */

/* BEGIN FUNCTION-DECL __builtin_wmemcmp LOC=BUILTIN */
/* compiler builtin: 
   int __builtin_wmemcmp(unsigned short * const   , unsigned short * const   , unsigned long long  ) ;  */
/* END FUNCTION-DECL __builtin_wmemcmp LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN pclose LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:228 */
extern int pclose(FILE * )  __attribute__((__availability__(swift,unavailable,message="Use posix_spawn APIs or NSTask instead."))) ;
/* END FUNCTION-DECL-EXTERN pclose LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:228 */

/* BEGIN STRUCT __darwin_zmm_reg LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:245 */
struct __darwin_zmm_reg {
   char __zmm_reg[64] ;
};
/* END STRUCT __darwin_zmm_reg LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:245 */

/* BEGIN STRUCT __darwin_x86_avx512_state64 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:833 */
struct __darwin_x86_avx512_state64 {
   int __fpu_reserved[2] ;
   struct __darwin_fp_control __fpu_fcw ;
   struct __darwin_fp_status __fpu_fsw ;
   __uint8_t __fpu_ftw ;
   __uint8_t __fpu_rsrv1 ;
   __uint16_t __fpu_fop ;
   __uint32_t __fpu_ip ;
   __uint16_t __fpu_cs ;
   __uint16_t __fpu_rsrv2 ;
   __uint32_t __fpu_dp ;
   __uint16_t __fpu_ds ;
   __uint16_t __fpu_rsrv3 ;
   __uint32_t __fpu_mxcsr ;
   __uint32_t __fpu_mxcsrmask ;
   struct __darwin_mmst_reg __fpu_stmm0 ;
   struct __darwin_mmst_reg __fpu_stmm1 ;
   struct __darwin_mmst_reg __fpu_stmm2 ;
   struct __darwin_mmst_reg __fpu_stmm3 ;
   struct __darwin_mmst_reg __fpu_stmm4 ;
   struct __darwin_mmst_reg __fpu_stmm5 ;
   struct __darwin_mmst_reg __fpu_stmm6 ;
   struct __darwin_mmst_reg __fpu_stmm7 ;
   struct __darwin_xmm_reg __fpu_xmm0 ;
   struct __darwin_xmm_reg __fpu_xmm1 ;
   struct __darwin_xmm_reg __fpu_xmm2 ;
   struct __darwin_xmm_reg __fpu_xmm3 ;
   struct __darwin_xmm_reg __fpu_xmm4 ;
   struct __darwin_xmm_reg __fpu_xmm5 ;
   struct __darwin_xmm_reg __fpu_xmm6 ;
   struct __darwin_xmm_reg __fpu_xmm7 ;
   struct __darwin_xmm_reg __fpu_xmm8 ;
   struct __darwin_xmm_reg __fpu_xmm9 ;
   struct __darwin_xmm_reg __fpu_xmm10 ;
   struct __darwin_xmm_reg __fpu_xmm11 ;
   struct __darwin_xmm_reg __fpu_xmm12 ;
   struct __darwin_xmm_reg __fpu_xmm13 ;
   struct __darwin_xmm_reg __fpu_xmm14 ;
   struct __darwin_xmm_reg __fpu_xmm15 ;
   char __fpu_rsrv4[96] ;
   int __fpu_reserved1 ;
   char __avx_reserved1[64] ;
   struct __darwin_xmm_reg __fpu_ymmh0 ;
   struct __darwin_xmm_reg __fpu_ymmh1 ;
   struct __darwin_xmm_reg __fpu_ymmh2 ;
   struct __darwin_xmm_reg __fpu_ymmh3 ;
   struct __darwin_xmm_reg __fpu_ymmh4 ;
   struct __darwin_xmm_reg __fpu_ymmh5 ;
   struct __darwin_xmm_reg __fpu_ymmh6 ;
   struct __darwin_xmm_reg __fpu_ymmh7 ;
   struct __darwin_xmm_reg __fpu_ymmh8 ;
   struct __darwin_xmm_reg __fpu_ymmh9 ;
   struct __darwin_xmm_reg __fpu_ymmh10 ;
   struct __darwin_xmm_reg __fpu_ymmh11 ;
   struct __darwin_xmm_reg __fpu_ymmh12 ;
   struct __darwin_xmm_reg __fpu_ymmh13 ;
   struct __darwin_xmm_reg __fpu_ymmh14 ;
   struct __darwin_xmm_reg __fpu_ymmh15 ;
   struct __darwin_opmask_reg __fpu_k0 ;
   struct __darwin_opmask_reg __fpu_k1 ;
   struct __darwin_opmask_reg __fpu_k2 ;
   struct __darwin_opmask_reg __fpu_k3 ;
   struct __darwin_opmask_reg __fpu_k4 ;
   struct __darwin_opmask_reg __fpu_k5 ;
   struct __darwin_opmask_reg __fpu_k6 ;
   struct __darwin_opmask_reg __fpu_k7 ;
   struct __darwin_ymm_reg __fpu_zmmh0 ;
   struct __darwin_ymm_reg __fpu_zmmh1 ;
   struct __darwin_ymm_reg __fpu_zmmh2 ;
   struct __darwin_ymm_reg __fpu_zmmh3 ;
   struct __darwin_ymm_reg __fpu_zmmh4 ;
   struct __darwin_ymm_reg __fpu_zmmh5 ;
   struct __darwin_ymm_reg __fpu_zmmh6 ;
   struct __darwin_ymm_reg __fpu_zmmh7 ;
   struct __darwin_ymm_reg __fpu_zmmh8 ;
   struct __darwin_ymm_reg __fpu_zmmh9 ;
   struct __darwin_ymm_reg __fpu_zmmh10 ;
   struct __darwin_ymm_reg __fpu_zmmh11 ;
   struct __darwin_ymm_reg __fpu_zmmh12 ;
   struct __darwin_ymm_reg __fpu_zmmh13 ;
   struct __darwin_ymm_reg __fpu_zmmh14 ;
   struct __darwin_ymm_reg __fpu_zmmh15 ;
   struct __darwin_zmm_reg __fpu_zmm16 ;
   struct __darwin_zmm_reg __fpu_zmm17 ;
   struct __darwin_zmm_reg __fpu_zmm18 ;
   struct __darwin_zmm_reg __fpu_zmm19 ;
   struct __darwin_zmm_reg __fpu_zmm20 ;
   struct __darwin_zmm_reg __fpu_zmm21 ;
   struct __darwin_zmm_reg __fpu_zmm22 ;
   struct __darwin_zmm_reg __fpu_zmm23 ;
   struct __darwin_zmm_reg __fpu_zmm24 ;
   struct __darwin_zmm_reg __fpu_zmm25 ;
   struct __darwin_zmm_reg __fpu_zmm26 ;
   struct __darwin_zmm_reg __fpu_zmm27 ;
   struct __darwin_zmm_reg __fpu_zmm28 ;
   struct __darwin_zmm_reg __fpu_zmm29 ;
   struct __darwin_zmm_reg __fpu_zmm30 ;
   struct __darwin_zmm_reg __fpu_zmm31 ;
};
/* END STRUCT __darwin_x86_avx512_state64 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:833 */

/* BEGIN FUNCTION-DECL __builtin_ia32_unpckhps LOC=BUILTIN */
/* compiler builtin: 
   float __attribute__((____vector_size____(16)))  __builtin_ia32_unpckhps(float __attribute__((____vector_size____(16)))   ,
                                                                           float __attribute__((____vector_size____(16)))   ) ;  */
/* END FUNCTION-DECL __builtin_ia32_unpckhps LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN alarm LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:433 */
extern unsigned int alarm(unsigned int  ) ;
/* END FUNCTION-DECL-EXTERN alarm LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:433 */

/* BEGIN FUNCTION-DECL-EXTERN strmode LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:164 */
extern void strmode(int __mode , char *__bp ) ;
/* END FUNCTION-DECL-EXTERN strmode LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:164 */

/* BEGIN FUNCTION-DECL-EXTERN cgetustr LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:290 */
extern int cgetustr(char * , char const   * , char ** ) ;
/* END FUNCTION-DECL-EXTERN cgetustr LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:290 */

/* BEGIN FUNCTION-DECL __builtin_ccoshl LOC=BUILTIN */
/* compiler builtin: 
   _Complex long double __builtin_ccoshl(_Complex long double  ) ;  */
/* END FUNCTION-DECL __builtin_ccoshl LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN timelocal LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:137 */
extern time_t timelocal(struct tm * ) ;
/* END FUNCTION-DECL-EXTERN timelocal LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:137 */

/* BEGIN FUNCTION-DECL-EXTERN __sprintf_chk LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/secure/_stdio.h:42 */
extern int __sprintf_chk(char * __restrict   , int  , size_t  , char const   * __restrict   
                         , ...) ;
/* END FUNCTION-DECL-EXTERN __sprintf_chk LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/secure/_stdio.h:42 */

/* BEGIN FUNCTION-DECL-EXTERN ctime_r LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:126 */
extern char *ctime_r(time_t const   * , char * ) ;
/* END FUNCTION-DECL-EXTERN ctime_r LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:126 */

/* BEGIN FUNCTION-DECL __builtin_cacosf LOC=BUILTIN */
/* compiler builtin: 
   _Complex float __builtin_cacosf(_Complex float  ) ;  */
/* END FUNCTION-DECL __builtin_cacosf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_ffsll LOC=BUILTIN */
/* compiler builtin: 
   int __builtin_ffsll(unsigned long long  ) ;  */
/* END FUNCTION-DECL __builtin_ffsll LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN shm_unlink LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/mman.h:237 */
extern int shm_unlink(char const   * ) ;
/* END FUNCTION-DECL-EXTERN shm_unlink LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/mman.h:237 */

/* BEGIN TYPEDEF uint_least64_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdint.h:36 */
typedef uint64_t uint_least64_t;
/* END TYPEDEF uint_least64_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdint.h:36 */

/* BEGIN FUNCTION-DECL _cipher$_xtea_encipherBlock LOC=UNKNOWN */
void _cipher$_xtea_encipherBlock(unsigned int num_rounds , unsigned int *v , unsigned int *key ) ;
/* END FUNCTION-DECL _cipher$_xtea_encipherBlock LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN setkey LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:239 */
extern void setkey(char const   * )  __asm__("_setkey")  ;
/* END FUNCTION-DECL-EXTERN setkey LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:239 */

/* BEGIN FUNCTION-DECL __builtin_cacosl LOC=BUILTIN */
/* compiler builtin: 
   _Complex long double __builtin_cacosl(_Complex long double  ) ;  */
/* END FUNCTION-DECL __builtin_cacosl LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_conjl LOC=BUILTIN */
/* compiler builtin: 
   _Complex long double __builtin_conjl(_Complex long double  ) ;  */
/* END FUNCTION-DECL __builtin_conjl LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_powil LOC=BUILTIN */
/* compiler builtin: 
   long double __builtin_powil(long double  , int  ) ;  */
/* END FUNCTION-DECL __builtin_powil LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_sqrtl LOC=BUILTIN */
/* compiler builtin: 
   long double __builtin_sqrtl(long double  ) ;  */
/* END FUNCTION-DECL __builtin_sqrtl LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN getdelim LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:354 */
extern ssize_t getdelim(char ** __restrict  __linep , size_t * __restrict  __linecapp ,
                        int __delimiter , FILE * __restrict  __stream )  __attribute__((__availability__(macosx,introduced=10.7))) ;
/* END FUNCTION-DECL-EXTERN getdelim LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:354 */

/* BEGIN FUNCTION-DECL-EXTERN access LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:431 */
extern int access(char const   * , int  ) ;
/* END FUNCTION-DECL-EXTERN access LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:431 */

/* BEGIN FUNCTION-DECL-EXTERN gethostid LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:551 */
extern long gethostid(void) ;
/* END FUNCTION-DECL-EXTERN gethostid LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:551 */

/* BEGIN FUNCTION-DECL __builtin_lgammaf128 LOC=BUILTIN */
/* compiler builtin: 
   _Float128 __builtin_lgammaf128(_Float128  ) ;  */
/* END FUNCTION-DECL __builtin_lgammaf128 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN ftrylockfile LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:287 */
extern int ftrylockfile(FILE * ) ;
/* END FUNCTION-DECL-EXTERN ftrylockfile LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:287 */

/* BEGIN FUNCTION-DECL jit_trace LOC=UNKNOWN */
void jit_trace(struct jit *jit , int verbosity ) ;
/* END FUNCTION-DECL jit_trace LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_rotateright16 LOC=BUILTIN */
/* compiler builtin: 
   short __builtin_rotateright16(short  , short  ) ;  */
/* END FUNCTION-DECL __builtin_rotateright16 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_abs LOC=BUILTIN */
/* compiler builtin: 
   int __builtin_abs(int  ) ;  */
/* END FUNCTION-DECL __builtin_abs LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_ssubl_overflow LOC=BUILTIN */
/* compiler builtin: 
   _Bool __builtin_ssubl_overflow(long const    , long const    , long * ) ;  */
/* END FUNCTION-DECL __builtin_ssubl_overflow LOC=BUILTIN */

/* BEGIN TYPEDEF __darwin_rune_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_types.h:109 */
typedef __darwin_wchar_t __darwin_rune_t;
/* END TYPEDEF __darwin_rune_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_types.h:109 */

/* BEGIN TYPEDEF rune_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_rune_t.h:31 */
typedef __darwin_rune_t rune_t;
/* END TYPEDEF rune_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_rune_t.h:31 */

/* BEGIN FUNCTION-DECL __builtin_atanhf LOC=BUILTIN */
/* compiler builtin: 
   float __builtin_atanhf(float  ) ;  */
/* END FUNCTION-DECL __builtin_atanhf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_nansf LOC=BUILTIN */
/* compiler builtin: 
   float __builtin_nansf(char const   * ) ;  */
/* END FUNCTION-DECL __builtin_nansf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN __assert_rtn LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/assert.h:76 */
extern  __attribute__((__noreturn__)) void __assert_rtn(char const   * , char const   * ,
                                                        int  , char const   * )  __attribute__((__disable_tail_calls__,
__cold__)) ;
/* END FUNCTION-DECL-EXTERN __assert_rtn LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/assert.h:76 */

/* BEGIN FUNCTION-DECL-EXTERN fgetpos LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:148 */
extern int fgetpos(FILE * __restrict   , fpos_t * ) ;
/* END FUNCTION-DECL-EXTERN fgetpos LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:148 */

/* BEGIN FUNCTION-DECL-EXTERN getgrouplist LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:650 */
extern int getgrouplist(char const   * , int  , int * , int * ) ;
/* END FUNCTION-DECL-EXTERN getgrouplist LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:650 */

/* BEGIN FUNCTION-DECL __builtin_erfcf LOC=BUILTIN */
/* compiler builtin: 
   float __builtin_erfcf(float  ) ;  */
/* END FUNCTION-DECL __builtin_erfcf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN fgetc LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:147 */
extern int fgetc(FILE * ) ;
/* END FUNCTION-DECL-EXTERN fgetc LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:147 */

/* BEGIN FUNCTION-DECL emit_shift_op LOC=UNKNOWN */
static void emit_shift_op(struct jit *jit , struct jit_op *op , int shift_op , int imm ) ;
/* END FUNCTION-DECL emit_shift_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_ctzl LOC=BUILTIN */
/* compiler builtin: 
   int __builtin_ctzl(unsigned long  ) ;  */
/* END FUNCTION-DECL __builtin_ctzl LOC=BUILTIN */

/* BEGIN VARIABLE-DEF _TIG_iO_tgVA_2_init_tigress_1_opaque_ptr_2 LOC=UNKNOWN */
struct _TIG_iO_tgVA_2_init_tigress_1_opaqueNodeStruct *_TIG_iO_tgVA_2_init_tigress_1_opaque_ptr_2  =    (struct _TIG_iO_tgVA_2_init_tigress_1_opaqueNodeStruct *)0;
/* END VARIABLE-DEF _TIG_iO_tgVA_2_init_tigress_1_opaque_ptr_2 LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN feof LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:144 */
extern int feof(FILE * ) ;
/* END FUNCTION-DECL-EXTERN feof LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:144 */

/* BEGIN FUNCTION-DECL-EXTERN putchar LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:172 */
extern int putchar(int  ) ;
/* END FUNCTION-DECL-EXTERN putchar LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:172 */

/* BEGIN FUNCTION-DECL-EXTERN srandomdev LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:348 */
extern void srandomdev(void) ;
/* END FUNCTION-DECL-EXTERN srandomdev LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:348 */

/* BEGIN FUNCTION-DECL __builtin_catanf LOC=BUILTIN */
/* compiler builtin: 
   _Complex float __builtin_catanf(_Complex float  ) ;  */
/* END FUNCTION-DECL __builtin_catanf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin___sprintf_chk LOC=BUILTIN */
/* compiler builtin: 
   int __builtin___sprintf_chk(char * , int  , unsigned long long  , char const   * 
                               , ...) ;  */
/* END FUNCTION-DECL __builtin___sprintf_chk LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_exp2l LOC=BUILTIN */
/* compiler builtin: 
   long double __builtin_exp2l(long double  ) ;  */
/* END FUNCTION-DECL __builtin_exp2l LOC=BUILTIN */

/* BEGIN FUNCTION-DECL jit_dead_code_analysis LOC=UNKNOWN */
static void jit_dead_code_analysis(struct jit *jit , int remove_dead_code ) ;
/* END FUNCTION-DECL jit_dead_code_analysis LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN scanf LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:177 */
extern int ( /* format attribute */  scanf)(char const   * __restrict    , ...) ;
/* END FUNCTION-DECL-EXTERN scanf LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:177 */

/* BEGIN FUNCTION-DECL __builtin_asinhl LOC=BUILTIN */
/* compiler builtin: 
   long double __builtin_asinhl(long double  ) ;  */
/* END FUNCTION-DECL __builtin_asinhl LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN fsync_volume_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:779 */
extern int fsync_volume_np(int  , int  )  __attribute__((__availability__(macosx,introduced=10.8))) ;
/* END FUNCTION-DECL-EXTERN fsync_volume_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:779 */

/* BEGIN FUNCTION-DECL-EXTERN pthread_rwlock_rdlock LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:449 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_rwlock_rdlock(pthread_rwlock_t * )  __asm__("_pthread_rwlock_rdlock")  ;
/* END FUNCTION-DECL-EXTERN pthread_rwlock_rdlock LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:449 */

/* BEGIN FUNCTION-DECL rmap_sync LOC=UNKNOWN */
static void rmap_sync(jit_op *op , jit_rmap *current , jit_rmap *target , int mode ) ;
/* END FUNCTION-DECL rmap_sync LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_ldexpf LOC=BUILTIN */
/* compiler builtin: 
   float __builtin_ldexpf(float  , int  ) ;  */
/* END FUNCTION-DECL __builtin_ldexpf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_canonicalizel LOC=BUILTIN */
/* compiler builtin: 
   long double __builtin_canonicalizel(long double  ) ;  */
/* END FUNCTION-DECL __builtin_canonicalizel LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_fmin LOC=BUILTIN */
/* compiler builtin: 
   double __builtin_fmin(double  , double  ) ;  */
/* END FUNCTION-DECL __builtin_fmin LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_powf16 LOC=BUILTIN */
/* compiler builtin: 
   _Float16 __builtin_powf16(_Float16  , _Float16  ) ;  */
/* END FUNCTION-DECL __builtin_powf16 LOC=BUILTIN */

/* BEGIN STRUCT __darwin_mcontext64 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_mcontext.h:97 */
struct __darwin_mcontext64 {
   struct __darwin_x86_exception_state64 __es ;
   struct __darwin_x86_thread_state64 __ss ;
   struct __darwin_x86_float_state64 __fs ;
};
/* END STRUCT __darwin_mcontext64 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_mcontext.h:97 */

/* BEGIN FUNCTION-DECL-EXTERN puts LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:173 */
extern int puts(char const   * ) ;
/* END FUNCTION-DECL-EXTERN puts LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:173 */

/* BEGIN FUNCTION-DECL-EXTERN fflush LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:146 */
extern int fflush(FILE * ) ;
/* END FUNCTION-DECL-EXTERN fflush LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:146 */

/* BEGIN FUNCTION-DECL __builtin_addc LOC=BUILTIN */
/* compiler builtin: 
   unsigned int __builtin_addc(unsigned int const    , unsigned int const    , unsigned int const    ,
                               unsigned int * ) ;  */
/* END FUNCTION-DECL __builtin_addc LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN memcpy LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:72 */
extern void *memcpy(void *__dst , void const   *__src , size_t __n ) ;
/* END FUNCTION-DECL-EXTERN memcpy LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:72 */

/* BEGIN FUNCTION-DECL __builtin_catanhl LOC=BUILTIN */
/* compiler builtin: 
   _Complex long double __builtin_catanhl(_Complex long double  ) ;  */
/* END FUNCTION-DECL __builtin_catanhl LOC=BUILTIN */

/* BEGIN TYPEDEF intptr_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_intptr_t.h:32 */
typedef __darwin_intptr_t intptr_t;
/* END TYPEDEF intptr_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_intptr_t.h:32 */

/* BEGIN FUNCTION-DECL __builtin_asinl LOC=BUILTIN */
/* compiler builtin: 
   long double __builtin_asinl(long double  ) ;  */
/* END FUNCTION-DECL __builtin_asinl LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_usubll_overflow LOC=BUILTIN */
/* compiler builtin: 
   _Bool __builtin_usubll_overflow(unsigned long long const    , unsigned long long const    ,
                                   unsigned long long * ) ;  */
/* END FUNCTION-DECL __builtin_usubll_overflow LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN chdir LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:434 */
extern int chdir(char const   * ) ;
/* END FUNCTION-DECL-EXTERN chdir LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:434 */

/* BEGIN FUNCTION-DECL-EXTERN geteuid LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:451 */
extern uid_t geteuid(void) ;
/* END FUNCTION-DECL-EXTERN geteuid LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:451 */

/* BEGIN FUNCTION-DECL-EXTERN fmemopen LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:356 */
extern FILE *fmemopen(void * __restrict  __buf , size_t __size , char const   * __restrict  __mode )  __attribute__((__availability__(watchos,introduced=4.0),
__availability__(tvos,introduced=11.0), __availability__(ios,introduced=11.0), __availability__(macos,introduced=10.13))) ;
/* END FUNCTION-DECL-EXTERN fmemopen LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:356 */

/* BEGIN FUNCTION-DECL rmap_init LOC=UNKNOWN */
__inline static jit_rmap *rmap_init(void) ;
/* END FUNCTION-DECL rmap_init LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN syscall LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:742 */
extern int __attribute__((__availability__(macosx,deprecated=10.12,message="syscall(2) is unsupported; please switch to a supported interface. For SYS_kdebug_trace use kdebug_signpost()."),
__availability__(ios,deprecated=10.0,message="syscall(2) is unsupported; please switch to a supported interface. For SYS_kdebug_trace use kdebug_signpost()."),
__availability__(tvos,unavailable), __availability__(watchos,unavailable)))  syscall(int  
                                                                                     , ...) ;
/* END FUNCTION-DECL-EXTERN syscall LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:742 */

/* BEGIN FUNCTION-DECL __builtin_wmemcpy LOC=BUILTIN */
/* compiler builtin: 
   unsigned short *__builtin_wmemcpy(unsigned short * , unsigned short * const   ,
                                     unsigned long long  ) ;  */
/* END FUNCTION-DECL __builtin_wmemcpy LOC=BUILTIN */

/* BEGIN FUNCTION-DECL init_tigress LOC=UNKNOWN */
void init_tigress(void) ;
/* END FUNCTION-DECL init_tigress LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL emit_sse_round LOC=UNKNOWN */
static void emit_sse_round(struct jit *jit , jit_op *op , jit_value a1 , jit_value a2 ) ;
/* END FUNCTION-DECL emit_sse_round LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN clock_getres LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:175 */
extern int __attribute__((__availability__(watchos,introduced=3.0), __availability__(tvos,introduced=10.0),
__availability__(ios,introduced=10.0), __availability__(macosx,introduced=10.12)))  clock_getres(clockid_t __clock_id ,
                                                                                                 struct timespec *__res ) ;
/* END FUNCTION-DECL-EXTERN clock_getres LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:175 */

/* BEGIN STRUCT __darwin_mcontext_avx512_64_full LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_mcontext.h:138 */
struct __darwin_mcontext_avx512_64_full {
   struct __darwin_x86_exception_state64 __es ;
   struct __darwin_x86_thread_full_state64 __ss ;
   struct __darwin_x86_avx512_state64 __fs ;
};
/* END STRUCT __darwin_mcontext_avx512_64_full LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_mcontext.h:138 */

/* BEGIN FUNCTION-DECL __builtin_powf128 LOC=BUILTIN */
/* compiler builtin: 
   _Float128 __builtin_powf128(_Float128  , _Float128  ) ;  */
/* END FUNCTION-DECL __builtin_powf128 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN minherit LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/mman.h:244 */
extern int minherit(void * , size_t  , int  ) ;
/* END FUNCTION-DECL-EXTERN minherit LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/mman.h:244 */

/* BEGIN FUNCTION-DECL emit_sse_get_sign_mask LOC=UNKNOWN */
static unsigned char *emit_sse_get_sign_mask(void) ;
/* END FUNCTION-DECL emit_sse_get_sign_mask LOC=UNKNOWN */

/* BEGIN VARIABLE-DECL _TIG_JD_tgVA_4_fib_freq LOC=UNKNOWN */
int _TIG_JD_tgVA_4_fib_freq ;
/* END VARIABLE-DECL _TIG_JD_tgVA_4_fib_freq LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_parityll LOC=BUILTIN */
/* compiler builtin: 
   int __builtin_parityll(unsigned long long  ) ;  */
/* END FUNCTION-DECL __builtin_parityll LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN pthread_get_stacksize_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:524 */
extern size_t __attribute__((__availability__(macos,introduced=10.4), __availability__(ios,introduced=2.0)))  pthread_get_stacksize_np(pthread_t  ) ;
/* END FUNCTION-DECL-EXTERN pthread_get_stacksize_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:524 */

/* BEGIN FUNCTION-DECL _cipher$_xtea_encipher LOC=UNKNOWN */
void _cipher$_xtea_encipher(unsigned int block_no , unsigned int num_rounds , unsigned int *v ,
                            unsigned int *key , unsigned int size ) ;
/* END FUNCTION-DECL _cipher$_xtea_encipher LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL _OSSwapInt32 LOC=UNKNOWN */
__inline static __uint32_t _OSSwapInt32(__uint32_t _data ) ;
/* END FUNCTION-DECL _OSSwapInt32 LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN clock_gettime LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:178 */
extern int __attribute__((__availability__(watchos,introduced=3.0), __availability__(tvos,introduced=10.0),
__availability__(ios,introduced=10.0), __availability__(macosx,introduced=10.12)))  clock_gettime(clockid_t __clock_id ,
                                                                                                  struct timespec *__tp ) ;
/* END FUNCTION-DECL-EXTERN clock_gettime LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:178 */

/* BEGIN TYPEDEF __darwin_uuid_string_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types.h:78 */
typedef char __darwin_uuid_string_t[37];
/* END TYPEDEF __darwin_uuid_string_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types.h:78 */

/* BEGIN FUNCTION-DECL __builtin_expm1 LOC=BUILTIN */
/* compiler builtin: 
   double __builtin_expm1(double  ) ;  */
/* END FUNCTION-DECL __builtin_expm1 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_memmove LOC=BUILTIN */
/* compiler builtin: 
   void *__builtin_memmove(void * , void const   * , unsigned long long  ) ;  */
/* END FUNCTION-DECL __builtin_memmove LOC=BUILTIN */

/* BEGIN TYPEDEF rusage_info_current LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/resource.h:321 */
typedef struct rusage_info_v4 rusage_info_current;
/* END TYPEDEF rusage_info_current LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/resource.h:321 */

/* BEGIN FUNCTION-DECL jit_exec_mem_free LOC=UNKNOWN */
static void jit_exec_mem_free(struct jit_exec_mem *mem ) ;
/* END FUNCTION-DECL jit_exec_mem_free LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL funcall_fput_arg LOC=UNKNOWN */
__inline static void funcall_fput_arg(struct jit *jit , jit_op *op ) ;
/* END FUNCTION-DECL funcall_fput_arg LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_subcs LOC=BUILTIN */
/* compiler builtin: 
   short __builtin_subcs(unsigned short const    , unsigned short const    , unsigned short const    ,
                         unsigned short * ) ;  */
/* END FUNCTION-DECL __builtin_subcs LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN pthread_rwlock_destroy LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:441 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_rwlock_destroy(pthread_rwlock_t * )  __asm__("_pthread_rwlock_destroy")  ;
/* END FUNCTION-DECL-EXTERN pthread_rwlock_destroy LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:441 */

/* BEGIN FUNCTION-DECL jit_data_bytes LOC=UNKNOWN */
jit_op *jit_data_bytes(struct jit *jit , jit_value count , unsigned char *data ) ;
/* END FUNCTION-DECL jit_data_bytes LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_is_aligned LOC=BUILTIN */
/* compiler builtin: 
   _Bool __builtin_is_aligned(void const   * , unsigned long long  ) ;  */
/* END FUNCTION-DECL __builtin_is_aligned LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN llabs LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:152 */
extern long long llabs(long long  ) ;
/* END FUNCTION-DECL-EXTERN llabs LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:152 */

/* BEGIN STRUCT-DECL searchstate LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:770 */
struct searchstate ;
/* END STRUCT-DECL searchstate LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:770 */

/* BEGIN FUNCTION-DECL-EXTERN munmap LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/mman.h:234 */
extern int munmap(void * , size_t  )  __asm__("_munmap")  ;
/* END FUNCTION-DECL-EXTERN munmap LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/mman.h:234 */

/* BEGIN FUNCTION-DECL __builtin_tanf128 LOC=BUILTIN */
/* compiler builtin: 
   _Float128 __builtin_tanf128(_Float128  ) ;  */
/* END FUNCTION-DECL __builtin_tanf128 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN pthread_condattr_setpshared LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:328 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_condattr_setpshared(pthread_condattr_t * ,
                                                                                                                                       int  ) ;
/* END FUNCTION-DECL-EXTERN pthread_condattr_setpshared LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:328 */

/* BEGIN FUNCTION-DECL __builtin_nextafter LOC=BUILTIN */
/* compiler builtin: 
   double __builtin_nextafter(double  , double  ) ;  */
/* END FUNCTION-DECL __builtin_nextafter LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_memchr LOC=BUILTIN */
/* compiler builtin: 
   void *__builtin_memchr(void const   * , int  , unsigned long long  ) ;  */
/* END FUNCTION-DECL __builtin_memchr LOC=BUILTIN */

/* BEGIN FUNCTION-DECL emit_memset LOC=UNKNOWN */
static void emit_memset(struct jit *jit , jit_op *op , jit_value a1 , jit_value a2 ,
                        jit_value a3 , int block_size ) ;
/* END FUNCTION-DECL emit_memset LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN strncat LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:83 */
extern char *strncat(char *__s1 , char const   *__s2 , size_t __n ) ;
/* END FUNCTION-DECL-EXTERN strncat LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:83 */

/* BEGIN FUNCTION-DECL __builtin_floorl LOC=BUILTIN */
/* compiler builtin: 
   long double __builtin_floorl(long double  ) ;  */
/* END FUNCTION-DECL __builtin_floorl LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN pthread_getname_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:510 */
extern int __attribute__((__availability__(ios,introduced=3.2), __availability__(macos,introduced=10.6)))  pthread_getname_np(pthread_t  ,
                                                                                                                              char * ,
                                                                                                                              size_t  ) ;
/* END FUNCTION-DECL-EXTERN pthread_getname_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:510 */

/* BEGIN FUNCTION-DECL platform_id LOC=UNKNOWN */
static char *platform_id(void) ;
/* END FUNCTION-DECL platform_id LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_popcount LOC=BUILTIN */
/* compiler builtin: 
   int __builtin_popcount(unsigned int  ) ;  */
/* END FUNCTION-DECL __builtin_popcount LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN lldiv LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:153 */
extern lldiv_t lldiv(long long  , long long  ) ;
/* END FUNCTION-DECL-EXTERN lldiv LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:153 */

/* BEGIN FUNCTION-DECL-EXTERN pthread_mutexattr_getpshared LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:407 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_mutexattr_getpshared(pthread_mutexattr_t const   * __restrict   ,
                                                                                                                                        int * __restrict   ) ;
/* END FUNCTION-DECL-EXTERN pthread_mutexattr_getpshared LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:407 */

/* BEGIN FUNCTION-DECL __builtin_varargs_start LOC=BUILTIN */
/* compiler builtin: 
   void __builtin_varargs_start(__builtin_va_list  ) ;  */
/* END FUNCTION-DECL __builtin_varargs_start LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_catanl LOC=BUILTIN */
/* compiler builtin: 
   _Complex long double __builtin_catanl(_Complex long double  ) ;  */
/* END FUNCTION-DECL __builtin_catanl LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_powf LOC=BUILTIN */
/* compiler builtin: 
   float __builtin_powf(float  , float  ) ;  */
/* END FUNCTION-DECL __builtin_powf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL branch_adjustment LOC=UNKNOWN */
__inline static void branch_adjustment(struct jit *jit , jit_op *op ) ;
/* END FUNCTION-DECL branch_adjustment LOC=UNKNOWN */

/* BEGIN STRUCT __darwin_mcontext64_full LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_mcontext.h:105 */
struct __darwin_mcontext64_full {
   struct __darwin_x86_exception_state64 __es ;
   struct __darwin_x86_thread_full_state64 __ss ;
   struct __darwin_x86_float_state64 __fs ;
};
/* END STRUCT __darwin_mcontext64_full LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_mcontext.h:105 */

/* BEGIN STRUCT jit_debug_info LOC=UNKNOWN */
struct jit_debug_info {
   char const   *filename ;
   char const   *function ;
   int lineno ;
   int warnings ;
};
/* END STRUCT jit_debug_info LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_nexttoward LOC=BUILTIN */
/* compiler builtin: 
   double __builtin_nexttoward(double  , long double  ) ;  */
/* END FUNCTION-DECL __builtin_nexttoward LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_tanhl LOC=BUILTIN */
/* compiler builtin: 
   long double __builtin_tanhl(long double  ) ;  */
/* END FUNCTION-DECL __builtin_tanhl LOC=BUILTIN */

/* BEGIN UNION __anonunion_value_137411616 LOC=UNKNOWN */
union __anonunion_value_137411616 {
   jit_value generic ;
   double fp ;
   jit_label *label ;
};
/* END UNION __anonunion_value_137411616 LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_memset LOC=BUILTIN */
/* compiler builtin: 
   void *__builtin_memset(void * , int  , int  ) ;  */
/* END FUNCTION-DECL __builtin_memset LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_fmaf LOC=BUILTIN */
/* compiler builtin: 
   float __builtin_fmaf(float  , float  , float  ) ;  */
/* END FUNCTION-DECL __builtin_fmaf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_casinhl LOC=BUILTIN */
/* compiler builtin: 
   _Complex long double __builtin_casinhl(_Complex long double  ) ;  */
/* END FUNCTION-DECL __builtin_casinhl LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_conjf LOC=BUILTIN */
/* compiler builtin: 
   _Complex float __builtin_conjf(_Complex float  ) ;  */
/* END FUNCTION-DECL __builtin_conjf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL jit_add_fop LOC=UNKNOWN */
struct jit_op *jit_add_fop(struct jit *jit , unsigned short code , unsigned char spec ,
                           jit_value arg1 , jit_value arg2 , jit_value arg3 , double flt_imm ,
                           unsigned char arg_size , struct jit_debug_info *debug_info ) ;
/* END FUNCTION-DECL jit_add_fop LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_setjmp LOC=BUILTIN */
/* compiler builtin: 
   int __builtin_setjmp(void ** ) ;  */
/* END FUNCTION-DECL __builtin_setjmp LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN pthread_mutexattr_getprioceiling LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:399 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_mutexattr_getprioceiling(pthread_mutexattr_t const   * __restrict   ,
                                                                                                                                            int * __restrict   ) ;
/* END FUNCTION-DECL-EXTERN pthread_mutexattr_getprioceiling LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:399 */

/* BEGIN FUNCTION-DECL-EXTERN cgetset LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:288 */
extern int cgetset(char const   * ) ;
/* END FUNCTION-DECL-EXTERN cgetset LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:288 */

/* BEGIN FUNCTION-DECL __builtin___memccpy_chk LOC=BUILTIN */
/* compiler builtin: 
   void *__builtin___memccpy_chk(void * , void const   * , int  , unsigned long long  ,
                                 unsigned long long  ) ;  */
/* END FUNCTION-DECL __builtin___memccpy_chk LOC=BUILTIN */

/* BEGIN FUNCTION-DECL _OSSwapInt64 LOC=UNKNOWN */
__inline static __uint64_t _OSSwapInt64(__uint64_t _data ) ;
/* END FUNCTION-DECL _OSSwapInt64 LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN symlinkat LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/unistd.h:211 */
extern int symlinkat(char const   * , int  , char const   * )  __attribute__((__availability__(macosx,introduced=10.10))) ;
/* END FUNCTION-DECL-EXTERN symlinkat LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/unistd.h:211 */

/* BEGIN FUNCTION-DECL-EXTERN gettimeofday LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/time.h:197 */
extern int gettimeofday(struct timeval * __restrict   , void * __restrict   ) ;
/* END FUNCTION-DECL-EXTERN gettimeofday LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/time.h:197 */

/* BEGIN FUNCTION-DECL-EXTERN devname_r LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:294 */
extern char *devname_r(dev_t  , mode_t  , char *buf , int len ) ;
/* END FUNCTION-DECL-EXTERN devname_r LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:294 */

/* BEGIN FUNCTION-DECL __builtin_atan LOC=BUILTIN */
/* compiler builtin: 
   double __builtin_atan(double  ) ;  */
/* END FUNCTION-DECL __builtin_atan LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN getgid LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:452 */
extern gid_t getgid(void) ;
/* END FUNCTION-DECL-EXTERN getgid LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:452 */

/* BEGIN FUNCTION-DECL-EXTERN pthread_key_delete LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:369 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_key_delete(pthread_key_t  ) ;
/* END FUNCTION-DECL-EXTERN pthread_key_delete LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:369 */

/* BEGIN VARIABLE-DECL _TIG_iE_tgVA_1_entropy LOC=UNKNOWN */
unsigned long _TIG_iE_tgVA_1_entropy ;
/* END VARIABLE-DECL _TIG_iE_tgVA_1_entropy LOC=UNKNOWN */

/* BEGIN STRUCT jit_reg_allocator LOC=UNKNOWN */
struct jit_reg_allocator {
   int gp_reg_cnt ;
   int fp_reg_cnt ;
   int fp_reg ;
   int gp_arg_reg_cnt ;
   int fp_arg_reg_cnt ;
   jit_hw_reg *ret_reg ;
   jit_hw_reg *fpret_reg ;
   jit_hw_reg *gp_regs ;
   jit_hw_reg *fp_regs ;
   jit_hw_reg **gp_arg_regs ;
   jit_hw_reg **fp_arg_regs ;
   struct jit_func_info *current_func_info ;
};
/* END STRUCT jit_reg_allocator LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL rmap_is_associated LOC=UNKNOWN */
static jit_hw_reg *rmap_is_associated(jit_rmap *rmap , int reg_id , int fp , jit_value *virt_reg ) ;
/* END FUNCTION-DECL rmap_is_associated LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN funopen LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:384 */
extern FILE *funopen(void const   * , int (* _Nullable  )(void * , char * , int  ) ,
                     int (* _Nullable  )(void * , char const   * , int  ) , fpos_t (* _Nullable  )(void * ,
                                                                                                   fpos_t  ,
                                                                                                   int  ) ,
                     int (* _Nullable  )(void * ) ) ;
/* END FUNCTION-DECL-EXTERN funopen LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:384 */

/* BEGIN FUNCTION-DECL __builtin_hypot LOC=BUILTIN */
/* compiler builtin: 
   double __builtin_hypot(double  , double  ) ;  */
/* END FUNCTION-DECL __builtin_hypot LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN cgetstr LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:289 */
extern int cgetstr(char * , char const   * , char ** ) ;
/* END FUNCTION-DECL-EXTERN cgetstr LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:289 */

/* BEGIN FUNCTION-DECL-EXTERN strftime LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:116 */
extern size_t strftime(char * __restrict   , size_t  , char const   * __restrict   ,
                       struct tm  const  * __restrict   )  __asm__("_strftime")  ;
/* END FUNCTION-DECL-EXTERN strftime LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:116 */

/* BEGIN FUNCTION-DECL __builtin_powif LOC=BUILTIN */
/* compiler builtin: 
   float __builtin_powif(float  , int  ) ;  */
/* END FUNCTION-DECL __builtin_powif LOC=BUILTIN */

/* BEGIN STRUCT timezone LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/time.h:129 */
struct timezone {
   int tz_minuteswest ;
   int tz_dsttime ;
};
/* END STRUCT timezone LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/time.h:129 */

/* BEGIN FUNCTION-DECL __builtin_scalblnf LOC=BUILTIN */
/* compiler builtin: 
   float __builtin_scalblnf(float  , long  ) ;  */
/* END FUNCTION-DECL __builtin_scalblnf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN getbsize LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:295 */
extern char *getbsize(int * , long * ) ;
/* END FUNCTION-DECL-EXTERN getbsize LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:295 */

/* BEGIN FUNCTION-DECL-EXTERN getpgid LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:552 */
extern pid_t getpgid(pid_t  ) ;
/* END FUNCTION-DECL-EXTERN getpgid LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:552 */

/* BEGIN FUNCTION-DECL-EXTERN setruid LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:726 */
extern int setruid(uid_t  ) ;
/* END FUNCTION-DECL-EXTERN setruid LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:726 */

/* BEGIN FUNCTION-DECL-EXTERN pthread_is_threaded_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:503 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_is_threaded_np(void) ;
/* END FUNCTION-DECL-EXTERN pthread_is_threaded_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:503 */

/* BEGIN FUNCTION-DECL __builtin_longjmp LOC=BUILTIN */
/* compiler builtin: 
   void __builtin_longjmp(void ** , int  ) ;  */
/* END FUNCTION-DECL __builtin_longjmp LOC=BUILTIN */

/* BEGIN FUNCTION-DECL emit_sse_floor LOC=UNKNOWN */
static void emit_sse_floor(struct jit *jit , jit_value a1 , jit_value a2 , int floor ) ;
/* END FUNCTION-DECL emit_sse_floor LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN renameat LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/stdio.h:39 */
extern int renameat(int  , char const   * , int  , char const   * )  __attribute__((__availability__(macosx,introduced=10.10))) ;
/* END FUNCTION-DECL-EXTERN renameat LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/stdio.h:39 */

/* BEGIN FUNCTION-DECL-EXTERN getppid LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:461 */
extern pid_t getppid(void) ;
/* END FUNCTION-DECL-EXTERN getppid LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:461 */

/* BEGIN VARIABLE-DEF _TIG_iE_tgVA_1_entropy LOC=UNKNOWN */
unsigned long _TIG_iE_tgVA_1_entropy  =    9042506488591766566UL;
/* END VARIABLE-DEF _TIG_iE_tgVA_1_entropy LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_frexp LOC=BUILTIN */
/* compiler builtin: 
   double __builtin_frexp(double  , int * ) ;  */
/* END FUNCTION-DECL __builtin_frexp LOC=BUILTIN */

/* BEGIN FUNCTION-DECL print_load_op LOC=UNKNOWN */
static int print_load_op(struct jit_disasm *disasm , struct output_buf *linebuf ,
                         jit_op *op ) ;
/* END FUNCTION-DECL print_load_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_bitreverse16 LOC=BUILTIN */
/* compiler builtin: 
   short __builtin_bitreverse16(short  ) ;  */
/* END FUNCTION-DECL __builtin_bitreverse16 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_subc LOC=BUILTIN */
/* compiler builtin: 
   unsigned int __builtin_subc(unsigned int const    , unsigned int const    , unsigned int const    ,
                               unsigned int * ) ;  */
/* END FUNCTION-DECL __builtin_subc LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_sqrtf128 LOC=BUILTIN */
/* compiler builtin: 
   _Float128 __builtin_sqrtf128(_Float128  ) ;  */
/* END FUNCTION-DECL __builtin_sqrtf128 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_exp2 LOC=BUILTIN */
/* compiler builtin: 
   double __builtin_exp2(double  ) ;  */
/* END FUNCTION-DECL __builtin_exp2 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_rindex LOC=BUILTIN */
/* compiler builtin: 
   char *__builtin_rindex(char const   * , int  ) ;  */
/* END FUNCTION-DECL __builtin_rindex LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_ldexpf128 LOC=BUILTIN */
/* compiler builtin: 
   _Float128 __builtin_ldexpf128(_Float128  , int  ) ;  */
/* END FUNCTION-DECL __builtin_ldexpf128 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL rmap_sync_aux LOC=UNKNOWN */
static void rmap_sync_aux(jit_tree *current , jit_tree *target , jit_op *op , int mode ) ;
/* END FUNCTION-DECL rmap_sync_aux LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN pthread_rwlockattr_getpshared LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:467 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_rwlockattr_getpshared(pthread_rwlockattr_t const   * __restrict   ,
                                                                                                                                         int * __restrict   ) ;
/* END FUNCTION-DECL-EXTERN pthread_rwlockattr_getpshared LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:467 */

/* BEGIN FUNCTION-DECL __builtin_erff128 LOC=BUILTIN */
/* compiler builtin: 
   _Float128 __builtin_erff128(_Float128  ) ;  */
/* END FUNCTION-DECL __builtin_erff128 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN mkstemp_dprotected_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:683 */
extern int mkstemp_dprotected_np(char *path , int dpclass , int dpflags )  __attribute__((__availability__(watchos,introduced=3.0),
__availability__(tvos,introduced=10.0), __availability__(ios,introduced=10.0), __availability__(macosx,unavailable))) ;
/* END FUNCTION-DECL-EXTERN mkstemp_dprotected_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:683 */

/* BEGIN FUNCTION-DECL __builtin_cprojl LOC=BUILTIN */
/* compiler builtin: 
   _Complex long double __builtin_cprojl(_Complex long double  ) ;  */
/* END FUNCTION-DECL __builtin_cprojl LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN strtoul LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:175 */
extern unsigned long strtoul(char const   *__str , char **__endptr , int __base ) ;
/* END FUNCTION-DECL-EXTERN strtoul LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:175 */

/* BEGIN FUNCTION-DECL-EXTERN strcoll LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:78 */
extern int strcoll(char const   *__s1 , char const   *__s2 ) ;
/* END FUNCTION-DECL-EXTERN strcoll LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:78 */

/* BEGIN FUNCTION-DECL-EXTERN popen LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:232 */
extern FILE *popen(char const   * , char const   * )  __asm__("_popen") __attribute__((__availability__(swift,unavailable,message="Use posix_spawn APIs or NSTask instead."))) ;
/* END FUNCTION-DECL-EXTERN popen LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:232 */

/* BEGIN FUNCTION-DECL __builtin_exp LOC=BUILTIN */
/* compiler builtin: 
   double __builtin_exp(double  ) ;  */
/* END FUNCTION-DECL __builtin_exp LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN mktemp LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:216 */
extern char *mktemp(char * ) ;
/* END FUNCTION-DECL-EXTERN mktemp LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:216 */

/* BEGIN FUNCTION-DECL print_str LOC=UNKNOWN */
__inline static void print_str(struct output_buf *buf , char *str ) ;
/* END FUNCTION-DECL print_str LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN nrand48 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:219 */
extern long nrand48(unsigned short * )  __attribute__((__availability__(swift,unavailable,message="Use arc4random instead."))) ;
/* END FUNCTION-DECL-EXTERN nrand48 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:219 */

/* BEGIN FUNCTION-DECL __builtin_cimagl LOC=BUILTIN */
/* compiler builtin: 
   long double __builtin_cimagl(_Complex long double  ) ;  */
/* END FUNCTION-DECL __builtin_cimagl LOC=BUILTIN */

/* BEGIN VARIABLE-DECL x86_cc_unsigned_map LOC=UNKNOWN */
static unsigned char const   x86_cc_unsigned_map[12] ;
/* END VARIABLE-DECL x86_cc_unsigned_map LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL print_reg_liveness_callback LOC=UNKNOWN */
static void print_reg_liveness_callback(jit_tree_key key , jit_tree_value value ,
                                        void *disasm ) ;
/* END FUNCTION-DECL print_reg_liveness_callback LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL uses_hw_reg LOC=UNKNOWN */
static int uses_hw_reg(struct jit_op *op , jit_value reg , int fp ) ;
/* END FUNCTION-DECL uses_hw_reg LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_umull_overflow LOC=BUILTIN */
/* compiler builtin: 
   _Bool __builtin_umull_overflow(unsigned long const    , unsigned long const    ,
                                  unsigned long * ) ;  */
/* END FUNCTION-DECL __builtin_umull_overflow LOC=BUILTIN */

/* BEGIN FUNCTION-DECL jit_tree_free LOC=UNKNOWN */
static void jit_tree_free(jit_tree *h ) ;
/* END FUNCTION-DECL jit_tree_free LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL rmap_equal LOC=UNKNOWN */
static int rmap_equal(jit_op *op , jit_rmap *current , jit_rmap *target ) ;
/* END FUNCTION-DECL rmap_equal LOC=UNKNOWN */

/* BEGIN TYPEDEF __darwin_socklen_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_types.h:118 */
typedef __uint32_t __darwin_socklen_t;
/* END TYPEDEF __darwin_socklen_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_types.h:118 */

/* BEGIN FUNCTION-DECL emit_ureg LOC=UNKNOWN */
static void emit_ureg(struct jit *jit , jit_value vreg , int hreg_id ) ;
/* END FUNCTION-DECL emit_ureg LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL stack_fparg_pos LOC=UNKNOWN */
__inline static int stack_fparg_pos(struct jit *jit , struct jit_func_info *info ,
                                    int arg ) ;
/* END FUNCTION-DECL stack_fparg_pos LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_signbitl LOC=BUILTIN */
/* compiler builtin: 
   int __builtin_signbitl(long double  ) ;  */
/* END FUNCTION-DECL __builtin_signbitl LOC=BUILTIN */

/* BEGIN FUNCTION-DECL emit_restore_all_regs LOC=UNKNOWN */
static void emit_restore_all_regs(struct jit *jit , jit_op *op ) ;
/* END FUNCTION-DECL emit_restore_all_regs LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL jit_is_label LOC=UNKNOWN */
__inline static int jit_is_label(struct jit *jit , void *ptr ) ;
/* END FUNCTION-DECL jit_is_label LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_malloc LOC=BUILTIN */
/* compiler builtin: 
   void *__builtin_malloc(unsigned long long  ) ;  */
/* END FUNCTION-DECL __builtin_malloc LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_asinhf128 LOC=BUILTIN */
/* compiler builtin: 
   _Float128 __builtin_asinhf128(_Float128  ) ;  */
/* END FUNCTION-DECL __builtin_asinhf128 LOC=BUILTIN */

/* BEGIN VARIABLE-DECL-EXTERN __stdoutp LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:68 */
extern FILE *__stdoutp ;
/* END VARIABLE-DECL-EXTERN __stdoutp LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:68 */

/* BEGIN TYPEDEF sig_atomic_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/signal.h:39 */
typedef int sig_atomic_t;
/* END TYPEDEF sig_atomic_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/signal.h:39 */

/* BEGIN FUNCTION-DECL __builtin_bswap16 LOC=BUILTIN */
/* compiler builtin: 
   short __builtin_bswap16(short  ) ;  */
/* END FUNCTION-DECL __builtin_bswap16 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL jit_generate_code LOC=UNKNOWN */
void jit_generate_code(struct jit *jit ) ;
/* END FUNCTION-DECL jit_generate_code LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin___fprintf_chk LOC=BUILTIN */
/* compiler builtin: 
   int __builtin___fprintf_chk(void * , int  , char const   *  , ...) ;  */
/* END FUNCTION-DECL __builtin___fprintf_chk LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN memset_pattern8 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:157 */
extern void memset_pattern8(void *__b , void const   *__pattern8 , size_t __len )  __attribute__((__availability__(macosx,introduced=10.5))) ;
/* END FUNCTION-DECL-EXTERN memset_pattern8 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:157 */

/* BEGIN FUNCTION-DECL __builtin_isnormal LOC=BUILTIN */
/* compiler builtin: 
   int __builtin_isnormal(...) ;  */
/* END FUNCTION-DECL __builtin_isnormal LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN _Exit LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:198 */
extern  __attribute__((__noreturn__)) void _Exit(int  ) ;
/* END FUNCTION-DECL-EXTERN _Exit LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:198 */

/* BEGIN FUNCTION-DECL-EXTERN write LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:496 */
extern ssize_t write(int __fd , void const   *__buf , size_t __nbyte )  __asm__("_write")  ;
/* END FUNCTION-DECL-EXTERN write LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:496 */

/* BEGIN TYPEDEF uuid_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_uuid_t.h:31 */
typedef __darwin_uuid_t uuid_t;
/* END TYPEDEF uuid_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_uuid_t.h:31 */

/* BEGIN FUNCTION-DECL-EXTERN sethostname LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:717 */
extern int sethostname(char const   * , int  ) ;
/* END FUNCTION-DECL-EXTERN sethostname LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:717 */

/* BEGIN FUNCTION-DECL __builtin_cacos LOC=BUILTIN */
/* compiler builtin: 
   _Complex double __builtin_cacos(_Complex double  ) ;  */
/* END FUNCTION-DECL __builtin_cacos LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_sub_overflow LOC=BUILTIN */
/* compiler builtin: 
   _Bool __builtin_sub_overflow(...) ;  */
/* END FUNCTION-DECL __builtin_sub_overflow LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN strsignal LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:134 */
extern char *strsignal(int __sig ) ;
/* END FUNCTION-DECL-EXTERN strsignal LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:134 */

/* BEGIN FUNCTION-DECL-EXTERN srand48 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:244 */
extern void srand48(long  ) ;
/* END FUNCTION-DECL-EXTERN srand48 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:244 */

/* BEGIN FUNCTION-DECL-EXTERN pthread_once LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:438 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4),
__availability__(swift,unavailable,message="Use lazily initialized globals instead")))  pthread_once(pthread_once_t * ,
                                                                                                     void (* _Nonnull  )(void) ) ;
/* END FUNCTION-DECL-EXTERN pthread_once LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:438 */

/* BEGIN FUNCTION-DECL __builtin_llroundf128 LOC=BUILTIN */
/* compiler builtin: 
   long long __builtin_llroundf128(_Float128  ) ;  */
/* END FUNCTION-DECL __builtin_llroundf128 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL print_arg LOC=UNKNOWN */
__inline static void print_arg(struct jit_disasm *disasm , struct output_buf *buf ,
                               struct jit_op *op , int arg ) ;
/* END FUNCTION-DECL print_arg LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_powi LOC=BUILTIN */
/* compiler builtin: 
   double __builtin_powi(double  , int  ) ;  */
/* END FUNCTION-DECL __builtin_powi LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN initgroups LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:665 */
extern int initgroups(char const   * , int  ) ;
/* END FUNCTION-DECL-EXTERN initgroups LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:665 */

/* BEGIN FUNCTION-DECL __builtin_log2l LOC=BUILTIN */
/* compiler builtin: 
   long double __builtin_log2l(long double  ) ;  */
/* END FUNCTION-DECL __builtin_log2l LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_ilogb LOC=BUILTIN */
/* compiler builtin: 
   int __builtin_ilogb(double  ) ;  */
/* END FUNCTION-DECL __builtin_ilogb LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN ttyname LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:486 */
extern char *ttyname(int  ) ;
/* END FUNCTION-DECL-EXTERN ttyname LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:486 */

/* BEGIN FUNCTION-DECL __builtin_expect LOC=BUILTIN */
/* compiler builtin: 
   long __builtin_expect(long  , long  ) ;  */
/* END FUNCTION-DECL __builtin_expect LOC=BUILTIN */

/* BEGIN VARIABLE-DEF _TIG_iO_tgVA_2_init_tigress_1__opaque_array LOC=UNKNOWN */
unsigned int _TIG_iO_tgVA_2_init_tigress_1__opaque_array[30]  = 
  {      8,      362,      3,      493, 
        432,      5,      303,      390, 
        5,      383,      5,      7, 
        133,      47,      1,      288, 
        502,      95,      218,      628, 
        22,      428,      656,      41, 
        68,      201,      34,      403, 
        698};
/* END VARIABLE-DEF _TIG_iO_tgVA_2_init_tigress_1__opaque_array LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN rresvport LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:708 */
extern  __attribute__((__deprecated__)) int rresvport(int * ) ;
/* END FUNCTION-DECL-EXTERN rresvport LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:708 */

/* BEGIN VARIABLE-DECL-EXTERN sys_nerr LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:367 */
extern int const   sys_nerr ;
/* END VARIABLE-DECL-EXTERN sys_nerr LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:367 */

/* BEGIN TYPEDEF uintmax_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/_types/_uintmax_t.h:32 */
typedef unsigned long uintmax_t;
/* END TYPEDEF uintmax_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/_types/_uintmax_t.h:32 */

/* BEGIN FUNCTION-DECL-EXTERN time2posix LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:136 */
extern time_t time2posix(time_t  ) ;
/* END FUNCTION-DECL-EXTERN time2posix LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:136 */

/* BEGIN FUNCTION-DECL __builtin_coshf128 LOC=BUILTIN */
/* compiler builtin: 
   _Float128 __builtin_coshf128(_Float128  ) ;  */
/* END FUNCTION-DECL __builtin_coshf128 LOC=BUILTIN */

/* BEGIN VARIABLE-DECL _TIG_iO_tgVA_2_init_tigress_1__opaque_array LOC=UNKNOWN */
unsigned int _TIG_iO_tgVA_2_init_tigress_1__opaque_array[30] ;
/* END VARIABLE-DECL _TIG_iO_tgVA_2_init_tigress_1__opaque_array LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_va_arg_pack_len LOC=BUILTIN */
/* compiler builtin: 
   int __builtin_va_arg_pack_len(void) ;  */
/* END FUNCTION-DECL __builtin_va_arg_pack_len LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_dwarf_sp_column LOC=BUILTIN */
/* compiler builtin: 
   unsigned int __builtin_dwarf_sp_column(void) ;  */
/* END FUNCTION-DECL __builtin_dwarf_sp_column LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN linkat LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/unistd.h:209 */
extern int linkat(int  , char const   * , int  , char const   * , int  )  __attribute__((__availability__(macosx,introduced=10.10))) ;
/* END FUNCTION-DECL-EXTERN linkat LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/unistd.h:209 */

/* BEGIN FUNCTION-DECL __builtin_uaddl_overflow LOC=BUILTIN */
/* compiler builtin: 
   _Bool __builtin_uaddl_overflow(unsigned long const    , unsigned long const    ,
                                  unsigned long * ) ;  */
/* END FUNCTION-DECL __builtin_uaddl_overflow LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_ilogbf128 LOC=BUILTIN */
/* compiler builtin: 
   int __builtin_ilogbf128(_Float128  ) ;  */
/* END FUNCTION-DECL __builtin_ilogbf128 LOC=BUILTIN */

/* BEGIN TYPEDEF __darwin_fp_control_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:117 */
typedef struct __darwin_fp_control __darwin_fp_control_t;
/* END TYPEDEF __darwin_fp_control_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:117 */

/* BEGIN FUNCTION-DECL __builtin_ccoshf LOC=BUILTIN */
/* compiler builtin: 
   _Complex float __builtin_ccoshf(_Complex float  ) ;  */
/* END FUNCTION-DECL __builtin_ccoshf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN fputc LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:156 */
extern int fputc(int  , FILE * ) ;
/* END FUNCTION-DECL-EXTERN fputc LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:156 */

/* BEGIN FUNCTION-DECL __builtin_assume LOC=BUILTIN */
/* compiler builtin: 
   void __builtin_assume(_Bool  ) ;  */
/* END FUNCTION-DECL __builtin_assume LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_cargf LOC=BUILTIN */
/* compiler builtin: 
   float __builtin_cargf(_Complex float  ) ;  */
/* END FUNCTION-DECL __builtin_cargf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN symlink LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:626 */
extern int symlink(char const   * , char const   * ) ;
/* END FUNCTION-DECL-EXTERN symlink LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:626 */

/* BEGIN FUNCTION-DECL __builtin___printf_chk LOC=BUILTIN */
/* compiler builtin: 
   int __builtin___printf_chk(int  , char const   *  , ...) ;  */
/* END FUNCTION-DECL __builtin___printf_chk LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN psort LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:323 */
extern void psort(void *__base , size_t __nel , size_t __width , int (* _Nonnull  __compar)(void const   * ,
                                                                                            void const   * ) )  __attribute__((__availability__(macosx,introduced=10.6))) ;
/* END FUNCTION-DECL-EXTERN psort LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:323 */

/* BEGIN FUNCTION-DECL __builtin_cosf128 LOC=BUILTIN */
/* compiler builtin: 
   _Float128 __builtin_cosf128(_Float128  ) ;  */
/* END FUNCTION-DECL __builtin_cosf128 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL jit_set_add LOC=UNKNOWN */
__inline static void jit_set_add(jit_set *s , int value ) ;
/* END FUNCTION-DECL jit_set_add LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN setattrlistat LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/unistd.h:189 */
extern int setattrlistat(int  , char const   * , void * , void * , size_t  , uint32_t  )  __attribute__((__availability__(watchos,introduced=4.0),
__availability__(tvos,introduced=11.0), __availability__(ios,introduced=11.0), __availability__(macosx,introduced=10.13))) ;
/* END FUNCTION-DECL-EXTERN setattrlistat LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/unistd.h:189 */

/* BEGIN FUNCTION-DECL __builtin_logbl LOC=BUILTIN */
/* compiler builtin: 
   long double __builtin_logbl(long double  ) ;  */
/* END FUNCTION-DECL __builtin_logbl LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_acosl LOC=BUILTIN */
/* compiler builtin: 
   long double __builtin_acosl(long double  ) ;  */
/* END FUNCTION-DECL __builtin_acosl LOC=BUILTIN */

/* BEGIN STRUCT accessx_descriptor LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/unistd.h:132 */
struct accessx_descriptor {
   unsigned int ad_name_offset ;
   int ad_flags ;
   int ad_pad[2] ;
};
/* END STRUCT accessx_descriptor LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/unistd.h:132 */

/* BEGIN FUNCTION-DECL __builtin_sinhf128 LOC=BUILTIN */
/* compiler builtin: 
   _Float128 __builtin_sinhf128(_Float128  ) ;  */
/* END FUNCTION-DECL __builtin_sinhf128 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN qsort_r LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:339 */
extern void qsort_r(void *__base , size_t __nel , size_t __width , void * , int (* _Nonnull  __compar)(void * ,
                                                                                                       void const   * ,
                                                                                                       void const   * ) ) ;
/* END FUNCTION-DECL-EXTERN qsort_r LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:339 */

/* BEGIN FUNCTION-DECL-EXTERN getpagesize LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:558 */
extern int getpagesize(void)  __attribute__((__const__)) ;
/* END FUNCTION-DECL-EXTERN getpagesize LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:558 */

/* BEGIN FUNCTION-DECL __builtin_types_compatible_p LOC=BUILTIN */
/* compiler builtin: 
   int __builtin_types_compatible_p(unsigned long long  , unsigned long long  ) ;  */
/* END FUNCTION-DECL __builtin_types_compatible_p LOC=BUILTIN */

/* BEGIN FUNCTION-DECL jit_op_is_cflow LOC=UNKNOWN */
__inline static int jit_op_is_cflow(jit_op *op ) ;
/* END FUNCTION-DECL jit_op_is_cflow LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN pthread_mutexattr_setpshared LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:428 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_mutexattr_setpshared(pthread_mutexattr_t * ,
                                                                                                                                        int  ) ;
/* END FUNCTION-DECL-EXTERN pthread_mutexattr_setpshared LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:428 */

/* BEGIN FUNCTION-DECL-EXTERN add_profil LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:645 */
extern int add_profil(char * , size_t  , unsigned long  , unsigned int  )  __attribute__((__availability__(tvos,unavailable),
__availability__(watchos,unavailable))) ;
/* END FUNCTION-DECL-EXTERN add_profil LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:645 */

/* BEGIN FUNCTION-DECL-EXTERN pthread_attr_setstack LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:281 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_attr_setstack(pthread_attr_t * ,
                                                                                                                                 void * ,
                                                                                                                                 size_t  ) ;
/* END FUNCTION-DECL-EXTERN pthread_attr_setstack LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:281 */

/* BEGIN FUNCTION-DECL __builtin_va_copy LOC=BUILTIN */
/* compiler builtin: 
   void __builtin_va_copy(__builtin_va_list  , __builtin_va_list  ) ;  */
/* END FUNCTION-DECL __builtin_va_copy LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN dprintf LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:352 */
extern int ( /* format attribute */  dprintf)(int  , char const   * __restrict   
                                              , ...)  __attribute__((__availability__(macosx,introduced=10.7))) ;
/* END FUNCTION-DECL-EXTERN dprintf LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:352 */

/* BEGIN FUNCTION-DECL __builtin_bitreverse32 LOC=BUILTIN */
/* compiler builtin: 
   unsigned int __builtin_bitreverse32(unsigned int  ) ;  */
/* END FUNCTION-DECL __builtin_bitreverse32 LOC=BUILTIN */

/* BEGIN TYPEDEF __darwin_fsfilcnt_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types.h:59 */
typedef unsigned int __darwin_fsfilcnt_t;
/* END TYPEDEF __darwin_fsfilcnt_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types.h:59 */

/* BEGIN FUNCTION-DECL emit_memcpy LOC=UNKNOWN */
static void emit_memcpy(struct jit *jit , jit_op *op , jit_value a1 , jit_value a2 ,
                        jit_value a3 ) ;
/* END FUNCTION-DECL emit_memcpy LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL jit_buf_expand LOC=UNKNOWN */
__inline static void jit_buf_expand(struct jit *jit ) ;
/* END FUNCTION-DECL jit_buf_expand LOC=UNKNOWN */

/* BEGIN VARIABLE-DECL-EXTERN suboptarg LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:356 */
extern char *suboptarg ;
/* END VARIABLE-DECL-EXTERN suboptarg LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:356 */

/* BEGIN FUNCTION-DECL-EXTERN pthread_attr_setinheritsched LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:268 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_attr_setinheritsched(pthread_attr_t * ,
                                                                                                                                        int  ) ;
/* END FUNCTION-DECL-EXTERN pthread_attr_setinheritsched LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:268 */

/* BEGIN FUNCTION-DECL-EXTERN asctime_r LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:125 */
extern char *asctime_r(struct tm  const  * __restrict   , char * __restrict   ) ;
/* END FUNCTION-DECL-EXTERN asctime_r LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:125 */

/* BEGIN FUNCTION-DECL __builtin___strlcpy_chk LOC=BUILTIN */
/* compiler builtin: 
   unsigned long long __builtin___strlcpy_chk(char * , char const   * , unsigned long long  ,
                                              unsigned long long  ) ;  */
/* END FUNCTION-DECL __builtin___strlcpy_chk LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN rename LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:175 */
extern int rename(char const   *__old , char const   *__new ) ;
/* END FUNCTION-DECL-EXTERN rename LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:175 */

/* BEGIN FUNCTION-DECL-EXTERN pthread_mutex_init LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:379 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_mutex_init(pthread_mutex_t * __restrict   ,
                                                                                                                              pthread_mutexattr_t const   * _Nullable __restrict   ) ;
/* END FUNCTION-DECL-EXTERN pthread_mutex_init LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:379 */

/* BEGIN FUNCTION-DECL __builtin_logbf128 LOC=BUILTIN */
/* compiler builtin: 
   _Float128 __builtin_logbf128(_Float128  ) ;  */
/* END FUNCTION-DECL __builtin_logbf128 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN setregid LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:593 */
extern int setregid(gid_t  , gid_t  )  __asm__("_setregid")  ;
/* END FUNCTION-DECL-EXTERN setregid LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:593 */

/* BEGIN FUNCTION-DECL jit_gen_op LOC=UNKNOWN */
void jit_gen_op(struct jit *jit , struct jit_op *op ) ;
/* END FUNCTION-DECL jit_gen_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL assign_ret_reg LOC=UNKNOWN */
static int assign_ret_reg(jit_op *op , jit_hw_reg *ret_reg ) ;
/* END FUNCTION-DECL assign_ret_reg LOC=UNKNOWN */

/* BEGIN STRUCT __siginfo LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/signal.h:177 */
struct __siginfo {
   int si_signo ;
   int si_errno ;
   int si_code ;
   pid_t si_pid ;
   uid_t si_uid ;
   int si_status ;
   void *si_addr ;
   union sigval si_value ;
   long si_band ;
   unsigned long __pad[7] ;
};
/* END STRUCT __siginfo LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/signal.h:177 */

/* BEGIN FUNCTION-DECL __builtin_trap LOC=BUILTIN */
/* compiler builtin: 
   void __builtin_trap(void) ;  */
/* END FUNCTION-DECL __builtin_trap LOC=BUILTIN */

/* BEGIN VARIABLE-DEF _TIG_JD_tgVA_4_fib___t LOC=UNKNOWN */
char const   *_TIG_JD_tgVA_4_fib___t  =    "";
/* END VARIABLE-DEF _TIG_JD_tgVA_4_fib___t LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin___strcpy_chk LOC=BUILTIN */
/* compiler builtin: 
   char *__builtin___strcpy_chk(char * , char const   * , unsigned long long  ) ;  */
/* END FUNCTION-DECL __builtin___strcpy_chk LOC=BUILTIN */

/* BEGIN FUNCTION-DECL rename_reg LOC=UNKNOWN */
static void rename_reg(jit_op *op , int r1 , int r2 ) ;
/* END FUNCTION-DECL rename_reg LOC=UNKNOWN */

/* BEGIN TYPEDEF user_off_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/types.h:103 */
typedef int64_t user_off_t;
/* END TYPEDEF user_off_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/types.h:103 */

/* BEGIN TYPEDEF uint_fast8_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdint.h:44 */
typedef uint8_t uint_fast8_t;
/* END TYPEDEF uint_fast8_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdint.h:44 */

/* BEGIN FUNCTION-DECL __builtin_sqrtf16 LOC=BUILTIN */
/* compiler builtin: 
   _Float16 __builtin_sqrtf16(_Float16  ) ;  */
/* END FUNCTION-DECL __builtin_sqrtf16 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN __svfscanf LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:250 */
extern int ( /* format attribute */  __svfscanf)(FILE * , char const   * , va_list  ) ;
/* END FUNCTION-DECL-EXTERN __svfscanf LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:250 */

/* BEGIN STRUCT jit_tree LOC=UNKNOWN */
struct jit_tree {
   struct jit_tree *left ;
   struct jit_tree *right ;
   int color ;
   jit_tree_key key ;
   jit_tree_value value ;
};
/* END STRUCT jit_tree LOC=UNKNOWN */

/* BEGIN STRUCT __sigaction LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/signal.h:276 */
struct __sigaction {
   union __sigaction_u __sigaction_u ;
   void (*sa_tramp)(void * , int  , int  , siginfo_t * , void * ) ;
   sigset_t sa_mask ;
   int sa_flags ;
};
/* END STRUCT __sigaction LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/signal.h:276 */

/* BEGIN FUNCTION-DECL __builtin_log2f LOC=BUILTIN */
/* compiler builtin: 
   float __builtin_log2f(float  ) ;  */
/* END FUNCTION-DECL __builtin_log2f LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN putw LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:297 */
extern int putw(int  , FILE * ) ;
/* END FUNCTION-DECL-EXTERN putw LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:297 */

/* BEGIN FUNCTION-DECL __builtin_remquol LOC=BUILTIN */
/* compiler builtin: 
   long double __builtin_remquol(long double  , long double  , int * ) ;  */
/* END FUNCTION-DECL __builtin_remquol LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_cprojf LOC=BUILTIN */
/* compiler builtin: 
   _Complex float __builtin_cprojf(_Complex float  ) ;  */
/* END FUNCTION-DECL __builtin_cprojf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL pow2 LOC=UNKNOWN */
__inline static int pow2(int arg ) ;
/* END FUNCTION-DECL pow2 LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL is_red LOC=UNKNOWN */
__inline static int is_red(jit_tree *n ) ;
/* END FUNCTION-DECL is_red LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL jit_dump_ops_compilable LOC=UNKNOWN */
static void jit_dump_ops_compilable(struct jit *jit , jit_tree *labels ) ;
/* END FUNCTION-DECL jit_dump_ops_compilable LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __darwin_fd_set LOC=UNKNOWN */
__inline void ( __attribute__((__always_inline__)) __darwin_fd_set)(int _fd , struct fd_set *_p ) ;
/* END FUNCTION-DECL __darwin_fd_set LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN mkostemps LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:679 */
extern int mkostemps(char *path , int slen , int oflags )  __attribute__((__availability__(watchos,introduced=3.0),
__availability__(tvos,introduced=10.0), __availability__(ios,introduced=10.0), __availability__(macosx,introduced=10.12))) ;
/* END FUNCTION-DECL-EXTERN mkostemps LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:679 */

/* BEGIN STRUCT __darwin_mcontext_avx512_64 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_mcontext.h:130 */
struct __darwin_mcontext_avx512_64 {
   struct __darwin_x86_exception_state64 __es ;
   struct __darwin_x86_thread_state64 __ss ;
   struct __darwin_x86_avx512_state64 __fs ;
};
/* END STRUCT __darwin_mcontext_avx512_64 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_mcontext.h:130 */

/* BEGIN FUNCTION-DECL-EXTERN fprintf LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:155 */
extern int ( /* format attribute */  fprintf)(FILE * __restrict   , char const   * __restrict   
                                              , ...) ;
/* END FUNCTION-DECL-EXTERN fprintf LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:155 */

/* BEGIN FUNCTION-DECL __builtin_matrix_column_major_store LOC=BUILTIN */
/* compiler builtin: 
   void __builtin_matrix_column_major_store(...) ;  */
/* END FUNCTION-DECL __builtin_matrix_column_major_store LOC=BUILTIN */

/* BEGIN FUNCTION-DECL jit_tree_size LOC=UNKNOWN */
static int jit_tree_size(jit_tree *h ) ;
/* END FUNCTION-DECL jit_tree_size LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin___snprintf_chk LOC=BUILTIN */
/* compiler builtin: 
   int __builtin___snprintf_chk(char * , unsigned long long  , int  , unsigned long long  ,
                                char const   *  , ...) ;  */
/* END FUNCTION-DECL __builtin___snprintf_chk LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_logbf LOC=BUILTIN */
/* compiler builtin: 
   float __builtin_logbf(float  ) ;  */
/* END FUNCTION-DECL __builtin_logbf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_popcountl LOC=BUILTIN */
/* compiler builtin: 
   int __builtin_popcountl(unsigned long  ) ;  */
/* END FUNCTION-DECL __builtin_popcountl LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN pathconf LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:466 */
extern long pathconf(char const   * , int  ) ;
/* END FUNCTION-DECL-EXTERN pathconf LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:466 */

/* BEGIN FUNCTION-DECL __sputc LOC=UNKNOWN */
__inline int ( __attribute__((__always_inline__)) __sputc)(int _c , FILE *_p ) ;
/* END FUNCTION-DECL __sputc LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_parity LOC=BUILTIN */
/* compiler builtin: 
   int __builtin_parity(unsigned int  ) ;  */
/* END FUNCTION-DECL __builtin_parity LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN close LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:437 */
extern int close(int  )  __asm__("_close")  ;
/* END FUNCTION-DECL-EXTERN close LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:437 */

/* BEGIN FUNCTION-DECL __builtin_log2 LOC=BUILTIN */
/* compiler builtin: 
   double __builtin_log2(double  ) ;  */
/* END FUNCTION-DECL __builtin_log2 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN strtod LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:165 */
extern double strtod(char const   * , char ** )  __asm__("_strtod")  ;
/* END FUNCTION-DECL-EXTERN strtod LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:165 */

/* BEGIN FUNCTION-DECL __builtin_cosl LOC=BUILTIN */
/* compiler builtin: 
   long double __builtin_cosl(long double  ) ;  */
/* END FUNCTION-DECL __builtin_cosl LOC=BUILTIN */

/* BEGIN FUNCTION-DECL emit_save_all_regs LOC=UNKNOWN */
static void emit_save_all_regs(struct jit *jit , jit_op *op ) ;
/* END FUNCTION-DECL emit_save_all_regs LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_rintf16 LOC=BUILTIN */
/* compiler builtin: 
   _Float16 __builtin_rintf16(_Float16  ) ;  */
/* END FUNCTION-DECL __builtin_rintf16 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_expect_with_probability LOC=BUILTIN */
/* compiler builtin: 
   long __builtin_expect_with_probability(long  , long  , double  ) ;  */
/* END FUNCTION-DECL __builtin_expect_with_probability LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN pthread_setcanceltype LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:484 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_setcanceltype(int  ,
                                                                                                                                 int * _Nullable   )  __asm__("_pthread_setcanceltype")  ;
/* END FUNCTION-DECL-EXTERN pthread_setcanceltype LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:484 */

/* BEGIN FUNCTION-DECL-EXTERN unwhiteout LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:734 */
extern int unwhiteout(char const   * ) ;
/* END FUNCTION-DECL-EXTERN unwhiteout LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:734 */

/* BEGIN FUNCTION-DECL __builtin_logb LOC=BUILTIN */
/* compiler builtin: 
   double __builtin_logb(double  ) ;  */
/* END FUNCTION-DECL __builtin_logb LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN timingsafe_bcmp LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:172 */
extern int __attribute__((__availability__(watchos,introduced=3.1), __availability__(tvos,introduced=10.0.1),
__availability__(ios,introduced=10.1), __availability__(macosx,introduced=10.12.1)))  timingsafe_bcmp(void const   *__b1 ,
                                                                                                      void const   *__b2 ,
                                                                                                      size_t __len ) ;
/* END FUNCTION-DECL-EXTERN timingsafe_bcmp LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:172 */

/* BEGIN FUNCTION-DECL-EXTERN tcsetpgrp LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:485 */
extern int tcsetpgrp(int  , pid_t  ) ;
/* END FUNCTION-DECL-EXTERN tcsetpgrp LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:485 */

/* BEGIN FUNCTION-DECL jit_add_op LOC=UNKNOWN */
struct jit_op *jit_add_op(struct jit *jit , unsigned short code , unsigned char spec ,
                          jit_value arg1 , jit_value arg2 , jit_value arg3 , unsigned char arg_size ,
                          struct jit_debug_info *debug_info ) ;
/* END FUNCTION-DECL jit_add_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN strtoq LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:352 */
extern long long strtoq(char const   *__str , char **__endptr , int __base ) ;
/* END FUNCTION-DECL-EXTERN strtoq LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:352 */

/* BEGIN FUNCTION-DECL-EXTERN pthread_setname_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:513 */
extern int __attribute__((__availability__(ios,introduced=3.2), __availability__(macos,introduced=10.6)))  pthread_setname_np(char const   * ) ;
/* END FUNCTION-DECL-EXTERN pthread_setname_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:513 */

/* BEGIN FUNCTION-DECL-EXTERN unsetenv LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:252 */
extern int unsetenv(char const   * )  __asm__("_unsetenv")  ;
/* END FUNCTION-DECL-EXTERN unsetenv LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:252 */

/* BEGIN FUNCTION-DECL __builtin_inff LOC=BUILTIN */
/* compiler builtin: 
   float __builtin_inff(void) ;  */
/* END FUNCTION-DECL __builtin_inff LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN pthread_setspecific LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:494 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_setspecific(pthread_key_t  ,
                                                                                                                               void const   * _Nullable   ) ;
/* END FUNCTION-DECL-EXTERN pthread_setspecific LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:494 */

/* BEGIN FUNCTION-DECL-EXTERN dup2 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:440 */
extern int dup2(int  , int  ) ;
/* END FUNCTION-DECL-EXTERN dup2 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:440 */

/* BEGIN FUNCTION-DECL-EXTERN revoke LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:703 */
extern int revoke(char const   * ) ;
/* END FUNCTION-DECL-EXTERN revoke LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:703 */

/* BEGIN FUNCTION-DECL emit_fppush_arg LOC=UNKNOWN */
__inline static void emit_fppush_arg(struct jit *jit , struct jit_out_arg *arg ) ;
/* END FUNCTION-DECL emit_fppush_arg LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN setgroups LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:715 */
extern int setgroups(int  , gid_t const   * ) ;
/* END FUNCTION-DECL-EXTERN setgroups LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:715 */

/* BEGIN FUNCTION-DECL-EXTERN link LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:464 */
extern int link(char const   * , char const   * ) ;
/* END FUNCTION-DECL-EXTERN link LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:464 */

/* BEGIN FUNCTION-DECL-EXTERN lchown LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:567 */
extern int lchown(char const   * , uid_t  , gid_t  )  __asm__("_lchown")  ;
/* END FUNCTION-DECL-EXTERN lchown LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:567 */

/* BEGIN FUNCTION-DECL-EXTERN heapsort LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:309 */
extern int heapsort(void *__base , size_t __nel , size_t __width , int (* _Nonnull  __compar)(void const   * ,
                                                                                              void const   * ) ) ;
/* END FUNCTION-DECL-EXTERN heapsort LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:309 */

/* BEGIN FUNCTION-DECL __builtin_remquo LOC=BUILTIN */
/* compiler builtin: 
   double __builtin_remquo(double  , double  , int * ) ;  */
/* END FUNCTION-DECL __builtin_remquo LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_stpncpy LOC=BUILTIN */
/* compiler builtin: 
   char *__builtin_stpncpy(char * , char const   * , unsigned long long  ) ;  */
/* END FUNCTION-DECL __builtin_stpncpy LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_addcs LOC=BUILTIN */
/* compiler builtin: 
   short __builtin_addcs(unsigned short const    , unsigned short const    , unsigned short const    ,
                         unsigned short * ) ;  */
/* END FUNCTION-DECL __builtin_addcs LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN wcstombs LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:194 */
extern size_t wcstombs(char * __restrict   , wchar_t const   * __restrict   , size_t  ) ;
/* END FUNCTION-DECL-EXTERN wcstombs LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:194 */

/* BEGIN TYPEDEF rlim_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/resource.h:89 */
typedef __uint64_t rlim_t;
/* END TYPEDEF rlim_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/resource.h:89 */

/* BEGIN FUNCTION-DECL flw_analyze_op LOC=UNKNOWN */
__inline static int flw_analyze_op(struct jit *jit , jit_op *op , struct jit_func_info *func_info ,
                                   int changed , struct code_refs_cache *code_refs ) ;
/* END FUNCTION-DECL flw_analyze_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN memset_pattern16 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:158 */
extern void memset_pattern16(void *__b , void const   *__pattern16 , size_t __len )  __attribute__((__availability__(macosx,introduced=10.5))) ;
/* END FUNCTION-DECL-EXTERN memset_pattern16 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:158 */

/* BEGIN FUNCTION-DECL __builtin_copysignf LOC=BUILTIN */
/* compiler builtin: 
   float __builtin_copysignf(float  , float  ) ;  */
/* END FUNCTION-DECL __builtin_copysignf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN mbstowcs LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:157 */
extern size_t mbstowcs(wchar_t * __restrict   , char const   * __restrict   , size_t  ) ;
/* END FUNCTION-DECL-EXTERN mbstowcs LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:157 */

/* BEGIN FUNCTION-DECL print_op LOC=UNKNOWN */
int print_op(FILE *f , struct jit_disasm *disasm , struct jit_op *op , jit_tree *labels ,
             int verbosity ) ;
/* END FUNCTION-DECL print_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN pthread_detach LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:343 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_detach(pthread_t  ) ;
/* END FUNCTION-DECL-EXTERN pthread_detach LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:343 */

/* BEGIN FUNCTION-DECL-EXTERN ptsname_r LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:224 */
extern int ptsname_r(int fildes , char *buffer , size_t buflen )  __attribute__((__availability__(watchos,introduced=4.3),
__availability__(tvos,introduced=11.3), __availability__(ios,introduced=11.3), __availability__(macos,introduced=10.13.4))) ;
/* END FUNCTION-DECL-EXTERN ptsname_r LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:224 */

/* BEGIN TYPEDEF __darwin_nl_item LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/_types.h:40 */
typedef int __darwin_nl_item;
/* END TYPEDEF __darwin_nl_item LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/_types.h:40 */

/* BEGIN FUNCTION-DECL __builtin_expf16 LOC=BUILTIN */
/* compiler builtin: 
   _Float16 __builtin_expf16(_Float16  ) ;  */
/* END FUNCTION-DECL __builtin_expf16 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_lrintf LOC=BUILTIN */
/* compiler builtin: 
   long __builtin_lrintf(float  ) ;  */
/* END FUNCTION-DECL __builtin_lrintf LOC=BUILTIN */

/* BEGIN STRUCT __darwin_mcontext_avx32 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_mcontext.h:47 */
struct __darwin_mcontext_avx32 {
   struct __darwin_i386_exception_state __es ;
   struct __darwin_i386_thread_state __ss ;
   struct __darwin_i386_avx_state __fs ;
};
/* END STRUCT __darwin_mcontext_avx32 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_mcontext.h:47 */

/* BEGIN FUNCTION-DECL-EXTERN zopen LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:378 */
extern FILE *zopen(char const   * , char const   * , int  ) ;
/* END FUNCTION-DECL-EXTERN zopen LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:378 */

/* BEGIN FUNCTION-DECL __builtin_csinhf LOC=BUILTIN */
/* compiler builtin: 
   _Complex float __builtin_csinhf(_Complex float  ) ;  */
/* END FUNCTION-DECL __builtin_csinhf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin___strncpy_chk LOC=BUILTIN */
/* compiler builtin: 
   char *__builtin___strncpy_chk(char * , char const   * , unsigned long long  , unsigned long long  ) ;  */
/* END FUNCTION-DECL __builtin___strncpy_chk LOC=BUILTIN */

/* BEGIN FUNCTION-DECL jit_value_align LOC=UNKNOWN */
__inline static jit_value jit_value_align(jit_value value , jit_value alignment ) ;
/* END FUNCTION-DECL jit_value_align LOC=UNKNOWN */

/* BEGIN TYPEDEF __darwin_fp_status_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:167 */
typedef struct __darwin_fp_status __darwin_fp_status_t;
/* END TYPEDEF __darwin_fp_status_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h:167 */

/* BEGIN FUNCTION-DECL-EXTERN strsep LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:165 */
extern char *strsep(char **__stringp , char const   *__delim ) ;
/* END FUNCTION-DECL-EXTERN strsep LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:165 */

/* BEGIN TYPEDEF user_time_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/types.h:102 */
typedef int64_t user_time_t;
/* END TYPEDEF user_time_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/types.h:102 */

/* BEGIN FUNCTION-DECL-EXTERN pthread_attr_setschedparam LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:271 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_attr_setschedparam(pthread_attr_t * __restrict   ,
                                                                                                                                      struct sched_param  const  * __restrict   ) ;
/* END FUNCTION-DECL-EXTERN pthread_attr_setschedparam LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:271 */

/* BEGIN FUNCTION-DECL-EXTERN readlinkat LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/unistd.h:210 */
extern ssize_t readlinkat(int  , char const   * , char * , size_t  )  __attribute__((__availability__(macosx,introduced=10.10))) ;
/* END FUNCTION-DECL-EXTERN readlinkat LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/unistd.h:210 */

/* BEGIN STRUCT jit_out_arg LOC=UNKNOWN */
struct jit_out_arg {
   union __anonunion_value_137411616 value ;
   int argpos ;
   char isreg ;
   char isref ;
   char isfp ;
   char size ;
   char isoptional ;
};
/* END STRUCT jit_out_arg LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN l64a LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:213 */
extern char *l64a(long  ) ;
/* END FUNCTION-DECL-EXTERN l64a LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:213 */

/* BEGIN FUNCTION-DECL-EXTERN fork LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:447 */
extern pid_t fork(void)  __attribute__((__availability__(tvos,unavailable), __availability__(watchos,unavailable))) ;
/* END FUNCTION-DECL-EXTERN fork LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:447 */

/* BEGIN STRUCT rusage_info_v2 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/resource.h:229 */
struct rusage_info_v2 {
   uint8_t ri_uuid[16] ;
   uint64_t ri_user_time ;
   uint64_t ri_system_time ;
   uint64_t ri_pkg_idle_wkups ;
   uint64_t ri_interrupt_wkups ;
   uint64_t ri_pageins ;
   uint64_t ri_wired_size ;
   uint64_t ri_resident_size ;
   uint64_t ri_phys_footprint ;
   uint64_t ri_proc_start_abstime ;
   uint64_t ri_proc_exit_abstime ;
   uint64_t ri_child_user_time ;
   uint64_t ri_child_system_time ;
   uint64_t ri_child_pkg_idle_wkups ;
   uint64_t ri_child_interrupt_wkups ;
   uint64_t ri_child_pageins ;
   uint64_t ri_child_elapsed_abstime ;
   uint64_t ri_diskio_bytesread ;
   uint64_t ri_diskio_byteswritten ;
};
/* END STRUCT rusage_info_v2 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/resource.h:229 */

/* BEGIN STRUCT fd_set LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_fd_def.h:50 */
struct fd_set {
   __int32_t fds_bits[1024ULL / (sizeof(__int32_t ) * 8ULL)] ;
};
/* END STRUCT fd_set LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_fd_def.h:50 */

/* BEGIN FUNCTION-DECL __builtin_operator_delete LOC=BUILTIN */
/* compiler builtin: 
   void __builtin_operator_delete(void * ) ;  */
/* END FUNCTION-DECL __builtin_operator_delete LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN setuid LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:478 */
extern int setuid(uid_t  ) ;
/* END FUNCTION-DECL-EXTERN setuid LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:478 */

/* BEGIN FUNCTION-DECL __builtin_nontemporal_load LOC=BUILTIN */
/* compiler builtin: 
   void __builtin_nontemporal_load(...) ;  */
/* END FUNCTION-DECL __builtin_nontemporal_load LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_isinf LOC=BUILTIN */
/* compiler builtin: 
   int __builtin_isinf(...) ;  */
/* END FUNCTION-DECL __builtin_isinf LOC=BUILTIN */

/* BEGIN STRUCT __anonstruct_w_S_529377835 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/wait.h:194 */
struct __anonstruct_w_S_529377835 {
   unsigned int w_Stopval : 8 ;
   unsigned int w_Stopsig : 8 ;
   unsigned int w_Filler : 16 ;
};
/* END STRUCT __anonstruct_w_S_529377835 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/wait.h:194 */

/* BEGIN UNION wait LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/wait.h:194 */
union wait {
   int w_status ;
   struct __anonstruct_w_T_529377834 w_T ;
   struct __anonstruct_w_S_529377835 w_S ;
};
/* END UNION wait LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/wait.h:194 */

/* BEGIN FUNCTION-DECL-EXTERN ttyslot LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:732 */
extern int ttyslot(void) ;
/* END FUNCTION-DECL-EXTERN ttyslot LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:732 */

/* BEGIN FUNCTION-DECL emit_sse_change_sign LOC=UNKNOWN */
static void emit_sse_change_sign(struct jit *jit , jit_op *op , int reg ) ;
/* END FUNCTION-DECL emit_sse_change_sign LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_clogf LOC=BUILTIN */
/* compiler builtin: 
   _Complex float __builtin_clogf(_Complex float  ) ;  */
/* END FUNCTION-DECL __builtin_clogf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_round LOC=BUILTIN */
/* compiler builtin: 
   double __builtin_round(double  ) ;  */
/* END FUNCTION-DECL __builtin_round LOC=BUILTIN */

/* BEGIN STRUCT __anonstruct_lldiv_t_86583852 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:94 */
struct __anonstruct_lldiv_t_86583852 {
   long long quot ;
   long long rem ;
};
/* END STRUCT __anonstruct_lldiv_t_86583852 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:94 */

/* BEGIN FUNCTION-DECL emit_transfer_init LOC=UNKNOWN */
static void emit_transfer_init(struct jit *jit , jit_op *op , jit_value destreg ,
                               jit_value srcreg , jit_value cnt , int block_size ) ;
/* END FUNCTION-DECL emit_transfer_init LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_tgammal LOC=BUILTIN */
/* compiler builtin: 
   long double __builtin_tgammal(long double  ) ;  */
/* END FUNCTION-DECL __builtin_tgammal LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_clogl LOC=BUILTIN */
/* compiler builtin: 
   _Complex long double __builtin_clogl(_Complex long double  ) ;  */
/* END FUNCTION-DECL __builtin_clogl LOC=BUILTIN */

/* BEGIN FUNCTION-DECL jit_prepare_spills_on_jmpr_targets LOC=UNKNOWN */
__inline static void jit_prepare_spills_on_jmpr_targets(struct jit *jit ) ;
/* END FUNCTION-DECL jit_prepare_spills_on_jmpr_targets LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN pthread_attr_getschedparam LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:238 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_attr_getschedparam(pthread_attr_t const   * __restrict   ,
                                                                                                                                      struct sched_param * __restrict   ) ;
/* END FUNCTION-DECL-EXTERN pthread_attr_getschedparam LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:238 */

/* BEGIN VARIABLE-DECL-EXTERN getdate_err LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:101 */
extern int getdate_err ;
/* END VARIABLE-DECL-EXTERN getdate_err LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:101 */

/* BEGIN FUNCTION-DECL-EXTERN asprintf LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:370 */
extern int ( /* format attribute */  asprintf)(char ** __restrict   , char const   * __restrict   
                                               , ...) ;
/* END FUNCTION-DECL-EXTERN asprintf LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:370 */

/* BEGIN FUNCTION-DECL flw_analyze_prolog LOC=UNKNOWN */
__inline static void flw_analyze_prolog(struct jit *jit , jit_op *op , struct jit_func_info *func_info ) ;
/* END FUNCTION-DECL flw_analyze_prolog LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN qos_class_main LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/qos.h:194 */
extern qos_class_t __attribute__((__availability__(macos,introduced=10.10), __availability__(ios,introduced=8.0)))  qos_class_main(void) ;
/* END FUNCTION-DECL-EXTERN qos_class_main LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/qos.h:194 */

/* BEGIN FUNCTION-DECL-EXTERN getegid LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:450 */
extern gid_t getegid(void) ;
/* END FUNCTION-DECL-EXTERN getegid LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:450 */

/* BEGIN FUNCTION-DECL __builtin_crealf LOC=BUILTIN */
/* compiler builtin: 
   float __builtin_crealf(_Complex float  ) ;  */
/* END FUNCTION-DECL __builtin_crealf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_csqrtf LOC=BUILTIN */
/* compiler builtin: 
   _Complex float __builtin_csqrtf(_Complex float  ) ;  */
/* END FUNCTION-DECL __builtin_csqrtf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_frob_return_address LOC=BUILTIN */
/* compiler builtin: 
   void *__builtin_frob_return_address(void * ) ;  */
/* END FUNCTION-DECL __builtin_frob_return_address LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN localtime_r LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:128 */
extern struct tm *localtime_r(time_t const   * __restrict   , struct tm * __restrict   ) ;
/* END FUNCTION-DECL-EXTERN localtime_r LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:128 */

/* BEGIN FUNCTION-DECL jit_reg_allocator_free LOC=UNKNOWN */
void jit_reg_allocator_free(struct jit_reg_allocator *a ) ;
/* END FUNCTION-DECL jit_reg_allocator_free LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin___strncat_chk LOC=BUILTIN */
/* compiler builtin: 
   char *__builtin___strncat_chk(char * , char const   * , unsigned long long  , unsigned long long  ) ;  */
/* END FUNCTION-DECL __builtin___strncat_chk LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_isunordered LOC=BUILTIN */
/* compiler builtin: 
   int __builtin_isunordered(...) ;  */
/* END FUNCTION-DECL __builtin_isunordered LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN pause LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:468 */
extern int pause(void)  __asm__("_pause")  ;
/* END FUNCTION-DECL-EXTERN pause LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:468 */

/* BEGIN FUNCTION-DECL jit_op_append LOC=UNKNOWN */
__inline static void jit_op_append(jit_op *op , jit_op *appended ) ;
/* END FUNCTION-DECL jit_op_append LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN confstr LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:507 */
extern size_t confstr(int  , char * , size_t  )  __asm__("_confstr")  ;
/* END FUNCTION-DECL-EXTERN confstr LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:507 */

/* BEGIN FUNCTION-DECL emit_transfer_op LOC=UNKNOWN */
static void emit_transfer_op(struct jit *jit , jit_op *op , int alu_op ) ;
/* END FUNCTION-DECL emit_transfer_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_vsnprintf LOC=BUILTIN */
/* compiler builtin: 
   int __builtin_vsnprintf(char * , unsigned long long  , char const   * , __builtin_va_list  ) ;  */
/* END FUNCTION-DECL __builtin_vsnprintf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN grantpt LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:206 */
extern int grantpt(int  ) ;
/* END FUNCTION-DECL-EXTERN grantpt LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:206 */

/* BEGIN FUNCTION-DECL __builtin_nexttowardl LOC=BUILTIN */
/* compiler builtin: 
   long double __builtin_nexttowardl(long double  , long double  ) ;  */
/* END FUNCTION-DECL __builtin_nexttowardl LOC=BUILTIN */

/* BEGIN FUNCTION-DECL spill_all_registers LOC=UNKNOWN */
static int spill_all_registers(jit_op *op , struct jit_reg_allocator *al ) ;
/* END FUNCTION-DECL spill_all_registers LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_expm1f LOC=BUILTIN */
/* compiler builtin: 
   float __builtin_expm1f(float  ) ;  */
/* END FUNCTION-DECL __builtin_expm1f LOC=BUILTIN */

/* BEGIN FUNCTION-DECL jit_get_unused_reg LOC=UNKNOWN */
jit_hw_reg *jit_get_unused_reg(struct jit_reg_allocator *al , jit_op *op , int fp ) ;
/* END FUNCTION-DECL jit_get_unused_reg LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN setlogin LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:723 */
extern int setlogin(char const   * ) ;
/* END FUNCTION-DECL-EXTERN setlogin LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:723 */

/* BEGIN FUNCTION-DECL-EXTERN jrand48 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:212 */
extern long jrand48(unsigned short * )  __attribute__((__availability__(swift,unavailable,message="Use arc4random instead."))) ;
/* END FUNCTION-DECL-EXTERN jrand48 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:212 */

/* BEGIN FUNCTION-DECL __builtin_cproj LOC=BUILTIN */
/* compiler builtin: 
   _Complex double __builtin_cproj(_Complex double  ) ;  */
/* END FUNCTION-DECL __builtin_cproj LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_nanl LOC=BUILTIN */
/* compiler builtin: 
   long double __builtin_nanl(char const   * ) ;  */
/* END FUNCTION-DECL __builtin_nanl LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_ctanh LOC=BUILTIN */
/* compiler builtin: 
   _Complex double __builtin_ctanh(_Complex double  ) ;  */
/* END FUNCTION-DECL __builtin_ctanh LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN vfscanf LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:335 */
extern int ( /* format attribute */  vfscanf)(FILE * __restrict  __stream , char const   * __restrict  __format ,
                                              va_list  ) ;
/* END FUNCTION-DECL-EXTERN vfscanf LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:335 */

/* BEGIN FUNCTION-DECL __builtin_umulll_overflow LOC=BUILTIN */
/* compiler builtin: 
   _Bool __builtin_umulll_overflow(unsigned long long const    , unsigned long long const    ,
                                   unsigned long long * ) ;  */
/* END FUNCTION-DECL __builtin_umulll_overflow LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN getitimer LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/time.h:196 */
extern int getitimer(int  , struct itimerval * ) ;
/* END FUNCTION-DECL-EXTERN getitimer LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/time.h:196 */

/* BEGIN FUNCTION-DECL-EXTERN srand LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:164 */
extern void srand(unsigned int  )  __attribute__((__availability__(swift,unavailable,message="Use arc4random instead."))) ;
/* END FUNCTION-DECL-EXTERN srand LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:164 */

/* BEGIN FUNCTION-DECL-EXTERN pthread_equal LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:346 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_equal(pthread_t __attribute__((__nullable__))   ,
                                                                                                                         pthread_t __attribute__((__nullable__))   ) ;
/* END FUNCTION-DECL-EXTERN pthread_equal LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:346 */

/* BEGIN FUNCTION-DECL __builtin_erfcf128 LOC=BUILTIN */
/* compiler builtin: 
   _Float128 __builtin_erfcf128(_Float128  ) ;  */
/* END FUNCTION-DECL __builtin_erfcf128 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL mark_calleesaved_regs LOC=UNKNOWN */
static void mark_calleesaved_regs(jit_tree *hint , jit_op *op ) ;
/* END FUNCTION-DECL mark_calleesaved_regs LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_catan LOC=BUILTIN */
/* compiler builtin: 
   _Complex double __builtin_catan(_Complex double  ) ;  */
/* END FUNCTION-DECL __builtin_catan LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_casin LOC=BUILTIN */
/* compiler builtin: 
   _Complex double __builtin_casin(_Complex double  ) ;  */
/* END FUNCTION-DECL __builtin_casin LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN cgetnext LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:286 */
extern int cgetnext(char ** , char ** ) ;
/* END FUNCTION-DECL-EXTERN cgetnext LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:286 */

/* BEGIN FUNCTION-DECL __builtin_sinf16 LOC=BUILTIN */
/* compiler builtin: 
   _Float16 __builtin_sinf16(_Float16  ) ;  */
/* END FUNCTION-DECL __builtin_sinf16 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_llrint LOC=BUILTIN */
/* compiler builtin: 
   long long __builtin_llrint(double  ) ;  */
/* END FUNCTION-DECL __builtin_llrint LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_log1pl LOC=BUILTIN */
/* compiler builtin: 
   long double __builtin_log1pl(long double  ) ;  */
/* END FUNCTION-DECL __builtin_log1pl LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN fclose LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:143 */
extern int fclose(FILE * ) ;
/* END FUNCTION-DECL-EXTERN fclose LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:143 */

/* BEGIN FUNCTION-DECL __builtin_align_down LOC=BUILTIN */
/* compiler builtin: 
   void *__builtin_align_down(void const   * , unsigned long long  ) ;  */
/* END FUNCTION-DECL __builtin_align_down LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_strndup LOC=BUILTIN */
/* compiler builtin: 
   char *__builtin_strndup(char const   * , unsigned long long  ) ;  */
/* END FUNCTION-DECL __builtin_strndup LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN strchr LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:76 */
extern char *strchr(char const   *__s , int __c ) ;
/* END FUNCTION-DECL-EXTERN strchr LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:76 */

/* BEGIN FUNCTION-DECL-EXTERN msync LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/mman.h:230 */
extern int msync(void * , size_t  , int  )  __asm__("_msync")  ;
/* END FUNCTION-DECL-EXTERN msync LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/mman.h:230 */

/* BEGIN VARIABLE-DEF _TIG_JD_tgVA_4_fib_freq LOC=UNKNOWN */
int _TIG_JD_tgVA_4_fib_freq  =    0;
/* END VARIABLE-DEF _TIG_JD_tgVA_4_fib_freq LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN pthread_mutex_destroy LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:372 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_mutex_destroy(pthread_mutex_t * ) ;
/* END FUNCTION-DECL-EXTERN pthread_mutex_destroy LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:372 */

/* BEGIN FUNCTION-DECL-EXTERN setrgid LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:725 */
extern int setrgid(gid_t  ) ;
/* END FUNCTION-DECL-EXTERN setrgid LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:725 */

/* BEGIN VARIABLE-DECL _TIG_IZ_tgVA_envp LOC=UNKNOWN */
char **_TIG_IZ_tgVA_envp ;
/* END VARIABLE-DECL _TIG_IZ_tgVA_envp LOC=UNKNOWN */

/* BEGIN STRUCT jit_label LOC=UNKNOWN */
struct jit_label {
   size_t pos ;
   jit_op *op ;
   struct jit_label *next ;
};
/* END STRUCT jit_label LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_saddl_overflow LOC=BUILTIN */
/* compiler builtin: 
   _Bool __builtin_saddl_overflow(long const    , long const    , long * ) ;  */
/* END FUNCTION-DECL __builtin_saddl_overflow LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_strcasecmp LOC=BUILTIN */
/* compiler builtin: 
   int __builtin_strcasecmp(char const   * , char const   * ) ;  */
/* END FUNCTION-DECL __builtin_strcasecmp LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN pthread_get_stackaddr_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:527 */
extern void __attribute__((__availability__(macos,introduced=10.4), __availability__(ios,introduced=2.0)))  *pthread_get_stackaddr_np(pthread_t  ) ;
/* END FUNCTION-DECL-EXTERN pthread_get_stackaddr_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:527 */

/* BEGIN FUNCTION-DECL-EXTERN swapon LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:731 */
extern int swapon(char const   * ) ;
/* END FUNCTION-DECL-EXTERN swapon LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:731 */

/* BEGIN FUNCTION-DECL-EXTERN __vsnprintf_chk LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/secure/_stdio.h:70 */
extern int __vsnprintf_chk(char * __restrict   , size_t  , int  , size_t  , char const   * __restrict   ,
                           va_list  ) ;
/* END FUNCTION-DECL-EXTERN __vsnprintf_chk LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/secure/_stdio.h:70 */

/* BEGIN FUNCTION-DECL-EXTERN open_memstream LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:357 */
extern FILE *open_memstream(char **__bufp , size_t *__sizep )  __attribute__((__availability__(watchos,introduced=4.0),
__availability__(tvos,introduced=11.0), __availability__(ios,introduced=11.0), __availability__(macos,introduced=10.13))) ;
/* END FUNCTION-DECL-EXTERN open_memstream LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:357 */

/* BEGIN TYPEDEF ct_rune_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_ct_rune_t.h:32 */
typedef __darwin_ct_rune_t ct_rune_t;
/* END TYPEDEF ct_rune_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_ct_rune_t.h:32 */

/* BEGIN FUNCTION-DECL DUMP_int LOC=UNKNOWN */
void DUMP_int(int block , struct jit *jit , struct jit_op *begin_ , struct jit_op *end_ ) ;
/* END FUNCTION-DECL DUMP_int LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN qsort LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:160 */
extern void qsort(void *__base , size_t __nel , size_t __width , int (* _Nonnull  __compar)(void const   * ,
                                                                                            void const   * ) ) ;
/* END FUNCTION-DECL-EXTERN qsort LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:160 */

/* BEGIN FUNCTION-DECL __builtin_cexpf LOC=BUILTIN */
/* compiler builtin: 
   _Complex float __builtin_cexpf(_Complex float  ) ;  */
/* END FUNCTION-DECL __builtin_cexpf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN getrlimit LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/resource.h:449 */
extern int getrlimit(int  , struct rlimit * )  __asm__("_getrlimit")  ;
/* END FUNCTION-DECL-EXTERN getrlimit LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/resource.h:449 */

/* BEGIN FUNCTION-DECL __builtin___mempcpy_chk LOC=BUILTIN */
/* compiler builtin: 
   void *__builtin___mempcpy_chk(void * , void const   * , unsigned long long  , unsigned long long  ) ;  */
/* END FUNCTION-DECL __builtin___mempcpy_chk LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN dup LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:439 */
extern int dup(int  ) ;
/* END FUNCTION-DECL-EXTERN dup LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:439 */

/* BEGIN FUNCTION-DECL __builtin___memcpy_chk LOC=BUILTIN */
/* compiler builtin: 
   void *__builtin___memcpy_chk(void * , void const   * , unsigned long long  , unsigned long long  ) ;  */
/* END FUNCTION-DECL __builtin___memcpy_chk LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_cacoshf LOC=BUILTIN */
/* compiler builtin: 
   _Complex float __builtin_cacoshf(_Complex float  ) ;  */
/* END FUNCTION-DECL __builtin_cacoshf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL sse_mov_reg_safeimm LOC=UNKNOWN */
static void sse_mov_reg_safeimm(struct jit *jit , jit_op *op , jit_value reg , double *imm ) ;
/* END FUNCTION-DECL sse_mov_reg_safeimm LOC=UNKNOWN */

/* BEGIN STRUCT __darwin_mcontext_avx512_32 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_mcontext.h:56 */
struct __darwin_mcontext_avx512_32 {
   struct __darwin_i386_exception_state __es ;
   struct __darwin_i386_thread_state __ss ;
   struct __darwin_i386_avx512_state __fs ;
};
/* END STRUCT __darwin_mcontext_avx512_32 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_mcontext.h:56 */

/* BEGIN FUNCTION-DECL-EXTERN strtol LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:167 */
extern long strtol(char const   *__str , char **__endptr , int __base ) ;
/* END FUNCTION-DECL-EXTERN strtol LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:167 */

/* BEGIN FUNCTION-DECL-EXTERN getpgrp LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:459 */
extern pid_t getpgrp(void) ;
/* END FUNCTION-DECL-EXTERN getpgrp LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:459 */

/* BEGIN FUNCTION-DECL __builtin_tanf LOC=BUILTIN */
/* compiler builtin: 
   float __builtin_tanf(float  ) ;  */
/* END FUNCTION-DECL __builtin_tanf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_fmaxf16 LOC=BUILTIN */
/* compiler builtin: 
   _Float16 __builtin_fmaxf16(_Float16  , _Float16  ) ;  */
/* END FUNCTION-DECL __builtin_fmaxf16 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_acoshf128 LOC=BUILTIN */
/* compiler builtin: 
   _Float128 __builtin_acoshf128(_Float128  ) ;  */
/* END FUNCTION-DECL __builtin_acoshf128 LOC=BUILTIN */

/* BEGIN TYPEDEF mcontext_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_mcontext.h:204 */
typedef struct __darwin_mcontext64 *mcontext_t;
/* END TYPEDEF mcontext_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_mcontext.h:204 */

/* BEGIN FUNCTION-DECL __builtin_rotateleft8 LOC=BUILTIN */
/* compiler builtin: 
   unsigned char __builtin_rotateleft8(unsigned char  , unsigned char  ) ;  */
/* END FUNCTION-DECL __builtin_rotateleft8 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN strerror LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:81 */
extern char *strerror(int __errnum )  __asm__("_strerror")  ;
/* END FUNCTION-DECL-EXTERN strerror LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:81 */

/* BEGIN FUNCTION-DECL __builtin_islessequal LOC=BUILTIN */
/* compiler builtin: 
   int __builtin_islessequal(...) ;  */
/* END FUNCTION-DECL __builtin_islessequal LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_unpredictable LOC=BUILTIN */
/* compiler builtin: 
   long __builtin_unpredictable(long  ) ;  */
/* END FUNCTION-DECL __builtin_unpredictable LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN pthread_getugid_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:700 */
extern int pthread_getugid_np(uid_t * , gid_t * ) ;
/* END FUNCTION-DECL-EXTERN pthread_getugid_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:700 */

/* BEGIN FUNCTION-DECL __builtin_llrintl LOC=BUILTIN */
/* compiler builtin: 
   long long __builtin_llrintl(long double  ) ;  */
/* END FUNCTION-DECL __builtin_llrintl LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_creal LOC=BUILTIN */
/* compiler builtin: 
   double __builtin_creal(_Complex double  ) ;  */
/* END FUNCTION-DECL __builtin_creal LOC=BUILTIN */

/* BEGIN TYPEDEF int_least16_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdint.h:30 */
typedef int16_t int_least16_t;
/* END TYPEDEF int_least16_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdint.h:30 */

/* BEGIN UNION __anonunion___mbstate_t_250061491 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_types.h:76 */
union __anonunion___mbstate_t_250061491 {
   char __mbstate8[128] ;
   long long _mbstateL ;
};
/* END UNION __anonunion___mbstate_t_250061491 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_types.h:76 */

/* BEGIN FUNCTION-DECL-EXTERN readlink LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:623 */
extern ssize_t readlink(char const   * __restrict   , char * __restrict   , size_t  ) ;
/* END FUNCTION-DECL-EXTERN readlink LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:623 */

/* BEGIN FUNCTION-DECL assign_getarg LOC=UNKNOWN */
static int assign_getarg(jit_op *op , struct jit_reg_allocator *al ) ;
/* END FUNCTION-DECL assign_getarg LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_rotateleft64 LOC=BUILTIN */
/* compiler builtin: 
   unsigned long __builtin_rotateleft64(unsigned long  , unsigned long  ) ;  */
/* END FUNCTION-DECL __builtin_rotateleft64 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN ffsll LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/strings.h:86 */
extern int ffsll(long long  )  __attribute__((__availability__(macosx,introduced=10.9))) ;
/* END FUNCTION-DECL-EXTERN ffsll LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/strings.h:86 */

/* BEGIN FUNCTION-DECL-EXTERN sync_volume_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:780 */
extern int sync_volume_np(char const   * , int  )  __attribute__((__availability__(macosx,introduced=10.8))) ;
/* END FUNCTION-DECL-EXTERN sync_volume_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:780 */

/* BEGIN FUNCTION-DECL-EXTERN ruserok LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:712 */
extern  __attribute__((__deprecated__)) int ruserok(char const   * , int  , char const   * ,
                                                    char const   * ) ;
/* END FUNCTION-DECL-EXTERN ruserok LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:712 */

/* BEGIN FUNCTION-DECL __builtin_atanf LOC=BUILTIN */
/* compiler builtin: 
   float __builtin_atanf(float  ) ;  */
/* END FUNCTION-DECL __builtin_atanf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN pthread_attr_getdetachstate LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:229 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_attr_getdetachstate(pthread_attr_t const   * ,
                                                                                                                                       int * ) ;
/* END FUNCTION-DECL-EXTERN pthread_attr_getdetachstate LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:229 */

/* BEGIN FUNCTION-DECL-EXTERN pthread_setcancelstate LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:480 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_setcancelstate(int  ,
                                                                                                                                  int * _Nullable   )  __asm__("_pthread_setcancelstate")  ;
/* END FUNCTION-DECL-EXTERN pthread_setcancelstate LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:480 */

/* BEGIN FUNCTION-DECL __builtin_align_up LOC=BUILTIN */
/* compiler builtin: 
   void *__builtin_align_up(void const   * , unsigned long long  ) ;  */
/* END FUNCTION-DECL __builtin_align_up LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN ftell LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:164 */
extern long ftell(FILE * ) ;
/* END FUNCTION-DECL-EXTERN ftell LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:164 */

/* BEGIN FUNCTION-DECL emit_pop_callee_saved_regs LOC=UNKNOWN */
static int emit_pop_callee_saved_regs(struct jit *jit ) ;
/* END FUNCTION-DECL emit_pop_callee_saved_regs LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_calloc LOC=BUILTIN */
/* compiler builtin: 
   void *__builtin_calloc(unsigned long long  , unsigned long long  ) ;  */
/* END FUNCTION-DECL __builtin_calloc LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN strrchr LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:87 */
extern char *strrchr(char const   *__s , int __c ) ;
/* END FUNCTION-DECL-EXTERN strrchr LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:87 */

/* BEGIN FUNCTION-DECL __builtin_lroundl LOC=BUILTIN */
/* compiler builtin: 
   long __builtin_lroundl(long double  ) ;  */
/* END FUNCTION-DECL __builtin_lroundl LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_scalbnl LOC=BUILTIN */
/* compiler builtin: 
   long double __builtin_scalbnl(long double  , int  ) ;  */
/* END FUNCTION-DECL __builtin_scalbnl LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN freopen LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:159 */
extern FILE *freopen(char const   * __restrict   , char const   * __restrict   , FILE * __restrict   )  __asm__("_freopen")  ;
/* END FUNCTION-DECL-EXTERN freopen LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:159 */

/* BEGIN FUNCTION-DECL-EXTERN ffsl LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/strings.h:85 */
extern int ffsl(long  )  __attribute__((__availability__(macosx,introduced=10.5))) ;
/* END FUNCTION-DECL-EXTERN ffsl LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/strings.h:85 */

/* BEGIN FUNCTION-DECL __builtin_ceilf128 LOC=BUILTIN */
/* compiler builtin: 
   _Float128 __builtin_ceilf128(_Float128  ) ;  */
/* END FUNCTION-DECL __builtin_ceilf128 LOC=BUILTIN */

/* BEGIN STRUCT jit_func_info LOC=UNKNOWN */
struct jit_func_info {
   int general_arg_cnt ;
   int float_arg_cnt ;
   long allocai_mem ;
   int arg_capacity ;
   struct jit_inp_arg *args ;
   int gp_reg_count ;
   int fp_reg_count ;
   int has_prolog ;
   struct jit_op *first_op ;
};
/* END STRUCT jit_func_info LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_cexp LOC=BUILTIN */
/* compiler builtin: 
   _Complex double __builtin_cexp(_Complex double  ) ;  */
/* END FUNCTION-DECL __builtin_cexp LOC=BUILTIN */

/* BEGIN FUNCTION-DECL print_op_compilable LOC=UNKNOWN */
int print_op_compilable(struct jit_disasm *disasm , struct jit_op *op , jit_tree *labels ) ;
/* END FUNCTION-DECL print_op_compilable LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_expm1f128 LOC=BUILTIN */
/* compiler builtin: 
   _Float128 __builtin_expm1f128(_Float128  ) ;  */
/* END FUNCTION-DECL __builtin_expm1f128 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN gethostuuid LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/gethostuuid.h:39 */
extern int gethostuuid(unsigned char * , struct timespec  const  * )  __attribute__((__availability__(macosx,introduced=10.5))) ;
/* END FUNCTION-DECL-EXTERN gethostuuid LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/gethostuuid.h:39 */

/* BEGIN FUNCTION-DECL join_addr_addi LOC=UNKNOWN */
static int join_addr_addi(jit_op *op , jit_op *nextop ) ;
/* END FUNCTION-DECL join_addr_addi LOC=UNKNOWN */

/* BEGIN STRUCT __anonstruct_jit_hw_reg_312769258 LOC=UNKNOWN */
struct __anonstruct_jit_hw_reg_312769258 {
   int id ;
   char *name ;
   char callee_saved ;
   char fp ;
   short priority ;
};
/* END STRUCT __anonstruct_jit_hw_reg_312769258 LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_ceil LOC=BUILTIN */
/* compiler builtin: 
   double __builtin_ceil(double  ) ;  */
/* END FUNCTION-DECL __builtin_ceil LOC=BUILTIN */

/* BEGIN FUNCTION-DECL jit_allocai LOC=UNKNOWN */
int jit_allocai(struct jit *jit , int size ) ;
/* END FUNCTION-DECL jit_allocai LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN seed48 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:236 */
extern unsigned short *seed48(unsigned short * ) ;
/* END FUNCTION-DECL-EXTERN seed48 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:236 */

/* BEGIN TYPEDEF __darwin_fsblkcnt_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types.h:58 */
typedef unsigned int __darwin_fsblkcnt_t;
/* END TYPEDEF __darwin_fsblkcnt_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types.h:58 */

/* BEGIN FUNCTION-DECL-EXTERN vdprintf LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:353 */
extern int ( /* format attribute */  vdprintf)(int  , char const   * __restrict   ,
                                               va_list  )  __attribute__((__availability__(macosx,introduced=10.7))) ;
/* END FUNCTION-DECL-EXTERN vdprintf LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:353 */

/* BEGIN FUNCTION-DECL-EXTERN fgets LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:149 */
extern char *fgets(char * __restrict   , int  , FILE * ) ;
/* END FUNCTION-DECL-EXTERN fgets LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:149 */

/* BEGIN TYPEDEF user_long_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/types.h:100 */
typedef int64_t user_long_t;
/* END TYPEDEF user_long_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/types.h:100 */

/* BEGIN FUNCTION-DECL ob_assert_space LOC=UNKNOWN */
static void ob_assert_space(struct output_buf *ob , int len ) ;
/* END FUNCTION-DECL ob_assert_space LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_frame_address LOC=BUILTIN */
/* compiler builtin: 
   void *__builtin_frame_address(unsigned int  ) ;  */
/* END FUNCTION-DECL __builtin_frame_address LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_call_with_static_chain LOC=BUILTIN */
/* compiler builtin: 
   void __builtin_call_with_static_chain(...) ;  */
/* END FUNCTION-DECL __builtin_call_with_static_chain LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_nextafterl LOC=BUILTIN */
/* compiler builtin: 
   long double __builtin_nextafterl(long double  , long double  ) ;  */
/* END FUNCTION-DECL __builtin_nextafterl LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN seteuid LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:625 */
extern int seteuid(uid_t  ) ;
/* END FUNCTION-DECL-EXTERN seteuid LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:625 */

/* BEGIN FUNCTION-DECL join_muli_ori LOC=UNKNOWN */
static int join_muli_ori(jit_op *op , jit_op *nextop ) ;
/* END FUNCTION-DECL join_muli_ori LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_atanl LOC=BUILTIN */
/* compiler builtin: 
   long double __builtin_atanl(long double  ) ;  */
/* END FUNCTION-DECL __builtin_atanl LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN strdup LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:117 */
extern char *strdup(char const   *__s1 ) ;
/* END FUNCTION-DECL-EXTERN strdup LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:117 */

/* BEGIN VARIABLE-DECL-EXTERN sys_errlist LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:368 */
extern char const   *sys_errlist[] ;
/* END VARIABLE-DECL-EXTERN sys_errlist LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:368 */

/* BEGIN FUNCTION-DECL __builtin_ldexpl LOC=BUILTIN */
/* compiler builtin: 
   long double __builtin_ldexpl(long double  , int  ) ;  */
/* END FUNCTION-DECL __builtin_ldexpl LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_fdiml LOC=BUILTIN */
/* compiler builtin: 
   long double __builtin_fdiml(long double  , long double  ) ;  */
/* END FUNCTION-DECL __builtin_fdiml LOC=BUILTIN */

/* BEGIN FUNCTION-DECL jit_set_free LOC=UNKNOWN */
__inline static void jit_set_free(jit_set *s ) ;
/* END FUNCTION-DECL jit_set_free LOC=UNKNOWN */

/* BEGIN TYPEDEF user_size_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/types.h:98 */
typedef u_int64_t user_size_t;
/* END TYPEDEF user_size_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/types.h:98 */

/* BEGIN FUNCTION-DECL-EXTERN pthread_cond_signal_thread_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:531 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_cond_signal_thread_np(pthread_cond_t * ,
                                                                                                                                         pthread_t __attribute__((__nullable__))   ) ;
/* END FUNCTION-DECL-EXTERN pthread_cond_signal_thread_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:531 */

/* BEGIN FUNCTION-DECL get_frame_size LOC=UNKNOWN */
static int get_frame_size(struct jit *jit , struct jit_func_info *info ) ;
/* END FUNCTION-DECL get_frame_size LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_lrintf128 LOC=BUILTIN */
/* compiler builtin: 
   long __builtin_lrintf128(_Float128  ) ;  */
/* END FUNCTION-DECL __builtin_lrintf128 LOC=BUILTIN */

/* BEGIN STRUCT output_buf LOC=UNKNOWN */
struct output_buf {
   char *buf ;
   size_t size ;
   size_t capacity ;
};
/* END STRUCT output_buf LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_truncf16 LOC=BUILTIN */
/* compiler builtin: 
   _Float16 __builtin_truncf16(_Float16  ) ;  */
/* END FUNCTION-DECL __builtin_truncf16 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL jit_assign_regs LOC=UNKNOWN */
void jit_assign_regs(struct jit *jit ) ;
/* END FUNCTION-DECL jit_assign_regs LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN strtold LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:169 */
extern long double strtold(char const   * , char ** ) ;
/* END FUNCTION-DECL-EXTERN strtold LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:169 */

/* BEGIN FUNCTION-DECL __builtin_rotateleft16 LOC=BUILTIN */
/* compiler builtin: 
   short __builtin_rotateleft16(short  , short  ) ;  */
/* END FUNCTION-DECL __builtin_rotateleft16 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN div LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:144 */
extern div_t div(int  , int  )  __attribute__((__const__)) ;
/* END FUNCTION-DECL-EXTERN div LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:144 */

/* BEGIN FUNCTION-DECL-EXTERN bsearch LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:141 */
extern void *bsearch(void const   *__key , void const   *__base , size_t __nel , size_t __width ,
                     int (* _Nonnull  __compar)(void const   * , void const   * ) ) ;
/* END FUNCTION-DECL-EXTERN bsearch LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:141 */

/* BEGIN FUNCTION-DECL __builtin_cabsf LOC=BUILTIN */
/* compiler builtin: 
   float __builtin_cabsf(_Complex float  ) ;  */
/* END FUNCTION-DECL __builtin_cabsf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_apply_args LOC=BUILTIN */
/* compiler builtin: 
   void *__builtin_apply_args(void) ;  */
/* END FUNCTION-DECL __builtin_apply_args LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_nansf128 LOC=BUILTIN */
/* compiler builtin: 
   _Float128 __builtin_nansf128(char const   * ) ;  */
/* END FUNCTION-DECL __builtin_nansf128 LOC=BUILTIN */

/* BEGIN VARIABLE-DEF _TIG_iO_tgVA_2_init_tigress_1_opaque_list_1 LOC=UNKNOWN */
struct _TIG_iO_tgVA_2_init_tigress_1_opaqueNodeStruct *_TIG_iO_tgVA_2_init_tigress_1_opaque_list_1  =    (struct _TIG_iO_tgVA_2_init_tigress_1_opaqueNodeStruct *)0;
/* END VARIABLE-DEF _TIG_iO_tgVA_2_init_tigress_1_opaque_list_1 LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN getattrlistat LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/unistd.h:188 */
extern int getattrlistat(int  , char const   * , void * , void * , size_t  , unsigned long  )  __attribute__((__availability__(macosx,introduced=10.10))) ;
/* END FUNCTION-DECL-EXTERN getattrlistat LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/unistd.h:188 */

/* BEGIN FUNCTION-DECL-EXTERN fgetln LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:372 */
extern char *fgetln(FILE * , size_t * ) ;
/* END FUNCTION-DECL-EXTERN fgetln LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:372 */

/* BEGIN FUNCTION-DECL funcall_prepare_optional LOC=UNKNOWN */
__inline static void funcall_prepare_optional(struct jit *jit ) ;
/* END FUNCTION-DECL funcall_prepare_optional LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN clock_settime LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:187 */
extern int __attribute__((__availability__(watchos,unavailable), __availability__(tvos,unavailable),
__availability__(ios,unavailable), __availability__(macosx,introduced=10.12)))  clock_settime(clockid_t __clock_id ,
                                                                                              struct timespec  const  *__tp ) ;
/* END FUNCTION-DECL-EXTERN clock_settime LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:187 */

/* BEGIN FUNCTION-DECL emit_sub_op LOC=UNKNOWN */
static void emit_sub_op(struct jit *jit , struct jit_op *op , int imm ) ;
/* END FUNCTION-DECL emit_sub_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_canonicalizef16 LOC=BUILTIN */
/* compiler builtin: 
   _Float16 __builtin_canonicalizef16(_Float16  ) ;  */
/* END FUNCTION-DECL __builtin_canonicalizef16 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN pthread_cond_init LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:299 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_cond_init(pthread_cond_t * __restrict   ,
                                                                                                                             pthread_condattr_t const   * _Nullable __restrict   )  __asm__("_pthread_cond_init")  ;
/* END FUNCTION-DECL-EXTERN pthread_cond_init LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:299 */

/* BEGIN FUNCTION-DECL-EXTERN sbrk LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:584 */
extern  __attribute__((__deprecated__)) void __attribute__((__availability__(watchos,unavailable),
__availability__(tvos,unavailable)))  *sbrk(int  ) ;
/* END FUNCTION-DECL-EXTERN sbrk LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:584 */

/* BEGIN FUNCTION-DECL-EXTERN getusershell LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:663 */
extern char *getusershell(void) ;
/* END FUNCTION-DECL-EXTERN getusershell LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:663 */

/* BEGIN VARIABLE-DECL-EXTERN optarg LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:511 */
extern char *optarg ;
/* END VARIABLE-DECL-EXTERN optarg LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:511 */

/* BEGIN FUNCTION-DECL-EXTERN strnstr LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:161 */
extern char *strnstr(char const   *__big , char const   *__little , size_t __len ) ;
/* END FUNCTION-DECL-EXTERN strnstr LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:161 */

/* BEGIN FUNCTION-DECL __builtin_cacosh LOC=BUILTIN */
/* compiler builtin: 
   _Complex double __builtin_cacosh(_Complex double  ) ;  */
/* END FUNCTION-DECL __builtin_cacosh LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_preserve_access_index LOC=BUILTIN */
/* compiler builtin: 
   void __builtin_preserve_access_index(...) ;  */
/* END FUNCTION-DECL __builtin_preserve_access_index LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN ctime LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:110 */
extern char *ctime(time_t const   * ) ;
/* END FUNCTION-DECL-EXTERN ctime LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h:110 */

/* BEGIN FUNCTION-DECL __builtin_log10l LOC=BUILTIN */
/* compiler builtin: 
   long double __builtin_log10l(long double  ) ;  */
/* END FUNCTION-DECL __builtin_log10l LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_strcpy LOC=BUILTIN */
/* compiler builtin: 
   char *__builtin_strcpy(char * , char const   * ) ;  */
/* END FUNCTION-DECL __builtin_strcpy LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN snprintf LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:334 */
extern int ( /* format attribute */  snprintf)(char * __restrict  __str , size_t __size ,
                                               char const   * __restrict  __format 
                                               , ...) ;
/* END FUNCTION-DECL-EXTERN snprintf LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:334 */

/* BEGIN FUNCTION-DECL-EXTERN fsetattrlist LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:750 */
extern int fsetattrlist(int  , void * , void * , size_t  , unsigned int  )  __attribute__((__availability__(macosx,introduced=10.6))) ;
/* END FUNCTION-DECL-EXTERN fsetattrlist LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:750 */

/* BEGIN FUNCTION-DECL emit_ld_op LOC=UNKNOWN */
static void emit_ld_op(struct jit *jit , jit_op *op , jit_value a1 , jit_value a2 ) ;
/* END FUNCTION-DECL emit_ld_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_ceilf16 LOC=BUILTIN */
/* compiler builtin: 
   _Float16 __builtin_ceilf16(_Float16  ) ;  */
/* END FUNCTION-DECL __builtin_ceilf16 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_strcspn LOC=BUILTIN */
/* compiler builtin: 
   unsigned long long __builtin_strcspn(char const   * , char const   * ) ;  */
/* END FUNCTION-DECL __builtin_strcspn LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_clz LOC=BUILTIN */
/* compiler builtin: 
   int __builtin_clz(unsigned int  ) ;  */
/* END FUNCTION-DECL __builtin_clz LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN fsetpos LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:163 */
extern int fsetpos(FILE * , fpos_t const   * ) ;
/* END FUNCTION-DECL-EXTERN fsetpos LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:163 */

/* BEGIN FUNCTION-DECL __builtin_bzero LOC=BUILTIN */
/* compiler builtin: 
   void __builtin_bzero(void * , unsigned long long  ) ;  */
/* END FUNCTION-DECL __builtin_bzero LOC=BUILTIN */

/* BEGIN FUNCTION-DECL sync_reg LOC=UNKNOWN */
static void sync_reg(jit_op *op , jit_hw_reg *hreg , jit_value virt_reg ) ;
/* END FUNCTION-DECL sync_reg LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_ssubll_overflow LOC=BUILTIN */
/* compiler builtin: 
   _Bool __builtin_ssubll_overflow(long long const    , long long const    , long long * ) ;  */
/* END FUNCTION-DECL __builtin_ssubll_overflow LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN stpncpy LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:131 */
extern char *stpncpy(char *__dst , char const   *__src , size_t __n )  __attribute__((__availability__(macosx,introduced=10.7))) ;
/* END FUNCTION-DECL-EXTERN stpncpy LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:131 */

/* BEGIN FUNCTION-DECL hints_refcount_inc LOC=UNKNOWN */
static void hints_refcount_inc(jit_tree *hints ) ;
/* END FUNCTION-DECL hints_refcount_inc LOC=UNKNOWN */

/* BEGIN TYPEDEF __int16_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_types.h:42 */
typedef short __int16_t;
/* END TYPEDEF __int16_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_types.h:42 */

/* BEGIN FUNCTION-DECL __builtin_memcmp LOC=BUILTIN */
/* compiler builtin: 
   int __builtin_memcmp(void const   * , void const   * , unsigned long long  ) ;  */
/* END FUNCTION-DECL __builtin_memcmp LOC=BUILTIN */

/* BEGIN TYPEDEF rusage_info_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/resource.h:193 */
typedef void *rusage_info_t;
/* END TYPEDEF rusage_info_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/resource.h:193 */

/* BEGIN FUNCTION-DECL __builtin_tgmath LOC=BUILTIN */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __builtin_tgmath(...) ;  */
/* END FUNCTION-DECL __builtin_tgmath LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN getdomainname LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:649 */
extern int getdomainname(char * , int  ) ;
/* END FUNCTION-DECL-EXTERN getdomainname LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:649 */

/* BEGIN FUNCTION-DECL-EXTERN accessx_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:643 */
extern int accessx_np(struct accessx_descriptor  const  * , size_t  , int * , uid_t  ) ;
/* END FUNCTION-DECL-EXTERN accessx_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:643 */

/* BEGIN FUNCTION-DECL-EXTERN tmpnam LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:188 */
extern  __attribute__((__deprecated__("This function is provided for compatibility reasons only.  Due to security concerns inherent in the design of tmpnam(3), it is highly recommended that you use mkstemp(3) instead."))) char __attribute__((__availability__(swift,unavailable,message="Use mkstemp(3) instead.")))  *tmpnam(char * ) ;
/* END FUNCTION-DECL-EXTERN tmpnam LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:188 */

/* BEGIN FUNCTION-DECL-EXTERN aligned_alloc LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/malloc/_malloc.h:50 */
extern void *( __attribute__((__warn_unused_result__)) aligned_alloc)(size_t __alignment ,
                                                                      size_t __size )  __attribute__((__availability__(watchos,introduced=6.0),
__availability__(tvos,introduced=13.0), __availability__(ios,introduced=13.0), __availability__(macosx,introduced=10.15),
__alloc_size__(2))) ;
/* END FUNCTION-DECL-EXTERN aligned_alloc LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/malloc/_malloc.h:50 */

/* BEGIN FUNCTION-DECL __builtin_return LOC=BUILTIN */
/* compiler builtin: 
   void __builtin_return(void const   * ) ;  */
/* END FUNCTION-DECL __builtin_return LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_sprintf LOC=BUILTIN */
/* compiler builtin: 
   int __builtin_sprintf(char * , char const   *  , ...) ;  */
/* END FUNCTION-DECL __builtin_sprintf LOC=BUILTIN */

/* BEGIN TYPEDEF uint_fast32_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdint.h:46 */
typedef uint32_t uint_fast32_t;
/* END TYPEDEF uint_fast32_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdint.h:46 */

/* BEGIN FUNCTION-DECL ob_free LOC=UNKNOWN */
static void ob_free(struct output_buf *ob ) ;
/* END FUNCTION-DECL ob_free LOC=UNKNOWN */

/* BEGIN STRUCT clockinfo LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/time.h:172 */
struct clockinfo {
   int hz ;
   int tick ;
   int tickadj ;
   int stathz ;
   int profhz ;
};
/* END STRUCT clockinfo LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/time.h:172 */

/* BEGIN FUNCTION-DECL-EXTERN ldiv LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:149 */
extern ldiv_t ldiv(long  , long  )  __attribute__((__const__)) ;
/* END FUNCTION-DECL-EXTERN ldiv LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:149 */

/* BEGIN FUNCTION-DECL-EXTERN arc4random_buf LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:270 */
extern void arc4random_buf(void *__buf , size_t __nbytes )  __attribute__((__availability__(macosx,introduced=10.7))) ;
/* END FUNCTION-DECL-EXTERN arc4random_buf LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:270 */

/* BEGIN FUNCTION-DECL emit_arguments LOC=UNKNOWN */
__inline static int emit_arguments(struct jit *jit ) ;
/* END FUNCTION-DECL emit_arguments LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN psort_r LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:331 */
extern void psort_r(void *__base , size_t __nel , size_t __width , void * , int (* _Nonnull  __compar)(void * ,
                                                                                                       void const   * ,
                                                                                                       void const   * ) )  __attribute__((__availability__(macosx,introduced=10.6))) ;
/* END FUNCTION-DECL-EXTERN psort_r LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:331 */

/* BEGIN FUNCTION-DECL __builtin_wcschr LOC=BUILTIN */
/* compiler builtin: 
   unsigned short *__builtin_wcschr(unsigned short * const   , unsigned short  ) ;  */
/* END FUNCTION-DECL __builtin_wcschr LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_signbit LOC=BUILTIN */
/* compiler builtin: 
   int __builtin_signbit(...) ;  */
/* END FUNCTION-DECL __builtin_signbit LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_logf16 LOC=BUILTIN */
/* compiler builtin: 
   _Float16 __builtin_logf16(_Float16  ) ;  */
/* END FUNCTION-DECL __builtin_logf16 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_dynamic_object_size LOC=BUILTIN */
/* compiler builtin: 
   unsigned long long __builtin_dynamic_object_size(void const   * , int  ) ;  */
/* END FUNCTION-DECL __builtin_dynamic_object_size LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_ctanf LOC=BUILTIN */
/* compiler builtin: 
   _Complex float __builtin_ctanf(_Complex float  ) ;  */
/* END FUNCTION-DECL __builtin_ctanf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_extend_pointer LOC=BUILTIN */
/* compiler builtin: 
   unsigned __int128 __builtin_extend_pointer(void * ) ;  */
/* END FUNCTION-DECL __builtin_extend_pointer LOC=BUILTIN */

/* BEGIN FUNCTION-DECL shift_index LOC=UNKNOWN */
static int shift_index(int arg ) ;
/* END FUNCTION-DECL shift_index LOC=UNKNOWN */

/* BEGIN TYPEDEF __darwin_mbstate_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_types.h:81 */
typedef __mbstate_t __darwin_mbstate_t;
/* END TYPEDEF __darwin_mbstate_t LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/i386/_types.h:81 */

/* BEGIN FUNCTION-DECL jit_reg_in_use LOC=UNKNOWN */
int jit_reg_in_use(jit_op *op , int reg , int fp ) ;
/* END FUNCTION-DECL jit_reg_in_use LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_thread_pointer LOC=BUILTIN */
/* compiler builtin: 
   void *__builtin_thread_pointer(void) ;  */
/* END FUNCTION-DECL __builtin_thread_pointer LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_bcopy LOC=BUILTIN */
/* compiler builtin: 
   void __builtin_bcopy(void const   * , void * , unsigned long long  ) ;  */
/* END FUNCTION-DECL __builtin_bcopy LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_printf LOC=BUILTIN */
/* compiler builtin: 
   int __builtin_printf(char const   *  , ...) ;  */
/* END FUNCTION-DECL __builtin_printf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN iruserok_sa LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:711 */
extern  __attribute__((__deprecated__)) int iruserok_sa(void const   * , int  , int  ,
                                                        char const   * , char const   * ) ;
/* END FUNCTION-DECL-EXTERN iruserok_sa LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:711 */

/* BEGIN FUNCTION-DECL emit_push_arg LOC=UNKNOWN */
__inline static void emit_push_arg(struct jit *jit , struct jit_out_arg *arg ) ;
/* END FUNCTION-DECL emit_push_arg LOC=UNKNOWN */

/* BEGIN TYPEDEF va_list___0 LOC=UNKNOWN */
typedef __darwin_va_list va_list___0;
/* END TYPEDEF va_list___0 LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN select LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_select.h:39 */
extern int select(int  , fd_set * __restrict   , fd_set * __restrict   , fd_set * __restrict   ,
                  struct timeval * __restrict   )  __asm__("_select$1050")  ;
/* END FUNCTION-DECL-EXTERN select LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_select.h:39 */

/* BEGIN FUNCTION-DECL-EXTERN pthread_rwlockattr_init LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:471 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_rwlockattr_init(pthread_rwlockattr_t * ) ;
/* END FUNCTION-DECL-EXTERN pthread_rwlockattr_init LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:471 */

/* BEGIN FUNCTION-DECL __builtin_logl LOC=BUILTIN */
/* compiler builtin: 
   long double __builtin_logl(long double  ) ;  */
/* END FUNCTION-DECL __builtin_logl LOC=BUILTIN */

/* BEGIN FUNCTION-DECL list_callee_saved_regs LOC=UNKNOWN */
static int list_callee_saved_regs(struct jit *jit , jit_op *func_start , jit_hw_reg **active_regs ,
                                  int *count ) ;
/* END FUNCTION-DECL list_callee_saved_regs LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN settimeofday LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/time.h:193 */
extern int settimeofday(struct timeval  const  * , struct timezone  const  * ) ;
/* END FUNCTION-DECL-EXTERN settimeofday LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/time.h:193 */

/* BEGIN FUNCTION-DECL-EXTERN pthread_rwlock_trywrlock LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:455 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_rwlock_trywrlock(pthread_rwlock_t * )  __asm__("_pthread_rwlock_trywrlock")  ;
/* END FUNCTION-DECL-EXTERN pthread_rwlock_trywrlock LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:455 */

/* BEGIN FUNCTION-DECL rmap_spill_candidate LOC=UNKNOWN */
static jit_hw_reg *rmap_spill_candidate(struct jit_reg_allocator *al , jit_op *op ,
                                        jit_value virtreg , int *spill , jit_value *reg_to_spill ,
                                        int callee_saved ) ;
/* END FUNCTION-DECL rmap_spill_candidate LOC=UNKNOWN */

/* BEGIN TYPEDEF x86_imm_buf LOC=UNKNOWN */
typedef union __anonunion_x86_imm_buf_876386805 x86_imm_buf;
/* END TYPEDEF x86_imm_buf LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN pthread_attr_setdetachstate LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:262 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_attr_setdetachstate(pthread_attr_t * ,
                                                                                                                                       int  ) ;
/* END FUNCTION-DECL-EXTERN pthread_attr_setdetachstate LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:262 */

/* BEGIN FUNCTION-DECL jit_free_op LOC=UNKNOWN */
__inline static void jit_free_op(struct jit_op *op ) ;
/* END FUNCTION-DECL jit_free_op LOC=UNKNOWN */

/* BEGIN VARIABLE-DEF jit_disasm_general LOC=UNKNOWN */
struct jit_disasm jit_disasm_general  = 
     {"    ", "r%i", "fr%i", "arg%i", "farg%i", "fp", "out", "imm", "fimm", "(unknown reg.)",
    "L%i", "L%i", "<addr: 0x%zx>", "0x%zx"};
/* END VARIABLE-DEF jit_disasm_general LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL analyze_function LOC=UNKNOWN */
__inline static void analyze_function(struct jit *jit , jit_op *first_op , jit_op *last_op ) ;
/* END FUNCTION-DECL analyze_function LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN madvise LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/mman.h:242 */
extern int madvise(void * , size_t  , int  ) ;
/* END FUNCTION-DECL-EXTERN madvise LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/mman.h:242 */

/* BEGIN FUNCTION-DECL jit_tree_search LOC=UNKNOWN */
static jit_tree *jit_tree_search(jit_tree *h , jit_tree_key key ) ;
/* END FUNCTION-DECL jit_tree_search LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN fchownat LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/unistd.h:208 */
extern int fchownat(int  , char const   * , uid_t  , gid_t  , int  )  __attribute__((__availability__(macosx,introduced=10.10))) ;
/* END FUNCTION-DECL-EXTERN fchownat LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/unistd.h:208 */

/* BEGIN FUNCTION-DECL __builtin_fabsf16 LOC=BUILTIN */
/* compiler builtin: 
   _Float16 __builtin_fabsf16(_Float16  ) ;  */
/* END FUNCTION-DECL __builtin_fabsf16 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_tanhf LOC=BUILTIN */
/* compiler builtin: 
   float __builtin_tanhf(float  ) ;  */
/* END FUNCTION-DECL __builtin_tanhf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_ctan LOC=BUILTIN */
/* compiler builtin: 
   _Complex double __builtin_ctan(_Complex double  ) ;  */
/* END FUNCTION-DECL __builtin_ctan LOC=BUILTIN */

/* BEGIN FUNCTION-DECL rmap_subset LOC=UNKNOWN */
static int rmap_subset(jit_op *op , jit_tree *current , jit_tree *target ) ;
/* END FUNCTION-DECL rmap_subset LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN memccpy LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:118 */
extern void *memccpy(void *__dst , void const   *__src , int __c , size_t __n ) ;
/* END FUNCTION-DECL-EXTERN memccpy LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:118 */

/* BEGIN FUNCTION-DECL __builtin_add_overflow LOC=BUILTIN */
/* compiler builtin: 
   _Bool __builtin_add_overflow(...) ;  */
/* END FUNCTION-DECL __builtin_add_overflow LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN pthread_attr_destroy LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:226 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_attr_destroy(pthread_attr_t * ) ;
/* END FUNCTION-DECL-EXTERN pthread_attr_destroy LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:226 */

/* BEGIN FUNCTION-DECL candidate_score LOC=UNKNOWN */
static int candidate_score(jit_op *op , jit_value virtreg , jit_hw_reg *hreg , int *spill ,
                           jit_value *associated_virtreg ) ;
/* END FUNCTION-DECL candidate_score LOC=UNKNOWN */

/* BEGIN VARIABLE-DEF _TIG_iO_tgVA_2_init_tigress_1_opaque_list_2 LOC=UNKNOWN */
struct _TIG_iO_tgVA_2_init_tigress_1_opaqueNodeStruct *_TIG_iO_tgVA_2_init_tigress_1_opaque_list_2  =    (struct _TIG_iO_tgVA_2_init_tigress_1_opaqueNodeStruct *)0;
/* END VARIABLE-DEF _TIG_iO_tgVA_2_init_tigress_1_opaque_list_2 LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN getdirentriesattr LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:754 */
extern int getdirentriesattr(int  , void * , void * , size_t  , unsigned int * , unsigned int * ,
                             unsigned int * , unsigned int  )  __attribute__((__availability__(tvos,unavailable),
__availability__(watchos,unavailable))) ;
/* END FUNCTION-DECL-EXTERN getdirentriesattr LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:754 */

/* BEGIN FUNCTION-DECL-EXTERN memchr LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:70 */
extern void *memchr(void const   *__s , int __c , size_t __n ) ;
/* END FUNCTION-DECL-EXTERN memchr LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:70 */

/* BEGIN FUNCTION-DECL-EXTERN setrlimit LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/resource.h:455 */
extern int setrlimit(int  , struct rlimit  const  * )  __asm__("_setrlimit")  ;
/* END FUNCTION-DECL-EXTERN setrlimit LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/resource.h:455 */

/* BEGIN FUNCTION-DECL-EXTERN mkpathat_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:670 */
extern int mkpathat_np(int dfd , char const   *path , mode_t omode )  __attribute__((__availability__(watchos,introduced=3.0),
__availability__(tvos,introduced=10.0), __availability__(ios,introduced=10.0), __availability__(macosx,introduced=10.12))) ;
/* END FUNCTION-DECL-EXTERN mkpathat_np LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:670 */

/* BEGIN FUNCTION-DECL __builtin_signbitf LOC=BUILTIN */
/* compiler builtin: 
   int __builtin_signbitf(float  ) ;  */
/* END FUNCTION-DECL __builtin_signbitf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN perror LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:169 */
extern void perror(char const   * )  __attribute__((__cold__)) ;
/* END FUNCTION-DECL-EXTERN perror LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:169 */

/* BEGIN FUNCTION-DECL color_flip LOC=UNKNOWN */
__inline static void color_flip(jit_tree *h ) ;
/* END FUNCTION-DECL color_flip LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_atan2l LOC=BUILTIN */
/* compiler builtin: 
   long double __builtin_atan2l(long double  , long double  ) ;  */
/* END FUNCTION-DECL __builtin_atan2l LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin___vfprintf_chk LOC=BUILTIN */
/* compiler builtin: 
   int __builtin___vfprintf_chk(void * , int  , char const   * , __builtin_va_list  ) ;  */
/* END FUNCTION-DECL __builtin___vfprintf_chk LOC=BUILTIN */

/* BEGIN FUNCTION-DECL jit_get_reg_name LOC=UNKNOWN */
void jit_get_reg_name(struct jit_disasm *disasm , char *r , int reg ) ;
/* END FUNCTION-DECL jit_get_reg_name LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_apply LOC=BUILTIN */
/* compiler builtin: 
   void *__builtin_apply(void (*)() , void * , unsigned long long  ) ;  */
/* END FUNCTION-DECL __builtin_apply LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_fmaxl LOC=BUILTIN */
/* compiler builtin: 
   long double __builtin_fmaxl(long double  , long double  ) ;  */
/* END FUNCTION-DECL __builtin_fmaxl LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN execlp LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:443 */
extern int execlp(char const   *__file , char const   *__arg0  , ...)  __attribute__((__availability__(tvos,unavailable),
__availability__(watchos,unavailable))) ;
/* END FUNCTION-DECL-EXTERN execlp LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:443 */

/* BEGIN FUNCTION-DECL __builtin_os_log_format LOC=BUILTIN */
/* compiler builtin: 
   void *__builtin_os_log_format(void * , char const   *  , ...) ;  */
/* END FUNCTION-DECL __builtin_os_log_format LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN flsl LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/strings.h:88 */
extern int flsl(long  )  __attribute__((__availability__(macosx,introduced=10.5))) ;
/* END FUNCTION-DECL-EXTERN flsl LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/strings.h:88 */

/* BEGIN FUNCTION-DECL-EXTERN fflagstostr LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:648 */
extern char *fflagstostr(unsigned long  ) ;
/* END FUNCTION-DECL-EXTERN fflagstostr LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/unistd.h:648 */

/* BEGIN FUNCTION-DECL __builtin_rintf LOC=BUILTIN */
/* compiler builtin: 
   float __builtin_rintf(float  ) ;  */
/* END FUNCTION-DECL __builtin_rintf LOC=BUILTIN */

/* BEGIN FUNCTION-DECL-EXTERN pthread_cond_timedwait LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:308 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_cond_timedwait(pthread_cond_t * __restrict   ,
                                                                                                                                  pthread_mutex_t * __restrict   ,
                                                                                                                                  struct timespec  const  * _Nullable __restrict   )  __asm__("_pthread_cond_timedwait")  ;
/* END FUNCTION-DECL-EXTERN pthread_cond_timedwait LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:308 */

/* BEGIN FUNCTION-DECL-EXTERN strndup LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:132 */
extern char *strndup(char const   *__s1 , size_t __n )  __attribute__((__availability__(macosx,introduced=10.7))) ;
/* END FUNCTION-DECL-EXTERN strndup LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h:132 */

/* BEGIN FUNCTION-DECL emit_sse_fld_op LOC=UNKNOWN */
static void emit_sse_fld_op(struct jit *jit , jit_op *op , jit_value a1 , jit_value a2 ) ;
/* END FUNCTION-DECL emit_sse_fld_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN rand LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:162 */
extern int rand(void)  __attribute__((__availability__(swift,unavailable,message="Use arc4random instead."))) ;
/* END FUNCTION-DECL-EXTERN rand LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:162 */

/* BEGIN FUNCTION-DECL-EXTERN pthread_cancel LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:290 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_cancel(pthread_t  )  __asm__("_pthread_cancel")  ;
/* END FUNCTION-DECL-EXTERN pthread_cancel LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:290 */

/* BEGIN FUNCTION-DECL-EXTERN posix_madvise LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/mman.h:239 */
extern int posix_madvise(void * , size_t  , int  ) ;
/* END FUNCTION-DECL-EXTERN posix_madvise LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/mman.h:239 */

/* BEGIN FUNCTION-DECL __builtin_remainder LOC=BUILTIN */
/* compiler builtin: 
   double __builtin_remainder(double  , double  ) ;  */
/* END FUNCTION-DECL __builtin_remainder LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_atanhl LOC=BUILTIN */
/* compiler builtin: 
   long double __builtin_atanhl(long double  ) ;  */
/* END FUNCTION-DECL __builtin_atanhl LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_exp2f128 LOC=BUILTIN */
/* compiler builtin: 
   _Float128 __builtin_exp2f128(_Float128  ) ;  */
/* END FUNCTION-DECL __builtin_exp2f128 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL __builtin_ia32_unpcklps LOC=BUILTIN */
/* compiler builtin: 
   float __attribute__((____vector_size____(16)))  __builtin_ia32_unpcklps(float __attribute__((____vector_size____(16)))   ,
                                                                           float __attribute__((____vector_size____(16)))   ) ;  */
/* END FUNCTION-DECL __builtin_ia32_unpcklps LOC=BUILTIN */

/* BEGIN FUNCTION-DECL jit_dump_ops LOC=UNKNOWN */
void jit_dump_ops(struct jit *jit , int verbosity ) ;
/* END FUNCTION-DECL jit_dump_ops LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_fpclassify LOC=BUILTIN */
/* compiler builtin: 
   int __builtin_fpclassify(int  , int  , int  , int  , int   , ...) ;  */
/* END FUNCTION-DECL __builtin_fpclassify LOC=BUILTIN */

/* BEGIN STRUCT rlimit LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/resource.h:365 */
struct rlimit {
   rlim_t rlim_cur ;
   rlim_t rlim_max ;
};
/* END STRUCT rlimit LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/resource.h:365 */

/* BEGIN STRUCT jit_set LOC=UNKNOWN */
struct jit_set {
   jit_tree *root ;
};
/* END STRUCT jit_set LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN pthread_create LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:332 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_create(pthread_t __attribute__((__nullable__))  * _Nonnull __restrict   ,
                                                                                                                          pthread_attr_t const   * _Nullable __restrict   ,
                                                                                                                          void * _Nullable  (* _Nonnull  )(void * _Nullable   ) ,
                                                                                                                          void * _Nullable __restrict   ) ;
/* END FUNCTION-DECL-EXTERN pthread_create LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:332 */

/* BEGIN FUNCTION-DECL __builtin_log10 LOC=BUILTIN */
/* compiler builtin: 
   double __builtin_log10(double  ) ;  */
/* END FUNCTION-DECL __builtin_log10 LOC=BUILTIN */

/* BEGIN FUNCTION-DECL jit_disable_optimization LOC=UNKNOWN */
void jit_disable_optimization(struct jit *jit , int opt ) ;
/* END FUNCTION-DECL jit_disable_optimization LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL jit_tree_delete LOC=UNKNOWN */
__inline static jit_tree *jit_tree_delete(jit_tree *root , jit_tree_key key , int *found ) ;
/* END FUNCTION-DECL jit_tree_delete LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL __builtin_wcslen LOC=BUILTIN */
/* compiler builtin: 
   unsigned long long __builtin_wcslen(unsigned short * const   ) ;  */
/* END FUNCTION-DECL __builtin_wcslen LOC=BUILTIN */

/* BEGIN FUNCTION-DECL _cipher$_xtea_decipher LOC=UNKNOWN */
void _cipher$_xtea_decipher(unsigned int block_no , unsigned int num_rounds , unsigned int *v ,
                            unsigned int *key , unsigned int size ) ;
/* END FUNCTION-DECL _cipher$_xtea_decipher LOC=UNKNOWN */

/* BEGIN FUNCTION-DECL-EXTERN pthread_cond_destroy LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:296 */
extern int __attribute__((__availability__(ios,introduced=2.0), __availability__(macos,introduced=10.4)))  pthread_cond_destroy(pthread_cond_t * ) ;
/* END FUNCTION-DECL-EXTERN pthread_cond_destroy LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/pthread.h:296 */

/* BEGIN STRUCT __anonstruct_div_t_773697287 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:83 */
struct __anonstruct_div_t_773697287 {
   int quot ;
   int rem ;
};
/* END STRUCT __anonstruct_div_t_773697287 LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:83 */

/* BEGIN FUNCTION-DEF mark_calleesaved_regs LOC=UNKNOWN */
static void mark_calleesaved_regs(jit_tree *hint , jit_op *op ) 
{ 
  struct jit_allocator_hint *h ;
  jit_value reg ;
  int tmp ;

  {
#line 6152
  if ((unsigned long )hint == (unsigned long )((void *)0)) {
#line 6152
    return;
  }
#line 6153
  h = (struct jit_allocator_hint *)hint->value;
#line 6154
  reg = hint->key;
#line 6155
  tmp = jit_set_get(op->live_out, (int )reg);
#line 6155
  if (tmp) {
#line 6155
    (h->should_be_calleesaved) ++;
  }
#line 6156
  mark_calleesaved_regs(hint->left, op);
#line 6157
  mark_calleesaved_regs(hint->right, op);
#line 6158
  return;
}
}
/* END FUNCTION-DEF mark_calleesaved_regs LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF node_min LOC=UNKNOWN */
__inline static jit_tree_key node_min(jit_tree *x ) 
{ 
  jit_tree_key tmp ;

  {
#line 2159
  if ((unsigned long )x->left == (unsigned long )((void *)0)) {
#line 2159
    return (x->key);
  } else {
#line 2160
    tmp = node_min(x->left);
#line 2160
    return (tmp);
  }
}
}
/* END FUNCTION-DEF node_min LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF analyze_function LOC=UNKNOWN */
__inline static void analyze_function(struct jit *jit , jit_op *first_op , jit_op *last_op ) 
{ 
  int changed ;
  struct code_refs_cache code_refs ;
  struct jit_func_info *func_info ;
  jit_op *op ;
  int tmp ;

  {
#line 4838
  code_refs.size = -1;
#line 4838
  code_refs.ops = (jit_op **)((void *)0);
#line 4839
  func_info = (struct jit_func_info *)first_op->arg[1];
#line 4840
  while (1) {
#line 4841
    changed = 0;
#line 4842
    op = last_op;
#line 4843
    while (1) {
#line 4844
      tmp = flw_analyze_op(jit, op, func_info, changed, & code_refs);
#line 4844
      changed |= tmp;
#line 4845
      if ((unsigned long )op == (unsigned long )first_op) {
#line 4845
        break;
      }
#line 4846
      op = op->prev;
    }
#line 4840
    if (! changed) {
#line 4840
      break;
    }
  }
#line 4849
  if (code_refs.ops) {
#line 4849
    free((void *)code_refs.ops);
  }
#line 4850
  return;
}
}
/* END FUNCTION-DEF analyze_function LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_tree_size LOC=UNKNOWN */
static int jit_tree_size(jit_tree *h ) 
{ 
  int tmp ;
  int tmp___0 ;

  {
#line 2253
  if ((unsigned long )h == (unsigned long )((void *)0)) {
#line 2253
    return (0);
  }
#line 2254
  tmp = jit_tree_size(h->left);
#line 2254
  tmp___0 = jit_tree_size(h->right);
#line 2254
  return ((tmp + tmp___0) + 1);
}
}
/* END FUNCTION-DEF jit_tree_size LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF emit_sse_floor LOC=UNKNOWN */
static void emit_sse_floor(struct jit *jit , jit_value a1 , jit_value a2 , int floor ) 
{ 
  int tmp_reg ;
  int tmp ;
  unsigned char *tmp___0 ;
  unsigned char _amd64_rex_bits ;
  int tmp___1 ;
  int tmp___2 ;
  unsigned char *tmp___3 ;
  unsigned char *tmp___4 ;
  unsigned char *tmp___5 ;
  unsigned char *tmp___6 ;
  unsigned char *tmp___7 ;
  unsigned char _amd64_rex_bits___0 ;
  int tmp___8 ;
  int tmp___9 ;
  unsigned char *tmp___10 ;
  unsigned char *tmp___11 ;
  unsigned char *tmp___12 ;
  unsigned char *tmp___13 ;
  unsigned char *tmp___14 ;
  unsigned char _amd64_rex_bits___1 ;
  int tmp___15 ;
  int tmp___16 ;
  unsigned char *tmp___17 ;
  unsigned char *tmp___18 ;
  unsigned char *tmp___19 ;
  unsigned char *tmp___20 ;
  unsigned char *tmp___21 ;
  unsigned char _amd64_rex_bits___2 ;
  int tmp___22 ;
  int tmp___23 ;
  unsigned char *tmp___24 ;
  unsigned char *tmp___25 ;
  unsigned char *tmp___26 ;
  unsigned char *tmp___27 ;
  unsigned char *tmp___28 ;
  unsigned char _amd64_rex_bits___3 ;
  int tmp___29 ;
  int tmp___30 ;
  unsigned char *tmp___31 ;
  unsigned char *tmp___32 ;
  unsigned char *tmp___33 ;
  unsigned char *tmp___34 ;
  unsigned char _amd64_rex_bits___4 ;
  int tmp___35 ;
  unsigned char *tmp___36 ;
  unsigned char *tmp___37 ;
  unsigned char *tmp___38 ;
  unsigned char _amd64_rex_bits___5 ;
  unsigned char *tmp___39 ;
  unsigned char *tmp___40 ;
  x86_imm_buf imb ;
  unsigned char *tmp___41 ;
  unsigned char *tmp___42 ;
  unsigned char *tmp___43 ;
  unsigned char *tmp___44 ;
  unsigned char _amd64_rex_bits___6 ;
  int tmp___45 ;
  unsigned char *tmp___46 ;
  unsigned char *tmp___47 ;
  unsigned char *tmp___48 ;
  x86_imm_buf imb___0 ;
  unsigned char *tmp___49 ;
  unsigned char *tmp___50 ;
  unsigned char *tmp___51 ;
  unsigned char *tmp___52 ;
  unsigned char *tmp___53 ;
  unsigned char _amd64_rex_bits___7 ;
  int tmp___54 ;
  int tmp___55 ;
  unsigned char *tmp___56 ;
  unsigned char *tmp___57 ;
  unsigned char *tmp___58 ;
  unsigned char *tmp___59 ;
  unsigned char _amd64_rex_bits___8 ;
  int tmp___60 ;
  unsigned char *tmp___61 ;
  unsigned char *tmp___62 ;
  unsigned char *tmp___63 ;
  unsigned char _amd64_rex_bits___9 ;
  unsigned char *tmp___64 ;
  unsigned char *tmp___65 ;
  x86_imm_buf imb___1 ;
  unsigned char *tmp___66 ;
  unsigned char *tmp___67 ;
  unsigned char *tmp___68 ;
  unsigned char *tmp___69 ;
  unsigned char _amd64_rex_bits___10 ;
  int tmp___70 ;
  unsigned char *tmp___71 ;
  unsigned char *tmp___72 ;
  unsigned char *tmp___73 ;
  x86_imm_buf imb___2 ;
  unsigned char *tmp___74 ;
  unsigned char *tmp___75 ;
  unsigned char *tmp___76 ;
  unsigned char *tmp___77 ;
  unsigned char *tmp___78 ;
  unsigned char _amd64_rex_bits___11 ;
  int tmp___79 ;
  int tmp___80 ;
  unsigned char *tmp___81 ;
  unsigned char *tmp___82 ;
  unsigned char *tmp___83 ;
  unsigned char *tmp___84 ;
  unsigned char *tmp___85 ;
  unsigned char _amd64_rex_bits___12 ;
  int tmp___86 ;
  int tmp___87 ;
  unsigned char *tmp___88 ;
  unsigned char *tmp___89 ;
  unsigned char *tmp___90 ;
  unsigned char *tmp___91 ;

  {
#line 3065
  if (a2 == 7L) {
#line 3065
    tmp = 0;
  } else {
#line 3065
    tmp = 7;
  }
#line 3065
  tmp_reg = tmp;
#line 3066
  while (1) {
#line 3066
    while (1) {
#line 3066
      tmp___0 = jit->ip;
#line 3066
      (jit->ip) ++;
#line 3066
      *tmp___0 = (unsigned char)102;
#line 3066
      while (1) {
#line 3066
        if (a2 > 7L) {
#line 3066
          tmp___1 = 4;
        } else {
#line 3066
          tmp___1 = 0;
        }
#line 3066
        if (a2 > 7L) {
#line 3066
          tmp___2 = 1;
        } else {
#line 3066
          tmp___2 = 0;
        }
#line 3066
        _amd64_rex_bits = (unsigned char )(tmp___1 | tmp___2);
#line 3066
        if ((int )_amd64_rex_bits != 0) {
#line 3066
          tmp___3 = jit->ip;
#line 3066
          (jit->ip) ++;
#line 3066
          *tmp___3 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
        }
#line 3066
        break;
      }
#line 3066
      tmp___4 = jit->ip;
#line 3066
      (jit->ip) ++;
#line 3066
      *tmp___4 = (unsigned char)15;
#line 3066
      tmp___5 = jit->ip;
#line 3066
      (jit->ip) ++;
#line 3066
      *tmp___5 = (unsigned char)198;
#line 3066
      while (1) {
#line 3066
        while (1) {
#line 3066
          tmp___6 = jit->ip;
#line 3066
          (jit->ip) ++;
#line 3066
          *tmp___6 = (unsigned char )(((long )(3 << 6) | ((a2 & 7L) << 3)) | (a2 & 7L));
#line 3066
          break;
        }
#line 3066
        break;
      }
#line 3066
      break;
    }
#line 3066
    while (1) {
#line 3066
      *(jit->ip) = (unsigned char)0;
#line 3066
      (jit->ip) ++;
#line 3066
      break;
    }
#line 3066
    break;
  }
#line 3067
  while (1) {
#line 3067
    while (1) {
#line 3067
      tmp___7 = jit->ip;
#line 3067
      (jit->ip) ++;
#line 3067
      *tmp___7 = (unsigned char)102;
#line 3067
      while (1) {
#line 3067
        if (tmp_reg > 7) {
#line 3067
          tmp___8 = 4;
        } else {
#line 3067
          tmp___8 = 0;
        }
#line 3067
        if (tmp_reg > 7) {
#line 3067
          tmp___9 = 1;
        } else {
#line 3067
          tmp___9 = 0;
        }
#line 3067
        _amd64_rex_bits___0 = (unsigned char )(tmp___8 | tmp___9);
#line 3067
        if ((int )_amd64_rex_bits___0 != 0) {
#line 3067
          tmp___10 = jit->ip;
#line 3067
          (jit->ip) ++;
#line 3067
          *tmp___10 = (unsigned char )(0x40 | (int )_amd64_rex_bits___0);
        }
#line 3067
        break;
      }
#line 3067
      tmp___11 = jit->ip;
#line 3067
      (jit->ip) ++;
#line 3067
      *tmp___11 = (unsigned char)15;
#line 3067
      tmp___12 = jit->ip;
#line 3067
      (jit->ip) ++;
#line 3067
      *tmp___12 = (unsigned char)198;
#line 3067
      while (1) {
#line 3067
        while (1) {
#line 3067
          tmp___13 = jit->ip;
#line 3067
          (jit->ip) ++;
#line 3067
          *tmp___13 = (unsigned char )(((3 << 6) | ((tmp_reg & 0x07) << 3)) | (tmp_reg & 0x07));
#line 3067
          break;
        }
#line 3067
        break;
      }
#line 3067
      break;
    }
#line 3067
    while (1) {
#line 3067
      *(jit->ip) = (unsigned char)0;
#line 3067
      (jit->ip) ++;
#line 3067
      break;
    }
#line 3067
    break;
  }
#line 3068
  while (1) {
#line 3068
    tmp___14 = jit->ip;
#line 3068
    (jit->ip) ++;
#line 3068
    *tmp___14 = (unsigned char)242;
#line 3068
    while (1) {
#line 3068
      if (a1 > 7L) {
#line 3068
        tmp___15 = 4;
      } else {
#line 3068
        tmp___15 = 0;
      }
#line 3068
      if (a2 > 7L) {
#line 3068
        tmp___16 = 1;
      } else {
#line 3068
        tmp___16 = 0;
      }
#line 3068
      _amd64_rex_bits___1 = (unsigned char )((8 | tmp___15) | tmp___16);
#line 3068
      if ((int )_amd64_rex_bits___1 != 0) {
#line 3068
        tmp___17 = jit->ip;
#line 3068
        (jit->ip) ++;
#line 3068
        *tmp___17 = (unsigned char )(0x40 | (int )_amd64_rex_bits___1);
      }
#line 3068
      break;
    }
#line 3068
    tmp___18 = jit->ip;
#line 3068
    (jit->ip) ++;
#line 3068
    *tmp___18 = (unsigned char)15;
#line 3068
    tmp___19 = jit->ip;
#line 3068
    (jit->ip) ++;
#line 3068
    *tmp___19 = (unsigned char)44;
#line 3068
    while (1) {
#line 3068
      while (1) {
#line 3068
        tmp___20 = jit->ip;
#line 3068
        (jit->ip) ++;
#line 3068
        *tmp___20 = (unsigned char )(((long )(3 << 6) | ((a1 & 7L) << 3)) | (a2 & 7L));
#line 3068
        break;
      }
#line 3068
      break;
    }
#line 3068
    break;
  }
#line 3069
  while (1) {
#line 3069
    tmp___21 = jit->ip;
#line 3069
    (jit->ip) ++;
#line 3069
    *tmp___21 = (unsigned char)242;
#line 3069
    while (1) {
#line 3069
      if (tmp_reg > 7) {
#line 3069
        tmp___22 = 4;
      } else {
#line 3069
        tmp___22 = 0;
      }
#line 3069
      if (a1 > 7L) {
#line 3069
        tmp___23 = 1;
      } else {
#line 3069
        tmp___23 = 0;
      }
#line 3069
      _amd64_rex_bits___2 = (unsigned char )((8 | tmp___22) | tmp___23);
#line 3069
      if ((int )_amd64_rex_bits___2 != 0) {
#line 3069
        tmp___24 = jit->ip;
#line 3069
        (jit->ip) ++;
#line 3069
        *tmp___24 = (unsigned char )(0x40 | (int )_amd64_rex_bits___2);
      }
#line 3069
      break;
    }
#line 3069
    tmp___25 = jit->ip;
#line 3069
    (jit->ip) ++;
#line 3069
    *tmp___25 = (unsigned char)15;
#line 3069
    tmp___26 = jit->ip;
#line 3069
    (jit->ip) ++;
#line 3069
    *tmp___26 = (unsigned char)42;
#line 3069
    while (1) {
#line 3069
      while (1) {
#line 3069
        tmp___27 = jit->ip;
#line 3069
        (jit->ip) ++;
#line 3069
        *tmp___27 = (unsigned char )((long )((3 << 6) | ((tmp_reg & 0x07) << 3)) | (a1 & 7L));
#line 3069
        break;
      }
#line 3069
      break;
    }
#line 3069
    break;
  }
#line 3070
  if (floor) {
#line 3071
    while (1) {
#line 3071
      tmp___28 = jit->ip;
#line 3071
      (jit->ip) ++;
#line 3071
      *tmp___28 = (unsigned char)102;
#line 3071
      while (1) {
#line 3071
        if (a2 > 7L) {
#line 3071
          tmp___29 = 4;
        } else {
#line 3071
          tmp___29 = 0;
        }
#line 3071
        if (tmp_reg > 7) {
#line 3071
          tmp___30 = 1;
        } else {
#line 3071
          tmp___30 = 0;
        }
#line 3071
        _amd64_rex_bits___3 = (unsigned char )(tmp___29 | tmp___30);
#line 3071
        if ((int )_amd64_rex_bits___3 != 0) {
#line 3071
          tmp___31 = jit->ip;
#line 3071
          (jit->ip) ++;
#line 3071
          *tmp___31 = (unsigned char )(0x40 | (int )_amd64_rex_bits___3);
        }
#line 3071
        break;
      }
#line 3071
      tmp___32 = jit->ip;
#line 3071
      (jit->ip) ++;
#line 3071
      *tmp___32 = (unsigned char)15;
#line 3071
      tmp___33 = jit->ip;
#line 3071
      (jit->ip) ++;
#line 3071
      *tmp___33 = (unsigned char)47;
#line 3071
      while (1) {
#line 3071
        while (1) {
#line 3071
          tmp___34 = jit->ip;
#line 3071
          (jit->ip) ++;
#line 3071
          *tmp___34 = (unsigned char )(((long )(3 << 6) | ((a2 & 7L) << 3)) | (long )(tmp_reg & 0x07));
#line 3071
          break;
        }
#line 3071
        break;
      }
#line 3071
      break;
    }
#line 3072
    while (1) {
#line 3072
      while (1) {
#line 3072
        if (a1 > 7L) {
#line 3072
          tmp___35 = 1;
        } else {
#line 3072
          tmp___35 = 0;
        }
#line 3072
        _amd64_rex_bits___4 = (unsigned char )(8 | tmp___35);
#line 3072
        if ((int )_amd64_rex_bits___4 != 0) {
#line 3072
          tmp___36 = jit->ip;
#line 3072
          (jit->ip) ++;
#line 3072
          *tmp___36 = (unsigned char )(0x40 | (int )_amd64_rex_bits___4);
        }
#line 3072
        break;
      }
#line 3072
      tmp___37 = jit->ip;
#line 3072
      (jit->ip) ++;
#line 3072
      *tmp___37 = (unsigned char)131;
#line 3072
      while (1) {
#line 3072
        while (1) {
#line 3072
          tmp___38 = jit->ip;
#line 3072
          (jit->ip) ++;
#line 3072
          *tmp___38 = (unsigned char )((long )((3 << 6) | (3 << 3)) | (a1 & 7L));
#line 3072
          break;
        }
#line 3072
        break;
      }
#line 3072
      while (1) {
#line 3072
        *(jit->ip) = (unsigned char)0;
#line 3072
        (jit->ip) ++;
#line 3072
        break;
      }
#line 3072
      break;
    }
  } else {
#line 3074
    while (1) {
#line 3074
      tmp___53 = jit->ip;
#line 3074
      (jit->ip) ++;
#line 3074
      *tmp___53 = (unsigned char)102;
#line 3074
      while (1) {
#line 3074
        if (tmp_reg > 7) {
#line 3074
          tmp___54 = 4;
        } else {
#line 3074
          tmp___54 = 0;
        }
#line 3074
        if (a2 > 7L) {
#line 3074
          tmp___55 = 1;
        } else {
#line 3074
          tmp___55 = 0;
        }
#line 3074
        _amd64_rex_bits___7 = (unsigned char )(tmp___54 | tmp___55);
#line 3074
        if ((int )_amd64_rex_bits___7 != 0) {
#line 3074
          tmp___56 = jit->ip;
#line 3074
          (jit->ip) ++;
#line 3074
          *tmp___56 = (unsigned char )(0x40 | (int )_amd64_rex_bits___7);
        }
#line 3074
        break;
      }
#line 3074
      tmp___57 = jit->ip;
#line 3074
      (jit->ip) ++;
#line 3074
      *tmp___57 = (unsigned char)15;
#line 3074
      tmp___58 = jit->ip;
#line 3074
      (jit->ip) ++;
#line 3074
      *tmp___58 = (unsigned char)47;
#line 3074
      while (1) {
#line 3074
        while (1) {
#line 3074
          tmp___59 = jit->ip;
#line 3074
          (jit->ip) ++;
#line 3074
          *tmp___59 = (unsigned char )((long )((3 << 6) | ((tmp_reg & 0x07) << 3)) | (a2 & 7L));
#line 3074
          break;
        }
#line 3074
        break;
      }
#line 3074
      break;
    }
#line 3075
    while (1) {
#line 3075
      while (1) {
#line 3075
        if (a1 > 7L) {
#line 3075
          tmp___60 = 1;
        } else {
#line 3075
          tmp___60 = 0;
        }
#line 3075
        _amd64_rex_bits___8 = (unsigned char )(8 | tmp___60);
#line 3075
        if ((int )_amd64_rex_bits___8 != 0) {
#line 3075
          tmp___61 = jit->ip;
#line 3075
          (jit->ip) ++;
#line 3075
          *tmp___61 = (unsigned char )(0x40 | (int )_amd64_rex_bits___8);
        }
#line 3075
        break;
      }
#line 3075
      tmp___62 = jit->ip;
#line 3075
      (jit->ip) ++;
#line 3075
      *tmp___62 = (unsigned char)131;
#line 3075
      while (1) {
#line 3075
        while (1) {
#line 3075
          tmp___63 = jit->ip;
#line 3075
          (jit->ip) ++;
#line 3075
          *tmp___63 = (unsigned char )((long )((3 << 6) | (2 << 3)) | (a1 & 7L));
#line 3075
          break;
        }
#line 3075
        break;
      }
#line 3075
      while (1) {
#line 3075
        *(jit->ip) = (unsigned char)0;
#line 3075
        (jit->ip) ++;
#line 3075
        break;
      }
#line 3075
      break;
    }
  }
#line 3077
  while (1) {
#line 3077
    while (1) {
#line 3077
      tmp___78 = jit->ip;
#line 3077
      (jit->ip) ++;
#line 3077
      *tmp___78 = (unsigned char)102;
#line 3077
      while (1) {
#line 3077
        if (a2 > 7L) {
#line 3077
          tmp___79 = 4;
        } else {
#line 3077
          tmp___79 = 0;
        }
#line 3077
        if (a2 > 7L) {
#line 3077
          tmp___80 = 1;
        } else {
#line 3077
          tmp___80 = 0;
        }
#line 3077
        _amd64_rex_bits___11 = (unsigned char )(tmp___79 | tmp___80);
#line 3077
        if ((int )_amd64_rex_bits___11 != 0) {
#line 3077
          tmp___81 = jit->ip;
#line 3077
          (jit->ip) ++;
#line 3077
          *tmp___81 = (unsigned char )(0x40 | (int )_amd64_rex_bits___11);
        }
#line 3077
        break;
      }
#line 3077
      tmp___82 = jit->ip;
#line 3077
      (jit->ip) ++;
#line 3077
      *tmp___82 = (unsigned char)15;
#line 3077
      tmp___83 = jit->ip;
#line 3077
      (jit->ip) ++;
#line 3077
      *tmp___83 = (unsigned char)198;
#line 3077
      while (1) {
#line 3077
        while (1) {
#line 3077
          tmp___84 = jit->ip;
#line 3077
          (jit->ip) ++;
#line 3077
          *tmp___84 = (unsigned char )(((long )(3 << 6) | ((a2 & 7L) << 3)) | (a2 & 7L));
#line 3077
          break;
        }
#line 3077
        break;
      }
#line 3077
      break;
    }
#line 3077
    while (1) {
#line 3077
      *(jit->ip) = (unsigned char)1;
#line 3077
      (jit->ip) ++;
#line 3077
      break;
    }
#line 3077
    break;
  }
#line 3078
  while (1) {
#line 3078
    while (1) {
#line 3078
      tmp___85 = jit->ip;
#line 3078
      (jit->ip) ++;
#line 3078
      *tmp___85 = (unsigned char)102;
#line 3078
      while (1) {
#line 3078
        if (tmp_reg > 7) {
#line 3078
          tmp___86 = 4;
        } else {
#line 3078
          tmp___86 = 0;
        }
#line 3078
        if (tmp_reg > 7) {
#line 3078
          tmp___87 = 1;
        } else {
#line 3078
          tmp___87 = 0;
        }
#line 3078
        _amd64_rex_bits___12 = (unsigned char )(tmp___86 | tmp___87);
#line 3078
        if ((int )_amd64_rex_bits___12 != 0) {
#line 3078
          tmp___88 = jit->ip;
#line 3078
          (jit->ip) ++;
#line 3078
          *tmp___88 = (unsigned char )(0x40 | (int )_amd64_rex_bits___12);
        }
#line 3078
        break;
      }
#line 3078
      tmp___89 = jit->ip;
#line 3078
      (jit->ip) ++;
#line 3078
      *tmp___89 = (unsigned char)15;
#line 3078
      tmp___90 = jit->ip;
#line 3078
      (jit->ip) ++;
#line 3078
      *tmp___90 = (unsigned char)198;
#line 3078
      while (1) {
#line 3078
        while (1) {
#line 3078
          tmp___91 = jit->ip;
#line 3078
          (jit->ip) ++;
#line 3078
          *tmp___91 = (unsigned char )(((3 << 6) | ((tmp_reg & 0x07) << 3)) | (tmp_reg & 0x07));
#line 3078
          break;
        }
#line 3078
        break;
      }
#line 3078
      break;
    }
#line 3078
    while (1) {
#line 3078
      *(jit->ip) = (unsigned char)1;
#line 3078
      (jit->ip) ++;
#line 3078
      break;
    }
#line 3078
    break;
  }
#line 3079
  return;
}
}
/* END FUNCTION-DEF emit_sse_floor LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF load_reg LOC=UNKNOWN */
void load_reg(jit_op *op , jit_hw_reg *hreg , jit_value reg ) 
{ 


  {
#line 5913
  insert_reg_op(512, op, (jit_value )hreg->id, reg);
#line 5914
  return;
}
}
/* END FUNCTION-DEF load_reg LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_init_arg_params LOC=UNKNOWN */
void jit_init_arg_params(struct jit *jit , struct jit_func_info *info , int p , int *phys_reg ) 
{ 
  struct jit_arg_layout *layout ;
  struct jit_arg_layout *tmp ;
  struct jit_inp_arg *a ;
  struct jit_arg_layout_location *location ;

  {
#line 3202
  tmp = jit_arg_layout_create_input(jit, info, p);
#line 3202
  layout = tmp;
#line 3203
  a = info->args + p;
#line 3204
  location = & layout->arguments[p];
#line 3205
  a->passed_by_reg = location->passed_in_reg;
#line 3206
  a->overflow = 0;
#line 3207
  if (! location->passed_in_reg) {
#line 3208
    a->location.stack_pos = (2 + location->index) * (int )sizeof(void *);
#line 3209
    a->spill_pos = a->location.stack_pos;
  } else
#line 3211
  if (! location->isfp) {
#line 3212
    a->location.reg = (*((jit->reg_al)->gp_arg_regs + location->index))->id;
#line 3213
    a->spill_pos = stack_arg_pos(jit, info, location->index);
  } else {
#line 3215
    a->location.reg = (*((jit->reg_al)->fp_arg_regs + location->index))->id;
#line 3216
    a->spill_pos = stack_fparg_pos(jit, info, location->index);
  }
#line 3219
  free((void *)layout);
#line 3220
  return;
}
}
/* END FUNCTION-DEF jit_init_arg_params LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF is_spilled LOC=UNKNOWN */
static int is_spilled(jit_value arg_id , jit_op *prepare_op , int *reg ) 
{ 
  jit_hw_reg *hreg ;
  jit_hw_reg *tmp ;

  {
#line 4371
  tmp = rmap_get(prepare_op->regmap, arg_id);
#line 4371
  hreg = tmp;
#line 4372
  if (hreg) {
#line 4373
    *reg = hreg->id;
#line 4374
    return (0);
  } else {
#line 4375
    return (1);
  }
}
}
/* END FUNCTION-DEF is_spilled LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF emit_sse_fldx_op LOC=UNKNOWN */
static void emit_sse_fldx_op(struct jit *jit , jit_op *op , jit_value a1 , jit_value a2 ,
                             jit_value a3 ) 
{ 
  unsigned char *tmp ;
  unsigned char _amd64_rex_bits ;
  int tmp___0 ;
  jit_value tmp___1 ;
  int tmp___2 ;
  jit_value tmp___3 ;
  unsigned char *tmp___4 ;
  unsigned char *tmp___5 ;
  unsigned char *tmp___6 ;
  unsigned char *tmp___7 ;
  x86_imm_buf imb ;
  unsigned char *tmp___8 ;
  unsigned char *tmp___9 ;
  unsigned char *tmp___10 ;
  unsigned char *tmp___11 ;
  unsigned char *tmp___12 ;
  unsigned char *tmp___13 ;
  unsigned char *tmp___14 ;
  unsigned char *tmp___15 ;
  unsigned char *tmp___16 ;
  unsigned char *tmp___17 ;
  x86_imm_buf imb___0 ;
  unsigned char *tmp___18 ;
  unsigned char *tmp___19 ;
  unsigned char *tmp___20 ;
  unsigned char *tmp___21 ;
  unsigned char *tmp___22 ;
  unsigned char *tmp___23 ;
  unsigned char *tmp___24 ;
  x86_imm_buf imb___1 ;
  unsigned char *tmp___25 ;
  unsigned char *tmp___26 ;
  unsigned char *tmp___27 ;
  unsigned char *tmp___28 ;
  unsigned char *tmp___29 ;
  unsigned char _amd64_rex_bits___0 ;
  int tmp___30 ;
  int tmp___31 ;
  int tmp___32 ;
  unsigned char *tmp___33 ;
  unsigned char *tmp___34 ;
  unsigned char *tmp___35 ;
  unsigned char *tmp___36 ;
  unsigned char *tmp___37 ;
  x86_imm_buf imb___2 ;
  unsigned char *tmp___38 ;
  unsigned char *tmp___39 ;
  unsigned char *tmp___40 ;
  unsigned char *tmp___41 ;
  unsigned char *tmp___42 ;
  unsigned char *tmp___43 ;
  unsigned char *tmp___44 ;
  unsigned char *tmp___45 ;
  unsigned char *tmp___46 ;
  unsigned char *tmp___47 ;
  x86_imm_buf imb___3 ;
  unsigned char *tmp___48 ;
  unsigned char *tmp___49 ;
  unsigned char *tmp___50 ;
  unsigned char *tmp___51 ;
  unsigned char *tmp___52 ;
  unsigned char _amd64_rex_bits___1 ;
  int tmp___53 ;
  int tmp___54 ;
  unsigned char *tmp___55 ;
  unsigned char *tmp___56 ;
  unsigned char *tmp___57 ;
  unsigned char *tmp___58 ;
  x86_imm_buf imb___4 ;
  unsigned char *tmp___59 ;
  unsigned char *tmp___60 ;
  unsigned char *tmp___61 ;
  unsigned char *tmp___62 ;
  unsigned char *tmp___63 ;
  unsigned char *tmp___64 ;
  unsigned char *tmp___65 ;
  unsigned char *tmp___66 ;
  unsigned char *tmp___67 ;
  unsigned char *tmp___68 ;
  x86_imm_buf imb___5 ;
  unsigned char *tmp___69 ;
  unsigned char *tmp___70 ;
  unsigned char *tmp___71 ;
  unsigned char *tmp___72 ;
  unsigned char *tmp___73 ;
  unsigned char *tmp___74 ;
  unsigned char *tmp___75 ;
  x86_imm_buf imb___6 ;
  unsigned char *tmp___76 ;
  unsigned char *tmp___77 ;
  unsigned char *tmp___78 ;
  unsigned char *tmp___79 ;
  unsigned char *tmp___80 ;
  unsigned char _amd64_rex_bits___2 ;
  int tmp___81 ;
  int tmp___82 ;
  int tmp___83 ;
  unsigned char *tmp___84 ;
  unsigned char *tmp___85 ;
  unsigned char *tmp___86 ;
  unsigned char *tmp___87 ;
  unsigned char *tmp___88 ;
  x86_imm_buf imb___7 ;
  unsigned char *tmp___89 ;
  unsigned char *tmp___90 ;
  unsigned char *tmp___91 ;
  unsigned char *tmp___92 ;
  unsigned char *tmp___93 ;
  unsigned char *tmp___94 ;
  unsigned char *tmp___95 ;
  unsigned char *tmp___96 ;
  unsigned char *tmp___97 ;
  unsigned char *tmp___98 ;
  x86_imm_buf imb___8 ;
  unsigned char *tmp___99 ;
  unsigned char *tmp___100 ;
  unsigned char *tmp___101 ;
  unsigned char *tmp___102 ;

  {
#line 3106
  if ((unsigned long long )op->arg_size == sizeof(float )) {
#line 3107
    if ((int )op->code & 0x02) {
#line 3107
      while (1) {
#line 3107
        tmp = jit->ip;
#line 3107
        (jit->ip) ++;
#line 3107
        *tmp = (unsigned char)243;
#line 3107
        while (1) {
#line 3107
          if (a1 > 7L) {
#line 3107
            tmp___0 = 4;
          } else {
#line 3107
            tmp___0 = 0;
          }
#line 3107
          if (a2 == 16L) {
#line 3107
            tmp___3 = (jit_value )0;
          } else {
#line 3107
            tmp___3 = a2;
          }
#line 3107
          if (tmp___3 > 7L) {
#line 3107
            tmp___2 = 1;
          } else {
#line 3107
            tmp___2 = 0;
          }
#line 3107
          _amd64_rex_bits = (unsigned char )(tmp___0 | tmp___2);
#line 3107
          if ((int )_amd64_rex_bits != 0) {
#line 3107
            tmp___4 = jit->ip;
#line 3107
            (jit->ip) ++;
#line 3107
            *tmp___4 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
          }
#line 3107
          break;
        }
#line 3107
        tmp___5 = jit->ip;
#line 3107
        (jit->ip) ++;
#line 3107
        *tmp___5 = (unsigned char)15;
#line 3107
        tmp___6 = jit->ip;
#line 3107
        (jit->ip) ++;
#line 3107
        *tmp___6 = (unsigned char)90;
#line 3107
        while (1) {
#line 3107
          if (a2 == 16L) {
#line 3107
            while (1) {
#line 3107
              tmp___7 = jit->ip;
#line 3107
              (jit->ip) ++;
#line 3107
              *tmp___7 = (unsigned char )((((a1 & 7L) & 7L) << 3) | 5L);
#line 3107
              break;
            }
#line 3107
            while (1) {
#line 3107
              imb.val = (int )a3;
#line 3107
              tmp___8 = jit->ip;
#line 3107
              (jit->ip) ++;
#line 3107
              *tmp___8 = imb.b[0];
#line 3107
              tmp___9 = jit->ip;
#line 3107
              (jit->ip) ++;
#line 3107
              *tmp___9 = imb.b[1];
#line 3107
              tmp___10 = jit->ip;
#line 3107
              (jit->ip) ++;
#line 3107
              *tmp___10 = imb.b[2];
#line 3107
              tmp___11 = jit->ip;
#line 3107
              (jit->ip) ++;
#line 3107
              *tmp___11 = imb.b[3];
#line 3107
              break;
            }
          } else {
#line 3107
            while (1) {
#line 3107
              if ((a2 & 7L) == 4L) {
#line 3107
                if (a3 == 0L) {
#line 3107
                  while (1) {
#line 3107
                    tmp___12 = jit->ip;
#line 3107
                    (jit->ip) ++;
#line 3107
                    *tmp___12 = (unsigned char )((((a1 & 7L) & 7L) << 3) | 4L);
#line 3107
                    break;
                  }
#line 3107
                  while (1) {
#line 3107
                    tmp___13 = jit->ip;
#line 3107
                    (jit->ip) ++;
#line 3107
                    *tmp___13 = (unsigned char )((4 << 3) | 4);
#line 3107
                    break;
                  }
                } else
#line 3107
                if (a3 >= -128L) {
#line 3107
                  if (a3 <= 127L) {
#line 3107
                    while (1) {
#line 3107
                      tmp___14 = jit->ip;
#line 3107
                      (jit->ip) ++;
#line 3107
                      *tmp___14 = (unsigned char )(((long )(1 << 6) | (((a1 & 7L) & 7L) << 3)) | 4L);
#line 3107
                      break;
                    }
#line 3107
                    while (1) {
#line 3107
                      tmp___15 = jit->ip;
#line 3107
                      (jit->ip) ++;
#line 3107
                      *tmp___15 = (unsigned char )((4 << 3) | 4);
#line 3107
                      break;
                    }
#line 3107
                    while (1) {
#line 3107
                      *(jit->ip) = (unsigned char )(a3 & 255L);
#line 3107
                      (jit->ip) ++;
#line 3107
                      break;
                    }
                  } else {
#line 3107
                    goto _L;
                  }
                } else {
                  _L: /* CIL Label */ 
#line 3107
                  while (1) {
#line 3107
                    tmp___16 = jit->ip;
#line 3107
                    (jit->ip) ++;
#line 3107
                    *tmp___16 = (unsigned char )(((long )(2 << 6) | (((a1 & 7L) & 7L) << 3)) | 4L);
#line 3107
                    break;
                  }
#line 3107
                  while (1) {
#line 3107
                    tmp___17 = jit->ip;
#line 3107
                    (jit->ip) ++;
#line 3107
                    *tmp___17 = (unsigned char )((4 << 3) | 4);
#line 3107
                    break;
                  }
#line 3107
                  while (1) {
#line 3107
                    imb___0.val = (int )a3;
#line 3107
                    tmp___18 = jit->ip;
#line 3107
                    (jit->ip) ++;
#line 3107
                    *tmp___18 = imb___0.b[0];
#line 3107
                    tmp___19 = jit->ip;
#line 3107
                    (jit->ip) ++;
#line 3107
                    *tmp___19 = imb___0.b[1];
#line 3107
                    tmp___20 = jit->ip;
#line 3107
                    (jit->ip) ++;
#line 3107
                    *tmp___20 = imb___0.b[2];
#line 3107
                    tmp___21 = jit->ip;
#line 3107
                    (jit->ip) ++;
#line 3107
                    *tmp___21 = imb___0.b[3];
#line 3107
                    break;
                  }
                }
#line 3107
                break;
              }
#line 3107
              if (a3 == 0L) {
#line 3107
                if ((a2 & 7L) != 5L) {
#line 3107
                  while (1) {
#line 3107
                    tmp___22 = jit->ip;
#line 3107
                    (jit->ip) ++;
#line 3107
                    *tmp___22 = (unsigned char )((((a1 & 7L) & 7L) << 3) | ((a2 & 7L) & 7L));
#line 3107
                    break;
                  }
#line 3107
                  break;
                }
              }
#line 3107
              if (a3 >= -128L) {
#line 3107
                if (a3 <= 127L) {
#line 3107
                  while (1) {
#line 3107
                    tmp___23 = jit->ip;
#line 3107
                    (jit->ip) ++;
#line 3107
                    *tmp___23 = (unsigned char )(((long )(1 << 6) | (((a1 & 7L) & 7L) << 3)) | ((a2 & 7L) & 7L));
#line 3107
                    break;
                  }
#line 3107
                  while (1) {
#line 3107
                    *(jit->ip) = (unsigned char )(a3 & 255L);
#line 3107
                    (jit->ip) ++;
#line 3107
                    break;
                  }
                } else {
#line 3107
                  goto _L___0;
                }
              } else {
                _L___0: /* CIL Label */ 
#line 3107
                while (1) {
#line 3107
                  tmp___24 = jit->ip;
#line 3107
                  (jit->ip) ++;
#line 3107
                  *tmp___24 = (unsigned char )(((long )(2 << 6) | (((a1 & 7L) & 7L) << 3)) | ((a2 & 7L) & 7L));
#line 3107
                  break;
                }
#line 3107
                while (1) {
#line 3107
                  imb___1.val = (int )a3;
#line 3107
                  tmp___25 = jit->ip;
#line 3107
                  (jit->ip) ++;
#line 3107
                  *tmp___25 = imb___1.b[0];
#line 3107
                  tmp___26 = jit->ip;
#line 3107
                  (jit->ip) ++;
#line 3107
                  *tmp___26 = imb___1.b[1];
#line 3107
                  tmp___27 = jit->ip;
#line 3107
                  (jit->ip) ++;
#line 3107
                  *tmp___27 = imb___1.b[2];
#line 3107
                  tmp___28 = jit->ip;
#line 3107
                  (jit->ip) ++;
#line 3107
                  *tmp___28 = imb___1.b[3];
#line 3107
                  break;
                }
              }
#line 3107
              break;
            }
          }
#line 3107
          break;
        }
#line 3107
        break;
      }
    } else {
#line 3108
      while (1) {
#line 3108
        tmp___29 = jit->ip;
#line 3108
        (jit->ip) ++;
#line 3108
        *tmp___29 = (unsigned char)243;
#line 3108
        while (1) {
#line 3108
          if (a1 > 7L) {
#line 3108
            tmp___30 = 4;
          } else {
#line 3108
            tmp___30 = 0;
          }
#line 3108
          if (a3 > 7L) {
#line 3108
            tmp___31 = 2;
          } else {
#line 3108
            tmp___31 = 0;
          }
#line 3108
          if (a2 > 7L) {
#line 3108
            tmp___32 = 1;
          } else {
#line 3108
            tmp___32 = 0;
          }
#line 3108
          _amd64_rex_bits___0 = (unsigned char )(((8 | tmp___30) | tmp___31) | tmp___32);
#line 3108
          if ((int )_amd64_rex_bits___0 != 0) {
#line 3108
            tmp___33 = jit->ip;
#line 3108
            (jit->ip) ++;
#line 3108
            *tmp___33 = (unsigned char )(0x40 | (int )_amd64_rex_bits___0);
          }
#line 3108
          break;
        }
#line 3108
        tmp___34 = jit->ip;
#line 3108
        (jit->ip) ++;
#line 3108
        *tmp___34 = (unsigned char)15;
#line 3108
        tmp___35 = jit->ip;
#line 3108
        (jit->ip) ++;
#line 3108
        *tmp___35 = (unsigned char)90;
#line 3108
        while (1) {
#line 3108
          if (a2 == -1L) {
#line 3108
            while (1) {
#line 3108
              tmp___36 = jit->ip;
#line 3108
              (jit->ip) ++;
#line 3108
              *tmp___36 = (unsigned char )(((a1 & 7L) << 3) | 4L);
#line 3108
              break;
            }
#line 3108
            while (1) {
#line 3108
              tmp___37 = jit->ip;
#line 3108
              (jit->ip) ++;
#line 3108
              *tmp___37 = (unsigned char )(((a3 & 7L) << 3) | 5L);
#line 3108
              break;
            }
#line 3108
            while (1) {
#line 3108
              imb___2.val = 0;
#line 3108
              tmp___38 = jit->ip;
#line 3108
              (jit->ip) ++;
#line 3108
              *tmp___38 = imb___2.b[0];
#line 3108
              tmp___39 = jit->ip;
#line 3108
              (jit->ip) ++;
#line 3108
              *tmp___39 = imb___2.b[1];
#line 3108
              tmp___40 = jit->ip;
#line 3108
              (jit->ip) ++;
#line 3108
              *tmp___40 = imb___2.b[2];
#line 3108
              tmp___41 = jit->ip;
#line 3108
              (jit->ip) ++;
#line 3108
              *tmp___41 = imb___2.b[3];
#line 3108
              break;
            }
          } else
#line 3108
          if (a2 != 5L) {
#line 3108
            while (1) {
#line 3108
              tmp___42 = jit->ip;
#line 3108
              (jit->ip) ++;
#line 3108
              *tmp___42 = (unsigned char )(((a1 & 7L) << 3) | 4L);
#line 3108
              break;
            }
#line 3108
            while (1) {
#line 3108
              tmp___43 = jit->ip;
#line 3108
              (jit->ip) ++;
#line 3108
              *tmp___43 = (unsigned char )((((a3 & 7L) & 7L) << 3) | ((a2 & 7L) & 7L));
#line 3108
              break;
            }
          } else {
#line 3108
            while (1) {
#line 3108
              tmp___44 = jit->ip;
#line 3108
              (jit->ip) ++;
#line 3108
              *tmp___44 = (unsigned char )(((long )(1 << 6) | ((a1 & 7L) << 3)) | 4L);
#line 3108
              break;
            }
#line 3108
            while (1) {
#line 3108
              tmp___45 = jit->ip;
#line 3108
              (jit->ip) ++;
#line 3108
              *tmp___45 = (unsigned char )((((a3 & 7L) & 7L) << 3) | ((a2 & 7L) & 7L));
#line 3108
              break;
            }
#line 3108
            while (1) {
#line 3108
              *(jit->ip) = (unsigned char)0;
#line 3108
              (jit->ip) ++;
#line 3108
              break;
            }
          }
#line 3108
          break;
        }
#line 3108
        break;
      }
    }
  } else
#line 3110
  if ((int )op->code & 0x02) {
#line 3110
    while (1) {
#line 3110
      tmp___52 = jit->ip;
#line 3110
      (jit->ip) ++;
#line 3110
      *tmp___52 = (unsigned char)102;
#line 3110
      while (1) {
#line 3110
        if (a1 > 7L) {
#line 3110
          tmp___53 = 4;
        } else {
#line 3110
          tmp___53 = 0;
        }
#line 3110
        if (a2 > 7L) {
#line 3110
          tmp___54 = 1;
        } else {
#line 3110
          tmp___54 = 0;
        }
#line 3110
        _amd64_rex_bits___1 = (unsigned char )(tmp___53 | tmp___54);
#line 3110
        if ((int )_amd64_rex_bits___1 != 0) {
#line 3110
          tmp___55 = jit->ip;
#line 3110
          (jit->ip) ++;
#line 3110
          *tmp___55 = (unsigned char )(0x40 | (int )_amd64_rex_bits___1);
        }
#line 3110
        break;
      }
#line 3110
      tmp___56 = jit->ip;
#line 3110
      (jit->ip) ++;
#line 3110
      *tmp___56 = (unsigned char)15;
#line 3110
      tmp___57 = jit->ip;
#line 3110
      (jit->ip) ++;
#line 3110
      *tmp___57 = (unsigned char)18;
#line 3110
      while (1) {
#line 3110
        if (a2 == 16L) {
#line 3110
          while (1) {
#line 3110
            tmp___58 = jit->ip;
#line 3110
            (jit->ip) ++;
#line 3110
            *tmp___58 = (unsigned char )((((a1 & 7L) & 7L) << 3) | 5L);
#line 3110
            break;
          }
#line 3110
          while (1) {
#line 3110
            imb___4.val = (int )a3;
#line 3110
            tmp___59 = jit->ip;
#line 3110
            (jit->ip) ++;
#line 3110
            *tmp___59 = imb___4.b[0];
#line 3110
            tmp___60 = jit->ip;
#line 3110
            (jit->ip) ++;
#line 3110
            *tmp___60 = imb___4.b[1];
#line 3110
            tmp___61 = jit->ip;
#line 3110
            (jit->ip) ++;
#line 3110
            *tmp___61 = imb___4.b[2];
#line 3110
            tmp___62 = jit->ip;
#line 3110
            (jit->ip) ++;
#line 3110
            *tmp___62 = imb___4.b[3];
#line 3110
            break;
          }
        } else {
#line 3110
          while (1) {
#line 3110
            if ((a2 & 7L) == 4L) {
#line 3110
              if (a3 == 0L) {
#line 3110
                while (1) {
#line 3110
                  tmp___63 = jit->ip;
#line 3110
                  (jit->ip) ++;
#line 3110
                  *tmp___63 = (unsigned char )((((a1 & 7L) & 7L) << 3) | 4L);
#line 3110
                  break;
                }
#line 3110
                while (1) {
#line 3110
                  tmp___64 = jit->ip;
#line 3110
                  (jit->ip) ++;
#line 3110
                  *tmp___64 = (unsigned char )((4 << 3) | 4);
#line 3110
                  break;
                }
              } else
#line 3110
              if (a3 >= -128L) {
#line 3110
                if (a3 <= 127L) {
#line 3110
                  while (1) {
#line 3110
                    tmp___65 = jit->ip;
#line 3110
                    (jit->ip) ++;
#line 3110
                    *tmp___65 = (unsigned char )(((long )(1 << 6) | (((a1 & 7L) & 7L) << 3)) | 4L);
#line 3110
                    break;
                  }
#line 3110
                  while (1) {
#line 3110
                    tmp___66 = jit->ip;
#line 3110
                    (jit->ip) ++;
#line 3110
                    *tmp___66 = (unsigned char )((4 << 3) | 4);
#line 3110
                    break;
                  }
#line 3110
                  while (1) {
#line 3110
                    *(jit->ip) = (unsigned char )(a3 & 255L);
#line 3110
                    (jit->ip) ++;
#line 3110
                    break;
                  }
                } else {
#line 3110
                  goto _L___1;
                }
              } else {
                _L___1: /* CIL Label */ 
#line 3110
                while (1) {
#line 3110
                  tmp___67 = jit->ip;
#line 3110
                  (jit->ip) ++;
#line 3110
                  *tmp___67 = (unsigned char )(((long )(2 << 6) | (((a1 & 7L) & 7L) << 3)) | 4L);
#line 3110
                  break;
                }
#line 3110
                while (1) {
#line 3110
                  tmp___68 = jit->ip;
#line 3110
                  (jit->ip) ++;
#line 3110
                  *tmp___68 = (unsigned char )((4 << 3) | 4);
#line 3110
                  break;
                }
#line 3110
                while (1) {
#line 3110
                  imb___5.val = (int )a3;
#line 3110
                  tmp___69 = jit->ip;
#line 3110
                  (jit->ip) ++;
#line 3110
                  *tmp___69 = imb___5.b[0];
#line 3110
                  tmp___70 = jit->ip;
#line 3110
                  (jit->ip) ++;
#line 3110
                  *tmp___70 = imb___5.b[1];
#line 3110
                  tmp___71 = jit->ip;
#line 3110
                  (jit->ip) ++;
#line 3110
                  *tmp___71 = imb___5.b[2];
#line 3110
                  tmp___72 = jit->ip;
#line 3110
                  (jit->ip) ++;
#line 3110
                  *tmp___72 = imb___5.b[3];
#line 3110
                  break;
                }
              }
#line 3110
              break;
            }
#line 3110
            if (a3 == 0L) {
#line 3110
              if ((a2 & 7L) != 5L) {
#line 3110
                while (1) {
#line 3110
                  tmp___73 = jit->ip;
#line 3110
                  (jit->ip) ++;
#line 3110
                  *tmp___73 = (unsigned char )((((a1 & 7L) & 7L) << 3) | ((a2 & 7L) & 7L));
#line 3110
                  break;
                }
#line 3110
                break;
              }
            }
#line 3110
            if (a3 >= -128L) {
#line 3110
              if (a3 <= 127L) {
#line 3110
                while (1) {
#line 3110
                  tmp___74 = jit->ip;
#line 3110
                  (jit->ip) ++;
#line 3110
                  *tmp___74 = (unsigned char )(((long )(1 << 6) | (((a1 & 7L) & 7L) << 3)) | ((a2 & 7L) & 7L));
#line 3110
                  break;
                }
#line 3110
                while (1) {
#line 3110
                  *(jit->ip) = (unsigned char )(a3 & 255L);
#line 3110
                  (jit->ip) ++;
#line 3110
                  break;
                }
              } else {
#line 3110
                goto _L___2;
              }
            } else {
              _L___2: /* CIL Label */ 
#line 3110
              while (1) {
#line 3110
                tmp___75 = jit->ip;
#line 3110
                (jit->ip) ++;
#line 3110
                *tmp___75 = (unsigned char )(((long )(2 << 6) | (((a1 & 7L) & 7L) << 3)) | ((a2 & 7L) & 7L));
#line 3110
                break;
              }
#line 3110
              while (1) {
#line 3110
                imb___6.val = (int )a3;
#line 3110
                tmp___76 = jit->ip;
#line 3110
                (jit->ip) ++;
#line 3110
                *tmp___76 = imb___6.b[0];
#line 3110
                tmp___77 = jit->ip;
#line 3110
                (jit->ip) ++;
#line 3110
                *tmp___77 = imb___6.b[1];
#line 3110
                tmp___78 = jit->ip;
#line 3110
                (jit->ip) ++;
#line 3110
                *tmp___78 = imb___6.b[2];
#line 3110
                tmp___79 = jit->ip;
#line 3110
                (jit->ip) ++;
#line 3110
                *tmp___79 = imb___6.b[3];
#line 3110
                break;
              }
            }
#line 3110
            break;
          }
        }
#line 3110
        break;
      }
#line 3110
      break;
    }
  } else {
#line 3111
    while (1) {
#line 3111
      tmp___80 = jit->ip;
#line 3111
      (jit->ip) ++;
#line 3111
      *tmp___80 = (unsigned char)102;
#line 3111
      while (1) {
#line 3111
        if (a1 > 7L) {
#line 3111
          tmp___81 = 4;
        } else {
#line 3111
          tmp___81 = 0;
        }
#line 3111
        if (a3 > 7L) {
#line 3111
          tmp___82 = 2;
        } else {
#line 3111
          tmp___82 = 0;
        }
#line 3111
        if (a2 > 7L) {
#line 3111
          tmp___83 = 1;
        } else {
#line 3111
          tmp___83 = 0;
        }
#line 3111
        _amd64_rex_bits___2 = (unsigned char )(((8 | tmp___81) | tmp___82) | tmp___83);
#line 3111
        if ((int )_amd64_rex_bits___2 != 0) {
#line 3111
          tmp___84 = jit->ip;
#line 3111
          (jit->ip) ++;
#line 3111
          *tmp___84 = (unsigned char )(0x40 | (int )_amd64_rex_bits___2);
        }
#line 3111
        break;
      }
#line 3111
      tmp___85 = jit->ip;
#line 3111
      (jit->ip) ++;
#line 3111
      *tmp___85 = (unsigned char)15;
#line 3111
      tmp___86 = jit->ip;
#line 3111
      (jit->ip) ++;
#line 3111
      *tmp___86 = (unsigned char)18;
#line 3111
      while (1) {
#line 3111
        if (a2 == -1L) {
#line 3111
          while (1) {
#line 3111
            tmp___87 = jit->ip;
#line 3111
            (jit->ip) ++;
#line 3111
            *tmp___87 = (unsigned char )(((a1 & 7L) << 3) | 4L);
#line 3111
            break;
          }
#line 3111
          while (1) {
#line 3111
            tmp___88 = jit->ip;
#line 3111
            (jit->ip) ++;
#line 3111
            *tmp___88 = (unsigned char )(((a3 & 7L) << 3) | 5L);
#line 3111
            break;
          }
#line 3111
          while (1) {
#line 3111
            imb___7.val = 0;
#line 3111
            tmp___89 = jit->ip;
#line 3111
            (jit->ip) ++;
#line 3111
            *tmp___89 = imb___7.b[0];
#line 3111
            tmp___90 = jit->ip;
#line 3111
            (jit->ip) ++;
#line 3111
            *tmp___90 = imb___7.b[1];
#line 3111
            tmp___91 = jit->ip;
#line 3111
            (jit->ip) ++;
#line 3111
            *tmp___91 = imb___7.b[2];
#line 3111
            tmp___92 = jit->ip;
#line 3111
            (jit->ip) ++;
#line 3111
            *tmp___92 = imb___7.b[3];
#line 3111
            break;
          }
        } else
#line 3111
        if (a2 != 5L) {
#line 3111
          while (1) {
#line 3111
            tmp___93 = jit->ip;
#line 3111
            (jit->ip) ++;
#line 3111
            *tmp___93 = (unsigned char )(((a1 & 7L) << 3) | 4L);
#line 3111
            break;
          }
#line 3111
          while (1) {
#line 3111
            tmp___94 = jit->ip;
#line 3111
            (jit->ip) ++;
#line 3111
            *tmp___94 = (unsigned char )((((a3 & 7L) & 7L) << 3) | ((a2 & 7L) & 7L));
#line 3111
            break;
          }
        } else {
#line 3111
          while (1) {
#line 3111
            tmp___95 = jit->ip;
#line 3111
            (jit->ip) ++;
#line 3111
            *tmp___95 = (unsigned char )(((long )(1 << 6) | ((a1 & 7L) << 3)) | 4L);
#line 3111
            break;
          }
#line 3111
          while (1) {
#line 3111
            tmp___96 = jit->ip;
#line 3111
            (jit->ip) ++;
#line 3111
            *tmp___96 = (unsigned char )((((a3 & 7L) & 7L) << 3) | ((a2 & 7L) & 7L));
#line 3111
            break;
          }
#line 3111
          while (1) {
#line 3111
            *(jit->ip) = (unsigned char)0;
#line 3111
            (jit->ip) ++;
#line 3111
            break;
          }
        }
#line 3111
        break;
      }
#line 3111
      break;
    }
  }
#line 3113
  return;
}
}
/* END FUNCTION-DEF emit_sse_fldx_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF emit_sse_fld_op LOC=UNKNOWN */
static void emit_sse_fld_op(struct jit *jit , jit_op *op , jit_value a1 , jit_value a2 ) 
{ 
  unsigned char *tmp ;
  unsigned char _amd64_rex_bits ;
  int tmp___0 ;
  unsigned char *tmp___1 ;
  unsigned char *tmp___2 ;
  unsigned char *tmp___3 ;
  unsigned char *tmp___4 ;
  unsigned char *tmp___5 ;
  x86_imm_buf imb ;
  unsigned char *tmp___6 ;
  unsigned char *tmp___7 ;
  unsigned char *tmp___8 ;
  unsigned char *tmp___9 ;
  unsigned char *tmp___10 ;
  unsigned char _amd64_rex_bits___0 ;
  int tmp___11 ;
  jit_value tmp___12 ;
  int tmp___13 ;
  jit_value tmp___14 ;
  unsigned char *tmp___15 ;
  unsigned char *tmp___16 ;
  unsigned char *tmp___17 ;
  unsigned char *tmp___18 ;
  x86_imm_buf imb___0 ;
  unsigned char *tmp___19 ;
  unsigned char *tmp___20 ;
  unsigned char *tmp___21 ;
  unsigned char *tmp___22 ;
  unsigned char *tmp___23 ;
  unsigned char *tmp___24 ;
  unsigned char *tmp___25 ;
  unsigned char *tmp___26 ;
  unsigned char *tmp___27 ;
  unsigned char *tmp___28 ;
  x86_imm_buf imb___1 ;
  unsigned char *tmp___29 ;
  unsigned char *tmp___30 ;
  unsigned char *tmp___31 ;
  unsigned char *tmp___32 ;
  unsigned char *tmp___33 ;
  unsigned char *tmp___34 ;
  unsigned char *tmp___35 ;
  x86_imm_buf imb___2 ;
  unsigned char *tmp___36 ;
  unsigned char *tmp___37 ;
  unsigned char *tmp___38 ;
  unsigned char *tmp___39 ;
  unsigned char *tmp___40 ;
  unsigned char _amd64_rex_bits___1 ;
  int tmp___41 ;
  unsigned char *tmp___42 ;
  unsigned char *tmp___43 ;
  unsigned char *tmp___44 ;
  unsigned char *tmp___45 ;
  unsigned char *tmp___46 ;
  x86_imm_buf imb___3 ;
  unsigned char *tmp___47 ;
  unsigned char *tmp___48 ;
  unsigned char *tmp___49 ;
  unsigned char *tmp___50 ;
  unsigned char *tmp___51 ;
  unsigned char _amd64_rex_bits___2 ;
  int tmp___52 ;
  int tmp___53 ;
  unsigned char *tmp___54 ;
  unsigned char *tmp___55 ;
  unsigned char *tmp___56 ;
  unsigned char *tmp___57 ;
  x86_imm_buf imb___4 ;
  unsigned char *tmp___58 ;
  unsigned char *tmp___59 ;
  unsigned char *tmp___60 ;
  unsigned char *tmp___61 ;
  unsigned char *tmp___62 ;
  unsigned char *tmp___63 ;
  unsigned char *tmp___64 ;
  unsigned char *tmp___65 ;
  unsigned char *tmp___66 ;
  unsigned char *tmp___67 ;
  x86_imm_buf imb___5 ;
  unsigned char *tmp___68 ;
  unsigned char *tmp___69 ;
  unsigned char *tmp___70 ;
  unsigned char *tmp___71 ;
  unsigned char *tmp___72 ;
  unsigned char *tmp___73 ;
  unsigned char *tmp___74 ;
  x86_imm_buf imb___6 ;
  unsigned char *tmp___75 ;
  unsigned char *tmp___76 ;
  unsigned char *tmp___77 ;
  unsigned char *tmp___78 ;

  {
#line 3096
  if ((unsigned long long )op->arg_size == sizeof(float )) {
#line 3097
    if ((int )op->code & 0x02) {
#line 3097
      while (1) {
#line 3097
        tmp = jit->ip;
#line 3097
        (jit->ip) ++;
#line 3097
        *tmp = (unsigned char)243;
#line 3097
        while (1) {
#line 3097
          if (a1 > 7L) {
#line 3097
            tmp___0 = 4;
          } else {
#line 3097
            tmp___0 = 0;
          }
#line 3097
          _amd64_rex_bits = (unsigned char )tmp___0;
#line 3097
          if ((int )_amd64_rex_bits != 0) {
#line 3097
            tmp___1 = jit->ip;
#line 3097
            (jit->ip) ++;
#line 3097
            *tmp___1 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
          }
#line 3097
          break;
        }
#line 3097
        tmp___2 = jit->ip;
#line 3097
        (jit->ip) ++;
#line 3097
        *tmp___2 = (unsigned char)15;
#line 3097
        tmp___3 = jit->ip;
#line 3097
        (jit->ip) ++;
#line 3097
        *tmp___3 = (unsigned char)90;
#line 3097
        while (1) {
#line 3097
          tmp___4 = jit->ip;
#line 3097
          (jit->ip) ++;
#line 3097
          *tmp___4 = (unsigned char )(((a1 & 7L) << 3) | 4L);
#line 3097
          break;
        }
#line 3097
        while (1) {
#line 3097
          tmp___5 = jit->ip;
#line 3097
          (jit->ip) ++;
#line 3097
          *tmp___5 = (unsigned char )((4 << 3) | 5);
#line 3097
          break;
        }
#line 3097
        while (1) {
#line 3097
          imb.val = (int )a2;
#line 3097
          tmp___6 = jit->ip;
#line 3097
          (jit->ip) ++;
#line 3097
          *tmp___6 = imb.b[0];
#line 3097
          tmp___7 = jit->ip;
#line 3097
          (jit->ip) ++;
#line 3097
          *tmp___7 = imb.b[1];
#line 3097
          tmp___8 = jit->ip;
#line 3097
          (jit->ip) ++;
#line 3097
          *tmp___8 = imb.b[2];
#line 3097
          tmp___9 = jit->ip;
#line 3097
          (jit->ip) ++;
#line 3097
          *tmp___9 = imb.b[3];
#line 3097
          break;
        }
#line 3097
        break;
      }
    } else {
#line 3098
      while (1) {
#line 3098
        tmp___10 = jit->ip;
#line 3098
        (jit->ip) ++;
#line 3098
        *tmp___10 = (unsigned char)243;
#line 3098
        while (1) {
#line 3098
          if (a1 > 7L) {
#line 3098
            tmp___11 = 4;
          } else {
#line 3098
            tmp___11 = 0;
          }
#line 3098
          if (a2 == 16L) {
#line 3098
            tmp___14 = (jit_value )0;
          } else {
#line 3098
            tmp___14 = a2;
          }
#line 3098
          if (tmp___14 > 7L) {
#line 3098
            tmp___13 = 1;
          } else {
#line 3098
            tmp___13 = 0;
          }
#line 3098
          _amd64_rex_bits___0 = (unsigned char )(tmp___11 | tmp___13);
#line 3098
          if ((int )_amd64_rex_bits___0 != 0) {
#line 3098
            tmp___15 = jit->ip;
#line 3098
            (jit->ip) ++;
#line 3098
            *tmp___15 = (unsigned char )(0x40 | (int )_amd64_rex_bits___0);
          }
#line 3098
          break;
        }
#line 3098
        tmp___16 = jit->ip;
#line 3098
        (jit->ip) ++;
#line 3098
        *tmp___16 = (unsigned char)15;
#line 3098
        tmp___17 = jit->ip;
#line 3098
        (jit->ip) ++;
#line 3098
        *tmp___17 = (unsigned char)90;
#line 3098
        while (1) {
#line 3098
          if (a2 == 16L) {
#line 3098
            while (1) {
#line 3098
              tmp___18 = jit->ip;
#line 3098
              (jit->ip) ++;
#line 3098
              *tmp___18 = (unsigned char )((((a1 & 7L) & 7L) << 3) | 5L);
#line 3098
              break;
            }
#line 3098
            while (1) {
#line 3098
              imb___0.val = 0;
#line 3098
              tmp___19 = jit->ip;
#line 3098
              (jit->ip) ++;
#line 3098
              *tmp___19 = imb___0.b[0];
#line 3098
              tmp___20 = jit->ip;
#line 3098
              (jit->ip) ++;
#line 3098
              *tmp___20 = imb___0.b[1];
#line 3098
              tmp___21 = jit->ip;
#line 3098
              (jit->ip) ++;
#line 3098
              *tmp___21 = imb___0.b[2];
#line 3098
              tmp___22 = jit->ip;
#line 3098
              (jit->ip) ++;
#line 3098
              *tmp___22 = imb___0.b[3];
#line 3098
              break;
            }
          } else {
#line 3098
            while (1) {
#line 3098
              if ((a2 & 7L) == 4L) {
#line 3098
                while (1) {
#line 3098
                  tmp___23 = jit->ip;
#line 3098
                  (jit->ip) ++;
#line 3098
                  *tmp___23 = (unsigned char )((((a1 & 7L) & 7L) << 3) | 4L);
#line 3098
                  break;
                }
#line 3098
                while (1) {
#line 3098
                  tmp___24 = jit->ip;
#line 3098
                  (jit->ip) ++;
#line 3098
                  *tmp___24 = (unsigned char )((4 << 3) | 4);
#line 3098
                  break;
                }
#line 3098
                break;
              }
#line 3098
              if ((a2 & 7L) != 5L) {
#line 3098
                while (1) {
#line 3098
                  tmp___33 = jit->ip;
#line 3098
                  (jit->ip) ++;
#line 3098
                  *tmp___33 = (unsigned char )((((a1 & 7L) & 7L) << 3) | ((a2 & 7L) & 7L));
#line 3098
                  break;
                }
#line 3098
                break;
              }
#line 3098
              while (1) {
#line 3098
                tmp___34 = jit->ip;
#line 3098
                (jit->ip) ++;
#line 3098
                *tmp___34 = (unsigned char )(((long )(1 << 6) | (((a1 & 7L) & 7L) << 3)) | ((a2 & 7L) & 7L));
#line 3098
                break;
              }
#line 3098
              while (1) {
#line 3098
                *(jit->ip) = (unsigned char)0;
#line 3098
                (jit->ip) ++;
#line 3098
                break;
              }
#line 3098
              break;
            }
          }
#line 3098
          break;
        }
#line 3098
        break;
      }
    }
  } else
#line 3100
  if ((int )op->code & 0x02) {
#line 3100
    while (1) {
#line 3100
      tmp___40 = jit->ip;
#line 3100
      (jit->ip) ++;
#line 3100
      *tmp___40 = (unsigned char)242;
#line 3100
      while (1) {
#line 3100
        if (a1 > 7L) {
#line 3100
          tmp___41 = 4;
        } else {
#line 3100
          tmp___41 = 0;
        }
#line 3100
        _amd64_rex_bits___1 = (unsigned char )tmp___41;
#line 3100
        if ((int )_amd64_rex_bits___1 != 0) {
#line 3100
          tmp___42 = jit->ip;
#line 3100
          (jit->ip) ++;
#line 3100
          *tmp___42 = (unsigned char )(0x40 | (int )_amd64_rex_bits___1);
        }
#line 3100
        break;
      }
#line 3100
      tmp___43 = jit->ip;
#line 3100
      (jit->ip) ++;
#line 3100
      *tmp___43 = (unsigned char)15;
#line 3100
      tmp___44 = jit->ip;
#line 3100
      (jit->ip) ++;
#line 3100
      *tmp___44 = (unsigned char)16;
#line 3100
      while (1) {
#line 3100
        tmp___45 = jit->ip;
#line 3100
        (jit->ip) ++;
#line 3100
        *tmp___45 = (unsigned char )(((a1 & 7L) << 3) | 4L);
#line 3100
        break;
      }
#line 3100
      while (1) {
#line 3100
        tmp___46 = jit->ip;
#line 3100
        (jit->ip) ++;
#line 3100
        *tmp___46 = (unsigned char )((4 << 3) | 5);
#line 3100
        break;
      }
#line 3100
      while (1) {
#line 3100
        imb___3.val = (int )a2;
#line 3100
        tmp___47 = jit->ip;
#line 3100
        (jit->ip) ++;
#line 3100
        *tmp___47 = imb___3.b[0];
#line 3100
        tmp___48 = jit->ip;
#line 3100
        (jit->ip) ++;
#line 3100
        *tmp___48 = imb___3.b[1];
#line 3100
        tmp___49 = jit->ip;
#line 3100
        (jit->ip) ++;
#line 3100
        *tmp___49 = imb___3.b[2];
#line 3100
        tmp___50 = jit->ip;
#line 3100
        (jit->ip) ++;
#line 3100
        *tmp___50 = imb___3.b[3];
#line 3100
        break;
      }
#line 3100
      break;
    }
  } else {
#line 3101
    while (1) {
#line 3101
      tmp___51 = jit->ip;
#line 3101
      (jit->ip) ++;
#line 3101
      *tmp___51 = (unsigned char)102;
#line 3101
      while (1) {
#line 3101
        if (a1 > 7L) {
#line 3101
          tmp___52 = 4;
        } else {
#line 3101
          tmp___52 = 0;
        }
#line 3101
        if (a2 > 7L) {
#line 3101
          tmp___53 = 1;
        } else {
#line 3101
          tmp___53 = 0;
        }
#line 3101
        _amd64_rex_bits___2 = (unsigned char )(tmp___52 | tmp___53);
#line 3101
        if ((int )_amd64_rex_bits___2 != 0) {
#line 3101
          tmp___54 = jit->ip;
#line 3101
          (jit->ip) ++;
#line 3101
          *tmp___54 = (unsigned char )(0x40 | (int )_amd64_rex_bits___2);
        }
#line 3101
        break;
      }
#line 3101
      tmp___55 = jit->ip;
#line 3101
      (jit->ip) ++;
#line 3101
      *tmp___55 = (unsigned char)15;
#line 3101
      tmp___56 = jit->ip;
#line 3101
      (jit->ip) ++;
#line 3101
      *tmp___56 = (unsigned char)18;
#line 3101
      while (1) {
#line 3101
        if (a2 == 16L) {
#line 3101
          while (1) {
#line 3101
            tmp___57 = jit->ip;
#line 3101
            (jit->ip) ++;
#line 3101
            *tmp___57 = (unsigned char )((((a1 & 7L) & 7L) << 3) | 5L);
#line 3101
            break;
          }
#line 3101
          while (1) {
#line 3101
            imb___4.val = 0;
#line 3101
            tmp___58 = jit->ip;
#line 3101
            (jit->ip) ++;
#line 3101
            *tmp___58 = imb___4.b[0];
#line 3101
            tmp___59 = jit->ip;
#line 3101
            (jit->ip) ++;
#line 3101
            *tmp___59 = imb___4.b[1];
#line 3101
            tmp___60 = jit->ip;
#line 3101
            (jit->ip) ++;
#line 3101
            *tmp___60 = imb___4.b[2];
#line 3101
            tmp___61 = jit->ip;
#line 3101
            (jit->ip) ++;
#line 3101
            *tmp___61 = imb___4.b[3];
#line 3101
            break;
          }
        } else {
#line 3101
          while (1) {
#line 3101
            if ((a2 & 7L) == 4L) {
#line 3101
              while (1) {
#line 3101
                tmp___62 = jit->ip;
#line 3101
                (jit->ip) ++;
#line 3101
                *tmp___62 = (unsigned char )((((a1 & 7L) & 7L) << 3) | 4L);
#line 3101
                break;
              }
#line 3101
              while (1) {
#line 3101
                tmp___63 = jit->ip;
#line 3101
                (jit->ip) ++;
#line 3101
                *tmp___63 = (unsigned char )((4 << 3) | 4);
#line 3101
                break;
              }
#line 3101
              break;
            }
#line 3101
            if ((a2 & 7L) != 5L) {
#line 3101
              while (1) {
#line 3101
                tmp___72 = jit->ip;
#line 3101
                (jit->ip) ++;
#line 3101
                *tmp___72 = (unsigned char )((((a1 & 7L) & 7L) << 3) | ((a2 & 7L) & 7L));
#line 3101
                break;
              }
#line 3101
              break;
            }
#line 3101
            while (1) {
#line 3101
              tmp___73 = jit->ip;
#line 3101
              (jit->ip) ++;
#line 3101
              *tmp___73 = (unsigned char )(((long )(1 << 6) | (((a1 & 7L) & 7L) << 3)) | ((a2 & 7L) & 7L));
#line 3101
              break;
            }
#line 3101
            while (1) {
#line 3101
              *(jit->ip) = (unsigned char)0;
#line 3101
              (jit->ip) ++;
#line 3101
              break;
            }
#line 3101
            break;
          }
        }
#line 3101
        break;
      }
#line 3101
      break;
    }
  }
#line 3103
  return;
}
}
/* END FUNCTION-DEF emit_sse_fld_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF rmap_sync_aux LOC=UNKNOWN */
static void rmap_sync_aux(jit_tree *current , jit_tree *target , jit_op *op , int mode ) 
{ 
  int tmp ;
  int tmp___0 ;
  jit_tree *found ;
  jit_tree *tmp___1 ;
  int i ;
  jit_hw_reg *hreg ;
  long tmp___2 ;

  {
#line 3299
  if ((unsigned long )current == (unsigned long )((void *)0)) {
#line 3299
    return;
  }
#line 3300
  if (mode == 2) {
#line 3300
    tmp = jit_set_get(op->live_out, (int )current->key);
#line 3300
    if (! tmp) {
#line 3300
      goto skip;
    }
  }
#line 3301
  if (mode == 1) {
#line 3301
    tmp___0 = jit_set_get((op->jmp_addr)->live_in, (int )current->key);
#line 3301
    if (! tmp___0) {
#line 3301
      goto skip;
    }
  }
#line 3302
  tmp___1 = jit_tree_search(target, current->key);
#line 3302
  found = tmp___1;
#line 3303
  i = (int )current->key;
#line 3304
  if (! found) {
#line 3304
    goto _L;
  } else
#line 3304
  if ((unsigned long )current->value != (unsigned long )found->value) {
    _L: /* CIL Label */ 
#line 3305
    hreg = (jit_hw_reg *)current->value;
#line 3306
    switch (mode) {
    case 1: 
#line 3307
    unload_reg(op, hreg, (jit_value )i);
#line 3307
    break;
    case 2: 
#line 3308
    load_reg(op, hreg, (jit_value )i);
#line 3308
    break;
    default: 
#line 3309
    tmp___2 = __builtin_expect(1L, 0L);
#line 3309
    if (tmp___2) {
#line 3309
      __assert_rtn((char const   *)"rmap_sync_aux", (char const   *)"tmp/src.c", 2007,
                   (char const   *)"0");
    }
    }
  }
  skip: 
#line 3313
  rmap_sync_aux(current->left, target, op, mode);
#line 3314
  rmap_sync_aux(current->right, target, op, mode);
#line 3315
  return;
}
}
/* END FUNCTION-DEF rmap_sync_aux LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF emit_branch_overflow_op LOC=UNKNOWN */
static void emit_branch_overflow_op(struct jit *jit , struct jit_op *op , int alu_op ,
                                    int imm , int negation ) 
{ 
  unsigned char _amd64_rex_bits ;
  int tmp ;
  unsigned char *tmp___0 ;
  unsigned char *tmp___1 ;
  unsigned char *tmp___2 ;
  unsigned char _amd64_rex_bits___0 ;
  unsigned char *tmp___3 ;
  unsigned char *tmp___4 ;
  x86_imm_buf imb ;
  unsigned char *tmp___5 ;
  unsigned char *tmp___6 ;
  unsigned char *tmp___7 ;
  unsigned char *tmp___8 ;
  unsigned char _amd64_rex_bits___1 ;
  int tmp___9 ;
  unsigned char *tmp___10 ;
  unsigned char *tmp___11 ;
  unsigned char *tmp___12 ;
  x86_imm_buf imb___0 ;
  unsigned char *tmp___13 ;
  unsigned char *tmp___14 ;
  unsigned char *tmp___15 ;
  unsigned char *tmp___16 ;
  unsigned char _amd64_rex_bits___2 ;
  int tmp___17 ;
  int tmp___18 ;
  unsigned char *tmp___19 ;
  unsigned char *tmp___20 ;
  unsigned char *tmp___21 ;
  unsigned char _amd64_rex_bits___3 ;
  unsigned char *tmp___22 ;
  int offset ;
  int tmp___23 ;
  size_t tmp___24 ;
  int tmp___25 ;
  unsigned char *tmp___26 ;
  unsigned char *tmp___27 ;
  unsigned char *tmp___28 ;
  x86_imm_buf imb___1 ;
  unsigned char *tmp___29 ;
  unsigned char *tmp___30 ;
  unsigned char *tmp___31 ;
  unsigned char *tmp___32 ;
  unsigned char _amd64_rex_bits___4 ;
  unsigned char *tmp___33 ;
  int offset___0 ;
  int tmp___34 ;
  size_t tmp___35 ;
  int tmp___36 ;
  unsigned char *tmp___37 ;
  unsigned char *tmp___38 ;
  unsigned char *tmp___39 ;
  x86_imm_buf imb___2 ;
  unsigned char *tmp___40 ;
  unsigned char *tmp___41 ;
  unsigned char *tmp___42 ;
  unsigned char *tmp___43 ;

  {
#line 4363
  if (imm) {
#line 4363
    while (1) {
#line 4363
      if (op->r_arg[2] >= -128L) {
#line 4363
        if (op->r_arg[2] <= 127L) {
#line 4363
          while (1) {
#line 4363
            if (op->r_arg[1] > 7L) {
#line 4363
              tmp = 1;
            } else {
#line 4363
              tmp = 0;
            }
#line 4363
            _amd64_rex_bits = (unsigned char )(8 | tmp);
#line 4363
            if ((int )_amd64_rex_bits != 0) {
#line 4363
              tmp___0 = jit->ip;
#line 4363
              (jit->ip) ++;
#line 4363
              *tmp___0 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
            }
#line 4363
            break;
          }
#line 4363
          tmp___1 = jit->ip;
#line 4363
          (jit->ip) ++;
#line 4363
          *tmp___1 = (unsigned char)131;
#line 4363
          while (1) {
#line 4363
            while (1) {
#line 4363
              tmp___2 = jit->ip;
#line 4363
              (jit->ip) ++;
#line 4363
              *tmp___2 = (unsigned char )((long )((3 << 6) | ((alu_op & 0x07) << 3)) | (op->r_arg[1] & 7L));
#line 4363
              break;
            }
#line 4363
            break;
          }
#line 4363
          while (1) {
#line 4363
            *(jit->ip) = (unsigned char )(op->r_arg[2] & 255L);
#line 4363
            (jit->ip) ++;
#line 4363
            break;
          }
        } else {
#line 4363
          goto _L;
        }
      } else
      _L: /* CIL Label */ 
#line 4363
      if (op->r_arg[1] == 0L) {
#line 4363
        while (1) {
#line 4363
          _amd64_rex_bits___0 = (unsigned char)8;
#line 4363
          if ((int )_amd64_rex_bits___0 != 0) {
#line 4363
            tmp___3 = jit->ip;
#line 4363
            (jit->ip) ++;
#line 4363
            *tmp___3 = (unsigned char )(0x40 | (int )_amd64_rex_bits___0);
          }
#line 4363
          break;
        }
#line 4363
        tmp___4 = jit->ip;
#line 4363
        (jit->ip) ++;
#line 4363
        *tmp___4 = (unsigned char )(((int )((unsigned char )alu_op) << 3) + 5);
#line 4363
        while (1) {
#line 4363
          imb.val = (int )op->r_arg[2];
#line 4363
          tmp___5 = jit->ip;
#line 4363
          (jit->ip) ++;
#line 4363
          *tmp___5 = imb.b[0];
#line 4363
          tmp___6 = jit->ip;
#line 4363
          (jit->ip) ++;
#line 4363
          *tmp___6 = imb.b[1];
#line 4363
          tmp___7 = jit->ip;
#line 4363
          (jit->ip) ++;
#line 4363
          *tmp___7 = imb.b[2];
#line 4363
          tmp___8 = jit->ip;
#line 4363
          (jit->ip) ++;
#line 4363
          *tmp___8 = imb.b[3];
#line 4363
          break;
        }
      } else {
#line 4363
        while (1) {
#line 4363
          if (op->r_arg[1] > 7L) {
#line 4363
            tmp___9 = 1;
          } else {
#line 4363
            tmp___9 = 0;
          }
#line 4363
          _amd64_rex_bits___1 = (unsigned char )(8 | tmp___9);
#line 4363
          if ((int )_amd64_rex_bits___1 != 0) {
#line 4363
            tmp___10 = jit->ip;
#line 4363
            (jit->ip) ++;
#line 4363
            *tmp___10 = (unsigned char )(0x40 | (int )_amd64_rex_bits___1);
          }
#line 4363
          break;
        }
#line 4363
        tmp___11 = jit->ip;
#line 4363
        (jit->ip) ++;
#line 4363
        *tmp___11 = (unsigned char)129;
#line 4363
        while (1) {
#line 4363
          while (1) {
#line 4363
            tmp___12 = jit->ip;
#line 4363
            (jit->ip) ++;
#line 4363
            *tmp___12 = (unsigned char )((long )((3 << 6) | ((alu_op & 0x07) << 3)) | (op->r_arg[1] & 7L));
#line 4363
            break;
          }
#line 4363
          break;
        }
#line 4363
        while (1) {
#line 4363
          imb___0.val = (int )op->r_arg[2];
#line 4363
          tmp___13 = jit->ip;
#line 4363
          (jit->ip) ++;
#line 4363
          *tmp___13 = imb___0.b[0];
#line 4363
          tmp___14 = jit->ip;
#line 4363
          (jit->ip) ++;
#line 4363
          *tmp___14 = imb___0.b[1];
#line 4363
          tmp___15 = jit->ip;
#line 4363
          (jit->ip) ++;
#line 4363
          *tmp___15 = imb___0.b[2];
#line 4363
          tmp___16 = jit->ip;
#line 4363
          (jit->ip) ++;
#line 4363
          *tmp___16 = imb___0.b[3];
#line 4363
          break;
        }
      }
#line 4363
      break;
    }
  } else {
#line 4364
    while (1) {
#line 4364
      while (1) {
#line 4364
        if (op->r_arg[1] > 7L) {
#line 4364
          tmp___17 = 4;
        } else {
#line 4364
          tmp___17 = 0;
        }
#line 4364
        if (op->r_arg[2] > 7L) {
#line 4364
          tmp___18 = 1;
        } else {
#line 4364
          tmp___18 = 0;
        }
#line 4364
        _amd64_rex_bits___2 = (unsigned char )((8 | tmp___17) | tmp___18);
#line 4364
        if ((int )_amd64_rex_bits___2 != 0) {
#line 4364
          tmp___19 = jit->ip;
#line 4364
          (jit->ip) ++;
#line 4364
          *tmp___19 = (unsigned char )(0x40 | (int )_amd64_rex_bits___2);
        }
#line 4364
        break;
      }
#line 4364
      tmp___20 = jit->ip;
#line 4364
      (jit->ip) ++;
#line 4364
      *tmp___20 = (unsigned char )(((int )((unsigned char )alu_op) << 3) + 3);
#line 4364
      while (1) {
#line 4364
        while (1) {
#line 4364
          tmp___21 = jit->ip;
#line 4364
          (jit->ip) ++;
#line 4364
          *tmp___21 = (unsigned char )(((long )(3 << 6) | ((op->r_arg[1] & 7L) << 3)) | (op->r_arg[2] & 7L));
#line 4364
          break;
        }
#line 4364
        break;
      }
#line 4364
      break;
    }
  }
#line 4365
  op->patch_addr = (jit_value )jit->ip - (jit_value )jit->buf;
#line 4366
  if (! negation) {
#line 4366
    while (1) {
#line 4366
      while (1) {
#line 4366
        _amd64_rex_bits___3 = (unsigned char)8;
#line 4366
        if ((int )_amd64_rex_bits___3 != 0) {
#line 4366
          tmp___22 = jit->ip;
#line 4366
          (jit->ip) ++;
#line 4366
          *tmp___22 = (unsigned char )(0x40 | (int )_amd64_rex_bits___3);
        }
#line 4366
        break;
      }
#line 4366
      while (1) {
#line 4366
        tmp___25 = jit_is_label(jit, (void *)op->r_arg[0]);
#line 4366
        if (tmp___25) {
#line 4366
          tmp___24 = ((size_t )((jit_value )jit->buf) + ((jit_label *)op->r_arg[0])->pos) - (size_t )((jit_value )jit->ip);
        } else {
#line 4366
          tmp___24 = (size_t )op->r_arg[0];
        }
#line 4366
        offset = (int )(tmp___24 - 6UL);
#line 4366
        while (1) {
#line 4366
          tmp___26 = jit->ip;
#line 4366
          (jit->ip) ++;
#line 4366
          *tmp___26 = (unsigned char)15;
#line 4366
          tmp___28 = jit->ip;
#line 4366
          (jit->ip) ++;
#line 4366
          *tmp___28 = (unsigned char )((int const   )x86_cc_unsigned_map[10] + 16);
#line 4366
          while (1) {
#line 4366
            imb___1.val = offset;
#line 4366
            tmp___29 = jit->ip;
#line 4366
            (jit->ip) ++;
#line 4366
            *tmp___29 = imb___1.b[0];
#line 4366
            tmp___30 = jit->ip;
#line 4366
            (jit->ip) ++;
#line 4366
            *tmp___30 = imb___1.b[1];
#line 4366
            tmp___31 = jit->ip;
#line 4366
            (jit->ip) ++;
#line 4366
            *tmp___31 = imb___1.b[2];
#line 4366
            tmp___32 = jit->ip;
#line 4366
            (jit->ip) ++;
#line 4366
            *tmp___32 = imb___1.b[3];
#line 4366
            break;
          }
#line 4366
          break;
        }
#line 4366
        break;
      }
#line 4366
      break;
    }
  } else {
#line 4367
    while (1) {
#line 4367
      while (1) {
#line 4367
        _amd64_rex_bits___4 = (unsigned char)8;
#line 4367
        if ((int )_amd64_rex_bits___4 != 0) {
#line 4367
          tmp___33 = jit->ip;
#line 4367
          (jit->ip) ++;
#line 4367
          *tmp___33 = (unsigned char )(0x40 | (int )_amd64_rex_bits___4);
        }
#line 4367
        break;
      }
#line 4367
      while (1) {
#line 4367
        tmp___36 = jit_is_label(jit, (void *)op->r_arg[0]);
#line 4367
        if (tmp___36) {
#line 4367
          tmp___35 = ((size_t )((jit_value )jit->buf) + ((jit_label *)op->r_arg[0])->pos) - (size_t )((jit_value )jit->ip);
        } else {
#line 4367
          tmp___35 = (size_t )op->r_arg[0];
        }
#line 4367
        offset___0 = (int )(tmp___35 - 6UL);
#line 4367
        while (1) {
#line 4367
          tmp___37 = jit->ip;
#line 4367
          (jit->ip) ++;
#line 4367
          *tmp___37 = (unsigned char)15;
#line 4367
          tmp___39 = jit->ip;
#line 4367
          (jit->ip) ++;
#line 4367
          *tmp___39 = (unsigned char )((int const   )x86_cc_unsigned_map[11] + 16);
#line 4367
          while (1) {
#line 4367
            imb___2.val = offset___0;
#line 4367
            tmp___40 = jit->ip;
#line 4367
            (jit->ip) ++;
#line 4367
            *tmp___40 = imb___2.b[0];
#line 4367
            tmp___41 = jit->ip;
#line 4367
            (jit->ip) ++;
#line 4367
            *tmp___41 = imb___2.b[1];
#line 4367
            tmp___42 = jit->ip;
#line 4367
            (jit->ip) ++;
#line 4367
            *tmp___42 = imb___2.b[2];
#line 4367
            tmp___43 = jit->ip;
#line 4367
            (jit->ip) ++;
#line 4367
            *tmp___43 = imb___2.b[3];
#line 4367
            break;
          }
#line 4367
          break;
        }
#line 4367
        break;
      }
#line 4367
      break;
    }
  }
#line 4368
  return;
}
}
/* END FUNCTION-DEF emit_branch_overflow_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF emit_funcall LOC=UNKNOWN */
static void emit_funcall(struct jit *jit , struct jit_op *op , int imm ) 
{ 
  int stack_correction ;
  int tmp ;
  jit_hw_reg *hreg ;
  jit_hw_reg *tmp___0 ;
  unsigned char _amd64_rex_bits ;
  int tmp___1 ;
  unsigned char *tmp___2 ;
  unsigned char *tmp___3 ;
  unsigned char *tmp___4 ;
  unsigned char _amd64_rex_bits___0 ;
  unsigned char *tmp___5 ;
  unsigned char *tmp___6 ;
  unsigned char *tmp___7 ;
  x86_imm_buf imb ;
  int tmp___8 ;
  unsigned char *tmp___9 ;
  unsigned char *tmp___10 ;
  unsigned char *tmp___11 ;
  unsigned char *tmp___12 ;
  unsigned char *tmp___13 ;
  unsigned char *tmp___14 ;
  unsigned char *tmp___15 ;
  unsigned char *tmp___16 ;
  int tmp___17 ;
  unsigned char *tmp___18 ;
  unsigned char *tmp___19 ;
  x86_imm_buf imb___0 ;
  int tmp___20 ;
  unsigned char *tmp___21 ;
  unsigned char *tmp___22 ;
  unsigned char *tmp___23 ;
  unsigned char *tmp___24 ;
  int tmp___25 ;
  int tmp___26 ;
  int tmp___27 ;
  unsigned char *tmp___28 ;
  int tmp___29 ;
  unsigned char *tmp___30 ;
  int tmp___31 ;
  unsigned char *tmp___32 ;
  x86_imm_buf imb___1 ;
  int tmp___33 ;
  unsigned char *tmp___34 ;
  unsigned char *tmp___35 ;
  unsigned char *tmp___36 ;
  unsigned char *tmp___37 ;
  int tmp___38 ;
  int tmp___39 ;
  unsigned char *tmp___40 ;
  x86_imm_buf imb___2 ;
  int tmp___41 ;
  size_t tmp___42 ;
  int tmp___43 ;
  unsigned char *tmp___44 ;
  unsigned char *tmp___45 ;
  unsigned char *tmp___46 ;
  unsigned char *tmp___47 ;
  unsigned char _amd64_rex_bits___1 ;
  unsigned char *tmp___48 ;
  unsigned char *tmp___49 ;
  amd64_imm_buf imb___3 ;
  unsigned char *tmp___50 ;
  unsigned char *tmp___51 ;
  unsigned char *tmp___52 ;
  unsigned char *tmp___53 ;
  unsigned char *tmp___54 ;
  unsigned char *tmp___55 ;
  unsigned char *tmp___56 ;
  unsigned char *tmp___57 ;
  x86_imm_buf imb___4 ;
  unsigned char *tmp___58 ;
  unsigned char *tmp___59 ;
  unsigned char *tmp___60 ;
  unsigned char *tmp___61 ;
  unsigned char _amd64_rex_bits___2 ;
  unsigned char *tmp___62 ;
  unsigned char *tmp___63 ;
  unsigned char *tmp___64 ;
  int tmp___65 ;
  unsigned char _amd64_rex_bits___3 ;
  unsigned char *tmp___66 ;
  unsigned char *tmp___67 ;
  unsigned char *tmp___68 ;
  unsigned char _amd64_rex_bits___4 ;
  unsigned char *tmp___69 ;
  unsigned char *tmp___70 ;
  x86_imm_buf imb___5 ;
  unsigned char *tmp___71 ;
  unsigned char *tmp___72 ;
  unsigned char *tmp___73 ;
  unsigned char *tmp___74 ;
  unsigned char _amd64_rex_bits___5 ;
  unsigned char *tmp___75 ;
  unsigned char *tmp___76 ;
  unsigned char *tmp___77 ;
  x86_imm_buf imb___6 ;
  unsigned char *tmp___78 ;
  unsigned char *tmp___79 ;
  unsigned char *tmp___80 ;
  unsigned char *tmp___81 ;
  int tmp___82 ;

  {
#line 3726
  tmp = emit_arguments(jit);
#line 3726
  stack_correction = tmp;
#line 3727
  if (! imm) {
#line 3728
    tmp___0 = rmap_get(op->regmap, op->arg[0]);
#line 3728
    hreg = tmp___0;
#line 3729
    if (hreg) {
#line 3729
      while (1) {
#line 3729
        while (1) {
#line 3729
          if (hreg->id > 7) {
#line 3729
            tmp___1 = 1;
          } else {
#line 3729
            tmp___1 = 0;
          }
#line 3729
          _amd64_rex_bits = (unsigned char )tmp___1;
#line 3729
          if ((int )_amd64_rex_bits != 0) {
#line 3729
            tmp___2 = jit->ip;
#line 3729
            (jit->ip) ++;
#line 3729
            *tmp___2 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
          }
#line 3729
          break;
        }
#line 3729
        tmp___3 = jit->ip;
#line 3729
        (jit->ip) ++;
#line 3729
        *tmp___3 = (unsigned char)255;
#line 3729
        while (1) {
#line 3729
          while (1) {
#line 3729
            tmp___4 = jit->ip;
#line 3729
            (jit->ip) ++;
#line 3729
            *tmp___4 = (unsigned char )(((3 << 6) | (2 << 3)) | ((hreg->id & 0x7) & 0x07));
#line 3729
            break;
          }
#line 3729
          break;
        }
#line 3729
        break;
      }
    } else {
#line 3730
      while (1) {
#line 3730
        while (1) {
#line 3730
          _amd64_rex_bits___0 = (unsigned char)0;
#line 3730
          if ((int )_amd64_rex_bits___0 != 0) {
#line 3730
            tmp___5 = jit->ip;
#line 3730
            (jit->ip) ++;
#line 3730
            *tmp___5 = (unsigned char )(0x40 | (int )_amd64_rex_bits___0);
          }
#line 3730
          break;
        }
#line 3730
        tmp___6 = jit->ip;
#line 3730
        (jit->ip) ++;
#line 3730
        *tmp___6 = (unsigned char)255;
#line 3730
        while (1) {
#line 3730
          while (1) {
#line 3730
            if (0) {
#line 3730
              tmp___27 = stack_reg_pos(jit, (int )op->arg[0]);
#line 3730
              if (tmp___27 == 0) {
#line 3730
                while (1) {
#line 3730
                  tmp___13 = jit->ip;
#line 3730
                  (jit->ip) ++;
#line 3730
                  *tmp___13 = (unsigned char )((2 << 3) | 4);
#line 3730
                  break;
                }
#line 3730
                while (1) {
#line 3730
                  tmp___14 = jit->ip;
#line 3730
                  (jit->ip) ++;
#line 3730
                  *tmp___14 = (unsigned char )((4 << 3) | 4);
#line 3730
                  break;
                }
              } else {
#line 3730
                tmp___25 = stack_reg_pos(jit, (int )op->arg[0]);
#line 3730
                if ((jit_value )tmp___25 >= -128L) {
#line 3730
                  tmp___26 = stack_reg_pos(jit, (int )op->arg[0]);
#line 3730
                  if ((jit_value )tmp___26 <= 127L) {
#line 3730
                    while (1) {
#line 3730
                      tmp___15 = jit->ip;
#line 3730
                      (jit->ip) ++;
#line 3730
                      *tmp___15 = (unsigned char )(((1 << 6) | (2 << 3)) | 4);
#line 3730
                      break;
                    }
#line 3730
                    while (1) {
#line 3730
                      tmp___16 = jit->ip;
#line 3730
                      (jit->ip) ++;
#line 3730
                      *tmp___16 = (unsigned char )((4 << 3) | 4);
#line 3730
                      break;
                    }
#line 3730
                    while (1) {
#line 3730
                      tmp___17 = stack_reg_pos(jit, (int )op->arg[0]);
#line 3730
                      *(jit->ip) = (unsigned char )(tmp___17 & 0xff);
#line 3730
                      (jit->ip) ++;
#line 3730
                      break;
                    }
                  } else {
#line 3730
                    goto _L;
                  }
                } else {
                  _L: /* CIL Label */ 
#line 3730
                  while (1) {
#line 3730
                    tmp___18 = jit->ip;
#line 3730
                    (jit->ip) ++;
#line 3730
                    *tmp___18 = (unsigned char )(((2 << 6) | (2 << 3)) | 4);
#line 3730
                    break;
                  }
#line 3730
                  while (1) {
#line 3730
                    tmp___19 = jit->ip;
#line 3730
                    (jit->ip) ++;
#line 3730
                    *tmp___19 = (unsigned char )((4 << 3) | 4);
#line 3730
                    break;
                  }
#line 3730
                  while (1) {
#line 3730
                    tmp___20 = stack_reg_pos(jit, (int )op->arg[0]);
#line 3730
                    imb___0.val = tmp___20;
#line 3730
                    tmp___21 = jit->ip;
#line 3730
                    (jit->ip) ++;
#line 3730
                    *tmp___21 = imb___0.b[0];
#line 3730
                    tmp___22 = jit->ip;
#line 3730
                    (jit->ip) ++;
#line 3730
                    *tmp___22 = imb___0.b[1];
#line 3730
                    tmp___23 = jit->ip;
#line 3730
                    (jit->ip) ++;
#line 3730
                    *tmp___23 = imb___0.b[2];
#line 3730
                    tmp___24 = jit->ip;
#line 3730
                    (jit->ip) ++;
#line 3730
                    *tmp___24 = imb___0.b[3];
#line 3730
                    break;
                  }
                }
              }
#line 3730
              break;
            }
#line 3730
            tmp___29 = stack_reg_pos(jit, (int )op->arg[0]);
#line 3730
            if (tmp___29 == 0) {

            }
#line 3730
            tmp___38 = stack_reg_pos(jit, (int )op->arg[0]);
#line 3730
            if ((jit_value )tmp___38 >= -128L) {
#line 3730
              tmp___39 = stack_reg_pos(jit, (int )op->arg[0]);
#line 3730
              if ((jit_value )tmp___39 <= 127L) {
#line 3730
                while (1) {
#line 3730
                  tmp___30 = jit->ip;
#line 3730
                  (jit->ip) ++;
#line 3730
                  *tmp___30 = (unsigned char )(((1 << 6) | (2 << 3)) | 5);
#line 3730
                  break;
                }
#line 3730
                while (1) {
#line 3730
                  tmp___31 = stack_reg_pos(jit, (int )op->arg[0]);
#line 3730
                  *(jit->ip) = (unsigned char )(tmp___31 & 0xff);
#line 3730
                  (jit->ip) ++;
#line 3730
                  break;
                }
              } else {
#line 3730
                goto _L___0;
              }
            } else {
              _L___0: /* CIL Label */ 
#line 3730
              while (1) {
#line 3730
                tmp___32 = jit->ip;
#line 3730
                (jit->ip) ++;
#line 3730
                *tmp___32 = (unsigned char )(((2 << 6) | (2 << 3)) | 5);
#line 3730
                break;
              }
#line 3730
              while (1) {
#line 3730
                tmp___33 = stack_reg_pos(jit, (int )op->arg[0]);
#line 3730
                imb___1.val = tmp___33;
#line 3730
                tmp___34 = jit->ip;
#line 3730
                (jit->ip) ++;
#line 3730
                *tmp___34 = imb___1.b[0];
#line 3730
                tmp___35 = jit->ip;
#line 3730
                (jit->ip) ++;
#line 3730
                *tmp___35 = imb___1.b[1];
#line 3730
                tmp___36 = jit->ip;
#line 3730
                (jit->ip) ++;
#line 3730
                *tmp___36 = imb___1.b[2];
#line 3730
                tmp___37 = jit->ip;
#line 3730
                (jit->ip) ++;
#line 3730
                *tmp___37 = imb___1.b[3];
#line 3730
                break;
              }
            }
#line 3730
            break;
          }
#line 3730
          break;
        }
#line 3730
        break;
      }
    }
  } else {
#line 3732
    tmp___65 = jit_is_label(jit, (void *)op->arg[0]);
#line 3732
    if (tmp___65) {
#line 3733
      op->patch_addr = (jit_value )jit->ip - (jit_value )jit->buf;
#line 3734
      while (1) {
#line 3734
        while (1) {
#line 3734
          tmp___40 = jit->ip;
#line 3734
          (jit->ip) ++;
#line 3734
          *tmp___40 = (unsigned char)232;
#line 3734
          while (1) {
#line 3734
            tmp___43 = jit_is_label(jit, (void *)op->arg[0]);
#line 3734
            if (tmp___43) {
#line 3734
              tmp___42 = ((size_t )((jit_value )jit->buf) + ((jit_label *)op->arg[0])->pos) - (size_t )((jit_value )jit->ip);
            } else {
#line 3734
              tmp___42 = (size_t )op->arg[0];
            }
#line 3734
            imb___2.val = (int )(tmp___42 - 4UL);
#line 3734
            tmp___44 = jit->ip;
#line 3734
            (jit->ip) ++;
#line 3734
            *tmp___44 = imb___2.b[0];
#line 3734
            tmp___45 = jit->ip;
#line 3734
            (jit->ip) ++;
#line 3734
            *tmp___45 = imb___2.b[1];
#line 3734
            tmp___46 = jit->ip;
#line 3734
            (jit->ip) ++;
#line 3734
            *tmp___46 = imb___2.b[2];
#line 3734
            tmp___47 = jit->ip;
#line 3734
            (jit->ip) ++;
#line 3734
            *tmp___47 = imb___2.b[3];
#line 3734
            break;
          }
#line 3734
          break;
        }
#line 3734
        break;
      }
    } else {
#line 3736
      while (1) {
#line 3736
        while (1) {
#line 3736
          _amd64_rex_bits___1 = (unsigned char)9;
#line 3736
          if ((int )_amd64_rex_bits___1 != 0) {
#line 3736
            tmp___48 = jit->ip;
#line 3736
            (jit->ip) ++;
#line 3736
            *tmp___48 = (unsigned char )(0x40 | (int )_amd64_rex_bits___1);
          }
#line 3736
          break;
        }
#line 3736
        tmp___49 = jit->ip;
#line 3736
        (jit->ip) ++;
#line 3736
        *tmp___49 = (unsigned char)187;
#line 3736
        while (1) {
#line 3736
          imb___3.val = (size_t )op->arg[0];
#line 3736
          tmp___50 = jit->ip;
#line 3736
          (jit->ip) ++;
#line 3736
          *tmp___50 = imb___3.b[0];
#line 3736
          tmp___51 = jit->ip;
#line 3736
          (jit->ip) ++;
#line 3736
          *tmp___51 = imb___3.b[1];
#line 3736
          tmp___52 = jit->ip;
#line 3736
          (jit->ip) ++;
#line 3736
          *tmp___52 = imb___3.b[2];
#line 3736
          tmp___53 = jit->ip;
#line 3736
          (jit->ip) ++;
#line 3736
          *tmp___53 = imb___3.b[3];
#line 3736
          tmp___54 = jit->ip;
#line 3736
          (jit->ip) ++;
#line 3736
          *tmp___54 = imb___3.b[4];
#line 3736
          tmp___55 = jit->ip;
#line 3736
          (jit->ip) ++;
#line 3736
          *tmp___55 = imb___3.b[5];
#line 3736
          tmp___56 = jit->ip;
#line 3736
          (jit->ip) ++;
#line 3736
          *tmp___56 = imb___3.b[6];
#line 3736
          tmp___57 = jit->ip;
#line 3736
          (jit->ip) ++;
#line 3736
          *tmp___57 = imb___3.b[7];
#line 3736
          break;
        }
#line 3736
        break;
      }
#line 3737
      while (1) {
#line 3737
        while (1) {
#line 3737
          _amd64_rex_bits___2 = (unsigned char)1;
#line 3737
          if ((int )_amd64_rex_bits___2 != 0) {
#line 3737
            tmp___62 = jit->ip;
#line 3737
            (jit->ip) ++;
#line 3737
            *tmp___62 = (unsigned char )(0x40 | (int )_amd64_rex_bits___2);
          }
#line 3737
          break;
        }
#line 3737
        tmp___63 = jit->ip;
#line 3737
        (jit->ip) ++;
#line 3737
        *tmp___63 = (unsigned char)255;
#line 3737
        while (1) {
#line 3737
          while (1) {
#line 3737
            tmp___64 = jit->ip;
#line 3737
            (jit->ip) ++;
#line 3737
            *tmp___64 = (unsigned char )(((3 << 6) | (2 << 3)) | 3);
#line 3737
            break;
          }
#line 3737
          break;
        }
#line 3737
        break;
      }
    }
  }
#line 3740
  stack_correction += jit->prepared_args.stack_size;
#line 3741
  if (stack_correction) {
#line 3742
    while (1) {
#line 3742
      if ((jit_value )stack_correction >= -128L) {
#line 3742
        if ((jit_value )stack_correction <= 127L) {
#line 3742
          while (1) {
#line 3742
            _amd64_rex_bits___3 = (unsigned char)8;
#line 3742
            if ((int )_amd64_rex_bits___3 != 0) {
#line 3742
              tmp___66 = jit->ip;
#line 3742
              (jit->ip) ++;
#line 3742
              *tmp___66 = (unsigned char )(0x40 | (int )_amd64_rex_bits___3);
            }
#line 3742
            break;
          }
#line 3742
          tmp___67 = jit->ip;
#line 3742
          (jit->ip) ++;
#line 3742
          *tmp___67 = (unsigned char)131;
#line 3742
          while (1) {
#line 3742
            while (1) {
#line 3742
              tmp___68 = jit->ip;
#line 3742
              (jit->ip) ++;
#line 3742
              *tmp___68 = (unsigned char )((3 << 6) | 4);
#line 3742
              break;
            }
#line 3742
            break;
          }
#line 3742
          while (1) {
#line 3742
            *(jit->ip) = (unsigned char )(stack_correction & 0xff);
#line 3742
            (jit->ip) ++;
#line 3742
            break;
          }
        } else {
#line 3742
          goto _L___1;
        }
      } else {
        _L___1: /* CIL Label */ 
#line 3742
        while (1) {
#line 3742
          _amd64_rex_bits___5 = (unsigned char)8;
#line 3742
          if ((int )_amd64_rex_bits___5 != 0) {
#line 3742
            tmp___75 = jit->ip;
#line 3742
            (jit->ip) ++;
#line 3742
            *tmp___75 = (unsigned char )(0x40 | (int )_amd64_rex_bits___5);
          }
#line 3742
          break;
        }
#line 3742
        tmp___76 = jit->ip;
#line 3742
        (jit->ip) ++;
#line 3742
        *tmp___76 = (unsigned char)129;
#line 3742
        while (1) {
#line 3742
          while (1) {
#line 3742
            tmp___77 = jit->ip;
#line 3742
            (jit->ip) ++;
#line 3742
            *tmp___77 = (unsigned char )((3 << 6) | 4);
#line 3742
            break;
          }
#line 3742
          break;
        }
#line 3742
        while (1) {
#line 3742
          imb___6.val = stack_correction;
#line 3742
          tmp___78 = jit->ip;
#line 3742
          (jit->ip) ++;
#line 3742
          *tmp___78 = imb___6.b[0];
#line 3742
          tmp___79 = jit->ip;
#line 3742
          (jit->ip) ++;
#line 3742
          *tmp___79 = imb___6.b[1];
#line 3742
          tmp___80 = jit->ip;
#line 3742
          (jit->ip) ++;
#line 3742
          *tmp___80 = imb___6.b[2];
#line 3742
          tmp___81 = jit->ip;
#line 3742
          (jit->ip) ++;
#line 3742
          *tmp___81 = imb___6.b[3];
#line 3742
          break;
        }
      }
#line 3742
      break;
    }
  }
#line 3743
  free((void *)jit->prepared_args.args);
#line 3744
  tmp___82 = emit_pop_caller_saved_regs(jit, op);
#line 3744
  jit->push_count -= tmp___82;
#line 3745
  return;
}
}
/* END FUNCTION-DEF emit_funcall LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF node_new LOC=UNKNOWN */
__inline static jit_tree *node_new(jit_tree_key key , jit_tree_value value ) 
{ 
  jit_tree *res ;
  void *tmp ;

  {
#line 2106
  tmp = malloc((size_t )sizeof(jit_tree ));
#line 2106
  res = (jit_tree *)tmp;
#line 2107
  res->key = key;
#line 2108
  res->value = value;
#line 2109
  res->color = 1;
#line 2110
  res->left = (struct jit_tree *)((void *)0);
#line 2111
  res->right = (struct jit_tree *)((void *)0);
#line 2112
  return (res);
}
}
/* END FUNCTION-DEF node_new LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_trace LOC=UNKNOWN */
void jit_trace(struct jit *jit , int verbosity ) 
{ 
  jit_op *op ;
  jit_op *tmp ;
  jit_op *o ;
  struct jit_op *tmp___0 ;

  {
#line 6666
  tmp = jit_op_first(jit->ops);
#line 6666
  op = tmp->next;
#line 6666
  while ((unsigned long )op != (unsigned long )((void *)0)) {
#line 6667
    if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 688U) {
#line 6667
      goto __Cont;
    }
#line 6668
    if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 376U) {
#line 6668
      goto __Cont;
    }
#line 6669
    if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 856U) {
#line 6669
      goto __Cont;
    }
#line 6670
    if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 704U) {
#line 6670
      goto __Cont;
    }
#line 6671
    tmp___0 = jit_op_new((unsigned short)264, (unsigned char)2, (jit_value )verbosity,
                         (jit_value )0, (jit_value )0, (unsigned char)0);
#line 6671
    o = tmp___0;
#line 6672
    o->r_arg[0] = o->arg[0];
#line 6673
    jit_op_prepend(op, o);
    __Cont: /* CIL Label */ 
#line 6666
    op = op->next;
  }
#line 6675
  return;
}
}
/* END FUNCTION-DEF jit_trace LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF emit_alu_op LOC=UNKNOWN */
static void emit_alu_op(struct jit *jit , struct jit_op *op , int x86_op , int imm ) 
{ 
  unsigned char *tmp ;
  unsigned char _amd64_rex_bits ;
  int tmp___0 ;
  int tmp___1 ;
  int tmp___2 ;
  unsigned char *tmp___3 ;
  unsigned char *tmp___4 ;
  unsigned char *tmp___5 ;
  long tmp___6 ;
  unsigned char *tmp___7 ;
  unsigned char _amd64_rex_bits___0 ;
  int tmp___8 ;
  unsigned char *tmp___9 ;
  unsigned char *tmp___10 ;
  unsigned char *tmp___11 ;
  unsigned char _amd64_rex_bits___1 ;
  unsigned char *tmp___12 ;
  unsigned char *tmp___13 ;
  x86_imm_buf imb ;
  unsigned char *tmp___14 ;
  unsigned char *tmp___15 ;
  unsigned char *tmp___16 ;
  unsigned char *tmp___17 ;
  unsigned char _amd64_rex_bits___2 ;
  int tmp___18 ;
  unsigned char *tmp___19 ;
  unsigned char *tmp___20 ;
  unsigned char *tmp___21 ;
  x86_imm_buf imb___0 ;
  unsigned char *tmp___22 ;
  unsigned char *tmp___23 ;
  unsigned char *tmp___24 ;
  unsigned char *tmp___25 ;
  unsigned char _amd64_rex_bits___3 ;
  int tmp___26 ;
  int tmp___27 ;
  unsigned char *tmp___28 ;
  unsigned char *tmp___29 ;
  unsigned char *tmp___30 ;
  unsigned char _amd64_rex_bits___4 ;
  int tmp___31 ;
  int tmp___32 ;
  unsigned char *tmp___33 ;
  unsigned char *tmp___34 ;
  unsigned char *tmp___35 ;
  unsigned char *tmp___36 ;
  unsigned char _amd64_rex_bits___5 ;
  int tmp___37 ;
  int tmp___38 ;
  int tmp___39 ;
  unsigned char *tmp___40 ;
  unsigned char *tmp___41 ;
  unsigned char *tmp___42 ;
  long tmp___43 ;
  unsigned char *tmp___44 ;
  unsigned char _amd64_rex_bits___6 ;
  int tmp___45 ;
  int tmp___46 ;
  unsigned char *tmp___47 ;
  unsigned char *tmp___48 ;
  unsigned char *tmp___49 ;

  {
#line 4129
  if (imm) {
#line 4130
    if (op->r_arg[0] != op->r_arg[1]) {
#line 4130
      while (1) {
#line 4130
        if ((int )sizeof(void *) == 2) {
#line 4130
          tmp = jit->ip;
#line 4130
          (jit->ip) ++;
#line 4130
          *tmp = (unsigned char)102;
        }
#line 4130
        while (1) {
#line 4130
          if ((int )sizeof(void *) > 4) {
#line 4130
            tmp___0 = 8;
          } else {
#line 4130
            tmp___0 = 0;
          }
#line 4130
          if (op->r_arg[0] > 7L) {
#line 4130
            tmp___1 = 4;
          } else {
#line 4130
            tmp___1 = 0;
          }
#line 4130
          if (op->r_arg[1] > 7L) {
#line 4130
            tmp___2 = 1;
          } else {
#line 4130
            tmp___2 = 0;
          }
#line 4130
          _amd64_rex_bits = (unsigned char )((tmp___0 | tmp___1) | tmp___2);
#line 4130
          if ((int )_amd64_rex_bits != 0) {
#line 4130
            tmp___3 = jit->ip;
#line 4130
            (jit->ip) ++;
#line 4130
            *tmp___3 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
          } else
#line 4130
          if ((int )sizeof(void *) == 1) {
#line 4130
            tmp___3 = jit->ip;
#line 4130
            (jit->ip) ++;
#line 4130
            *tmp___3 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
          }
#line 4130
          break;
        }
#line 4130
        switch ((int )sizeof(void *)) {
        case 1: 
#line 4130
        tmp___4 = jit->ip;
#line 4130
        (jit->ip) ++;
#line 4130
        *tmp___4 = (unsigned char)138;
#line 4130
        break;
        case 8: 
        case 4: 
        case 2: 
#line 4130
        tmp___5 = jit->ip;
#line 4130
        (jit->ip) ++;
#line 4130
        *tmp___5 = (unsigned char)139;
#line 4130
        break;
        default: 
#line 4130
        tmp___6 = __builtin_expect(1L, 0L);
#line 4130
        if (tmp___6) {
#line 4130
          __assert_rtn((char const   *)"emit_alu_op", (char const   *)"tmp/src.c",
                       3086, (char const   *)"0");
        }
        }
#line 4130
        while (1) {
#line 4130
          while (1) {
#line 4130
            tmp___7 = jit->ip;
#line 4130
            (jit->ip) ++;
#line 4130
            *tmp___7 = (unsigned char )(((long )(3 << 6) | ((op->r_arg[0] & 7L) << 3)) | (op->r_arg[1] & 7L));
#line 4130
            break;
          }
#line 4130
          break;
        }
#line 4130
        break;
      }
    }
#line 4131
    while (1) {
#line 4131
      if (op->r_arg[2] >= -128L) {
#line 4131
        if (op->r_arg[2] <= 127L) {
#line 4131
          while (1) {
#line 4131
            if (op->r_arg[0] > 7L) {
#line 4131
              tmp___8 = 1;
            } else {
#line 4131
              tmp___8 = 0;
            }
#line 4131
            _amd64_rex_bits___0 = (unsigned char )(8 | tmp___8);
#line 4131
            if ((int )_amd64_rex_bits___0 != 0) {
#line 4131
              tmp___9 = jit->ip;
#line 4131
              (jit->ip) ++;
#line 4131
              *tmp___9 = (unsigned char )(0x40 | (int )_amd64_rex_bits___0);
            }
#line 4131
            break;
          }
#line 4131
          tmp___10 = jit->ip;
#line 4131
          (jit->ip) ++;
#line 4131
          *tmp___10 = (unsigned char)131;
#line 4131
          while (1) {
#line 4131
            while (1) {
#line 4131
              tmp___11 = jit->ip;
#line 4131
              (jit->ip) ++;
#line 4131
              *tmp___11 = (unsigned char )((long )((3 << 6) | ((x86_op & 0x07) << 3)) | (op->r_arg[0] & 7L));
#line 4131
              break;
            }
#line 4131
            break;
          }
#line 4131
          while (1) {
#line 4131
            *(jit->ip) = (unsigned char )(op->r_arg[2] & 255L);
#line 4131
            (jit->ip) ++;
#line 4131
            break;
          }
        } else {
#line 4131
          goto _L;
        }
      } else
      _L: /* CIL Label */ 
#line 4131
      if (op->r_arg[0] == 0L) {
#line 4131
        while (1) {
#line 4131
          _amd64_rex_bits___1 = (unsigned char)8;
#line 4131
          if ((int )_amd64_rex_bits___1 != 0) {
#line 4131
            tmp___12 = jit->ip;
#line 4131
            (jit->ip) ++;
#line 4131
            *tmp___12 = (unsigned char )(0x40 | (int )_amd64_rex_bits___1);
          }
#line 4131
          break;
        }
#line 4131
        tmp___13 = jit->ip;
#line 4131
        (jit->ip) ++;
#line 4131
        *tmp___13 = (unsigned char )(((int )((unsigned char )x86_op) << 3) + 5);
#line 4131
        while (1) {
#line 4131
          imb.val = (int )op->r_arg[2];
#line 4131
          tmp___14 = jit->ip;
#line 4131
          (jit->ip) ++;
#line 4131
          *tmp___14 = imb.b[0];
#line 4131
          tmp___15 = jit->ip;
#line 4131
          (jit->ip) ++;
#line 4131
          *tmp___15 = imb.b[1];
#line 4131
          tmp___16 = jit->ip;
#line 4131
          (jit->ip) ++;
#line 4131
          *tmp___16 = imb.b[2];
#line 4131
          tmp___17 = jit->ip;
#line 4131
          (jit->ip) ++;
#line 4131
          *tmp___17 = imb.b[3];
#line 4131
          break;
        }
      } else {
#line 4131
        while (1) {
#line 4131
          if (op->r_arg[0] > 7L) {
#line 4131
            tmp___18 = 1;
          } else {
#line 4131
            tmp___18 = 0;
          }
#line 4131
          _amd64_rex_bits___2 = (unsigned char )(8 | tmp___18);
#line 4131
          if ((int )_amd64_rex_bits___2 != 0) {
#line 4131
            tmp___19 = jit->ip;
#line 4131
            (jit->ip) ++;
#line 4131
            *tmp___19 = (unsigned char )(0x40 | (int )_amd64_rex_bits___2);
          }
#line 4131
          break;
        }
#line 4131
        tmp___20 = jit->ip;
#line 4131
        (jit->ip) ++;
#line 4131
        *tmp___20 = (unsigned char)129;
#line 4131
        while (1) {
#line 4131
          while (1) {
#line 4131
            tmp___21 = jit->ip;
#line 4131
            (jit->ip) ++;
#line 4131
            *tmp___21 = (unsigned char )((long )((3 << 6) | ((x86_op & 0x07) << 3)) | (op->r_arg[0] & 7L));
#line 4131
            break;
          }
#line 4131
          break;
        }
#line 4131
        while (1) {
#line 4131
          imb___0.val = (int )op->r_arg[2];
#line 4131
          tmp___22 = jit->ip;
#line 4131
          (jit->ip) ++;
#line 4131
          *tmp___22 = imb___0.b[0];
#line 4131
          tmp___23 = jit->ip;
#line 4131
          (jit->ip) ++;
#line 4131
          *tmp___23 = imb___0.b[1];
#line 4131
          tmp___24 = jit->ip;
#line 4131
          (jit->ip) ++;
#line 4131
          *tmp___24 = imb___0.b[2];
#line 4131
          tmp___25 = jit->ip;
#line 4131
          (jit->ip) ++;
#line 4131
          *tmp___25 = imb___0.b[3];
#line 4131
          break;
        }
      }
#line 4131
      break;
    }
  } else
#line 4133
  if (op->r_arg[0] == op->r_arg[1]) {
#line 4134
    while (1) {
#line 4134
      while (1) {
#line 4134
        if (op->r_arg[0] > 7L) {
#line 4134
          tmp___26 = 4;
        } else {
#line 4134
          tmp___26 = 0;
        }
#line 4134
        if (op->r_arg[2] > 7L) {
#line 4134
          tmp___27 = 1;
        } else {
#line 4134
          tmp___27 = 0;
        }
#line 4134
        _amd64_rex_bits___3 = (unsigned char )((8 | tmp___26) | tmp___27);
#line 4134
        if ((int )_amd64_rex_bits___3 != 0) {
#line 4134
          tmp___28 = jit->ip;
#line 4134
          (jit->ip) ++;
#line 4134
          *tmp___28 = (unsigned char )(0x40 | (int )_amd64_rex_bits___3);
        }
#line 4134
        break;
      }
#line 4134
      tmp___29 = jit->ip;
#line 4134
      (jit->ip) ++;
#line 4134
      *tmp___29 = (unsigned char )(((int )((unsigned char )x86_op) << 3) + 3);
#line 4134
      while (1) {
#line 4134
        while (1) {
#line 4134
          tmp___30 = jit->ip;
#line 4134
          (jit->ip) ++;
#line 4134
          *tmp___30 = (unsigned char )(((long )(3 << 6) | ((op->r_arg[0] & 7L) << 3)) | (op->r_arg[2] & 7L));
#line 4134
          break;
        }
#line 4134
        break;
      }
#line 4134
      break;
    }
  } else
#line 4135
  if (op->r_arg[0] == op->r_arg[2]) {
#line 4136
    while (1) {
#line 4136
      while (1) {
#line 4136
        if (op->r_arg[0] > 7L) {
#line 4136
          tmp___31 = 4;
        } else {
#line 4136
          tmp___31 = 0;
        }
#line 4136
        if (op->r_arg[1] > 7L) {
#line 4136
          tmp___32 = 1;
        } else {
#line 4136
          tmp___32 = 0;
        }
#line 4136
        _amd64_rex_bits___4 = (unsigned char )((8 | tmp___31) | tmp___32);
#line 4136
        if ((int )_amd64_rex_bits___4 != 0) {
#line 4136
          tmp___33 = jit->ip;
#line 4136
          (jit->ip) ++;
#line 4136
          *tmp___33 = (unsigned char )(0x40 | (int )_amd64_rex_bits___4);
        }
#line 4136
        break;
      }
#line 4136
      tmp___34 = jit->ip;
#line 4136
      (jit->ip) ++;
#line 4136
      *tmp___34 = (unsigned char )(((int )((unsigned char )x86_op) << 3) + 3);
#line 4136
      while (1) {
#line 4136
        while (1) {
#line 4136
          tmp___35 = jit->ip;
#line 4136
          (jit->ip) ++;
#line 4136
          *tmp___35 = (unsigned char )(((long )(3 << 6) | ((op->r_arg[0] & 7L) << 3)) | (op->r_arg[1] & 7L));
#line 4136
          break;
        }
#line 4136
        break;
      }
#line 4136
      break;
    }
  } else {
#line 4138
    while (1) {
#line 4138
      if ((int )sizeof(void *) == 2) {
#line 4138
        tmp___36 = jit->ip;
#line 4138
        (jit->ip) ++;
#line 4138
        *tmp___36 = (unsigned char)102;
      }
#line 4138
      while (1) {
#line 4138
        if ((int )sizeof(void *) > 4) {
#line 4138
          tmp___37 = 8;
        } else {
#line 4138
          tmp___37 = 0;
        }
#line 4138
        if (op->r_arg[0] > 7L) {
#line 4138
          tmp___38 = 4;
        } else {
#line 4138
          tmp___38 = 0;
        }
#line 4138
        if (op->r_arg[1] > 7L) {
#line 4138
          tmp___39 = 1;
        } else {
#line 4138
          tmp___39 = 0;
        }
#line 4138
        _amd64_rex_bits___5 = (unsigned char )((tmp___37 | tmp___38) | tmp___39);
#line 4138
        if ((int )_amd64_rex_bits___5 != 0) {
#line 4138
          tmp___40 = jit->ip;
#line 4138
          (jit->ip) ++;
#line 4138
          *tmp___40 = (unsigned char )(0x40 | (int )_amd64_rex_bits___5);
        } else
#line 4138
        if ((int )sizeof(void *) == 1) {
#line 4138
          tmp___40 = jit->ip;
#line 4138
          (jit->ip) ++;
#line 4138
          *tmp___40 = (unsigned char )(0x40 | (int )_amd64_rex_bits___5);
        }
#line 4138
        break;
      }
#line 4138
      switch ((int )sizeof(void *)) {
      case 1: 
#line 4138
      tmp___41 = jit->ip;
#line 4138
      (jit->ip) ++;
#line 4138
      *tmp___41 = (unsigned char)138;
#line 4138
      break;
      case 8: 
      case 4: 
      case 2: 
#line 4138
      tmp___42 = jit->ip;
#line 4138
      (jit->ip) ++;
#line 4138
      *tmp___42 = (unsigned char)139;
#line 4138
      break;
      default: 
#line 4138
      tmp___43 = __builtin_expect(1L, 0L);
#line 4138
      if (tmp___43) {
#line 4138
        __assert_rtn((char const   *)"emit_alu_op", (char const   *)"tmp/src.c", 3095,
                     (char const   *)"0");
      }
      }
#line 4138
      while (1) {
#line 4138
        while (1) {
#line 4138
          tmp___44 = jit->ip;
#line 4138
          (jit->ip) ++;
#line 4138
          *tmp___44 = (unsigned char )(((long )(3 << 6) | ((op->r_arg[0] & 7L) << 3)) | (op->r_arg[1] & 7L));
#line 4138
          break;
        }
#line 4138
        break;
      }
#line 4138
      break;
    }
#line 4139
    while (1) {
#line 4139
      while (1) {
#line 4139
        if (op->r_arg[0] > 7L) {
#line 4139
          tmp___45 = 4;
        } else {
#line 4139
          tmp___45 = 0;
        }
#line 4139
        if (op->r_arg[2] > 7L) {
#line 4139
          tmp___46 = 1;
        } else {
#line 4139
          tmp___46 = 0;
        }
#line 4139
        _amd64_rex_bits___6 = (unsigned char )((8 | tmp___45) | tmp___46);
#line 4139
        if ((int )_amd64_rex_bits___6 != 0) {
#line 4139
          tmp___47 = jit->ip;
#line 4139
          (jit->ip) ++;
#line 4139
          *tmp___47 = (unsigned char )(0x40 | (int )_amd64_rex_bits___6);
        }
#line 4139
        break;
      }
#line 4139
      tmp___48 = jit->ip;
#line 4139
      (jit->ip) ++;
#line 4139
      *tmp___48 = (unsigned char )(((int )((unsigned char )x86_op) << 3) + 3);
#line 4139
      while (1) {
#line 4139
        while (1) {
#line 4139
          tmp___49 = jit->ip;
#line 4139
          (jit->ip) ++;
#line 4139
          *tmp___49 = (unsigned char )(((long )(3 << 6) | ((op->r_arg[0] & 7L) << 3)) | (op->r_arg[2] & 7L));
#line 4139
          break;
        }
#line 4139
        break;
      }
#line 4139
      break;
    }
  }
#line 4142
  return;
}
}
/* END FUNCTION-DEF emit_alu_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_dump_ops_compilable LOC=UNKNOWN */
static void jit_dump_ops_compilable(struct jit *jit , jit_tree *labels ) 
{ 
  jit_op *op ;
  jit_op *tmp ;

  {
#line 5505
  tmp = jit_op_first(jit->ops);
#line 5505
  op = tmp;
#line 5505
  while ((unsigned long )op != (unsigned long )((void *)0)) {
#line 5506
    print_op_compilable(& jit_disasm_compilable, op, labels);
#line 5507
    printf((char const   */* __restrict  */)"\n");
#line 5505
    op = op->next;
  }
#line 5509
  return;
}
}
/* END FUNCTION-DEF jit_dump_ops_compilable LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF is_suitable_mul LOC=UNKNOWN */
__inline static int is_suitable_mul(jit_op *op ) 
{ 
  jit_value arg ;
  int tmp ;

  {
#line 3514
  arg = op->arg[2];
#line 3515
  if ((int )op->code == 530) {
#line 3515
    if (arg == 2L) {
#line 3515
      tmp = 1;
    } else
#line 3515
    if (arg == 4L) {
#line 3515
      tmp = 1;
    } else
#line 3515
    if (arg == 8L) {
#line 3515
      tmp = 1;
    } else {
#line 3515
      goto _L;
    }
  } else
  _L: /* CIL Label */ 
#line 3515
  if ((int )op->code == 426) {
#line 3515
    if (arg == 1L) {
#line 3515
      tmp = 1;
    } else
#line 3515
    if (arg == 2L) {
#line 3515
      tmp = 1;
    } else
#line 3515
    if (arg == 3L) {
#line 3515
      tmp = 1;
    } else {
#line 3515
      tmp = 0;
    }
  } else {
#line 3515
    tmp = 0;
  }
#line 3515
  return (tmp);
}
}
/* END FUNCTION-DEF is_suitable_mul LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF shift_index LOC=UNKNOWN */
static int shift_index(int arg ) 
{ 
  long tmp ;

  {
#line 3500
  if (arg == 2) {
#line 3500
    return (1);
  }
#line 3501
  if (arg == 4) {
#line 3501
    return (2);
  }
#line 3502
  if (arg == 8) {
#line 3502
    return (3);
  }
#line 3503
  tmp = __builtin_expect(1L, 0L);
#line 3503
  if (tmp) {
#line 3503
    __assert_rtn((char const   *)"shift_index", (char const   *)"tmp/src.c", 2246,
                 (char const   *)"0");
  }
#line 3504
  return (0);
}
}
/* END FUNCTION-DEF shift_index LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_arg_layout_create_input LOC=UNKNOWN */
static struct jit_arg_layout *jit_arg_layout_create_input(struct jit *jit , struct jit_func_info *info ,
                                                          int arg_cnt ) 
{ 
  struct jit_arg_layout *layout ;
  struct jit_arg_layout *tmp ;
  int i ;
  struct jit_inp_arg *arg ;

  {
#line 3157
  tmp = jit_arg_layout_create(jit, arg_cnt + 1);
#line 3157
  layout = tmp;
#line 3158
  i = 0;
#line 3158
  while (i <= arg_cnt) {
#line 3159
    arg = info->args + i;
#line 3160
    jit_arg_layout_add(layout, (unsigned int )arg->type == 2U, (struct jit_out_arg *)((void *)0));
#line 3158
    i ++;
  }
#line 3162
  return (layout);
}
}
/* END FUNCTION-DEF jit_arg_layout_create_input LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF make_free_reg LOC=UNKNOWN */
static jit_hw_reg *make_free_reg(struct jit_reg_allocator *al , jit_op *op , jit_value for_reg ) 
{ 
  int spill ;
  jit_value spill_candidate ;
  jit_hw_reg *hreg ;
  jit_hw_reg *tmp ;
  int tmp___0 ;

  {
#line 5921
  spill = 0;
#line 5922
  spill_candidate = (jit_value )-1;
#line 5923
  tmp = rmap_spill_candidate(al, op, for_reg, & spill, & spill_candidate, 0);
#line 5923
  hreg = tmp;
#line 5924
  if (spill) {
#line 5925
    tmp___0 = jit_set_get(op->live_in, (int )spill_candidate);
#line 5925
    if (tmp___0) {
#line 5926
      unload_reg(op, hreg, spill_candidate);
    }
#line 5927
    rmap_unassoc(op->regmap, spill_candidate);
  }
#line 5929
  return (hreg);
}
}
/* END FUNCTION-DEF make_free_reg LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_tree_free LOC=UNKNOWN */
static void jit_tree_free(jit_tree *h ) 
{ 


  {
#line 2237
  if ((unsigned long )h == (unsigned long )((void *)0)) {
#line 2237
    return;
  }
#line 2238
  jit_tree_free(h->left);
#line 2239
  jit_tree_free(h->right);
#line 2240
  free((void *)h);
#line 2241
  return;
}
}
/* END FUNCTION-DEF jit_tree_free LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF assign_jmp LOC=UNKNOWN */
static int assign_jmp(jit_op *op , struct jit_reg_allocator *al ) 
{ 
  jit_value reg ;
  int i ;
  jit_hw_reg *hreg ;
  jit_hw_reg *tmp ;
  int tmp___0 ;
  int i___0 ;
  jit_hw_reg *hreg___0 ;
  jit_hw_reg *tmp___1 ;
  int tmp___2 ;

  {
#line 6025
  if ((int )op->code == 626) {
#line 6025
    return (0);
  }
#line 6027
  i = 0;
#line 6027
  while (i < al->gp_reg_cnt) {
#line 6028
    tmp = rmap_is_associated(op->regmap, (al->gp_regs + i)->id, 0, & reg);
#line 6028
    hreg = tmp;
#line 6029
    if (hreg) {
#line 6029
      tmp___0 = jit_set_get(op->live_out, (int )reg);
#line 6029
      if (tmp___0) {
#line 6029
        sync_reg(op, hreg, reg);
      }
    }
#line 6027
    i ++;
  }
#line 6031
  i___0 = 0;
#line 6031
  while (i___0 < al->fp_reg_cnt) {
#line 6032
    tmp___1 = rmap_is_associated(op->regmap, (al->fp_regs + i___0)->id, 1, & reg);
#line 6032
    hreg___0 = tmp___1;
#line 6033
    if (hreg___0) {
#line 6033
      tmp___2 = jit_set_get(op->live_out, (int )reg);
#line 6033
      if (tmp___2) {
#line 6033
        sync_reg(op, hreg___0, reg);
      }
    }
#line 6031
    i___0 ++;
  }
#line 6035
  return (0);
}
}
/* END FUNCTION-DEF assign_jmp LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF emit_restore_all_regs LOC=UNKNOWN */
static void emit_restore_all_regs(struct jit *jit , jit_op *op ) 
{ 
  int alignment ;
  int tmp ;
  unsigned char _amd64_rex_bits ;
  unsigned char *tmp___0 ;
  unsigned char *tmp___1 ;
  unsigned char *tmp___2 ;
  unsigned char _amd64_rex_bits___0 ;
  unsigned char *tmp___3 ;
  unsigned char *tmp___4 ;
  x86_imm_buf imb ;
  unsigned char *tmp___5 ;
  unsigned char *tmp___6 ;
  unsigned char *tmp___7 ;
  unsigned char *tmp___8 ;
  unsigned char _amd64_rex_bits___1 ;
  unsigned char *tmp___9 ;
  unsigned char *tmp___10 ;
  unsigned char *tmp___11 ;
  x86_imm_buf imb___0 ;
  unsigned char *tmp___12 ;
  unsigned char *tmp___13 ;
  unsigned char *tmp___14 ;
  unsigned char *tmp___15 ;
  struct jit_reg_allocator *al ;
  int i ;
  jit_hw_reg *reg ;
  unsigned char *tmp___16 ;
  unsigned char _amd64_rex_bits___2 ;
  int tmp___17 ;
  unsigned char *tmp___18 ;
  unsigned char *tmp___19 ;
  unsigned char *tmp___20 ;
  unsigned char *tmp___21 ;
  x86_imm_buf imb___1 ;
  unsigned char *tmp___22 ;
  unsigned char *tmp___23 ;
  unsigned char *tmp___24 ;
  unsigned char *tmp___25 ;
  unsigned char *tmp___26 ;
  unsigned char *tmp___27 ;
  unsigned char *tmp___28 ;
  unsigned char *tmp___29 ;
  unsigned char *tmp___30 ;
  unsigned char *tmp___31 ;
  x86_imm_buf imb___2 ;
  unsigned char *tmp___32 ;
  unsigned char *tmp___33 ;
  unsigned char *tmp___34 ;
  unsigned char *tmp___35 ;
  unsigned char *tmp___36 ;
  unsigned char *tmp___37 ;
  unsigned char *tmp___38 ;
  x86_imm_buf imb___3 ;
  unsigned char *tmp___39 ;
  unsigned char *tmp___40 ;
  unsigned char *tmp___41 ;
  unsigned char *tmp___42 ;
  unsigned char _amd64_rex_bits___3 ;
  unsigned char *tmp___43 ;
  unsigned char *tmp___44 ;
  unsigned char *tmp___45 ;
  unsigned char _amd64_rex_bits___4 ;
  unsigned char *tmp___46 ;
  unsigned char *tmp___47 ;
  x86_imm_buf imb___4 ;
  unsigned char *tmp___48 ;
  unsigned char *tmp___49 ;
  unsigned char *tmp___50 ;
  unsigned char *tmp___51 ;
  unsigned char _amd64_rex_bits___5 ;
  unsigned char *tmp___52 ;
  unsigned char *tmp___53 ;
  unsigned char *tmp___54 ;
  x86_imm_buf imb___5 ;
  unsigned char *tmp___55 ;
  unsigned char *tmp___56 ;
  unsigned char *tmp___57 ;
  unsigned char *tmp___58 ;
  int tmp___59 ;
  int i___0 ;
  jit_hw_reg *reg___0 ;
  unsigned char _amd64_rex_bits___6 ;
  int tmp___60 ;
  unsigned char *tmp___61 ;
  unsigned char *tmp___62 ;
  int tmp___63 ;
  unsigned char _amd64_rex_bits___7 ;
  unsigned char *tmp___64 ;
  unsigned char *tmp___65 ;

  {
#line 4050
  tmp = required_stack_space_for_regs(jit, op);
#line 4050
  alignment = tmp % 16;
#line 4051
  if (alignment != 0) {
#line 4051
    while (1) {
#line 4051
      if ((jit_value )(16 - alignment) >= -128L) {
#line 4051
        if ((jit_value )(16 - alignment) <= 127L) {
#line 4051
          while (1) {
#line 4051
            _amd64_rex_bits = (unsigned char)8;
#line 4051
            if ((int )_amd64_rex_bits != 0) {
#line 4051
              tmp___0 = jit->ip;
#line 4051
              (jit->ip) ++;
#line 4051
              *tmp___0 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
            }
#line 4051
            break;
          }
#line 4051
          tmp___1 = jit->ip;
#line 4051
          (jit->ip) ++;
#line 4051
          *tmp___1 = (unsigned char)131;
#line 4051
          while (1) {
#line 4051
            while (1) {
#line 4051
              tmp___2 = jit->ip;
#line 4051
              (jit->ip) ++;
#line 4051
              *tmp___2 = (unsigned char )((3 << 6) | 4);
#line 4051
              break;
            }
#line 4051
            break;
          }
#line 4051
          while (1) {
#line 4051
            *(jit->ip) = (unsigned char )((16 - alignment) & 0xff);
#line 4051
            (jit->ip) ++;
#line 4051
            break;
          }
        } else {
#line 4051
          goto _L;
        }
      } else {
        _L: /* CIL Label */ 
#line 4051
        while (1) {
#line 4051
          _amd64_rex_bits___1 = (unsigned char)8;
#line 4051
          if ((int )_amd64_rex_bits___1 != 0) {
#line 4051
            tmp___9 = jit->ip;
#line 4051
            (jit->ip) ++;
#line 4051
            *tmp___9 = (unsigned char )(0x40 | (int )_amd64_rex_bits___1);
          }
#line 4051
          break;
        }
#line 4051
        tmp___10 = jit->ip;
#line 4051
        (jit->ip) ++;
#line 4051
        *tmp___10 = (unsigned char)129;
#line 4051
        while (1) {
#line 4051
          while (1) {
#line 4051
            tmp___11 = jit->ip;
#line 4051
            (jit->ip) ++;
#line 4051
            *tmp___11 = (unsigned char )((3 << 6) | 4);
#line 4051
            break;
          }
#line 4051
          break;
        }
#line 4051
        while (1) {
#line 4051
          imb___0.val = 16 - alignment;
#line 4051
          tmp___12 = jit->ip;
#line 4051
          (jit->ip) ++;
#line 4051
          *tmp___12 = imb___0.b[0];
#line 4051
          tmp___13 = jit->ip;
#line 4051
          (jit->ip) ++;
#line 4051
          *tmp___13 = imb___0.b[1];
#line 4051
          tmp___14 = jit->ip;
#line 4051
          (jit->ip) ++;
#line 4051
          *tmp___14 = imb___0.b[2];
#line 4051
          tmp___15 = jit->ip;
#line 4051
          (jit->ip) ++;
#line 4051
          *tmp___15 = imb___0.b[3];
#line 4051
          break;
        }
      }
#line 4051
      break;
    }
  }
#line 4052
  al = jit->reg_al;
#line 4053
  i = al->fp_reg_cnt - 1;
#line 4053
  while (i >= 0) {
#line 4054
    reg = al->fp_regs + i;
#line 4055
    if (! reg->callee_saved) {
#line 4055
      tmp___59 = is_active_register(al, reg, op);
#line 4055
      if (tmp___59) {
#line 4056
        while (1) {
#line 4056
          tmp___16 = jit->ip;
#line 4056
          (jit->ip) ++;
#line 4056
          *tmp___16 = (unsigned char)102;
#line 4056
          while (1) {
#line 4056
            if (reg->id > 7) {
#line 4056
              tmp___17 = 4;
            } else {
#line 4056
              tmp___17 = 0;
            }
#line 4056
            _amd64_rex_bits___2 = (unsigned char )tmp___17;
#line 4056
            if ((int )_amd64_rex_bits___2 != 0) {
#line 4056
              tmp___18 = jit->ip;
#line 4056
              (jit->ip) ++;
#line 4056
              *tmp___18 = (unsigned char )(0x40 | (int )_amd64_rex_bits___2);
            }
#line 4056
            break;
          }
#line 4056
          tmp___19 = jit->ip;
#line 4056
          (jit->ip) ++;
#line 4056
          *tmp___19 = (unsigned char)15;
#line 4056
          tmp___20 = jit->ip;
#line 4056
          (jit->ip) ++;
#line 4056
          *tmp___20 = (unsigned char)18;
#line 4056
          while (1) {
#line 4056
            while (1) {
#line 4056
              while (1) {
#line 4056
                tmp___26 = jit->ip;
#line 4056
                (jit->ip) ++;
#line 4056
                *tmp___26 = (unsigned char )((((reg->id & 0x7) & 0x07) << 3) | 4);
#line 4056
                break;
              }
#line 4056
              while (1) {
#line 4056
                tmp___27 = jit->ip;
#line 4056
                (jit->ip) ++;
#line 4056
                *tmp___27 = (unsigned char )((4 << 3) | 4);
#line 4056
                break;
              }
#line 4056
              break;
#line 4056
              while (1) {
#line 4056
                tmp___36 = jit->ip;
#line 4056
                (jit->ip) ++;
#line 4056
                *tmp___36 = (unsigned char )((((reg->id & 0x7) & 0x07) << 3) | 4);
#line 4056
                break;
              }
#line 4056
              break;
#line 4056
              while (1) {
#line 4056
                tmp___37 = jit->ip;
#line 4056
                (jit->ip) ++;
#line 4056
                *tmp___37 = (unsigned char )(((1 << 6) | (((reg->id & 0x7) & 0x07) << 3)) | 4);
#line 4056
                break;
              }
#line 4056
              while (1) {
#line 4056
                *(jit->ip) = (unsigned char)0;
#line 4056
                (jit->ip) ++;
#line 4056
                break;
              }
#line 4056
              break;
            }
#line 4056
            break;
          }
#line 4056
          break;
        }
#line 4056
        while (1) {
#line 4056
          while (1) {
#line 4056
            _amd64_rex_bits___3 = (unsigned char)8;
#line 4056
            if ((int )_amd64_rex_bits___3 != 0) {
#line 4056
              tmp___43 = jit->ip;
#line 4056
              (jit->ip) ++;
#line 4056
              *tmp___43 = (unsigned char )(0x40 | (int )_amd64_rex_bits___3);
            }
#line 4056
            break;
          }
#line 4056
          tmp___44 = jit->ip;
#line 4056
          (jit->ip) ++;
#line 4056
          *tmp___44 = (unsigned char)131;
#line 4056
          while (1) {
#line 4056
            while (1) {
#line 4056
              tmp___45 = jit->ip;
#line 4056
              (jit->ip) ++;
#line 4056
              *tmp___45 = (unsigned char )((3 << 6) | 4);
#line 4056
              break;
            }
#line 4056
            break;
          }
#line 4056
          while (1) {
#line 4056
            *(jit->ip) = (unsigned char)8;
#line 4056
            (jit->ip) ++;
#line 4056
            break;
          }
#line 4056
          break;
        }
      }
    }
#line 4056
    while (1) {
#line 4056
      break;
    }
#line 4053
    i --;
  }
#line 4058
  i___0 = al->gp_reg_cnt - 1;
#line 4058
  while (i___0 >= 0) {
#line 4059
    reg___0 = al->gp_regs + i___0;
#line 4060
    if (! reg___0->callee_saved) {
#line 4060
      tmp___63 = is_active_register(al, reg___0, op);
#line 4060
      if (tmp___63) {
#line 4061
        while (1) {
#line 4061
          while (1) {
#line 4061
            if (reg___0->id > 7) {
#line 4061
              tmp___60 = 1;
            } else {
#line 4061
              tmp___60 = 0;
            }
#line 4061
            _amd64_rex_bits___6 = (unsigned char )tmp___60;
#line 4061
            if ((int )_amd64_rex_bits___6 != 0) {
#line 4061
              tmp___61 = jit->ip;
#line 4061
              (jit->ip) ++;
#line 4061
              *tmp___61 = (unsigned char )(0x40 | (int )_amd64_rex_bits___6);
            }
#line 4061
            break;
          }
#line 4061
          tmp___62 = jit->ip;
#line 4061
          (jit->ip) ++;
#line 4061
          *tmp___62 = (unsigned char )(88 + (reg___0->id & 0x7));
#line 4061
          break;
        }
      }
    }
#line 4058
    i___0 --;
  }
#line 4063
  while (1) {
#line 4063
    while (1) {
#line 4063
      _amd64_rex_bits___7 = (unsigned char)8;
#line 4063
      if ((int )_amd64_rex_bits___7 != 0) {
#line 4063
        tmp___64 = jit->ip;
#line 4063
        (jit->ip) ++;
#line 4063
        *tmp___64 = (unsigned char )(0x40 | (int )_amd64_rex_bits___7);
      }
#line 4063
      break;
    }
#line 4063
    while (1) {
#line 4063
      tmp___65 = jit->ip;
#line 4063
      (jit->ip) ++;
#line 4063
      *tmp___65 = (unsigned char)157;
#line 4063
      break;
    }
#line 4063
    break;
  }
#line 4064
  return;
}
}
/* END FUNCTION-DEF emit_restore_all_regs LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF delete_node LOC=UNKNOWN */
static jit_tree *delete_node(jit_tree *h , jit_tree_key key , int *found ) 
{ 
  int tmp ;
  int tmp___0 ;
  int tmp___1 ;
  int tmp___2 ;
  int tmp___3 ;
  jit_tree_key tmp___4 ;
  jit_tree *tmp___5 ;
  jit_tree *tmp___6 ;

  {
#line 2175
  if ((unsigned long )h == (unsigned long )((void *)0)) {
#line 2176
    if (found) {
#line 2176
      *found = 0;
    }
#line 2177
    return ((jit_tree *)((void *)0));
  }
#line 2179
  if (key < h->key) {
#line 2180
    tmp = is_red(h->left);
#line 2180
    if (! tmp) {
#line 2180
      if (h->left) {
#line 2180
        tmp___0 = is_red((h->left)->left);
#line 2180
        if (! tmp___0) {
#line 2181
          h = move_red_left(h);
        }
      }
    }
#line 2182
    h->left = delete_node(h->left, key, found);
  } else {
#line 2184
    tmp___1 = is_red(h->left);
#line 2184
    if (tmp___1) {
#line 2184
      h = rotate_right(h);
    }
#line 2185
    if (key == h->key) {
#line 2185
      if ((unsigned long )h->right == (unsigned long )((void *)0)) {
#line 2186
        free((void *)h);
#line 2187
        if (found) {
#line 2187
          *found = 1;
        }
#line 2188
        return ((jit_tree *)((void *)0));
      }
    }
#line 2190
    tmp___2 = is_red(h->right);
#line 2190
    if (! tmp___2) {
#line 2190
      if (h->right) {
#line 2190
        tmp___3 = is_red((h->right)->left);
#line 2190
        if (! tmp___3) {
#line 2190
          h = move_red_right(h);
        }
      }
    }
#line 2191
    if (key == h->key) {
#line 2192
      tmp___4 = node_min(h->right);
#line 2192
      tmp___5 = jit_tree_search(h->right, tmp___4);
#line 2192
      h->value = tmp___5->value;
#line 2193
      h->key = node_min(h->right);
#line 2194
      h->right = delete_min(h->right);
#line 2195
      if (found) {
#line 2195
        *found = 1;
      }
    } else {
#line 2197
      h->right = delete_node(h->right, key, found);
    }
  }
#line 2199
  tmp___6 = fixup(h);
#line 2199
  return (tmp___6);
}
}
/* END FUNCTION-DEF delete_node LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_optimize_unused_assignments LOC=UNKNOWN */
void jit_optimize_unused_assignments(struct jit *jit ) 
{ 
  jit_op *op ;
  jit_op *tmp ;
  int tmp___0 ;

  {
#line 3460
  tmp = jit_op_first(jit->ops);
#line 3460
  op = tmp;
#line 3460
  while ((unsigned long )op != (unsigned long )((void *)0)) {
#line 3461
    if (((int )op->spec & 0x03) == 0x03) {
#line 3462
      if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 608U) {
#line 3463
        goto __Cont;
      } else
#line 3462
      if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 480U) {
#line 3463
        goto __Cont;
      } else
#line 3462
      if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 320U) {
#line 3463
        goto __Cont;
      } else
#line 3462
      if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 8U) {
#line 3463
        goto __Cont;
      }
#line 3464
      tmp___0 = jit_set_get(op->live_out, (int )op->arg[0]);
#line 3464
      if (! tmp___0) {
#line 3465
        op->code = (unsigned short)864;
#line 3466
        op->spec = (unsigned char)0;
      }
    }
    __Cont: /* CIL Label */ 
#line 3460
    op = op->next;
  }
#line 3470
  return;
}
}
/* END FUNCTION-DEF jit_optimize_unused_assignments LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_arg_layout_create LOC=UNKNOWN */
static struct jit_arg_layout *jit_arg_layout_create(struct jit *jit , int arg_cnt ) 
{ 
  struct jit_arg_layout *layout ;
  void *tmp ;

  {
#line 3147
  tmp = malloc((size_t )(sizeof(struct jit_arg_layout ) + sizeof(struct jit_arg_layout_location ) * (unsigned long long )arg_cnt));
#line 3147
  layout = (struct jit_arg_layout *)tmp;
#line 3148
  layout->jit = jit;
#line 3149
  layout->arg_index = 0;
#line 3150
  layout->gp_index = 0;
#line 3151
  layout->fp_index = 0;
#line 3152
  layout->stack_index = 0;
#line 3153
  return (layout);
}
}
/* END FUNCTION-DEF jit_arg_layout_create LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF is_red LOC=UNKNOWN */
__inline static int is_red(jit_tree *n ) 
{ 


  {
#line 2067
  if ((unsigned long )n == (unsigned long )((void *)0)) {
#line 2067
    return (0);
  }
#line 2068
  return (n->color == 1);
}
}
/* END FUNCTION-DEF is_red LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF fac LOC=UNKNOWN */
void fac(int n ) 
{ 
  int s ;
  int i ;

  {
#line 26 "test-jit.c"
  s = 1;
#line 28
  i = 2;
#line 28
  while (i <= n) {
#line 29
    s *= i;
#line 28
    i ++;
  }
#line 31
  printf((char const   */* __restrict  */)"fac(%i)=%i\n", n, s);
#line 32
  return;
}
}
/* END FUNCTION-DEF fac LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF delete_min LOC=UNKNOWN */
static jit_tree *delete_min(jit_tree *h ) 
{ 
  int tmp ;
  int tmp___0 ;
  jit_tree *tmp___1 ;

  {
#line 2164
  if ((unsigned long )h->left == (unsigned long )((void *)0)) {
#line 2165 "<string>"
    free((void *)h);
#line 2166
    return ((jit_tree *)((void *)0));
  }
#line 2168
  tmp = is_red(h->left);
#line 2168
  if (! tmp) {
#line 2168
    tmp___0 = is_red((h->left)->left);
#line 2168
    if (! tmp___0) {
#line 2169
      h = move_red_left(h);
    }
  }
#line 2170
  h->left = delete_min(h->left);
#line 2171
  tmp___1 = fixup(h);
#line 2171
  return (tmp___1);
}
}
/* END FUNCTION-DEF delete_min LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF emit_transfer_loop LOC=UNKNOWN */
static void emit_transfer_loop(struct jit *jit , jit_op *op ) 
{ 
  struct transfer_info *tinf ;
  jit_value loop ;
  unsigned char *tmp ;
  unsigned char _amd64_rex_bits ;
  int tmp___0 ;
  int tmp___1 ;
  int tmp___2 ;
  int tmp___3 ;
  unsigned char *tmp___4 ;
  unsigned char *tmp___5 ;
  unsigned char *tmp___6 ;
  long tmp___7 ;
  unsigned char *tmp___8 ;
  unsigned char *tmp___9 ;
  x86_imm_buf imb ;
  unsigned char *tmp___10 ;
  unsigned char *tmp___11 ;
  unsigned char *tmp___12 ;
  unsigned char *tmp___13 ;
  unsigned char *tmp___14 ;
  unsigned char *tmp___15 ;
  unsigned char *tmp___16 ;
  unsigned char *tmp___17 ;
  unsigned char *tmp___18 ;
  unsigned char *tmp___19 ;
  x86_imm_buf imb___0 ;
  unsigned char *tmp___20 ;
  unsigned char *tmp___21 ;
  unsigned char *tmp___22 ;
  unsigned char *tmp___23 ;
  unsigned char _amd64_rex_bits___0 ;
  int tmp___24 ;
  unsigned char *tmp___25 ;
  unsigned char *tmp___26 ;
  unsigned char *tmp___27 ;
  unsigned char _amd64_rex_bits___1 ;
  unsigned char *tmp___28 ;
  unsigned char *tmp___29 ;
  x86_imm_buf imb___1 ;
  unsigned char *tmp___30 ;
  unsigned char *tmp___31 ;
  unsigned char *tmp___32 ;
  unsigned char *tmp___33 ;
  unsigned char _amd64_rex_bits___2 ;
  int tmp___34 ;
  unsigned char *tmp___35 ;
  unsigned char *tmp___36 ;
  unsigned char *tmp___37 ;
  x86_imm_buf imb___2 ;
  unsigned char *tmp___38 ;
  unsigned char *tmp___39 ;
  unsigned char *tmp___40 ;
  unsigned char *tmp___41 ;
  unsigned char _amd64_rex_bits___3 ;
  unsigned char *tmp___42 ;
  int offset ;
  unsigned char *tmp___43 ;
  unsigned char *tmp___44 ;
  unsigned char *tmp___45 ;
  unsigned char *tmp___46 ;
  unsigned char *tmp___47 ;
  x86_imm_buf imb___3 ;
  unsigned char *tmp___48 ;
  unsigned char *tmp___49 ;
  unsigned char *tmp___50 ;
  unsigned char *tmp___51 ;
  unsigned char *tmp___52 ;
  unsigned char _amd64_rex_bits___4 ;
  int tmp___53 ;
  int tmp___54 ;
  unsigned char *tmp___55 ;
  unsigned char *tmp___56 ;
  unsigned char *tmp___57 ;
  long tmp___58 ;
  unsigned char *tmp___59 ;
  x86_imm_buf imb___4 ;
  unsigned char *tmp___60 ;
  unsigned char *tmp___61 ;
  unsigned char *tmp___62 ;
  unsigned char *tmp___63 ;
  unsigned char *tmp___64 ;
  unsigned char *tmp___65 ;
  unsigned char *tmp___66 ;
  unsigned char *tmp___67 ;
  unsigned char *tmp___68 ;
  unsigned char *tmp___69 ;
  x86_imm_buf imb___5 ;
  unsigned char *tmp___70 ;
  unsigned char *tmp___71 ;
  unsigned char *tmp___72 ;
  unsigned char *tmp___73 ;
  unsigned char *tmp___74 ;
  unsigned char *tmp___75 ;
  unsigned char *tmp___76 ;
  x86_imm_buf imb___6 ;
  unsigned char *tmp___77 ;
  unsigned char *tmp___78 ;
  unsigned char *tmp___79 ;
  unsigned char *tmp___80 ;
  unsigned char *tmp___81 ;
  unsigned char _amd64_rex_bits___5 ;
  int tmp___82 ;
  int tmp___83 ;
  unsigned char *tmp___84 ;
  unsigned char *tmp___85 ;
  unsigned char *tmp___86 ;
  long tmp___87 ;
  unsigned char *tmp___88 ;
  x86_imm_buf imb___7 ;
  unsigned char *tmp___89 ;
  unsigned char *tmp___90 ;
  unsigned char *tmp___91 ;
  unsigned char *tmp___92 ;
  unsigned char *tmp___93 ;
  unsigned char *tmp___94 ;
  unsigned char *tmp___95 ;
  unsigned char *tmp___96 ;
  unsigned char *tmp___97 ;
  unsigned char *tmp___98 ;
  x86_imm_buf imb___8 ;
  unsigned char *tmp___99 ;
  unsigned char *tmp___100 ;
  unsigned char *tmp___101 ;
  unsigned char *tmp___102 ;
  unsigned char *tmp___103 ;
  unsigned char *tmp___104 ;
  unsigned char *tmp___105 ;
  x86_imm_buf imb___9 ;
  unsigned char *tmp___106 ;
  unsigned char *tmp___107 ;
  unsigned char *tmp___108 ;
  unsigned char *tmp___109 ;

  {
#line 4477
  tinf = (struct transfer_info *)op->addendum;
#line 4478
  loop = (jit_value )tinf->loop_addr;
#line 4479
  while (1) {
#line 4479
    if (tinf->block_size == 2) {
#line 4479
      tmp = jit->ip;
#line 4479
      (jit->ip) ++;
#line 4479
      *tmp = (unsigned char)102;
    }
#line 4479
    while (1) {
#line 4479
      if (tinf->block_size > 4) {
#line 4479
        tmp___0 = 8;
      } else {
#line 4479
        tmp___0 = 0;
      }
#line 4479
      if (tinf->scrapreg > 7) {
#line 4479
        tmp___1 = 4;
      } else {
#line 4479
        tmp___1 = 0;
      }
#line 4479
      if (tinf->counterreg > 7) {
#line 4479
        tmp___2 = 2;
      } else {
#line 4479
        tmp___2 = 0;
      }
#line 4479
      if (tinf->destreg > 7) {
#line 4479
        tmp___3 = 1;
      } else {
#line 4479
        tmp___3 = 0;
      }
#line 4479
      _amd64_rex_bits = (unsigned char )(((tmp___0 | tmp___1) | tmp___2) | tmp___3);
#line 4479
      if ((int )_amd64_rex_bits != 0) {
#line 4479
        tmp___4 = jit->ip;
#line 4479
        (jit->ip) ++;
#line 4479
        *tmp___4 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
      } else
#line 4479
      if (tinf->block_size == 1) {
#line 4479
        tmp___4 = jit->ip;
#line 4479
        (jit->ip) ++;
#line 4479
        *tmp___4 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
      }
#line 4479
      break;
    }
#line 4479
    switch (tinf->block_size) {
    case 1: 
#line 4479
    tmp___5 = jit->ip;
#line 4479
    (jit->ip) ++;
#line 4479
    *tmp___5 = (unsigned char)136;
#line 4479
    break;
    case 8: 
    case 4: 
    case 2: 
#line 4479
    tmp___6 = jit->ip;
#line 4479
    (jit->ip) ++;
#line 4479
    *tmp___6 = (unsigned char)137;
#line 4479
    break;
    default: 
#line 4479
    tmp___7 = __builtin_expect(1L, 0L);
#line 4479
    if (tmp___7) {
#line 4479
      __assert_rtn((char const   *)"emit_transfer_loop", (char const   *)"tmp/src.c",
                   3528, (char const   *)"0");
    }
    }
#line 4479
    while (1) {
#line 4479
      if ((tinf->destreg & 0x7) == -1) {
#line 4479
        while (1) {
#line 4479
          tmp___8 = jit->ip;
#line 4479
          (jit->ip) ++;
#line 4479
          *tmp___8 = (unsigned char )((((tinf->scrapreg & 0x7) & 0x07) << 3) | 4);
#line 4479
          break;
        }
#line 4479
        while (1) {
#line 4479
          tmp___9 = jit->ip;
#line 4479
          (jit->ip) ++;
#line 4479
          *tmp___9 = (unsigned char )((((tinf->counterreg & 0x7) & 0x07) << 3) | 5);
#line 4479
          break;
        }
#line 4479
        while (1) {
#line 4479
          imb.val = - tinf->block_size;
#line 4479
          tmp___10 = jit->ip;
#line 4479
          (jit->ip) ++;
#line 4479
          *tmp___10 = imb.b[0];
#line 4479
          tmp___11 = jit->ip;
#line 4479
          (jit->ip) ++;
#line 4479
          *tmp___11 = imb.b[1];
#line 4479
          tmp___12 = jit->ip;
#line 4479
          (jit->ip) ++;
#line 4479
          *tmp___12 = imb.b[2];
#line 4479
          tmp___13 = jit->ip;
#line 4479
          (jit->ip) ++;
#line 4479
          *tmp___13 = imb.b[3];
#line 4479
          break;
        }
      } else
#line 4479
      if (- tinf->block_size == 0) {
#line 4479
        if ((tinf->destreg & 0x7) != 5) {
#line 4479
          while (1) {
#line 4479
            tmp___14 = jit->ip;
#line 4479
            (jit->ip) ++;
#line 4479
            *tmp___14 = (unsigned char )((((tinf->scrapreg & 0x7) & 0x07) << 3) | 4);
#line 4479
            break;
          }
#line 4479
          while (1) {
#line 4479
            tmp___15 = jit->ip;
#line 4479
            (jit->ip) ++;
#line 4479
            *tmp___15 = (unsigned char )(((((tinf->counterreg & 0x7) & 0x7) & 0x07) << 3) | (((tinf->destreg & 0x7) & 0x7) & 0x07));
#line 4479
            break;
          }
        } else {
#line 4479
          goto _L___0;
        }
      } else
      _L___0: /* CIL Label */ 
#line 4479
      if ((jit_value )(- tinf->block_size) >= -128L) {
#line 4479
        if ((jit_value )(- tinf->block_size) <= 127L) {
#line 4479
          while (1) {
#line 4479
            tmp___16 = jit->ip;
#line 4479
            (jit->ip) ++;
#line 4479
            *tmp___16 = (unsigned char )(((1 << 6) | (((tinf->scrapreg & 0x7) & 0x07) << 3)) | 4);
#line 4479
            break;
          }
#line 4479
          while (1) {
#line 4479
            tmp___17 = jit->ip;
#line 4479
            (jit->ip) ++;
#line 4479
            *tmp___17 = (unsigned char )(((((tinf->counterreg & 0x7) & 0x7) & 0x07) << 3) | (((tinf->destreg & 0x7) & 0x7) & 0x07));
#line 4479
            break;
          }
#line 4479
          while (1) {
#line 4479
            *(jit->ip) = (unsigned char )(- tinf->block_size & 0xff);
#line 4479
            (jit->ip) ++;
#line 4479
            break;
          }
        } else {
#line 4479
          goto _L;
        }
      } else {
        _L: /* CIL Label */ 
#line 4479
        while (1) {
#line 4479
          tmp___18 = jit->ip;
#line 4479
          (jit->ip) ++;
#line 4479
          *tmp___18 = (unsigned char )(((2 << 6) | (((tinf->scrapreg & 0x7) & 0x07) << 3)) | 4);
#line 4479
          break;
        }
#line 4479
        while (1) {
#line 4479
          tmp___19 = jit->ip;
#line 4479
          (jit->ip) ++;
#line 4479
          *tmp___19 = (unsigned char )(((((tinf->counterreg & 0x7) & 0x7) & 0x07) << 3) | (((tinf->destreg & 0x7) & 0x7) & 0x07));
#line 4479
          break;
        }
#line 4479
        while (1) {
#line 4479
          imb___0.val = - tinf->block_size;
#line 4479
          tmp___20 = jit->ip;
#line 4479
          (jit->ip) ++;
#line 4479
          *tmp___20 = imb___0.b[0];
#line 4479
          tmp___21 = jit->ip;
#line 4479
          (jit->ip) ++;
#line 4479
          *tmp___21 = imb___0.b[1];
#line 4479
          tmp___22 = jit->ip;
#line 4479
          (jit->ip) ++;
#line 4479
          *tmp___22 = imb___0.b[2];
#line 4479
          tmp___23 = jit->ip;
#line 4479
          (jit->ip) ++;
#line 4479
          *tmp___23 = imb___0.b[3];
#line 4479
          break;
        }
      }
#line 4479
      break;
    }
#line 4479
    break;
  }
#line 4480
  while (1) {
#line 4480
    if ((jit_value )tinf->block_size >= -128L) {
#line 4480
      if ((jit_value )tinf->block_size <= 127L) {
#line 4480
        while (1) {
#line 4480
          if (tinf->counterreg > 7) {
#line 4480
            tmp___24 = 1;
          } else {
#line 4480
            tmp___24 = 0;
          }
#line 4480
          _amd64_rex_bits___0 = (unsigned char )(8 | tmp___24);
#line 4480
          if ((int )_amd64_rex_bits___0 != 0) {
#line 4480
            tmp___25 = jit->ip;
#line 4480
            (jit->ip) ++;
#line 4480
            *tmp___25 = (unsigned char )(0x40 | (int )_amd64_rex_bits___0);
          }
#line 4480
          break;
        }
#line 4480
        tmp___26 = jit->ip;
#line 4480
        (jit->ip) ++;
#line 4480
        *tmp___26 = (unsigned char)131;
#line 4480
        while (1) {
#line 4480
          while (1) {
#line 4480
            tmp___27 = jit->ip;
#line 4480
            (jit->ip) ++;
#line 4480
            *tmp___27 = (unsigned char )(((3 << 6) | (5 << 3)) | (tinf->counterreg & 0x07));
#line 4480
            break;
          }
#line 4480
          break;
        }
#line 4480
        while (1) {
#line 4480
          *(jit->ip) = (unsigned char )(tinf->block_size & 0xff);
#line 4480
          (jit->ip) ++;
#line 4480
          break;
        }
      } else {
#line 4480
        goto _L___1;
      }
    } else
    _L___1: /* CIL Label */ 
#line 4480
    if (tinf->counterreg == 0) {
#line 4480
      while (1) {
#line 4480
        _amd64_rex_bits___1 = (unsigned char)8;
#line 4480
        if ((int )_amd64_rex_bits___1 != 0) {
#line 4480
          tmp___28 = jit->ip;
#line 4480
          (jit->ip) ++;
#line 4480
          *tmp___28 = (unsigned char )(0x40 | (int )_amd64_rex_bits___1);
        }
#line 4480
        break;
      }
#line 4480
      tmp___29 = jit->ip;
#line 4480
      (jit->ip) ++;
#line 4480
      *tmp___29 = (unsigned char )((5 << 3) + 5);
#line 4480
      while (1) {
#line 4480
        imb___1.val = tinf->block_size;
#line 4480
        tmp___30 = jit->ip;
#line 4480
        (jit->ip) ++;
#line 4480
        *tmp___30 = imb___1.b[0];
#line 4480
        tmp___31 = jit->ip;
#line 4480
        (jit->ip) ++;
#line 4480
        *tmp___31 = imb___1.b[1];
#line 4480
        tmp___32 = jit->ip;
#line 4480
        (jit->ip) ++;
#line 4480
        *tmp___32 = imb___1.b[2];
#line 4480
        tmp___33 = jit->ip;
#line 4480
        (jit->ip) ++;
#line 4480
        *tmp___33 = imb___1.b[3];
#line 4480
        break;
      }
    } else {
#line 4480
      while (1) {
#line 4480
        if (tinf->counterreg > 7) {
#line 4480
          tmp___34 = 1;
        } else {
#line 4480
          tmp___34 = 0;
        }
#line 4480
        _amd64_rex_bits___2 = (unsigned char )(8 | tmp___34);
#line 4480
        if ((int )_amd64_rex_bits___2 != 0) {
#line 4480
          tmp___35 = jit->ip;
#line 4480
          (jit->ip) ++;
#line 4480
          *tmp___35 = (unsigned char )(0x40 | (int )_amd64_rex_bits___2);
        }
#line 4480
        break;
      }
#line 4480
      tmp___36 = jit->ip;
#line 4480
      (jit->ip) ++;
#line 4480
      *tmp___36 = (unsigned char)129;
#line 4480
      while (1) {
#line 4480
        while (1) {
#line 4480
          tmp___37 = jit->ip;
#line 4480
          (jit->ip) ++;
#line 4480
          *tmp___37 = (unsigned char )(((3 << 6) | (5 << 3)) | (tinf->counterreg & 0x07));
#line 4480
          break;
        }
#line 4480
        break;
      }
#line 4480
      while (1) {
#line 4480
        imb___2.val = tinf->block_size;
#line 4480
        tmp___38 = jit->ip;
#line 4480
        (jit->ip) ++;
#line 4480
        *tmp___38 = imb___2.b[0];
#line 4480
        tmp___39 = jit->ip;
#line 4480
        (jit->ip) ++;
#line 4480
        *tmp___39 = imb___2.b[1];
#line 4480
        tmp___40 = jit->ip;
#line 4480
        (jit->ip) ++;
#line 4480
        *tmp___40 = imb___2.b[2];
#line 4480
        tmp___41 = jit->ip;
#line 4480
        (jit->ip) ++;
#line 4480
        *tmp___41 = imb___2.b[3];
#line 4480
        break;
      }
    }
#line 4480
    break;
  }
#line 4481
  while (1) {
#line 4481
    while (1) {
#line 4481
      _amd64_rex_bits___3 = (unsigned char)8;
#line 4481
      if ((int )_amd64_rex_bits___3 != 0) {
#line 4481
        tmp___42 = jit->ip;
#line 4481
        (jit->ip) ++;
#line 4481
        *tmp___42 = (unsigned char )(0x40 | (int )_amd64_rex_bits___3);
      }
#line 4481
      break;
    }
#line 4481
    while (1) {
#line 4481
      offset = (int )((loop - (jit_value )jit->ip) - 2L);
#line 4481
      if ((jit_value )offset >= -128L) {
#line 4481
        if ((jit_value )offset <= 127L) {
#line 4481
          while (1) {
#line 4481
            tmp___44 = jit->ip;
#line 4481
            (jit->ip) ++;
#line 4481
            *tmp___44 = (unsigned char )x86_cc_unsigned_map[1];
#line 4481
            while (1) {
#line 4481
              *(jit->ip) = (unsigned char )(offset & 0xff);
#line 4481
              (jit->ip) ++;
#line 4481
              break;
            }
#line 4481
            break;
          }
        } else {
#line 4481
          goto _L___2;
        }
      } else {
        _L___2: /* CIL Label */ 
#line 4481
        offset -= 4;
#line 4481
        while (1) {
#line 4481
          tmp___45 = jit->ip;
#line 4481
          (jit->ip) ++;
#line 4481
          *tmp___45 = (unsigned char)15;
#line 4481
          tmp___47 = jit->ip;
#line 4481
          (jit->ip) ++;
#line 4481
          *tmp___47 = (unsigned char )((int const   )x86_cc_unsigned_map[1] + 16);
#line 4481
          while (1) {
#line 4481
            imb___3.val = offset;
#line 4481
            tmp___48 = jit->ip;
#line 4481
            (jit->ip) ++;
#line 4481
            *tmp___48 = imb___3.b[0];
#line 4481
            tmp___49 = jit->ip;
#line 4481
            (jit->ip) ++;
#line 4481
            *tmp___49 = imb___3.b[1];
#line 4481
            tmp___50 = jit->ip;
#line 4481
            (jit->ip) ++;
#line 4481
            *tmp___50 = imb___3.b[2];
#line 4481
            tmp___51 = jit->ip;
#line 4481
            (jit->ip) ++;
#line 4481
            *tmp___51 = imb___3.b[3];
#line 4481
            break;
          }
#line 4481
          break;
        }
      }
#line 4481
      break;
    }
#line 4481
    break;
  }
#line 4482
  if (tinf->counter_in_use) {
#line 4482
    while (1) {
#line 4482
      if ((int )sizeof(void *) == 2) {
#line 4482
        tmp___52 = jit->ip;
#line 4482
        (jit->ip) ++;
#line 4482
        *tmp___52 = (unsigned char)102;
      }
#line 4482
      while (1) {
#line 4482
        if ((int )sizeof(void *) > 4) {
#line 4482
          tmp___53 = 8;
        } else {
#line 4482
          tmp___53 = 0;
        }
#line 4482
        if (tinf->counterreg > 7) {
#line 4482
          tmp___54 = 4;
        } else {
#line 4482
          tmp___54 = 0;
        }
#line 4482
        _amd64_rex_bits___4 = (unsigned char )(tmp___53 | tmp___54);
#line 4482
        if ((int )_amd64_rex_bits___4 != 0) {
#line 4482
          tmp___55 = jit->ip;
#line 4482
          (jit->ip) ++;
#line 4482
          *tmp___55 = (unsigned char )(0x40 | (int )_amd64_rex_bits___4);
        } else
#line 4482
        if ((int )sizeof(void *) == 1) {
#line 4482
          tmp___55 = jit->ip;
#line 4482
          (jit->ip) ++;
#line 4482
          *tmp___55 = (unsigned char )(0x40 | (int )_amd64_rex_bits___4);
        }
#line 4482
        break;
      }
#line 4482
      switch ((int )sizeof(void *)) {
      case 1: 
#line 4482
      tmp___56 = jit->ip;
#line 4482
      (jit->ip) ++;
#line 4482
      *tmp___56 = (unsigned char)138;
#line 4482
      break;
      case 8: 
      case 4: 
      case 2: 
#line 4482
      tmp___57 = jit->ip;
#line 4482
      (jit->ip) ++;
#line 4482
      *tmp___57 = (unsigned char)139;
#line 4482
      break;
      default: 
#line 4482
      tmp___58 = __builtin_expect(1L, 0L);
#line 4482
      if (tmp___58) {
#line 4482
        __assert_rtn((char const   *)"emit_transfer_loop", (char const   *)"tmp/src.c",
                     3532, (char const   *)"0");
      }
      }
#line 4482
      while (1) {
#line 4482
        while (1) {
#line 4482
          if (- ((int )sizeof(void *)) == 0) {
#line 4482
            while (1) {
#line 4482
              tmp___64 = jit->ip;
#line 4482
              (jit->ip) ++;
#line 4482
              *tmp___64 = (unsigned char )((((tinf->counterreg & 0x7) & 0x07) << 3) | 4);
#line 4482
              break;
            }
#line 4482
            while (1) {
#line 4482
              tmp___65 = jit->ip;
#line 4482
              (jit->ip) ++;
#line 4482
              *tmp___65 = (unsigned char )((4 << 3) | 4);
#line 4482
              break;
            }
          } else
#line 4482
          if ((jit_value )(- ((int )sizeof(void *))) >= -128L) {
#line 4482
            if ((jit_value )(- ((int )sizeof(void *))) <= 127L) {
#line 4482
              while (1) {
#line 4482
                tmp___66 = jit->ip;
#line 4482
                (jit->ip) ++;
#line 4482
                *tmp___66 = (unsigned char )(((1 << 6) | (((tinf->counterreg & 0x7) & 0x07) << 3)) | 4);
#line 4482
                break;
              }
#line 4482
              while (1) {
#line 4482
                tmp___67 = jit->ip;
#line 4482
                (jit->ip) ++;
#line 4482
                *tmp___67 = (unsigned char )((4 << 3) | 4);
#line 4482
                break;
              }
#line 4482
              while (1) {
#line 4482
                *(jit->ip) = (unsigned char )(- ((int )sizeof(void *)) & 0xff);
#line 4482
                (jit->ip) ++;
#line 4482
                break;
              }
            } else {
#line 4482
              goto _L___3;
            }
          } else {
            _L___3: /* CIL Label */ 
#line 4482
            while (1) {
#line 4482
              tmp___68 = jit->ip;
#line 4482
              (jit->ip) ++;
#line 4482
              *tmp___68 = (unsigned char )(((2 << 6) | (((tinf->counterreg & 0x7) & 0x07) << 3)) | 4);
#line 4482
              break;
            }
#line 4482
            while (1) {
#line 4482
              tmp___69 = jit->ip;
#line 4482
              (jit->ip) ++;
#line 4482
              *tmp___69 = (unsigned char )((4 << 3) | 4);
#line 4482
              break;
            }
#line 4482
            while (1) {
#line 4482
              imb___5.val = - ((int )sizeof(void *));
#line 4482
              tmp___70 = jit->ip;
#line 4482
              (jit->ip) ++;
#line 4482
              *tmp___70 = imb___5.b[0];
#line 4482
              tmp___71 = jit->ip;
#line 4482
              (jit->ip) ++;
#line 4482
              *tmp___71 = imb___5.b[1];
#line 4482
              tmp___72 = jit->ip;
#line 4482
              (jit->ip) ++;
#line 4482
              *tmp___72 = imb___5.b[2];
#line 4482
              tmp___73 = jit->ip;
#line 4482
              (jit->ip) ++;
#line 4482
              *tmp___73 = imb___5.b[3];
#line 4482
              break;
            }
          }
#line 4482
          break;
#line 4482
          if (- ((int )sizeof(void *)) == 0) {
#line 4482
            while (1) {
#line 4482
              tmp___74 = jit->ip;
#line 4482
              (jit->ip) ++;
#line 4482
              *tmp___74 = (unsigned char )((((tinf->counterreg & 0x7) & 0x07) << 3) | 4);
#line 4482
              break;
            }
#line 4482
            break;
          }
#line 4482
          if ((jit_value )(- ((int )sizeof(void *))) >= -128L) {
#line 4482
            if ((jit_value )(- ((int )sizeof(void *))) <= 127L) {
#line 4482
              while (1) {
#line 4482
                tmp___75 = jit->ip;
#line 4482
                (jit->ip) ++;
#line 4482
                *tmp___75 = (unsigned char )(((1 << 6) | (((tinf->counterreg & 0x7) & 0x07) << 3)) | 4);
#line 4482
                break;
              }
#line 4482
              while (1) {
#line 4482
                *(jit->ip) = (unsigned char )(- ((int )sizeof(void *)) & 0xff);
#line 4482
                (jit->ip) ++;
#line 4482
                break;
              }
            } else {
#line 4482
              goto _L___4;
            }
          } else {
            _L___4: /* CIL Label */ 
#line 4482
            while (1) {
#line 4482
              tmp___76 = jit->ip;
#line 4482
              (jit->ip) ++;
#line 4482
              *tmp___76 = (unsigned char )(((2 << 6) | (((tinf->counterreg & 0x7) & 0x07) << 3)) | 4);
#line 4482
              break;
            }
#line 4482
            while (1) {
#line 4482
              imb___6.val = - ((int )sizeof(void *));
#line 4482
              tmp___77 = jit->ip;
#line 4482
              (jit->ip) ++;
#line 4482
              *tmp___77 = imb___6.b[0];
#line 4482
              tmp___78 = jit->ip;
#line 4482
              (jit->ip) ++;
#line 4482
              *tmp___78 = imb___6.b[1];
#line 4482
              tmp___79 = jit->ip;
#line 4482
              (jit->ip) ++;
#line 4482
              *tmp___79 = imb___6.b[2];
#line 4482
              tmp___80 = jit->ip;
#line 4482
              (jit->ip) ++;
#line 4482
              *tmp___80 = imb___6.b[3];
#line 4482
              break;
            }
          }
#line 4482
          break;
        }
#line 4482
        break;
      }
#line 4482
      break;
    }
  }
#line 4483
  if (tinf->scrap_in_use) {
#line 4483
    while (1) {
#line 4483
      if ((int )sizeof(void *) == 2) {
#line 4483
        tmp___81 = jit->ip;
#line 4483
        (jit->ip) ++;
#line 4483
        *tmp___81 = (unsigned char)102;
      }
#line 4483
      while (1) {
#line 4483
        if ((int )sizeof(void *) > 4) {
#line 4483
          tmp___82 = 8;
        } else {
#line 4483
          tmp___82 = 0;
        }
#line 4483
        if (tinf->scrapreg > 7) {
#line 4483
          tmp___83 = 4;
        } else {
#line 4483
          tmp___83 = 0;
        }
#line 4483
        _amd64_rex_bits___5 = (unsigned char )(tmp___82 | tmp___83);
#line 4483
        if ((int )_amd64_rex_bits___5 != 0) {
#line 4483
          tmp___84 = jit->ip;
#line 4483
          (jit->ip) ++;
#line 4483
          *tmp___84 = (unsigned char )(0x40 | (int )_amd64_rex_bits___5);
        } else
#line 4483
        if ((int )sizeof(void *) == 1) {
#line 4483
          tmp___84 = jit->ip;
#line 4483
          (jit->ip) ++;
#line 4483
          *tmp___84 = (unsigned char )(0x40 | (int )_amd64_rex_bits___5);
        }
#line 4483
        break;
      }
#line 4483
      switch ((int )sizeof(void *)) {
      case 1: 
#line 4483
      tmp___85 = jit->ip;
#line 4483
      (jit->ip) ++;
#line 4483
      *tmp___85 = (unsigned char)138;
#line 4483
      break;
      case 8: 
      case 4: 
      case 2: 
#line 4483
      tmp___86 = jit->ip;
#line 4483
      (jit->ip) ++;
#line 4483
      *tmp___86 = (unsigned char)139;
#line 4483
      break;
      default: 
#line 4483
      tmp___87 = __builtin_expect(1L, 0L);
#line 4483
      if (tmp___87) {
#line 4483
        __assert_rtn((char const   *)"emit_transfer_loop", (char const   *)"tmp/src.c",
                     3533, (char const   *)"0");
      }
      }
#line 4483
      while (1) {
#line 4483
        while (1) {
#line 4483
          if (- ((int )sizeof(void *)) * 2 == 0) {
#line 4483
            while (1) {
#line 4483
              tmp___93 = jit->ip;
#line 4483
              (jit->ip) ++;
#line 4483
              *tmp___93 = (unsigned char )((((tinf->scrapreg & 0x7) & 0x07) << 3) | 4);
#line 4483
              break;
            }
#line 4483
            while (1) {
#line 4483
              tmp___94 = jit->ip;
#line 4483
              (jit->ip) ++;
#line 4483
              *tmp___94 = (unsigned char )((4 << 3) | 4);
#line 4483
              break;
            }
          } else
#line 4483
          if ((jit_value )(- ((int )sizeof(void *)) * 2) >= -128L) {
#line 4483
            if ((jit_value )(- ((int )sizeof(void *)) * 2) <= 127L) {
#line 4483
              while (1) {
#line 4483
                tmp___95 = jit->ip;
#line 4483
                (jit->ip) ++;
#line 4483
                *tmp___95 = (unsigned char )(((1 << 6) | (((tinf->scrapreg & 0x7) & 0x07) << 3)) | 4);
#line 4483
                break;
              }
#line 4483
              while (1) {
#line 4483
                tmp___96 = jit->ip;
#line 4483
                (jit->ip) ++;
#line 4483
                *tmp___96 = (unsigned char )((4 << 3) | 4);
#line 4483
                break;
              }
#line 4483
              while (1) {
#line 4483
                *(jit->ip) = (unsigned char )(- ((int )sizeof(void *)) * 2 & 0xff);
#line 4483
                (jit->ip) ++;
#line 4483
                break;
              }
            } else {
#line 4483
              goto _L___5;
            }
          } else {
            _L___5: /* CIL Label */ 
#line 4483
            while (1) {
#line 4483
              tmp___97 = jit->ip;
#line 4483
              (jit->ip) ++;
#line 4483
              *tmp___97 = (unsigned char )(((2 << 6) | (((tinf->scrapreg & 0x7) & 0x07) << 3)) | 4);
#line 4483
              break;
            }
#line 4483
            while (1) {
#line 4483
              tmp___98 = jit->ip;
#line 4483
              (jit->ip) ++;
#line 4483
              *tmp___98 = (unsigned char )((4 << 3) | 4);
#line 4483
              break;
            }
#line 4483
            while (1) {
#line 4483
              imb___8.val = - ((int )sizeof(void *)) * 2;
#line 4483
              tmp___99 = jit->ip;
#line 4483
              (jit->ip) ++;
#line 4483
              *tmp___99 = imb___8.b[0];
#line 4483
              tmp___100 = jit->ip;
#line 4483
              (jit->ip) ++;
#line 4483
              *tmp___100 = imb___8.b[1];
#line 4483
              tmp___101 = jit->ip;
#line 4483
              (jit->ip) ++;
#line 4483
              *tmp___101 = imb___8.b[2];
#line 4483
              tmp___102 = jit->ip;
#line 4483
              (jit->ip) ++;
#line 4483
              *tmp___102 = imb___8.b[3];
#line 4483
              break;
            }
          }
#line 4483
          break;
#line 4483
          if (- ((int )sizeof(void *)) * 2 == 0) {
#line 4483
            while (1) {
#line 4483
              tmp___103 = jit->ip;
#line 4483
              (jit->ip) ++;
#line 4483
              *tmp___103 = (unsigned char )((((tinf->scrapreg & 0x7) & 0x07) << 3) | 4);
#line 4483
              break;
            }
#line 4483
            break;
          }
#line 4483
          if ((jit_value )(- ((int )sizeof(void *)) * 2) >= -128L) {
#line 4483
            if ((jit_value )(- ((int )sizeof(void *)) * 2) <= 127L) {
#line 4483
              while (1) {
#line 4483
                tmp___104 = jit->ip;
#line 4483
                (jit->ip) ++;
#line 4483
                *tmp___104 = (unsigned char )(((1 << 6) | (((tinf->scrapreg & 0x7) & 0x07) << 3)) | 4);
#line 4483
                break;
              }
#line 4483
              while (1) {
#line 4483
                *(jit->ip) = (unsigned char )(- ((int )sizeof(void *)) * 2 & 0xff);
#line 4483
                (jit->ip) ++;
#line 4483
                break;
              }
            } else {
#line 4483
              goto _L___6;
            }
          } else {
            _L___6: /* CIL Label */ 
#line 4483
            while (1) {
#line 4483
              tmp___105 = jit->ip;
#line 4483
              (jit->ip) ++;
#line 4483
              *tmp___105 = (unsigned char )(((2 << 6) | (((tinf->scrapreg & 0x7) & 0x07) << 3)) | 4);
#line 4483
              break;
            }
#line 4483
            while (1) {
#line 4483
              imb___9.val = - ((int )sizeof(void *)) * 2;
#line 4483
              tmp___106 = jit->ip;
#line 4483
              (jit->ip) ++;
#line 4483
              *tmp___106 = imb___9.b[0];
#line 4483
              tmp___107 = jit->ip;
#line 4483
              (jit->ip) ++;
#line 4483
              *tmp___107 = imb___9.b[1];
#line 4483
              tmp___108 = jit->ip;
#line 4483
              (jit->ip) ++;
#line 4483
              *tmp___108 = imb___9.b[2];
#line 4483
              tmp___109 = jit->ip;
#line 4483
              (jit->ip) ++;
#line 4483
              *tmp___109 = imb___9.b[3];
#line 4483
              break;
            }
          }
#line 4483
          break;
        }
#line 4483
        break;
      }
#line 4483
      break;
    }
  }
#line 4484
  return;
}
}
/* END FUNCTION-DEF emit_transfer_loop LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_exec_mem_seal LOC=UNKNOWN */
static void jit_exec_mem_seal(struct jit_exec_mem *mem ) 
{ 
  char *code ;

  {
#line 2053
  code = (char *)mem->data;
#line 2054
  __builtin___clear_cache((void *)code, code + mem->size);
#line 2055
  return;
}
}
/* END FUNCTION-DEF jit_exec_mem_seal LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF _OSSwapInt16 LOC=UNKNOWN */
__inline static __uint16_t _OSSwapInt16(__uint16_t _data ) 
{ 


  {
#line 50 "/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/libkern/i386/_OSByteOrder.h"
  return ((__uint16_t )(((int )_data << 8) | ((int )_data >> 8)));
}
}
/* END FUNCTION-DEF _OSSwapInt16 LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_correct_long_imms LOC=UNKNOWN */
static void jit_correct_long_imms(struct jit *jit ) 
{ 
  jit_op *op ;
  jit_op *tmp ;
  int imm_arg ;
  int i ;
  jit_value value ;
  jit_op *newop ;
  struct jit_op *tmp___0 ;
  int tmp___1 ;

  {
#line 6400 "<string>"
  tmp = jit_op_first(jit->ops);
#line 6400
  op = tmp;
#line 6400
  while ((unsigned long )op != (unsigned long )((void *)0)) {
#line 6401
    if (! ((int )op->code & 0x02)) {
#line 6401
      goto __Cont;
    }
#line 6402
    if (op->fp) {
#line 6402
      goto __Cont;
    }
#line 6403
    if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 624U) {
#line 6403
      goto __Cont;
    }
#line 6404
    if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 232U) {
#line 6404
      goto __Cont;
    }
#line 6405
    if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 216U) {
#line 6405
      goto __Cont;
    }
#line 6406
    if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 120U) {
#line 6406
      goto __Cont;
    }
#line 6407
    if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 616U) {
#line 6407
      goto __Cont;
    }
#line 6408
    if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 352U) {
#line 6408
      goto __Cont;
    }
#line 6409
    if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 192U) {
#line 6409
      goto __Cont;
    }
#line 6410
    if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 856U) {
#line 6410
      goto __Cont;
    }
#line 6411
    if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 704U) {
#line 6411
      goto __Cont;
    }
#line 6412
    if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 832U) {
#line 6412
      goto __Cont;
    }
#line 6413
    if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 280U) {
#line 6413
      goto __Cont;
    }
#line 6414
    if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 880U) {
#line 6414
      goto __Cont;
    }
#line 6415
    if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 264U) {
#line 6415
      goto __Cont;
    }
#line 6416
    if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 688U) {
#line 6417
      goto __Cont;
    }
#line 6420
    i = 1;
#line 6420
    while (i < 4) {
#line 6421
      if ((((int )op->spec >> (i - 1) * 2) & 0x03) == 0x02) {
#line 6421
        imm_arg = i - 1;
      }
#line 6420
      i ++;
    }
#line 6422
    value = op->arg[imm_arg];
#line 6423
    tmp___1 = jit_imm_overflow(jit, op, value);
#line 6423
    if (tmp___1) {
#line 6424
      tmp___0 = jit_op_new((unsigned short)122, (unsigned char )((0x02 << 2) | 0x03),
                           (jit_value )(1 << 1), value, (jit_value )0, (unsigned char )((int )sizeof(void *)));
#line 6424
      newop = tmp___0;
#line 6425
      jit_op_prepend(op, newop);
#line 6426
      op->code = (unsigned short )((int )op->code & -4);
#line 6427
      op->code = (unsigned short )((int )op->code | 0x01);
#line 6428
      op->spec = (unsigned char )((int )op->spec & ~ (0x3 << 2 * imm_arg));
#line 6429
      op->spec = (unsigned char )((int )op->spec | (0x01 << 2 * imm_arg));
#line 6430
      op->arg[imm_arg] = (jit_value )(1 << 1);
    }
    __Cont: /* CIL Label */ 
#line 6400
    op = op->next;
  }
#line 6433
  return;
}
}
/* END FUNCTION-DEF jit_correct_long_imms LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF print_str LOC=UNKNOWN */
__inline static void print_str(struct output_buf *buf , char *str ) 
{ 
  int i ;
  char xbuf[16] ;
  unsigned long long tmp ;
  unsigned long long tmp___0 ;
  unsigned long long tmp___1 ;
  unsigned long long tmp___2 ;
  size_t tmp___3 ;

  {
#line 5227
  ob_append(buf, " \"");
#line 5228
  i = 0;
#line 5228
  while (1) {
#line 5228
    tmp___3 = strlen((char const   *)str);
#line 5228
    if (! ((size_t )i < tmp___3)) {
#line 5228
      break;
    }
#line 5229
    if ((int )*(str + i) >= 32) {
#line 5230
      ob_printf(buf, (char const   *)"%c", (int )*(str + i));
    } else {
#line 5233
      switch ((int )*(str + i)) {
      case 9: 
#line 5234
      tmp = __builtin_object_size((void *)(xbuf), 1);
#line 5234
      __builtin___strcpy_chk(xbuf, (char const   *)"\\t", tmp);
#line 5234
      break;
      case 10: 
#line 5235
      tmp___0 = __builtin_object_size((void *)(xbuf), 1);
#line 5235
      __builtin___strcpy_chk(xbuf, (char const   *)"\\n", tmp___0);
#line 5235
      break;
      case 13: 
#line 5236
      tmp___1 = __builtin_object_size((void *)(xbuf), 1);
#line 5236
      __builtin___strcpy_chk(xbuf, (char const   *)"\\r", tmp___1);
#line 5236
      break;
      default: 
#line 5237
      tmp___2 = __builtin_object_size((void *)(xbuf), 1);
#line 5237
      __builtin___sprintf_chk(xbuf, 0, tmp___2, (char const   *)"\\x%02x", (int )*(str + i));
      }
#line 5239
      ob_append(buf, xbuf);
    }
#line 5228
    i ++;
  }
#line 5242
  ob_append(buf, "\"");
#line 5243
  return;
}
}
/* END FUNCTION-DEF print_str LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_exec_mem_new LOC=UNKNOWN */
static struct jit_exec_mem *jit_exec_mem_new(size_t size ) 
{ 
  struct jit_exec_mem *mem ;
  void *tmp ;

  {
#line 2036
  tmp = malloc((size_t )sizeof(struct jit_exec_mem ));
#line 2036
  mem = (struct jit_exec_mem *)tmp;
#line 2037
  mem->size = size;
#line 2038
  mem->data = mmap((void *)0, size, 7, 4098, -1, (off_t )0);
#line 2039
  if ((unsigned long )mem->data == (unsigned long )((void *)-1)) {
#line 2039
    perror((char const   *)"mmap");
  }
#line 2040
  return (mem);
}
}
/* END FUNCTION-DEF jit_exec_mem_new LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_op_is_cflow LOC=UNKNOWN */
__inline static int jit_op_is_cflow(jit_op *op ) 
{ 
  int tmp ;

  {
#line 5183
  if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 232U) {
#line 5183
    goto _L;
  } else
#line 5183
  if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 624U) {
    _L: /* CIL Label */ 
#line 5183
    if ((int )op->code & 0x02) {
#line 5183
      return (1);
    }
  }
#line 5184
  tmp = jit_op_is_cond_branch(op);
#line 5184
  if (tmp) {
#line 5184
    return (1);
  }
#line 5185
  return (0);
}
}
/* END FUNCTION-DEF jit_op_is_cflow LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF emit_pop_reg LOC=UNKNOWN */
static int emit_pop_reg(struct jit *jit , jit_hw_reg *r , int stack_offset ) 
{ 
  unsigned char *tmp ;
  unsigned char _amd64_rex_bits ;
  int tmp___0 ;
  int tmp___1 ;
  unsigned char *tmp___2 ;
  unsigned char *tmp___3 ;
  unsigned char *tmp___4 ;
  long tmp___5 ;
  unsigned char *tmp___6 ;
  x86_imm_buf imb ;
  unsigned char *tmp___7 ;
  unsigned char *tmp___8 ;
  unsigned char *tmp___9 ;
  unsigned char *tmp___10 ;
  unsigned char *tmp___11 ;
  unsigned char *tmp___12 ;
  unsigned char *tmp___13 ;
  unsigned char *tmp___14 ;
  unsigned char *tmp___15 ;
  unsigned char *tmp___16 ;
  x86_imm_buf imb___0 ;
  unsigned char *tmp___17 ;
  unsigned char *tmp___18 ;
  unsigned char *tmp___19 ;
  unsigned char *tmp___20 ;
  unsigned char *tmp___21 ;
  unsigned char *tmp___22 ;
  unsigned char *tmp___23 ;
  x86_imm_buf imb___1 ;
  unsigned char *tmp___24 ;
  unsigned char *tmp___25 ;
  unsigned char *tmp___26 ;
  unsigned char *tmp___27 ;
  unsigned char *tmp___28 ;
  unsigned char _amd64_rex_bits___0 ;
  int tmp___29 ;
  unsigned char *tmp___30 ;
  unsigned char *tmp___31 ;
  unsigned char *tmp___32 ;
  unsigned char *tmp___33 ;
  x86_imm_buf imb___2 ;
  unsigned char *tmp___34 ;
  unsigned char *tmp___35 ;
  unsigned char *tmp___36 ;
  unsigned char *tmp___37 ;
  unsigned char *tmp___38 ;
  unsigned char *tmp___39 ;
  unsigned char *tmp___40 ;
  unsigned char *tmp___41 ;
  unsigned char *tmp___42 ;
  unsigned char *tmp___43 ;
  x86_imm_buf imb___3 ;
  unsigned char *tmp___44 ;
  unsigned char *tmp___45 ;
  unsigned char *tmp___46 ;
  unsigned char *tmp___47 ;
  unsigned char *tmp___48 ;
  unsigned char *tmp___49 ;
  unsigned char *tmp___50 ;
  x86_imm_buf imb___4 ;
  unsigned char *tmp___51 ;
  unsigned char *tmp___52 ;
  unsigned char *tmp___53 ;
  unsigned char *tmp___54 ;

  {
#line 3898
  if (! r->fp) {
#line 3899
    while (1) {
#line 3899
      if ((int )sizeof(void *) == 2) {
#line 3899
        tmp = jit->ip;
#line 3899
        (jit->ip) ++;
#line 3899
        *tmp = (unsigned char)102;
      }
#line 3899
      while (1) {
#line 3899
        if ((int )sizeof(void *) > 4) {
#line 3899
          tmp___0 = 8;
        } else {
#line 3899
          tmp___0 = 0;
        }
#line 3899
        if (r->id > 7) {
#line 3899
          tmp___1 = 4;
        } else {
#line 3899
          tmp___1 = 0;
        }
#line 3899
        _amd64_rex_bits = (unsigned char )(tmp___0 | tmp___1);
#line 3899
        if ((int )_amd64_rex_bits != 0) {
#line 3899
          tmp___2 = jit->ip;
#line 3899
          (jit->ip) ++;
#line 3899
          *tmp___2 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
        } else
#line 3899
        if ((int )sizeof(void *) == 1) {
#line 3899
          tmp___2 = jit->ip;
#line 3899
          (jit->ip) ++;
#line 3899
          *tmp___2 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
        }
#line 3899
        break;
      }
#line 3899
      switch ((int )sizeof(void *)) {
      case 1: 
#line 3899
      tmp___3 = jit->ip;
#line 3899
      (jit->ip) ++;
#line 3899
      *tmp___3 = (unsigned char)138;
#line 3899
      break;
      case 8: 
      case 4: 
      case 2: 
#line 3899
      tmp___4 = jit->ip;
#line 3899
      (jit->ip) ++;
#line 3899
      *tmp___4 = (unsigned char)139;
#line 3899
      break;
      default: 
#line 3899
      tmp___5 = __builtin_expect(1L, 0L);
#line 3899
      if (tmp___5) {
#line 3899
        __assert_rtn((char const   *)"emit_pop_reg", (char const   *)"tmp/src.c",
                     2795, (char const   *)"0");
      }
      }
#line 3899
      while (1) {
#line 3899
        while (1) {
#line 3899
          if (stack_offset == 0) {
#line 3899
            while (1) {
#line 3899
              tmp___11 = jit->ip;
#line 3899
              (jit->ip) ++;
#line 3899
              *tmp___11 = (unsigned char )((((r->id & 0x7) & 0x07) << 3) | 4);
#line 3899
              break;
            }
#line 3899
            while (1) {
#line 3899
              tmp___12 = jit->ip;
#line 3899
              (jit->ip) ++;
#line 3899
              *tmp___12 = (unsigned char )((4 << 3) | 4);
#line 3899
              break;
            }
          } else
#line 3899
          if ((jit_value )stack_offset >= -128L) {
#line 3899
            if ((jit_value )stack_offset <= 127L) {
#line 3899
              while (1) {
#line 3899
                tmp___13 = jit->ip;
#line 3899
                (jit->ip) ++;
#line 3899
                *tmp___13 = (unsigned char )(((1 << 6) | (((r->id & 0x7) & 0x07) << 3)) | 4);
#line 3899
                break;
              }
#line 3899
              while (1) {
#line 3899
                tmp___14 = jit->ip;
#line 3899
                (jit->ip) ++;
#line 3899
                *tmp___14 = (unsigned char )((4 << 3) | 4);
#line 3899
                break;
              }
#line 3899
              while (1) {
#line 3899
                *(jit->ip) = (unsigned char )(stack_offset & 0xff);
#line 3899
                (jit->ip) ++;
#line 3899
                break;
              }
            } else {
#line 3899
              goto _L;
            }
          } else {
            _L: /* CIL Label */ 
#line 3899
            while (1) {
#line 3899
              tmp___15 = jit->ip;
#line 3899
              (jit->ip) ++;
#line 3899
              *tmp___15 = (unsigned char )(((2 << 6) | (((r->id & 0x7) & 0x07) << 3)) | 4);
#line 3899
              break;
            }
#line 3899
            while (1) {
#line 3899
              tmp___16 = jit->ip;
#line 3899
              (jit->ip) ++;
#line 3899
              *tmp___16 = (unsigned char )((4 << 3) | 4);
#line 3899
              break;
            }
#line 3899
            while (1) {
#line 3899
              imb___0.val = stack_offset;
#line 3899
              tmp___17 = jit->ip;
#line 3899
              (jit->ip) ++;
#line 3899
              *tmp___17 = imb___0.b[0];
#line 3899
              tmp___18 = jit->ip;
#line 3899
              (jit->ip) ++;
#line 3899
              *tmp___18 = imb___0.b[1];
#line 3899
              tmp___19 = jit->ip;
#line 3899
              (jit->ip) ++;
#line 3899
              *tmp___19 = imb___0.b[2];
#line 3899
              tmp___20 = jit->ip;
#line 3899
              (jit->ip) ++;
#line 3899
              *tmp___20 = imb___0.b[3];
#line 3899
              break;
            }
          }
#line 3899
          break;
#line 3899
          if (stack_offset == 0) {
#line 3899
            while (1) {
#line 3899
              tmp___21 = jit->ip;
#line 3899
              (jit->ip) ++;
#line 3899
              *tmp___21 = (unsigned char )((((r->id & 0x7) & 0x07) << 3) | 4);
#line 3899
              break;
            }
#line 3899
            break;
          }
#line 3899
          if ((jit_value )stack_offset >= -128L) {
#line 3899
            if ((jit_value )stack_offset <= 127L) {
#line 3899
              while (1) {
#line 3899
                tmp___22 = jit->ip;
#line 3899
                (jit->ip) ++;
#line 3899
                *tmp___22 = (unsigned char )(((1 << 6) | (((r->id & 0x7) & 0x07) << 3)) | 4);
#line 3899
                break;
              }
#line 3899
              while (1) {
#line 3899
                *(jit->ip) = (unsigned char )(stack_offset & 0xff);
#line 3899
                (jit->ip) ++;
#line 3899
                break;
              }
            } else {
#line 3899
              goto _L___0;
            }
          } else {
            _L___0: /* CIL Label */ 
#line 3899
            while (1) {
#line 3899
              tmp___23 = jit->ip;
#line 3899
              (jit->ip) ++;
#line 3899
              *tmp___23 = (unsigned char )(((2 << 6) | (((r->id & 0x7) & 0x07) << 3)) | 4);
#line 3899
              break;
            }
#line 3899
            while (1) {
#line 3899
              imb___1.val = stack_offset;
#line 3899
              tmp___24 = jit->ip;
#line 3899
              (jit->ip) ++;
#line 3899
              *tmp___24 = imb___1.b[0];
#line 3899
              tmp___25 = jit->ip;
#line 3899
              (jit->ip) ++;
#line 3899
              *tmp___25 = imb___1.b[1];
#line 3899
              tmp___26 = jit->ip;
#line 3899
              (jit->ip) ++;
#line 3899
              *tmp___26 = imb___1.b[2];
#line 3899
              tmp___27 = jit->ip;
#line 3899
              (jit->ip) ++;
#line 3899
              *tmp___27 = imb___1.b[3];
#line 3899
              break;
            }
          }
#line 3899
          break;
        }
#line 3899
        break;
      }
#line 3899
      break;
    }
#line 3900
    return ((int )sizeof(void *));
  } else {
#line 3902
    while (1) {
#line 3902
      tmp___28 = jit->ip;
#line 3902
      (jit->ip) ++;
#line 3902
      *tmp___28 = (unsigned char)102;
#line 3902
      while (1) {
#line 3902
        if (r->id > 7) {
#line 3902
          tmp___29 = 4;
        } else {
#line 3902
          tmp___29 = 0;
        }
#line 3902
        _amd64_rex_bits___0 = (unsigned char )tmp___29;
#line 3902
        if ((int )_amd64_rex_bits___0 != 0) {
#line 3902
          tmp___30 = jit->ip;
#line 3902
          (jit->ip) ++;
#line 3902
          *tmp___30 = (unsigned char )(0x40 | (int )_amd64_rex_bits___0);
        }
#line 3902
        break;
      }
#line 3902
      tmp___31 = jit->ip;
#line 3902
      (jit->ip) ++;
#line 3902
      *tmp___31 = (unsigned char)15;
#line 3902
      tmp___32 = jit->ip;
#line 3902
      (jit->ip) ++;
#line 3902
      *tmp___32 = (unsigned char)18;
#line 3902
      while (1) {
#line 3902
        while (1) {
#line 3902
          if (stack_offset == 0) {
#line 3902
            while (1) {
#line 3902
              tmp___38 = jit->ip;
#line 3902
              (jit->ip) ++;
#line 3902
              *tmp___38 = (unsigned char )((((r->id & 0x7) & 0x07) << 3) | 4);
#line 3902
              break;
            }
#line 3902
            while (1) {
#line 3902
              tmp___39 = jit->ip;
#line 3902
              (jit->ip) ++;
#line 3902
              *tmp___39 = (unsigned char )((4 << 3) | 4);
#line 3902
              break;
            }
          } else
#line 3902
          if ((jit_value )stack_offset >= -128L) {
#line 3902
            if ((jit_value )stack_offset <= 127L) {
#line 3902
              while (1) {
#line 3902
                tmp___40 = jit->ip;
#line 3902
                (jit->ip) ++;
#line 3902
                *tmp___40 = (unsigned char )(((1 << 6) | (((r->id & 0x7) & 0x07) << 3)) | 4);
#line 3902
                break;
              }
#line 3902
              while (1) {
#line 3902
                tmp___41 = jit->ip;
#line 3902
                (jit->ip) ++;
#line 3902
                *tmp___41 = (unsigned char )((4 << 3) | 4);
#line 3902
                break;
              }
#line 3902
              while (1) {
#line 3902
                *(jit->ip) = (unsigned char )(stack_offset & 0xff);
#line 3902
                (jit->ip) ++;
#line 3902
                break;
              }
            } else {
#line 3902
              goto _L___1;
            }
          } else {
            _L___1: /* CIL Label */ 
#line 3902
            while (1) {
#line 3902
              tmp___42 = jit->ip;
#line 3902
              (jit->ip) ++;
#line 3902
              *tmp___42 = (unsigned char )(((2 << 6) | (((r->id & 0x7) & 0x07) << 3)) | 4);
#line 3902
              break;
            }
#line 3902
            while (1) {
#line 3902
              tmp___43 = jit->ip;
#line 3902
              (jit->ip) ++;
#line 3902
              *tmp___43 = (unsigned char )((4 << 3) | 4);
#line 3902
              break;
            }
#line 3902
            while (1) {
#line 3902
              imb___3.val = stack_offset;
#line 3902
              tmp___44 = jit->ip;
#line 3902
              (jit->ip) ++;
#line 3902
              *tmp___44 = imb___3.b[0];
#line 3902
              tmp___45 = jit->ip;
#line 3902
              (jit->ip) ++;
#line 3902
              *tmp___45 = imb___3.b[1];
#line 3902
              tmp___46 = jit->ip;
#line 3902
              (jit->ip) ++;
#line 3902
              *tmp___46 = imb___3.b[2];
#line 3902
              tmp___47 = jit->ip;
#line 3902
              (jit->ip) ++;
#line 3902
              *tmp___47 = imb___3.b[3];
#line 3902
              break;
            }
          }
#line 3902
          break;
#line 3902
          if (stack_offset == 0) {
#line 3902
            while (1) {
#line 3902
              tmp___48 = jit->ip;
#line 3902
              (jit->ip) ++;
#line 3902
              *tmp___48 = (unsigned char )((((r->id & 0x7) & 0x07) << 3) | 4);
#line 3902
              break;
            }
#line 3902
            break;
          }
#line 3902
          if ((jit_value )stack_offset >= -128L) {
#line 3902
            if ((jit_value )stack_offset <= 127L) {
#line 3902
              while (1) {
#line 3902
                tmp___49 = jit->ip;
#line 3902
                (jit->ip) ++;
#line 3902
                *tmp___49 = (unsigned char )(((1 << 6) | (((r->id & 0x7) & 0x07) << 3)) | 4);
#line 3902
                break;
              }
#line 3902
              while (1) {
#line 3902
                *(jit->ip) = (unsigned char )(stack_offset & 0xff);
#line 3902
                (jit->ip) ++;
#line 3902
                break;
              }
            } else {
#line 3902
              goto _L___2;
            }
          } else {
            _L___2: /* CIL Label */ 
#line 3902
            while (1) {
#line 3902
              tmp___50 = jit->ip;
#line 3902
              (jit->ip) ++;
#line 3902
              *tmp___50 = (unsigned char )(((2 << 6) | (((r->id & 0x7) & 0x07) << 3)) | 4);
#line 3902
              break;
            }
#line 3902
            while (1) {
#line 3902
              imb___4.val = stack_offset;
#line 3902
              tmp___51 = jit->ip;
#line 3902
              (jit->ip) ++;
#line 3902
              *tmp___51 = imb___4.b[0];
#line 3902
              tmp___52 = jit->ip;
#line 3902
              (jit->ip) ++;
#line 3902
              *tmp___52 = imb___4.b[1];
#line 3902
              tmp___53 = jit->ip;
#line 3902
              (jit->ip) ++;
#line 3902
              *tmp___53 = imb___4.b[2];
#line 3902
              tmp___54 = jit->ip;
#line 3902
              (jit->ip) ++;
#line 3902
              *tmp___54 = imb___4.b[3];
#line 3902
              break;
            }
          }
#line 3902
          break;
        }
#line 3902
        break;
      }
#line 3902
      break;
    }
#line 3903
    return ((int )sizeof(double ));
  }
}
}
/* END FUNCTION-DEF emit_pop_reg LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF emit_ureg LOC=UNKNOWN */
static void emit_ureg(struct jit *jit , jit_value vreg , int hreg_id ) 
{ 
  int stack_pos ;
  int tmp ;
  unsigned char *tmp___0 ;
  unsigned char _amd64_rex_bits ;
  int tmp___1 ;
  unsigned char *tmp___2 ;
  unsigned char *tmp___3 ;
  unsigned char *tmp___4 ;
  unsigned char *tmp___5 ;
  x86_imm_buf imb ;
  unsigned char *tmp___6 ;
  unsigned char *tmp___7 ;
  unsigned char *tmp___8 ;
  unsigned char *tmp___9 ;
  unsigned char *tmp___10 ;
  unsigned char *tmp___11 ;
  unsigned char *tmp___12 ;
  unsigned char *tmp___13 ;
  unsigned char *tmp___14 ;
  unsigned char *tmp___15 ;
  x86_imm_buf imb___0 ;
  unsigned char *tmp___16 ;
  unsigned char *tmp___17 ;
  unsigned char *tmp___18 ;
  unsigned char *tmp___19 ;
  unsigned char *tmp___20 ;
  unsigned char *tmp___21 ;
  unsigned char *tmp___22 ;
  x86_imm_buf imb___1 ;
  unsigned char *tmp___23 ;
  unsigned char *tmp___24 ;
  unsigned char *tmp___25 ;
  unsigned char *tmp___26 ;
  unsigned char *tmp___27 ;
  unsigned char _amd64_rex_bits___0 ;
  int tmp___28 ;
  int tmp___29 ;
  unsigned char *tmp___30 ;
  unsigned char *tmp___31 ;
  unsigned char *tmp___32 ;
  long tmp___33 ;
  unsigned char *tmp___34 ;
  unsigned char *tmp___35 ;
  unsigned char *tmp___36 ;
  unsigned char *tmp___37 ;
  unsigned char *tmp___38 ;
  unsigned char *tmp___39 ;
  x86_imm_buf imb___2 ;
  unsigned char *tmp___40 ;
  unsigned char *tmp___41 ;
  unsigned char *tmp___42 ;
  unsigned char *tmp___43 ;
  unsigned char *tmp___44 ;
  unsigned char *tmp___45 ;
  unsigned char *tmp___46 ;
  x86_imm_buf imb___3 ;
  unsigned char *tmp___47 ;
  unsigned char *tmp___48 ;
  unsigned char *tmp___49 ;
  unsigned char *tmp___50 ;

  {
#line 4073
  tmp = stack_reg_pos(jit, (int )vreg);
#line 4073
  stack_pos = tmp;
#line 4074
  if ((vreg & 1L) == 1L) {
#line 4074
    while (1) {
#line 4074
      tmp___0 = jit->ip;
#line 4074
      (jit->ip) ++;
#line 4074
      *tmp___0 = (unsigned char)102;
#line 4074
      while (1) {
#line 4074
        if (hreg_id > 7) {
#line 4074
          tmp___1 = 4;
        } else {
#line 4074
          tmp___1 = 0;
        }
#line 4074
        _amd64_rex_bits = (unsigned char )tmp___1;
#line 4074
        if ((int )_amd64_rex_bits != 0) {
#line 4074
          tmp___2 = jit->ip;
#line 4074
          (jit->ip) ++;
#line 4074
          *tmp___2 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
        }
#line 4074
        break;
      }
#line 4074
      tmp___3 = jit->ip;
#line 4074
      (jit->ip) ++;
#line 4074
      *tmp___3 = (unsigned char)15;
#line 4074
      tmp___4 = jit->ip;
#line 4074
      (jit->ip) ++;
#line 4074
      *tmp___4 = (unsigned char)19;
#line 4074
      while (1) {
#line 4074
        while (1) {
#line 4074
          if (0) {
#line 4074
            if (stack_pos == 0) {
#line 4074
              while (1) {
#line 4074
                tmp___10 = jit->ip;
#line 4074
                (jit->ip) ++;
#line 4074
                *tmp___10 = (unsigned char )((((hreg_id & 0x7) & 0x07) << 3) | 4);
#line 4074
                break;
              }
#line 4074
              while (1) {
#line 4074
                tmp___11 = jit->ip;
#line 4074
                (jit->ip) ++;
#line 4074
                *tmp___11 = (unsigned char )((4 << 3) | 4);
#line 4074
                break;
              }
            } else
#line 4074
            if ((jit_value )stack_pos >= -128L) {
#line 4074
              if ((jit_value )stack_pos <= 127L) {
#line 4074
                while (1) {
#line 4074
                  tmp___12 = jit->ip;
#line 4074
                  (jit->ip) ++;
#line 4074
                  *tmp___12 = (unsigned char )(((1 << 6) | (((hreg_id & 0x7) & 0x07) << 3)) | 4);
#line 4074
                  break;
                }
#line 4074
                while (1) {
#line 4074
                  tmp___13 = jit->ip;
#line 4074
                  (jit->ip) ++;
#line 4074
                  *tmp___13 = (unsigned char )((4 << 3) | 4);
#line 4074
                  break;
                }
#line 4074
                while (1) {
#line 4074
                  *(jit->ip) = (unsigned char )(stack_pos & 0xff);
#line 4074
                  (jit->ip) ++;
#line 4074
                  break;
                }
              } else {
#line 4074
                goto _L;
              }
            } else {
              _L: /* CIL Label */ 
#line 4074
              while (1) {
#line 4074
                tmp___14 = jit->ip;
#line 4074
                (jit->ip) ++;
#line 4074
                *tmp___14 = (unsigned char )(((2 << 6) | (((hreg_id & 0x7) & 0x07) << 3)) | 4);
#line 4074
                break;
              }
#line 4074
              while (1) {
#line 4074
                tmp___15 = jit->ip;
#line 4074
                (jit->ip) ++;
#line 4074
                *tmp___15 = (unsigned char )((4 << 3) | 4);
#line 4074
                break;
              }
#line 4074
              while (1) {
#line 4074
                imb___0.val = stack_pos;
#line 4074
                tmp___16 = jit->ip;
#line 4074
                (jit->ip) ++;
#line 4074
                *tmp___16 = imb___0.b[0];
#line 4074
                tmp___17 = jit->ip;
#line 4074
                (jit->ip) ++;
#line 4074
                *tmp___17 = imb___0.b[1];
#line 4074
                tmp___18 = jit->ip;
#line 4074
                (jit->ip) ++;
#line 4074
                *tmp___18 = imb___0.b[2];
#line 4074
                tmp___19 = jit->ip;
#line 4074
                (jit->ip) ++;
#line 4074
                *tmp___19 = imb___0.b[3];
#line 4074
                break;
              }
            }
#line 4074
            break;
          }
#line 4074
          if (stack_pos == 0) {

          }
#line 4074
          if ((jit_value )stack_pos >= -128L) {
#line 4074
            if ((jit_value )stack_pos <= 127L) {
#line 4074
              while (1) {
#line 4074
                tmp___21 = jit->ip;
#line 4074
                (jit->ip) ++;
#line 4074
                *tmp___21 = (unsigned char )(((1 << 6) | (((hreg_id & 0x7) & 0x07) << 3)) | 5);
#line 4074
                break;
              }
#line 4074
              while (1) {
#line 4074
                *(jit->ip) = (unsigned char )(stack_pos & 0xff);
#line 4074
                (jit->ip) ++;
#line 4074
                break;
              }
            } else {
#line 4074
              goto _L___0;
            }
          } else {
            _L___0: /* CIL Label */ 
#line 4074
            while (1) {
#line 4074
              tmp___22 = jit->ip;
#line 4074
              (jit->ip) ++;
#line 4074
              *tmp___22 = (unsigned char )(((2 << 6) | (((hreg_id & 0x7) & 0x07) << 3)) | 5);
#line 4074
              break;
            }
#line 4074
            while (1) {
#line 4074
              imb___1.val = stack_pos;
#line 4074
              tmp___23 = jit->ip;
#line 4074
              (jit->ip) ++;
#line 4074
              *tmp___23 = imb___1.b[0];
#line 4074
              tmp___24 = jit->ip;
#line 4074
              (jit->ip) ++;
#line 4074
              *tmp___24 = imb___1.b[1];
#line 4074
              tmp___25 = jit->ip;
#line 4074
              (jit->ip) ++;
#line 4074
              *tmp___25 = imb___1.b[2];
#line 4074
              tmp___26 = jit->ip;
#line 4074
              (jit->ip) ++;
#line 4074
              *tmp___26 = imb___1.b[3];
#line 4074
              break;
            }
          }
#line 4074
          break;
        }
#line 4074
        break;
      }
#line 4074
      break;
    }
  } else {
#line 4075
    while (1) {
#line 4075
      if ((int )sizeof(void *) == 2) {
#line 4075
        tmp___27 = jit->ip;
#line 4075
        (jit->ip) ++;
#line 4075
        *tmp___27 = (unsigned char)102;
      }
#line 4075
      while (1) {
#line 4075
        if ((int )sizeof(void *) > 4) {
#line 4075
          tmp___28 = 8;
        } else {
#line 4075
          tmp___28 = 0;
        }
#line 4075
        if (hreg_id > 7) {
#line 4075
          tmp___29 = 4;
        } else {
#line 4075
          tmp___29 = 0;
        }
#line 4075
        _amd64_rex_bits___0 = (unsigned char )(tmp___28 | tmp___29);
#line 4075
        if ((int )_amd64_rex_bits___0 != 0) {
#line 4075
          tmp___30 = jit->ip;
#line 4075
          (jit->ip) ++;
#line 4075
          *tmp___30 = (unsigned char )(0x40 | (int )_amd64_rex_bits___0);
        } else
#line 4075
        if ((int )sizeof(void *) == 1) {
#line 4075
          tmp___30 = jit->ip;
#line 4075
          (jit->ip) ++;
#line 4075
          *tmp___30 = (unsigned char )(0x40 | (int )_amd64_rex_bits___0);
        }
#line 4075
        break;
      }
#line 4075
      switch ((int )sizeof(void *)) {
      case 1: 
#line 4075
      tmp___31 = jit->ip;
#line 4075
      (jit->ip) ++;
#line 4075
      *tmp___31 = (unsigned char)136;
#line 4075
      break;
      case 8: 
      case 4: 
      case 2: 
#line 4075
      tmp___32 = jit->ip;
#line 4075
      (jit->ip) ++;
#line 4075
      *tmp___32 = (unsigned char)137;
#line 4075
      break;
      default: 
#line 4075
      tmp___33 = __builtin_expect(1L, 0L);
#line 4075
      if (tmp___33) {
#line 4075
        __assert_rtn((char const   *)"emit_ureg", (char const   *)"tmp/src.c", 3019,
                     (char const   *)"0");
      }
      }
#line 4075
      while (1) {
#line 4075
        if (0) {
#line 4075
          if (stack_pos == 0) {
#line 4075
            while (1) {
#line 4075
              tmp___34 = jit->ip;
#line 4075
              (jit->ip) ++;
#line 4075
              *tmp___34 = (unsigned char )((((hreg_id & 0x7) & 0x07) << 3) | 4);
#line 4075
              break;
            }
#line 4075
            while (1) {
#line 4075
              tmp___35 = jit->ip;
#line 4075
              (jit->ip) ++;
#line 4075
              *tmp___35 = (unsigned char )((4 << 3) | 4);
#line 4075
              break;
            }
          } else
#line 4075
          if ((jit_value )stack_pos >= -128L) {
#line 4075
            if ((jit_value )stack_pos <= 127L) {
#line 4075
              while (1) {
#line 4075
                tmp___36 = jit->ip;
#line 4075
                (jit->ip) ++;
#line 4075
                *tmp___36 = (unsigned char )(((1 << 6) | (((hreg_id & 0x7) & 0x07) << 3)) | 4);
#line 4075
                break;
              }
#line 4075
              while (1) {
#line 4075
                tmp___37 = jit->ip;
#line 4075
                (jit->ip) ++;
#line 4075
                *tmp___37 = (unsigned char )((4 << 3) | 4);
#line 4075
                break;
              }
#line 4075
              while (1) {
#line 4075
                *(jit->ip) = (unsigned char )(stack_pos & 0xff);
#line 4075
                (jit->ip) ++;
#line 4075
                break;
              }
            } else {
#line 4075
              goto _L___1;
            }
          } else {
            _L___1: /* CIL Label */ 
#line 4075
            while (1) {
#line 4075
              tmp___38 = jit->ip;
#line 4075
              (jit->ip) ++;
#line 4075
              *tmp___38 = (unsigned char )(((2 << 6) | (((hreg_id & 0x7) & 0x07) << 3)) | 4);
#line 4075
              break;
            }
#line 4075
            while (1) {
#line 4075
              tmp___39 = jit->ip;
#line 4075
              (jit->ip) ++;
#line 4075
              *tmp___39 = (unsigned char )((4 << 3) | 4);
#line 4075
              break;
            }
#line 4075
            while (1) {
#line 4075
              imb___2.val = stack_pos;
#line 4075
              tmp___40 = jit->ip;
#line 4075
              (jit->ip) ++;
#line 4075
              *tmp___40 = imb___2.b[0];
#line 4075
              tmp___41 = jit->ip;
#line 4075
              (jit->ip) ++;
#line 4075
              *tmp___41 = imb___2.b[1];
#line 4075
              tmp___42 = jit->ip;
#line 4075
              (jit->ip) ++;
#line 4075
              *tmp___42 = imb___2.b[2];
#line 4075
              tmp___43 = jit->ip;
#line 4075
              (jit->ip) ++;
#line 4075
              *tmp___43 = imb___2.b[3];
#line 4075
              break;
            }
          }
#line 4075
          break;
        }
#line 4075
        if (stack_pos == 0) {

        }
#line 4075
        if ((jit_value )stack_pos >= -128L) {
#line 4075
          if ((jit_value )stack_pos <= 127L) {
#line 4075
            while (1) {
#line 4075
              tmp___45 = jit->ip;
#line 4075
              (jit->ip) ++;
#line 4075
              *tmp___45 = (unsigned char )(((1 << 6) | (((hreg_id & 0x7) & 0x07) << 3)) | 5);
#line 4075
              break;
            }
#line 4075
            while (1) {
#line 4075
              *(jit->ip) = (unsigned char )(stack_pos & 0xff);
#line 4075
              (jit->ip) ++;
#line 4075
              break;
            }
          } else {
#line 4075
            goto _L___2;
          }
        } else {
          _L___2: /* CIL Label */ 
#line 4075
          while (1) {
#line 4075
            tmp___46 = jit->ip;
#line 4075
            (jit->ip) ++;
#line 4075
            *tmp___46 = (unsigned char )(((2 << 6) | (((hreg_id & 0x7) & 0x07) << 3)) | 5);
#line 4075
            break;
          }
#line 4075
          while (1) {
#line 4075
            imb___3.val = stack_pos;
#line 4075
            tmp___47 = jit->ip;
#line 4075
            (jit->ip) ++;
#line 4075
            *tmp___47 = imb___3.b[0];
#line 4075
            tmp___48 = jit->ip;
#line 4075
            (jit->ip) ++;
#line 4075
            *tmp___48 = imb___3.b[1];
#line 4075
            tmp___49 = jit->ip;
#line 4075
            (jit->ip) ++;
#line 4075
            *tmp___49 = imb___3.b[2];
#line 4075
            tmp___50 = jit->ip;
#line 4075
            (jit->ip) ++;
#line 4075
            *tmp___50 = imb___3.b[3];
#line 4075
            break;
          }
        }
#line 4075
        break;
      }
#line 4075
      break;
    }
  }
#line 4076
  return;
}
}
/* END FUNCTION-DEF emit_ureg LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF emit_arguments LOC=UNKNOWN */
__inline static int emit_arguments(struct jit *jit ) 
{ 
  int stack_correction ;
  struct jit_out_arg *args ;
  int gp_pushed ;
  int tmp ;
  int fp_pushed ;
  int tmp___0 ;
  unsigned char _amd64_rex_bits ;
  unsigned char *tmp___1 ;
  unsigned char *tmp___2 ;
  unsigned char *tmp___3 ;
  unsigned char _amd64_rex_bits___0 ;
  unsigned char *tmp___4 ;
  unsigned char *tmp___5 ;
  x86_imm_buf imb ;
  unsigned char *tmp___6 ;
  unsigned char *tmp___7 ;
  unsigned char *tmp___8 ;
  unsigned char *tmp___9 ;
  unsigned char _amd64_rex_bits___1 ;
  unsigned char *tmp___10 ;
  unsigned char *tmp___11 ;
  unsigned char *tmp___12 ;
  x86_imm_buf imb___0 ;
  unsigned char *tmp___13 ;
  unsigned char *tmp___14 ;
  unsigned char *tmp___15 ;
  unsigned char *tmp___16 ;
  unsigned char _amd64_rex_bits___2 ;
  unsigned char *tmp___17 ;
  unsigned char *tmp___18 ;
  unsigned char *tmp___19 ;
  unsigned char _amd64_rex_bits___3 ;
  unsigned char *tmp___20 ;
  unsigned char *tmp___21 ;
  x86_imm_buf imb___1 ;
  unsigned char *tmp___22 ;
  unsigned char *tmp___23 ;
  unsigned char *tmp___24 ;
  unsigned char *tmp___25 ;
  unsigned char _amd64_rex_bits___4 ;
  unsigned char *tmp___26 ;
  unsigned char *tmp___27 ;
  unsigned char *tmp___28 ;
  x86_imm_buf imb___2 ;
  unsigned char *tmp___29 ;
  unsigned char *tmp___30 ;
  unsigned char *tmp___31 ;
  unsigned char *tmp___32 ;
  struct jit_func_info *tmp___33 ;
  int x ;
  struct jit_out_arg *arg ;
  int fp_reg_arg_cnt ;
  int tmp___34 ;
  int _amd64_width_temp ;
  unsigned char _amd64_rex_bits___5 ;
  int tmp___35 ;
  int tmp___36 ;
  int tmp___37 ;
  unsigned char *tmp___38 ;
  int tmp___39 ;
  unsigned char *tmp___40 ;
  amd64_imm_buf imb___3 ;
  unsigned char *tmp___41 ;
  unsigned char *tmp___42 ;
  unsigned char *tmp___43 ;
  unsigned char *tmp___44 ;
  unsigned char *tmp___45 ;
  unsigned char *tmp___46 ;
  unsigned char *tmp___47 ;
  unsigned char *tmp___48 ;
  x86_imm_buf imb___4 ;
  unsigned char *tmp___49 ;
  unsigned char *tmp___50 ;
  unsigned char *tmp___51 ;
  unsigned char *tmp___52 ;
  int tmp___53 ;
  unsigned char _amd64_rex_bits___6 ;
  unsigned char *tmp___54 ;
  unsigned char *tmp___55 ;
  unsigned char *tmp___56 ;

  {
#line 3694
  stack_correction = 0;
#line 3695
  args = jit->prepared_args.args;
#line 3696
  if (jit->prepared_args.gp_args - (jit->reg_al)->gp_arg_reg_cnt > 0) {
#line 3696
    tmp = jit->prepared_args.gp_args - (jit->reg_al)->gp_arg_reg_cnt;
  } else {
#line 3696
    tmp = 0;
  }
#line 3696
  gp_pushed = tmp;
#line 3697
  if (jit->prepared_args.fp_args - (jit->reg_al)->fp_arg_reg_cnt > 0) {
#line 3697
    tmp___0 = jit->prepared_args.fp_args - (jit->reg_al)->fp_arg_reg_cnt;
  } else {
#line 3697
    tmp___0 = 0;
  }
#line 3697
  fp_pushed = tmp___0;
#line 3698
  tmp___33 = jit_current_func_info(jit);
#line 3698
  if (tmp___33->has_prolog) {
#line 3699
    if (((jit->push_count + gp_pushed) + fp_pushed) % 2) {
#line 3700
      while (1) {
#line 3700
        while (1) {
#line 3700
          _amd64_rex_bits = (unsigned char)8;
#line 3700
          if ((int )_amd64_rex_bits != 0) {
#line 3700
            tmp___1 = jit->ip;
#line 3700
            (jit->ip) ++;
#line 3700
            *tmp___1 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
          }
#line 3700
          break;
        }
#line 3700
        tmp___2 = jit->ip;
#line 3700
        (jit->ip) ++;
#line 3700
        *tmp___2 = (unsigned char)131;
#line 3700
        while (1) {
#line 3700
          while (1) {
#line 3700
            tmp___3 = jit->ip;
#line 3700
            (jit->ip) ++;
#line 3700
            *tmp___3 = (unsigned char )(((3 << 6) | (5 << 3)) | 4);
#line 3700
            break;
          }
#line 3700
          break;
        }
#line 3700
        while (1) {
#line 3700
          *(jit->ip) = (unsigned char)8;
#line 3700
          (jit->ip) ++;
#line 3700
          break;
        }
#line 3700
        break;
      }
#line 3701
      stack_correction = 8;
    }
  } else
#line 3704
  if (((jit->push_count + gp_pushed) + fp_pushed) % 2 == 0) {
#line 3705
    while (1) {
#line 3705
      while (1) {
#line 3705
        _amd64_rex_bits___2 = (unsigned char)8;
#line 3705
        if ((int )_amd64_rex_bits___2 != 0) {
#line 3705
          tmp___17 = jit->ip;
#line 3705
          (jit->ip) ++;
#line 3705
          *tmp___17 = (unsigned char )(0x40 | (int )_amd64_rex_bits___2);
        }
#line 3705
        break;
      }
#line 3705
      tmp___18 = jit->ip;
#line 3705
      (jit->ip) ++;
#line 3705
      *tmp___18 = (unsigned char)131;
#line 3705
      while (1) {
#line 3705
        while (1) {
#line 3705
          tmp___19 = jit->ip;
#line 3705
          (jit->ip) ++;
#line 3705
          *tmp___19 = (unsigned char )(((3 << 6) | (5 << 3)) | 4);
#line 3705
          break;
        }
#line 3705
        break;
      }
#line 3705
      while (1) {
#line 3705
        *(jit->ip) = (unsigned char)8;
#line 3705
        (jit->ip) ++;
#line 3705
        break;
      }
#line 3705
      break;
    }
#line 3706
    stack_correction = 8;
  }
#line 3709
  x = jit->prepared_args.count - 1;
#line 3709
  while (x >= 0) {
#line 3710
    arg = args + x;
#line 3711
    if (! arg->isfp) {
#line 3712
      if (arg->argpos < (jit->reg_al)->gp_arg_reg_cnt) {
#line 3712
        emit_set_arg(jit, arg);
      } else {
#line 3713
        emit_push_arg(jit, arg);
      }
    } else
#line 3715
    if (arg->argpos < (jit->reg_al)->fp_arg_reg_cnt) {
#line 3715
      emit_set_fparg(jit, arg);
    } else {
#line 3716
      emit_fppush_arg(jit, arg);
    }
#line 3709
    x --;
  }
#line 3719
  if (jit->prepared_args.fp_args < (jit->reg_al)->fp_arg_reg_cnt) {
#line 3719
    tmp___34 = jit->prepared_args.fp_args;
  } else {
#line 3719
    tmp___34 = (jit->reg_al)->fp_arg_reg_cnt;
  }
#line 3719
  fp_reg_arg_cnt = tmp___34;
#line 3720
  if (fp_reg_arg_cnt != 0) {
#line 3720
    while (1) {
#line 3720
      _amd64_width_temp = (size_t )fp_reg_arg_cnt == (size_t )((int )((size_t )fp_reg_arg_cnt));
#line 3720
      while (1) {
#line 3720
        while (1) {
#line 3720
          if (_amd64_width_temp) {
#line 3720
            tmp___37 = 4;
          } else {
#line 3720
            tmp___37 = 8;
          }
#line 3720
          if (tmp___37 > 4) {
#line 3720
            tmp___36 = 8;
          } else {
#line 3720
            tmp___36 = 0;
          }
#line 3720
          _amd64_rex_bits___5 = (unsigned char )tmp___36;
#line 3720
          if ((int )_amd64_rex_bits___5 != 0) {
#line 3720
            tmp___38 = jit->ip;
#line 3720
            (jit->ip) ++;
#line 3720
            *tmp___38 = (unsigned char )(0x40 | (int )_amd64_rex_bits___5);
          } else {
#line 3720
            if (_amd64_width_temp) {
#line 3720
              tmp___39 = 4;
            } else {
#line 3720
              tmp___39 = 8;
            }
#line 3720
            if (tmp___39 == 1) {
#line 3720
              tmp___38 = jit->ip;
#line 3720
              (jit->ip) ++;
#line 3720
              *tmp___38 = (unsigned char )(0x40 | (int )_amd64_rex_bits___5);
            }
          }
#line 3720
          break;
        }
#line 3720
        tmp___40 = jit->ip;
#line 3720
        (jit->ip) ++;
#line 3720
        *tmp___40 = (unsigned char)184;
#line 3720
        if (_amd64_width_temp) {
#line 3720
          tmp___53 = 4;
        } else {
#line 3720
          tmp___53 = 8;
        }
#line 3720
        if (tmp___53 == 8) {
#line 3720
          while (1) {
#line 3720
            imb___3.val = (size_t )fp_reg_arg_cnt;
#line 3720
            tmp___41 = jit->ip;
#line 3720
            (jit->ip) ++;
#line 3720
            *tmp___41 = imb___3.b[0];
#line 3720
            tmp___42 = jit->ip;
#line 3720
            (jit->ip) ++;
#line 3720
            *tmp___42 = imb___3.b[1];
#line 3720
            tmp___43 = jit->ip;
#line 3720
            (jit->ip) ++;
#line 3720
            *tmp___43 = imb___3.b[2];
#line 3720
            tmp___44 = jit->ip;
#line 3720
            (jit->ip) ++;
#line 3720
            *tmp___44 = imb___3.b[3];
#line 3720
            tmp___45 = jit->ip;
#line 3720
            (jit->ip) ++;
#line 3720
            *tmp___45 = imb___3.b[4];
#line 3720
            tmp___46 = jit->ip;
#line 3720
            (jit->ip) ++;
#line 3720
            *tmp___46 = imb___3.b[5];
#line 3720
            tmp___47 = jit->ip;
#line 3720
            (jit->ip) ++;
#line 3720
            *tmp___47 = imb___3.b[6];
#line 3720
            tmp___48 = jit->ip;
#line 3720
            (jit->ip) ++;
#line 3720
            *tmp___48 = imb___3.b[7];
#line 3720
            break;
          }
        } else {
#line 3720
          while (1) {
#line 3720
            imb___4.val = (int )((size_t )fp_reg_arg_cnt);
#line 3720
            tmp___49 = jit->ip;
#line 3720
            (jit->ip) ++;
#line 3720
            *tmp___49 = imb___4.b[0];
#line 3720
            tmp___50 = jit->ip;
#line 3720
            (jit->ip) ++;
#line 3720
            *tmp___50 = imb___4.b[1];
#line 3720
            tmp___51 = jit->ip;
#line 3720
            (jit->ip) ++;
#line 3720
            *tmp___51 = imb___4.b[2];
#line 3720
            tmp___52 = jit->ip;
#line 3720
            (jit->ip) ++;
#line 3720
            *tmp___52 = imb___4.b[3];
#line 3720
            break;
          }
        }
#line 3720
        break;
      }
#line 3720
      break;
    }
  } else {
#line 3721
    while (1) {
#line 3721
      while (1) {
#line 3721
        _amd64_rex_bits___6 = (unsigned char)0;
#line 3721
        if ((int )_amd64_rex_bits___6 != 0) {
#line 3721
          tmp___54 = jit->ip;
#line 3721
          (jit->ip) ++;
#line 3721
          *tmp___54 = (unsigned char )(0x40 | (int )_amd64_rex_bits___6);
        }
#line 3721
        break;
      }
#line 3721
      tmp___55 = jit->ip;
#line 3721
      (jit->ip) ++;
#line 3721
      *tmp___55 = (unsigned char )((6 << 3) + 3);
#line 3721
      while (1) {
#line 3721
        while (1) {
#line 3721
          tmp___56 = jit->ip;
#line 3721
          (jit->ip) ++;
#line 3721
          *tmp___56 = (unsigned char )(3 << 6);
#line 3721
          break;
        }
#line 3721
        break;
      }
#line 3721
      break;
    }
  }
#line 3722
  return (stack_correction);
}
}
/* END FUNCTION-DEF emit_arguments LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF print_op_compilable LOC=UNKNOWN */
int print_op_compilable(struct jit_disasm *disasm , struct jit_op *op , jit_tree *labels ) 
{ 
  struct output_buf *linebuf ;
  struct output_buf *tmp ;
  jit_tree *lab ;
  jit_tree *tmp___0 ;
  int tmp___1 ;
  jit_tree *lab___0 ;
  jit_tree *tmp___2 ;
  int i ;
  char *tmp___3 ;
  char *tmp___4 ;
  char *tmp___5 ;
  long tmp___6 ;
  int len ;

  {
#line 5404
  tmp = ob_new();
#line 5404
  linebuf = tmp;
#line 5405
  tmp___0 = jit_tree_search(labels, (long )op);
#line 5405
  lab = tmp___0;
#line 5406
  if (lab) {
#line 5406
    if ((long )lab->value > 0L) {
#line 5407
      ob_printf(linebuf, (char const   *)"// ");
#line 5408
      ob_printf(linebuf, (char const   *)disasm->label_template, (long )lab->value);
#line 5409
      ob_printf(linebuf, (char const   *)":\n");
    }
  }
#line 5411
  if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 192U) {
#line 5412
    print_comment(linebuf, op);
#line 5413
    goto direct_print;
  }
#line 5415
  ob_append(linebuf, disasm->indent_template);
#line 5416
  tmp___1 = jit_op_is_cflow(op);
#line 5416
  if (tmp___1) {
#line 5416
    if ((unsigned long )((void *)op->arg[0]) == (unsigned long )((void *)0)) {
#line 5419
      ob_printf(linebuf, (char const   *)"jit_op * op_%li = ", (unsigned long )op >> 4);
    } else {
#line 5416
      goto _L;
    }
  } else
  _L: /* CIL Label */ 
#line 5416
  if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 280U) {
#line 5419
    ob_printf(linebuf, (char const   *)"jit_op * op_%li = ", (unsigned long )op >> 4);
  } else
#line 5416
  if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 832U) {
#line 5419
    ob_printf(linebuf, (char const   *)"jit_op * op_%li = ", (unsigned long )op >> 4);
  } else
#line 5416
  if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 856U) {
#line 5419
    ob_printf(linebuf, (char const   *)"jit_op * op_%li = ", (unsigned long )op >> 4);
  } else
#line 5416
  if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 704U) {
#line 5419
    ob_printf(linebuf, (char const   *)"jit_op * op_%li = ", (unsigned long )op >> 4);
  }
#line 5420
  switch ((unsigned int )((jit_opcode )((int )op->code & 0xfff8))) {
  case 136U: 
#line 5422
  ob_printf(linebuf, (char const   *)"jit_label * ");
#line 5423
  tmp___2 = jit_tree_search(labels, op->arg[0]);
#line 5423
  lab___0 = tmp___2;
#line 5424
  if (lab___0) {
#line 5424
    ob_printf(linebuf, (char const   *)disasm->label_template, (long )lab___0->value);
  }
#line 5425
  ob_printf(linebuf, (char const   *)" = jit_get_label(p");
#line 5426
  goto print;
  case 616U: 
#line 5429
  ob_printf(linebuf, (char const   *)"jit_patch  (p, op_%li", (unsigned long )op->arg[0] >> 4);
#line 5430
  goto print;
  case 376U: 
#line 5432
  ob_printf(linebuf, (char const   *)"jit_data_byte(p, ");
#line 5433
  ob_printf(linebuf, (char const   *)disasm->generic_value_template, op->arg[0]);
#line 5434
  goto print;
  case 160U: 
#line 5436
  i = 0;
#line 5436
  while ((jit_value )i < op->arg[0]) {
#line 5437
    ob_printf(linebuf, (char const   *)"jit_data_byte(p, ");
#line 5438
    ob_printf(linebuf, (char const   *)disasm->generic_value_template, (int )*((unsigned char *)op->addendum + i));
#line 5439
    if ((jit_value )i < op->arg[0] - 1L) {
#line 5439
      ob_printf(linebuf, (char const   *)");\n");
    }
#line 5436
    i ++;
  }
#line 5441
  goto print;
  case 832U: 
  case 280U: 
#line 5444
  tmp___3 = jit_get_op_name(op);
#line 5444
  ob_printf(linebuf, (char const   *)"jit_%s(p, ", tmp___3);
#line 5445
  print_arg(disasm, linebuf, op, 1);
#line 5446
  ob_append(linebuf, ", ");
#line 5447
  print_addr(disasm, linebuf, labels, op, 1);
#line 5448
  goto print;
  case 704U: 
  case 856U: 
#line 5451
  tmp___4 = jit_get_op_name(op);
#line 5451
  ob_printf(linebuf, (char const   *)"jit_data_%s(p, ", tmp___4 + 1);
#line 5452
  print_addr(disasm, linebuf, labels, op, 0);
#line 5453
  goto print;
  case 872U: 
#line 5455
  ob_printf(linebuf, (char const   *)"jit_code_align  (p, ");
#line 5456
  ob_printf(linebuf, (char const   *)disasm->generic_value_template, op->arg[0]);
#line 5457
  goto print;
  case 784U: 
#line 5459
  ob_printf(linebuf, (char const   *)"jit_prepare(p");
#line 5460
  goto print;
  case 848U: 
#line 5462
  ob_printf(linebuf, (char const   *)"jit_prepare_optional(p");
#line 5463
  goto print;
  default: 
#line 5465
  break;
  }
#line 5467
  tmp___5 = jit_get_op_name(op);
#line 5467
  if ((int )*(tmp___5 + 0) == 46) {
#line 5467
    goto direct_print;
  }
#line 5468
  ob_append(linebuf, "jit_");
#line 5469
  print_full_op_name(linebuf, op);
#line 5470
  ob_pad(linebuf, 15);
#line 5471
  ob_append(linebuf, "(p,");
#line 5472
  switch ((unsigned int )((jit_opcode )((int )op->code & 0xfff8))) {
  case 352U: 
#line 5474
  print_str(linebuf, (char *)op->arg[0]);
#line 5475
  if (! ((int )op->code & 0x02)) {
#line 5476
    ob_append(linebuf, ", ");
#line 5477
    print_arg(disasm, linebuf, op, 2);
  }
#line 5479
  break;
  case 520U: 
#line 5481
  switch (op->arg[0]) {
  case 0L: 
#line 5482
  ob_append(linebuf, "JIT_SIGNED_NUM");
#line 5482
  break;
  case 1L: 
#line 5483
  ob_append(linebuf, "JIT_UNSIGNED_NUM");
#line 5483
  break;
  case 2L: 
#line 5484
  ob_append(linebuf, "JIT_FLOAT_NUM");
#line 5484
  break;
  case 3L: 
#line 5485
  ob_append(linebuf, "JIT_PTR");
#line 5485
  break;
  default: 
#line 5486
  tmp___6 = __builtin_expect(1L, 0L);
#line 5486
  if (tmp___6) {
#line 5486
    __assert_rtn((char const   *)"print_op_compilable", (char const   *)"tmp/src.c",
                 4745, (char const   *)"0");
  }
  }
#line 5488
  ob_append(linebuf, ", ");
#line 5489
  print_arg(disasm, linebuf, op, 2);
#line 5490
  break;
  default: 
#line 5492
  print_args(disasm, linebuf, op, labels);
  }
#line 5494
  if (op->arg_size) {
#line 5494
    ob_printf(linebuf, (char const   *)", %i", (int )op->arg_size);
  }
  print: 
#line 5496
  ob_append(linebuf, ");");
  direct_print: 
#line 5498
  printf((char const   */* __restrict  */)"%s", linebuf->buf);
#line 5499
  len = (int )linebuf->size;
#line 5500
  ob_free(linebuf);
#line 5501
  return (len);
}
}
/* END FUNCTION-DEF print_op_compilable LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_patch_external_calls LOC=UNKNOWN */
void jit_patch_external_calls(struct jit *jit ) 
{ 


  {
#line 3836
  return;
}
}
/* END FUNCTION-DEF jit_patch_external_calls LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF color_flip LOC=UNKNOWN */
__inline static void color_flip(jit_tree *h ) 
{ 


  {
#line 2090
  h->color = ! h->color;
#line 2091
  (h->left)->color = ! (h->left)->color;
#line 2092
  (h->right)->color = ! (h->right)->color;
#line 2093
  return;
}
}
/* END FUNCTION-DEF color_flip LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF join_muli_ori LOC=UNKNOWN */
static int join_muli_ori(jit_op *op , jit_op *nextop ) 
{ 
  int tmp ;
  int max ;
  int tmp___0 ;
  int tmp___1 ;
  int tmp___2 ;

  {
#line 3535
  tmp = is_suitable_mul(op);
#line 3535
  if (! tmp) {
#line 3535
    return (0);
  }
#line 3536
  if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 528U) {
#line 3536
    max = (int )op->arg[2];
#line 3536
    tmp___1 = max;
  } else {
#line 3536
    tmp___0 = pow2((int )op->arg[2]);
#line 3536
    tmp___1 = tmp___0;
  }
#line 3536
  max = tmp___1;
#line 3537
  if (nextop->arg[2] > 0L) {
#line 3537
    if (nextop->arg[2] < (jit_value )max) {
#line 3537
      tmp___2 = make_addmuli(op, nextop);
#line 3537
      return (tmp___2);
    } else {
#line 3538
      return (0);
    }
  } else {
#line 3538
    return (0);
  }
}
}
/* END FUNCTION-DEF join_muli_ori LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF assign_ret_reg LOC=UNKNOWN */
static int assign_ret_reg(jit_op *op , jit_hw_reg *ret_reg ) 
{ 


  {
#line 5991
  rmap_assoc(op->regmap, op->arg[0], ret_reg);
#line 5992
  return (1);
}
}
/* END FUNCTION-DEF assign_ret_reg LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF make_nop LOC=UNKNOWN */
__inline static void make_nop(jit_op *op ) 
{ 


  {
#line 3473
  op->code = (unsigned short)864;
#line 3474
  op->spec = (unsigned char)0;
#line 3475
  return;
}
}
/* END FUNCTION-DEF make_nop LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF ob_free LOC=UNKNOWN */
static void ob_free(struct output_buf *ob ) 
{ 


  {
#line 4951
  free((void *)ob->buf);
#line 4952
  free((void *)ob);
#line 4953
  return;
}
}
/* END FUNCTION-DEF ob_free LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_debug_info_new LOC=UNKNOWN */
struct jit_debug_info *jit_debug_info_new(char const   *filename , char const   *function ,
                                          int lineno ) 
{ 
  struct jit_debug_info *r ;
  void *tmp ;

  {
#line 6346
  tmp = malloc((size_t )sizeof(struct jit_debug_info ));
#line 6346
  r = (struct jit_debug_info *)tmp;
#line 6347
  r->filename = filename;
#line 6348
  r->function = function;
#line 6349
  r->lineno = lineno;
#line 6350
  r->warnings = 0;
#line 6351
  return (r);
}
}
/* END FUNCTION-DEF jit_debug_info_new LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF emit_cond_op LOC=UNKNOWN */
static void emit_cond_op(struct jit *jit , struct jit_op *op , int amd64_cond , int imm ,
                         int sign ) 
{ 
  unsigned char _amd64_rex_bits ;
  int tmp ;
  unsigned char *tmp___0 ;
  unsigned char *tmp___1 ;
  unsigned char *tmp___2 ;
  unsigned char _amd64_rex_bits___0 ;
  unsigned char *tmp___3 ;
  unsigned char *tmp___4 ;
  x86_imm_buf imb ;
  unsigned char *tmp___5 ;
  unsigned char *tmp___6 ;
  unsigned char *tmp___7 ;
  unsigned char *tmp___8 ;
  unsigned char _amd64_rex_bits___1 ;
  int tmp___9 ;
  unsigned char *tmp___10 ;
  unsigned char *tmp___11 ;
  unsigned char *tmp___12 ;
  x86_imm_buf imb___0 ;
  unsigned char *tmp___13 ;
  unsigned char *tmp___14 ;
  unsigned char *tmp___15 ;
  unsigned char *tmp___16 ;
  unsigned char _amd64_rex_bits___2 ;
  int tmp___17 ;
  int tmp___18 ;
  unsigned char *tmp___19 ;
  unsigned char *tmp___20 ;
  unsigned char *tmp___21 ;
  unsigned char _amd64_rex_bits___3 ;
  int tmp___22 ;
  int tmp___23 ;
  unsigned char *tmp___24 ;
  unsigned char *tmp___25 ;
  amd64_imm_buf imb___1 ;
  unsigned char *tmp___26 ;
  unsigned char *tmp___27 ;
  unsigned char *tmp___28 ;
  unsigned char *tmp___29 ;
  unsigned char *tmp___30 ;
  unsigned char *tmp___31 ;
  unsigned char *tmp___32 ;
  unsigned char *tmp___33 ;
  x86_imm_buf imb___2 ;
  unsigned char *tmp___34 ;
  unsigned char *tmp___35 ;
  unsigned char *tmp___36 ;
  unsigned char *tmp___37 ;
  unsigned char _amd64_rex_bits___4 ;
  int tmp___38 ;
  unsigned char *tmp___39 ;
  long tmp___40 ;
  unsigned char *tmp___41 ;
  unsigned char *tmp___42 ;
  unsigned char *tmp___43 ;
  unsigned char *tmp___44 ;
  unsigned char _amd64_rex_bits___5 ;
  int tmp___45 ;
  int tmp___46 ;
  unsigned char *tmp___47 ;
  unsigned char *tmp___48 ;
  unsigned char *tmp___49 ;
  int tmp___50 ;
  unsigned char *tmp___51 ;
  unsigned char _amd64_rex_bits___6 ;
  int tmp___52 ;
  unsigned char *tmp___53 ;
  unsigned char *tmp___54 ;
  amd64_imm_buf imb___3 ;
  unsigned char *tmp___55 ;
  unsigned char *tmp___56 ;
  unsigned char *tmp___57 ;
  unsigned char *tmp___58 ;
  unsigned char *tmp___59 ;
  unsigned char *tmp___60 ;
  unsigned char *tmp___61 ;
  unsigned char *tmp___62 ;
  x86_imm_buf imb___4 ;
  unsigned char *tmp___63 ;
  unsigned char *tmp___64 ;
  unsigned char *tmp___65 ;
  unsigned char *tmp___66 ;
  unsigned char _amd64_rex_bits___7 ;
  unsigned char *tmp___67 ;
  long tmp___68 ;
  unsigned char *tmp___69 ;
  unsigned char *tmp___70 ;
  unsigned char *tmp___71 ;
  unsigned char *tmp___72 ;
  unsigned char _amd64_rex_bits___8 ;
  int tmp___73 ;
  int tmp___74 ;
  unsigned char *tmp___75 ;
  unsigned char *tmp___76 ;
  unsigned char *tmp___77 ;
  int tmp___78 ;
  unsigned char *tmp___79 ;

  {
#line 4335
  if (imm) {
#line 4335
    while (1) {
#line 4335
      if (op->r_arg[2] >= -128L) {
#line 4335
        if (op->r_arg[2] <= 127L) {
#line 4335
          while (1) {
#line 4335
            if (op->r_arg[1] > 7L) {
#line 4335
              tmp = 1;
            } else {
#line 4335
              tmp = 0;
            }
#line 4335
            _amd64_rex_bits = (unsigned char )(8 | tmp);
#line 4335
            if ((int )_amd64_rex_bits != 0) {
#line 4335
              tmp___0 = jit->ip;
#line 4335
              (jit->ip) ++;
#line 4335
              *tmp___0 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
            }
#line 4335
            break;
          }
#line 4335
          tmp___1 = jit->ip;
#line 4335
          (jit->ip) ++;
#line 4335
          *tmp___1 = (unsigned char)131;
#line 4335
          while (1) {
#line 4335
            while (1) {
#line 4335
              tmp___2 = jit->ip;
#line 4335
              (jit->ip) ++;
#line 4335
              *tmp___2 = (unsigned char )((long )((3 << 6) | (7 << 3)) | (op->r_arg[1] & 7L));
#line 4335
              break;
            }
#line 4335
            break;
          }
#line 4335
          while (1) {
#line 4335
            *(jit->ip) = (unsigned char )(op->r_arg[2] & 255L);
#line 4335
            (jit->ip) ++;
#line 4335
            break;
          }
        } else {
#line 4335
          goto _L;
        }
      } else
      _L: /* CIL Label */ 
#line 4335
      if (op->r_arg[1] == 0L) {
#line 4335
        while (1) {
#line 4335
          _amd64_rex_bits___0 = (unsigned char)8;
#line 4335
          if ((int )_amd64_rex_bits___0 != 0) {
#line 4335
            tmp___3 = jit->ip;
#line 4335
            (jit->ip) ++;
#line 4335
            *tmp___3 = (unsigned char )(0x40 | (int )_amd64_rex_bits___0);
          }
#line 4335
          break;
        }
#line 4335
        tmp___4 = jit->ip;
#line 4335
        (jit->ip) ++;
#line 4335
        *tmp___4 = (unsigned char )((7 << 3) + 5);
#line 4335
        while (1) {
#line 4335
          imb.val = (int )op->r_arg[2];
#line 4335
          tmp___5 = jit->ip;
#line 4335
          (jit->ip) ++;
#line 4335
          *tmp___5 = imb.b[0];
#line 4335
          tmp___6 = jit->ip;
#line 4335
          (jit->ip) ++;
#line 4335
          *tmp___6 = imb.b[1];
#line 4335
          tmp___7 = jit->ip;
#line 4335
          (jit->ip) ++;
#line 4335
          *tmp___7 = imb.b[2];
#line 4335
          tmp___8 = jit->ip;
#line 4335
          (jit->ip) ++;
#line 4335
          *tmp___8 = imb.b[3];
#line 4335
          break;
        }
      } else {
#line 4335
        while (1) {
#line 4335
          if (op->r_arg[1] > 7L) {
#line 4335
            tmp___9 = 1;
          } else {
#line 4335
            tmp___9 = 0;
          }
#line 4335
          _amd64_rex_bits___1 = (unsigned char )(8 | tmp___9);
#line 4335
          if ((int )_amd64_rex_bits___1 != 0) {
#line 4335
            tmp___10 = jit->ip;
#line 4335
            (jit->ip) ++;
#line 4335
            *tmp___10 = (unsigned char )(0x40 | (int )_amd64_rex_bits___1);
          }
#line 4335
          break;
        }
#line 4335
        tmp___11 = jit->ip;
#line 4335
        (jit->ip) ++;
#line 4335
        *tmp___11 = (unsigned char)129;
#line 4335
        while (1) {
#line 4335
          while (1) {
#line 4335
            tmp___12 = jit->ip;
#line 4335
            (jit->ip) ++;
#line 4335
            *tmp___12 = (unsigned char )((long )((3 << 6) | (7 << 3)) | (op->r_arg[1] & 7L));
#line 4335
            break;
          }
#line 4335
          break;
        }
#line 4335
        while (1) {
#line 4335
          imb___0.val = (int )op->r_arg[2];
#line 4335
          tmp___13 = jit->ip;
#line 4335
          (jit->ip) ++;
#line 4335
          *tmp___13 = imb___0.b[0];
#line 4335
          tmp___14 = jit->ip;
#line 4335
          (jit->ip) ++;
#line 4335
          *tmp___14 = imb___0.b[1];
#line 4335
          tmp___15 = jit->ip;
#line 4335
          (jit->ip) ++;
#line 4335
          *tmp___15 = imb___0.b[2];
#line 4335
          tmp___16 = jit->ip;
#line 4335
          (jit->ip) ++;
#line 4335
          *tmp___16 = imb___0.b[3];
#line 4335
          break;
        }
      }
#line 4335
      break;
    }
  } else {
#line 4336
    while (1) {
#line 4336
      while (1) {
#line 4336
        if (op->r_arg[1] > 7L) {
#line 4336
          tmp___17 = 4;
        } else {
#line 4336
          tmp___17 = 0;
        }
#line 4336
        if (op->r_arg[2] > 7L) {
#line 4336
          tmp___18 = 1;
        } else {
#line 4336
          tmp___18 = 0;
        }
#line 4336
        _amd64_rex_bits___2 = (unsigned char )((8 | tmp___17) | tmp___18);
#line 4336
        if ((int )_amd64_rex_bits___2 != 0) {
#line 4336
          tmp___19 = jit->ip;
#line 4336
          (jit->ip) ++;
#line 4336
          *tmp___19 = (unsigned char )(0x40 | (int )_amd64_rex_bits___2);
        }
#line 4336
        break;
      }
#line 4336
      tmp___20 = jit->ip;
#line 4336
      (jit->ip) ++;
#line 4336
      *tmp___20 = (unsigned char )((7 << 3) + 3);
#line 4336
      while (1) {
#line 4336
        while (1) {
#line 4336
          tmp___21 = jit->ip;
#line 4336
          (jit->ip) ++;
#line 4336
          *tmp___21 = (unsigned char )(((long )(3 << 6) | ((op->r_arg[1] & 7L) << 3)) | (op->r_arg[2] & 7L));
#line 4336
          break;
        }
#line 4336
        break;
      }
#line 4336
      break;
    }
  }
#line 4337
  if (op->r_arg[0] != 6L) {
#line 4337
    if (op->r_arg[0] != 7L) {
#line 4338
      while (1) {
#line 4338
        while (1) {
#line 4338
          if (sizeof(void *) > 4ULL) {
#line 4338
            tmp___22 = 8;
          } else {
#line 4338
            tmp___22 = 0;
          }
#line 4338
          if (op->r_arg[0] > 7L) {
#line 4338
            tmp___23 = 1;
          } else {
#line 4338
            tmp___23 = 0;
          }
#line 4338
          _amd64_rex_bits___3 = (unsigned char )(tmp___22 | tmp___23);
#line 4338
          if ((int )_amd64_rex_bits___3 != 0) {
#line 4338
            tmp___24 = jit->ip;
#line 4338
            (jit->ip) ++;
#line 4338
            *tmp___24 = (unsigned char )(0x40 | (int )_amd64_rex_bits___3);
          } else
#line 4338
          if (sizeof(void *) == 1ULL) {
#line 4338
            tmp___24 = jit->ip;
#line 4338
            (jit->ip) ++;
#line 4338
            *tmp___24 = (unsigned char )(0x40 | (int )_amd64_rex_bits___3);
          }
#line 4338
          break;
        }
#line 4338
        tmp___25 = jit->ip;
#line 4338
        (jit->ip) ++;
#line 4338
        *tmp___25 = (unsigned char )(184L + (op->r_arg[0] & 7L));
#line 4338
        if (sizeof(void *) == 8ULL) {
#line 4338
          while (1) {
#line 4338
            imb___1.val = (size_t )0;
#line 4338
            tmp___26 = jit->ip;
#line 4338
            (jit->ip) ++;
#line 4338
            *tmp___26 = imb___1.b[0];
#line 4338
            tmp___27 = jit->ip;
#line 4338
            (jit->ip) ++;
#line 4338
            *tmp___27 = imb___1.b[1];
#line 4338
            tmp___28 = jit->ip;
#line 4338
            (jit->ip) ++;
#line 4338
            *tmp___28 = imb___1.b[2];
#line 4338
            tmp___29 = jit->ip;
#line 4338
            (jit->ip) ++;
#line 4338
            *tmp___29 = imb___1.b[3];
#line 4338
            tmp___30 = jit->ip;
#line 4338
            (jit->ip) ++;
#line 4338
            *tmp___30 = imb___1.b[4];
#line 4338
            tmp___31 = jit->ip;
#line 4338
            (jit->ip) ++;
#line 4338
            *tmp___31 = imb___1.b[5];
#line 4338
            tmp___32 = jit->ip;
#line 4338
            (jit->ip) ++;
#line 4338
            *tmp___32 = imb___1.b[6];
#line 4338
            tmp___33 = jit->ip;
#line 4338
            (jit->ip) ++;
#line 4338
            *tmp___33 = imb___1.b[7];
#line 4338
            break;
          }
        } else {
#line 4338
          while (1) {
#line 4338
            imb___2.val = (int )((size_t )0);
#line 4338
            tmp___34 = jit->ip;
#line 4338
            (jit->ip) ++;
#line 4338
            *tmp___34 = imb___2.b[0];
#line 4338
            tmp___35 = jit->ip;
#line 4338
            (jit->ip) ++;
#line 4338
            *tmp___35 = imb___2.b[1];
#line 4338
            tmp___36 = jit->ip;
#line 4338
            (jit->ip) ++;
#line 4338
            *tmp___36 = imb___2.b[2];
#line 4338
            tmp___37 = jit->ip;
#line 4338
            (jit->ip) ++;
#line 4338
            *tmp___37 = imb___2.b[3];
#line 4338
            break;
          }
        }
#line 4338
        break;
      }
#line 4339
      while (1) {
#line 4339
        while (1) {
#line 4339
          if (op->r_arg[0] > 7L) {
#line 4339
            tmp___38 = 1;
          } else {
#line 4339
            tmp___38 = 0;
          }
#line 4339
          _amd64_rex_bits___4 = (unsigned char )tmp___38;
#line 4339
          if ((int )_amd64_rex_bits___4 != 0) {
#line 4339
            tmp___39 = jit->ip;
#line 4339
            (jit->ip) ++;
#line 4339
            *tmp___39 = (unsigned char )(0x40 | (int )_amd64_rex_bits___4);
          } else {
#line 4339
            tmp___39 = jit->ip;
#line 4339
            (jit->ip) ++;
#line 4339
            *tmp___39 = (unsigned char )(0x40 | (int )_amd64_rex_bits___4);
          }
#line 4339
          break;
        }
#line 4339
        while (1) {
#line 4339
          tmp___40 = __builtin_expect(0L, 0L);
#line 4339
          if (tmp___40) {
#line 4339
            __assert_rtn((char const   *)"emit_cond_op", (char const   *)"tmp/src.c",
                         3348, (char const   *)"1");
          }
#line 4339
          tmp___41 = jit->ip;
#line 4339
          (jit->ip) ++;
#line 4339
          *tmp___41 = (unsigned char)15;
#line 4339
          if (sign) {
#line 4339
            tmp___42 = jit->ip;
#line 4339
            (jit->ip) ++;
#line 4339
            *tmp___42 = (unsigned char )((int const   )x86_cc_signed_map[amd64_cond] + 32);
          } else {
#line 4339
            tmp___43 = jit->ip;
#line 4339
            (jit->ip) ++;
#line 4339
            *tmp___43 = (unsigned char )((int const   )x86_cc_unsigned_map[amd64_cond] + 32);
          }
#line 4339
          while (1) {
#line 4339
            while (1) {
#line 4339
              tmp___44 = jit->ip;
#line 4339
              (jit->ip) ++;
#line 4339
              *tmp___44 = (unsigned char )((long )(3 << 6) | ((op->r_arg[0] & 7L) & 7L));
#line 4339
              break;
            }
#line 4339
            break;
          }
#line 4339
          break;
        }
#line 4339
        break;
      }
    } else {
#line 4337
      goto _L___0;
    }
  } else {
    _L___0: /* CIL Label */ 
#line 4341
    while (1) {
#line 4341
      while (1) {
#line 4341
        if ((int )sizeof(void *) > 4) {
#line 4341
          tmp___45 = 8;
        } else {
#line 4341
          tmp___45 = 0;
        }
#line 4341
        if (op->r_arg[0] > 7L) {
#line 4341
          tmp___46 = 1;
        } else {
#line 4341
          tmp___46 = 0;
        }
#line 4341
        _amd64_rex_bits___5 = (unsigned char )(tmp___45 | tmp___46);
#line 4341
        if ((int )_amd64_rex_bits___5 != 0) {
#line 4341
          tmp___47 = jit->ip;
#line 4341
          (jit->ip) ++;
#line 4341
          *tmp___47 = (unsigned char )(0x40 | (int )_amd64_rex_bits___5);
        } else
#line 4341
        if ((int )sizeof(void *) == 1) {
#line 4341
          tmp___47 = jit->ip;
#line 4341
          (jit->ip) ++;
#line 4341
          *tmp___47 = (unsigned char )(0x40 | (int )_amd64_rex_bits___5);
        }
#line 4341
        break;
      }
#line 4341
      while (1) {
#line 4341
        if ((int )sizeof(void *) == 8) {
#line 4341
          tmp___50 = 4;
        } else {
#line 4341
          tmp___50 = (int )sizeof(void *);
        }
#line 4341
        if (tmp___50 == 1) {
#line 4341
          tmp___48 = jit->ip;
#line 4341
          (jit->ip) ++;
#line 4341
          *tmp___48 = (unsigned char)134;
        } else {
#line 4341
          tmp___49 = jit->ip;
#line 4341
          (jit->ip) ++;
#line 4341
          *tmp___49 = (unsigned char)135;
        }
#line 4341
        while (1) {
#line 4341
          while (1) {
#line 4341
            tmp___51 = jit->ip;
#line 4341
            (jit->ip) ++;
#line 4341
            *tmp___51 = (unsigned char )((long )(3 << 6) | (((op->r_arg[0] & 7L) & 7L) << 3));
#line 4341
            break;
          }
#line 4341
          break;
        }
#line 4341
        break;
      }
#line 4341
      break;
    }
#line 4342
    while (1) {
#line 4342
      while (1) {
#line 4342
        if (sizeof(void *) > 4ULL) {
#line 4342
          tmp___52 = 8;
        } else {
#line 4342
          tmp___52 = 0;
        }
#line 4342
        _amd64_rex_bits___6 = (unsigned char )tmp___52;
#line 4342
        if ((int )_amd64_rex_bits___6 != 0) {
#line 4342
          tmp___53 = jit->ip;
#line 4342
          (jit->ip) ++;
#line 4342
          *tmp___53 = (unsigned char )(0x40 | (int )_amd64_rex_bits___6);
        } else
#line 4342
        if (sizeof(void *) == 1ULL) {
#line 4342
          tmp___53 = jit->ip;
#line 4342
          (jit->ip) ++;
#line 4342
          *tmp___53 = (unsigned char )(0x40 | (int )_amd64_rex_bits___6);
        }
#line 4342
        break;
      }
#line 4342
      tmp___54 = jit->ip;
#line 4342
      (jit->ip) ++;
#line 4342
      *tmp___54 = (unsigned char)184;
#line 4342
      if (sizeof(void *) == 8ULL) {
#line 4342
        while (1) {
#line 4342
          imb___3.val = (size_t )0;
#line 4342
          tmp___55 = jit->ip;
#line 4342
          (jit->ip) ++;
#line 4342
          *tmp___55 = imb___3.b[0];
#line 4342
          tmp___56 = jit->ip;
#line 4342
          (jit->ip) ++;
#line 4342
          *tmp___56 = imb___3.b[1];
#line 4342
          tmp___57 = jit->ip;
#line 4342
          (jit->ip) ++;
#line 4342
          *tmp___57 = imb___3.b[2];
#line 4342
          tmp___58 = jit->ip;
#line 4342
          (jit->ip) ++;
#line 4342
          *tmp___58 = imb___3.b[3];
#line 4342
          tmp___59 = jit->ip;
#line 4342
          (jit->ip) ++;
#line 4342
          *tmp___59 = imb___3.b[4];
#line 4342
          tmp___60 = jit->ip;
#line 4342
          (jit->ip) ++;
#line 4342
          *tmp___60 = imb___3.b[5];
#line 4342
          tmp___61 = jit->ip;
#line 4342
          (jit->ip) ++;
#line 4342
          *tmp___61 = imb___3.b[6];
#line 4342
          tmp___62 = jit->ip;
#line 4342
          (jit->ip) ++;
#line 4342
          *tmp___62 = imb___3.b[7];
#line 4342
          break;
        }
      } else {
#line 4342
        while (1) {
#line 4342
          imb___4.val = (int )((size_t )0);
#line 4342
          tmp___63 = jit->ip;
#line 4342
          (jit->ip) ++;
#line 4342
          *tmp___63 = imb___4.b[0];
#line 4342
          tmp___64 = jit->ip;
#line 4342
          (jit->ip) ++;
#line 4342
          *tmp___64 = imb___4.b[1];
#line 4342
          tmp___65 = jit->ip;
#line 4342
          (jit->ip) ++;
#line 4342
          *tmp___65 = imb___4.b[2];
#line 4342
          tmp___66 = jit->ip;
#line 4342
          (jit->ip) ++;
#line 4342
          *tmp___66 = imb___4.b[3];
#line 4342
          break;
        }
      }
#line 4342
      break;
    }
#line 4343
    while (1) {
#line 4343
      while (1) {
#line 4343
        _amd64_rex_bits___7 = (unsigned char)0;
#line 4343
        if ((int )_amd64_rex_bits___7 != 0) {
#line 4343
          tmp___67 = jit->ip;
#line 4343
          (jit->ip) ++;
#line 4343
          *tmp___67 = (unsigned char )(0x40 | (int )_amd64_rex_bits___7);
        } else {
#line 4343
          tmp___67 = jit->ip;
#line 4343
          (jit->ip) ++;
#line 4343
          *tmp___67 = (unsigned char )(0x40 | (int )_amd64_rex_bits___7);
        }
#line 4343
        break;
      }
#line 4343
      while (1) {
#line 4343
        tmp___68 = __builtin_expect(0L, 0L);
#line 4343
        if (tmp___68) {
#line 4343
          __assert_rtn((char const   *)"emit_cond_op", (char const   *)"tmp/src.c",
                       3352, (char const   *)"1");
        }
#line 4343
        tmp___69 = jit->ip;
#line 4343
        (jit->ip) ++;
#line 4343
        *tmp___69 = (unsigned char)15;
#line 4343
        if (sign) {
#line 4343
          tmp___70 = jit->ip;
#line 4343
          (jit->ip) ++;
#line 4343
          *tmp___70 = (unsigned char )((int const   )x86_cc_signed_map[amd64_cond] + 32);
        } else {
#line 4343
          tmp___71 = jit->ip;
#line 4343
          (jit->ip) ++;
#line 4343
          *tmp___71 = (unsigned char )((int const   )x86_cc_unsigned_map[amd64_cond] + 32);
        }
#line 4343
        while (1) {
#line 4343
          while (1) {
#line 4343
            tmp___72 = jit->ip;
#line 4343
            (jit->ip) ++;
#line 4343
            *tmp___72 = (unsigned char )(3 << 6);
#line 4343
            break;
          }
#line 4343
          break;
        }
#line 4343
        break;
      }
#line 4343
      break;
    }
#line 4344
    while (1) {
#line 4344
      while (1) {
#line 4344
        if ((int )sizeof(void *) > 4) {
#line 4344
          tmp___73 = 8;
        } else {
#line 4344
          tmp___73 = 0;
        }
#line 4344
        if (op->r_arg[0] > 7L) {
#line 4344
          tmp___74 = 1;
        } else {
#line 4344
          tmp___74 = 0;
        }
#line 4344
        _amd64_rex_bits___8 = (unsigned char )(tmp___73 | tmp___74);
#line 4344
        if ((int )_amd64_rex_bits___8 != 0) {
#line 4344
          tmp___75 = jit->ip;
#line 4344
          (jit->ip) ++;
#line 4344
          *tmp___75 = (unsigned char )(0x40 | (int )_amd64_rex_bits___8);
        } else
#line 4344
        if ((int )sizeof(void *) == 1) {
#line 4344
          tmp___75 = jit->ip;
#line 4344
          (jit->ip) ++;
#line 4344
          *tmp___75 = (unsigned char )(0x40 | (int )_amd64_rex_bits___8);
        }
#line 4344
        break;
      }
#line 4344
      while (1) {
#line 4344
        if ((int )sizeof(void *) == 8) {
#line 4344
          tmp___78 = 4;
        } else {
#line 4344
          tmp___78 = (int )sizeof(void *);
        }
#line 4344
        if (tmp___78 == 1) {
#line 4344
          tmp___76 = jit->ip;
#line 4344
          (jit->ip) ++;
#line 4344
          *tmp___76 = (unsigned char)134;
        } else {
#line 4344
          tmp___77 = jit->ip;
#line 4344
          (jit->ip) ++;
#line 4344
          *tmp___77 = (unsigned char)135;
        }
#line 4344
        while (1) {
#line 4344
          while (1) {
#line 4344
            tmp___79 = jit->ip;
#line 4344
            (jit->ip) ++;
#line 4344
            *tmp___79 = (unsigned char )((long )(3 << 6) | (((op->r_arg[0] & 7L) & 7L) << 3));
#line 4344
            break;
          }
#line 4344
          break;
        }
#line 4344
        break;
      }
#line 4344
      break;
    }
  }
#line 4346
  return;
}
}
/* END FUNCTION-DEF emit_cond_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_trace_callback LOC=UNKNOWN */
void jit_trace_callback(struct jit *jit , jit_op *op , int verbosity , int trace ) 
{ 


  {
#line 5649
  if (trace & 1) {
#line 5649
    jit_trace_op(jit, op->prev, verbosity);
  }
#line 5650
  if (trace & 2) {
#line 5650
    jit_trace_op(jit, op->next, verbosity);
  }
#line 5651
  return;
}
}
/* END FUNCTION-DEF jit_trace_callback LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF emit_push_arg LOC=UNKNOWN */
__inline static void emit_push_arg(struct jit *jit , struct jit_out_arg *arg ) 
{ 
  int sreg ;
  unsigned char _amd64_rex_bits ;
  unsigned char *tmp ;
  unsigned char *tmp___0 ;
  unsigned char *tmp___1 ;
  unsigned char *tmp___2 ;
  unsigned char *tmp___3 ;
  unsigned char *tmp___4 ;
  int tmp___5 ;
  unsigned char *tmp___6 ;
  unsigned char *tmp___7 ;
  x86_imm_buf imb ;
  int tmp___8 ;
  unsigned char *tmp___9 ;
  unsigned char *tmp___10 ;
  unsigned char *tmp___11 ;
  unsigned char *tmp___12 ;
  int tmp___13 ;
  int tmp___14 ;
  int tmp___15 ;
  unsigned char *tmp___16 ;
  int tmp___17 ;
  unsigned char *tmp___18 ;
  int tmp___19 ;
  unsigned char *tmp___20 ;
  x86_imm_buf imb___0 ;
  int tmp___21 ;
  unsigned char *tmp___22 ;
  unsigned char *tmp___23 ;
  unsigned char *tmp___24 ;
  unsigned char *tmp___25 ;
  int tmp___26 ;
  int tmp___27 ;
  unsigned char _amd64_rex_bits___0 ;
  int tmp___28 ;
  unsigned char *tmp___29 ;
  unsigned char *tmp___30 ;
  int tmp___31 ;
  unsigned char _amd64_rex_bits___1 ;
  int tmp___32 ;
  unsigned char *tmp___33 ;
  unsigned char *tmp___34 ;
  amd64_imm_buf imb___1 ;
  unsigned char *tmp___35 ;
  unsigned char *tmp___36 ;
  unsigned char *tmp___37 ;
  unsigned char *tmp___38 ;
  unsigned char *tmp___39 ;
  unsigned char *tmp___40 ;
  unsigned char *tmp___41 ;
  unsigned char *tmp___42 ;
  x86_imm_buf imb___2 ;
  unsigned char *tmp___43 ;
  unsigned char *tmp___44 ;
  unsigned char *tmp___45 ;
  unsigned char *tmp___46 ;
  unsigned char _amd64_rex_bits___2 ;
  unsigned char *tmp___47 ;
  unsigned char *tmp___48 ;

  {
#line 3646
  if (arg->isreg) {
#line 3647
    tmp___31 = is_spilled(arg->value.generic, jit->prepared_args.op, & sreg);
#line 3647
    if (tmp___31) {
#line 3648
      while (1) {
#line 3648
        while (1) {
#line 3648
          _amd64_rex_bits = (unsigned char)0;
#line 3648
          if ((int )_amd64_rex_bits != 0) {
#line 3648
            tmp = jit->ip;
#line 3648
            (jit->ip) ++;
#line 3648
            *tmp = (unsigned char )(0x40 | (int )_amd64_rex_bits);
          }
#line 3648
          break;
        }
#line 3648
        tmp___0 = jit->ip;
#line 3648
        (jit->ip) ++;
#line 3648
        *tmp___0 = (unsigned char)255;
#line 3648
        while (1) {
#line 3648
          if (0) {
#line 3648
            tmp___15 = stack_reg_pos(jit, (int )arg->value.generic);
#line 3648
            if (tmp___15 == 0) {
#line 3648
              while (1) {
#line 3648
                tmp___1 = jit->ip;
#line 3648
                (jit->ip) ++;
#line 3648
                *tmp___1 = (unsigned char )((6 << 3) | 4);
#line 3648
                break;
              }
#line 3648
              while (1) {
#line 3648
                tmp___2 = jit->ip;
#line 3648
                (jit->ip) ++;
#line 3648
                *tmp___2 = (unsigned char )((4 << 3) | 4);
#line 3648
                break;
              }
            } else {
#line 3648
              tmp___13 = stack_reg_pos(jit, (int )arg->value.generic);
#line 3648
              if ((jit_value )tmp___13 >= -128L) {
#line 3648
                tmp___14 = stack_reg_pos(jit, (int )arg->value.generic);
#line 3648
                if ((jit_value )tmp___14 <= 127L) {
#line 3648
                  while (1) {
#line 3648
                    tmp___3 = jit->ip;
#line 3648
                    (jit->ip) ++;
#line 3648
                    *tmp___3 = (unsigned char )(((1 << 6) | (6 << 3)) | 4);
#line 3648
                    break;
                  }
#line 3648
                  while (1) {
#line 3648
                    tmp___4 = jit->ip;
#line 3648
                    (jit->ip) ++;
#line 3648
                    *tmp___4 = (unsigned char )((4 << 3) | 4);
#line 3648
                    break;
                  }
#line 3648
                  while (1) {
#line 3648
                    tmp___5 = stack_reg_pos(jit, (int )arg->value.generic);
#line 3648
                    *(jit->ip) = (unsigned char )(tmp___5 & 0xff);
#line 3648
                    (jit->ip) ++;
#line 3648
                    break;
                  }
                } else {
#line 3648
                  goto _L;
                }
              } else {
                _L: /* CIL Label */ 
#line 3648
                while (1) {
#line 3648
                  tmp___6 = jit->ip;
#line 3648
                  (jit->ip) ++;
#line 3648
                  *tmp___6 = (unsigned char )(((2 << 6) | (6 << 3)) | 4);
#line 3648
                  break;
                }
#line 3648
                while (1) {
#line 3648
                  tmp___7 = jit->ip;
#line 3648
                  (jit->ip) ++;
#line 3648
                  *tmp___7 = (unsigned char )((4 << 3) | 4);
#line 3648
                  break;
                }
#line 3648
                while (1) {
#line 3648
                  tmp___8 = stack_reg_pos(jit, (int )arg->value.generic);
#line 3648
                  imb.val = tmp___8;
#line 3648
                  tmp___9 = jit->ip;
#line 3648
                  (jit->ip) ++;
#line 3648
                  *tmp___9 = imb.b[0];
#line 3648
                  tmp___10 = jit->ip;
#line 3648
                  (jit->ip) ++;
#line 3648
                  *tmp___10 = imb.b[1];
#line 3648
                  tmp___11 = jit->ip;
#line 3648
                  (jit->ip) ++;
#line 3648
                  *tmp___11 = imb.b[2];
#line 3648
                  tmp___12 = jit->ip;
#line 3648
                  (jit->ip) ++;
#line 3648
                  *tmp___12 = imb.b[3];
#line 3648
                  break;
                }
              }
            }
#line 3648
            break;
          }
#line 3648
          tmp___17 = stack_reg_pos(jit, (int )arg->value.generic);
#line 3648
          if (tmp___17 == 0) {

          }
#line 3648
          tmp___26 = stack_reg_pos(jit, (int )arg->value.generic);
#line 3648
          if ((jit_value )tmp___26 >= -128L) {
#line 3648
            tmp___27 = stack_reg_pos(jit, (int )arg->value.generic);
#line 3648
            if ((jit_value )tmp___27 <= 127L) {
#line 3648
              while (1) {
#line 3648
                tmp___18 = jit->ip;
#line 3648
                (jit->ip) ++;
#line 3648
                *tmp___18 = (unsigned char )(((1 << 6) | (6 << 3)) | 5);
#line 3648
                break;
              }
#line 3648
              while (1) {
#line 3648
                tmp___19 = stack_reg_pos(jit, (int )arg->value.generic);
#line 3648
                *(jit->ip) = (unsigned char )(tmp___19 & 0xff);
#line 3648
                (jit->ip) ++;
#line 3648
                break;
              }
            } else {
#line 3648
              goto _L___0;
            }
          } else {
            _L___0: /* CIL Label */ 
#line 3648
            while (1) {
#line 3648
              tmp___20 = jit->ip;
#line 3648
              (jit->ip) ++;
#line 3648
              *tmp___20 = (unsigned char )(((2 << 6) | (6 << 3)) | 5);
#line 3648
              break;
            }
#line 3648
            while (1) {
#line 3648
              tmp___21 = stack_reg_pos(jit, (int )arg->value.generic);
#line 3648
              imb___0.val = tmp___21;
#line 3648
              tmp___22 = jit->ip;
#line 3648
              (jit->ip) ++;
#line 3648
              *tmp___22 = imb___0.b[0];
#line 3648
              tmp___23 = jit->ip;
#line 3648
              (jit->ip) ++;
#line 3648
              *tmp___23 = imb___0.b[1];
#line 3648
              tmp___24 = jit->ip;
#line 3648
              (jit->ip) ++;
#line 3648
              *tmp___24 = imb___0.b[2];
#line 3648
              tmp___25 = jit->ip;
#line 3648
              (jit->ip) ++;
#line 3648
              *tmp___25 = imb___0.b[3];
#line 3648
              break;
            }
          }
#line 3648
          break;
        }
#line 3648
        break;
      }
    } else {
#line 3649
      while (1) {
#line 3649
        while (1) {
#line 3649
          if (sreg > 7) {
#line 3649
            tmp___28 = 1;
          } else {
#line 3649
            tmp___28 = 0;
          }
#line 3649
          _amd64_rex_bits___0 = (unsigned char )tmp___28;
#line 3649
          if ((int )_amd64_rex_bits___0 != 0) {
#line 3649
            tmp___29 = jit->ip;
#line 3649
            (jit->ip) ++;
#line 3649
            *tmp___29 = (unsigned char )(0x40 | (int )_amd64_rex_bits___0);
          }
#line 3649
          break;
        }
#line 3649
        tmp___30 = jit->ip;
#line 3649
        (jit->ip) ++;
#line 3649
        *tmp___30 = (unsigned char )(80 + (sreg & 0x7));
#line 3649
        break;
      }
    }
  } else {
#line 3651
    while (1) {
#line 3651
      while (1) {
#line 3651
        if ((int )sizeof(void *) > 4) {
#line 3651
          tmp___32 = 8;
        } else {
#line 3651
          tmp___32 = 0;
        }
#line 3651
        _amd64_rex_bits___1 = (unsigned char )tmp___32;
#line 3651
        if ((int )_amd64_rex_bits___1 != 0) {
#line 3651
          tmp___33 = jit->ip;
#line 3651
          (jit->ip) ++;
#line 3651
          *tmp___33 = (unsigned char )(0x40 | (int )_amd64_rex_bits___1);
        } else
#line 3651
        if ((int )sizeof(void *) == 1) {
#line 3651
          tmp___33 = jit->ip;
#line 3651
          (jit->ip) ++;
#line 3651
          *tmp___33 = (unsigned char )(0x40 | (int )_amd64_rex_bits___1);
        }
#line 3651
        break;
      }
#line 3651
      tmp___34 = jit->ip;
#line 3651
      (jit->ip) ++;
#line 3651
      *tmp___34 = (unsigned char)184;
#line 3651
      if ((int )sizeof(void *) == 8) {
#line 3651
        while (1) {
#line 3651
          imb___1.val = (size_t )arg->value.generic;
#line 3651
          tmp___35 = jit->ip;
#line 3651
          (jit->ip) ++;
#line 3651
          *tmp___35 = imb___1.b[0];
#line 3651
          tmp___36 = jit->ip;
#line 3651
          (jit->ip) ++;
#line 3651
          *tmp___36 = imb___1.b[1];
#line 3651
          tmp___37 = jit->ip;
#line 3651
          (jit->ip) ++;
#line 3651
          *tmp___37 = imb___1.b[2];
#line 3651
          tmp___38 = jit->ip;
#line 3651
          (jit->ip) ++;
#line 3651
          *tmp___38 = imb___1.b[3];
#line 3651
          tmp___39 = jit->ip;
#line 3651
          (jit->ip) ++;
#line 3651
          *tmp___39 = imb___1.b[4];
#line 3651
          tmp___40 = jit->ip;
#line 3651
          (jit->ip) ++;
#line 3651
          *tmp___40 = imb___1.b[5];
#line 3651
          tmp___41 = jit->ip;
#line 3651
          (jit->ip) ++;
#line 3651
          *tmp___41 = imb___1.b[6];
#line 3651
          tmp___42 = jit->ip;
#line 3651
          (jit->ip) ++;
#line 3651
          *tmp___42 = imb___1.b[7];
#line 3651
          break;
        }
      } else {
#line 3651
        while (1) {
#line 3651
          imb___2.val = (int )((size_t )arg->value.generic);
#line 3651
          tmp___43 = jit->ip;
#line 3651
          (jit->ip) ++;
#line 3651
          *tmp___43 = imb___2.b[0];
#line 3651
          tmp___44 = jit->ip;
#line 3651
          (jit->ip) ++;
#line 3651
          *tmp___44 = imb___2.b[1];
#line 3651
          tmp___45 = jit->ip;
#line 3651
          (jit->ip) ++;
#line 3651
          *tmp___45 = imb___2.b[2];
#line 3651
          tmp___46 = jit->ip;
#line 3651
          (jit->ip) ++;
#line 3651
          *tmp___46 = imb___2.b[3];
#line 3651
          break;
        }
      }
#line 3651
      break;
    }
#line 3652
    while (1) {
#line 3652
      while (1) {
#line 3652
        _amd64_rex_bits___2 = (unsigned char)0;
#line 3652
        if ((int )_amd64_rex_bits___2 != 0) {
#line 3652
          tmp___47 = jit->ip;
#line 3652
          (jit->ip) ++;
#line 3652
          *tmp___47 = (unsigned char )(0x40 | (int )_amd64_rex_bits___2);
        }
#line 3652
        break;
      }
#line 3652
      tmp___48 = jit->ip;
#line 3652
      (jit->ip) ++;
#line 3652
      *tmp___48 = (unsigned char)80;
#line 3652
      break;
    }
  }
#line 3654
  return;
}
}
/* END FUNCTION-DEF emit_push_arg LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF platform_id LOC=UNKNOWN */
static char *platform_id(void) 
{ 


  {
#line 5532
  return ("amd64");
}
}
/* END FUNCTION-DEF platform_id LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF required_stack_space_for_regs LOC=UNKNOWN */
static int required_stack_space_for_regs(struct jit *jit , jit_op *op ) 
{ 
  struct jit_reg_allocator *al ;
  int space ;
  struct jit_func_info *tmp ;
  int i ;
  jit_hw_reg *reg ;
  int tmp___0 ;
  int i___0 ;
  jit_hw_reg *reg___0 ;
  int tmp___1 ;

  {
#line 4016
  al = jit->reg_al;
#line 4017
  space = (int )sizeof(void *);
#line 4018
  tmp = jit_current_func_info(jit);
#line 4018
  if (! tmp->has_prolog) {
#line 4018
    space += (int )sizeof(void *);
  }
#line 4019
  i = 0;
#line 4019
  while (i < al->gp_reg_cnt) {
#line 4020
    reg = al->gp_regs + i;
#line 4021
    if (! reg->callee_saved) {
#line 4021
      tmp___0 = is_active_register(al, reg, op);
#line 4021
      if (tmp___0) {
#line 4022
        space += (int )sizeof(void *);
      }
    }
#line 4019
    i ++;
  }
#line 4024
  i___0 = 0;
#line 4024
  while (i___0 < al->fp_reg_cnt) {
#line 4025
    reg___0 = al->fp_regs + i___0;
#line 4026
    if (! reg___0->callee_saved) {
#line 4026
      tmp___1 = is_active_register(al, reg___0, op);
#line 4026
      if (tmp___1) {
#line 4027
        space = (int )((unsigned long long )space + sizeof(double ) * 2ULL);
      }
    }
#line 4024
    i___0 ++;
  }
#line 4029
  return (space);
}
}
/* END FUNCTION-DEF required_stack_space_for_regs LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jump_adjustment LOC=UNKNOWN */
__inline static void jump_adjustment(struct jit *jit , jit_op *op ) 
{ 
  jit_rmap *cur_regmap ;
  jit_rmap *tgt_regmap ;

  {
#line 6228
  if ((int )op->code == 626) {
#line 6229
    cur_regmap = op->regmap;
#line 6230
    tgt_regmap = (op->jmp_addr)->regmap;
#line 6231
    rmap_sync(op, cur_regmap, tgt_regmap, 1);
#line 6232
    rmap_sync(op, tgt_regmap, cur_regmap, 2);
  }
#line 6234
  return;
}
}
/* END FUNCTION-DEF jump_adjustment LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF emit_ldx_op LOC=UNKNOWN */
static void emit_ldx_op(struct jit *jit , jit_op *op , jit_value a1 , jit_value a2 ,
                        jit_value a3 ) 
{ 
  unsigned char *tmp ;
  unsigned char _amd64_rex_bits ;
  int tmp___0 ;
  int tmp___1 ;
  int tmp___2 ;
  unsigned char *tmp___3 ;
  unsigned char *tmp___4 ;
  unsigned char *tmp___5 ;
  long tmp___6 ;
  unsigned char *tmp___7 ;
  x86_imm_buf imb ;
  unsigned char *tmp___8 ;
  unsigned char *tmp___9 ;
  unsigned char *tmp___10 ;
  unsigned char *tmp___11 ;
  unsigned char *tmp___12 ;
  unsigned char *tmp___13 ;
  unsigned char *tmp___14 ;
  unsigned char *tmp___15 ;
  unsigned char *tmp___16 ;
  unsigned char *tmp___17 ;
  x86_imm_buf imb___0 ;
  unsigned char *tmp___18 ;
  unsigned char *tmp___19 ;
  unsigned char *tmp___20 ;
  unsigned char *tmp___21 ;
  unsigned char *tmp___22 ;
  unsigned char *tmp___23 ;
  unsigned char *tmp___24 ;
  x86_imm_buf imb___1 ;
  unsigned char *tmp___25 ;
  unsigned char *tmp___26 ;
  unsigned char *tmp___27 ;
  unsigned char *tmp___28 ;
  unsigned char _amd64_rex_bits___0 ;
  int tmp___29 ;
  int tmp___30 ;
  int tmp___31 ;
  int tmp___32 ;
  unsigned char *tmp___33 ;
  int tmp___34 ;
  unsigned char *tmp___35 ;
  unsigned char *tmp___36 ;
  unsigned char *tmp___37 ;
  long tmp___38 ;
  unsigned char *tmp___39 ;
  unsigned char *tmp___40 ;
  x86_imm_buf imb___2 ;
  unsigned char *tmp___41 ;
  unsigned char *tmp___42 ;
  unsigned char *tmp___43 ;
  unsigned char *tmp___44 ;
  unsigned char *tmp___45 ;
  unsigned char *tmp___46 ;
  unsigned char *tmp___47 ;
  unsigned char *tmp___48 ;
  unsigned char *tmp___49 ;
  unsigned char *tmp___50 ;
  x86_imm_buf imb___3 ;
  unsigned char *tmp___51 ;
  unsigned char *tmp___52 ;
  unsigned char *tmp___53 ;
  unsigned char *tmp___54 ;
  unsigned char _amd64_rex_bits___1 ;
  int tmp___55 ;
  int tmp___56 ;
  unsigned char *tmp___57 ;
  unsigned char *tmp___58 ;
  unsigned char *tmp___59 ;
  unsigned char *tmp___60 ;
  unsigned char *tmp___61 ;
  unsigned char *tmp___62 ;
  unsigned char *tmp___63 ;
  unsigned char *tmp___64 ;
  x86_imm_buf imb___4 ;
  unsigned char *tmp___65 ;
  unsigned char *tmp___66 ;
  unsigned char *tmp___67 ;
  unsigned char *tmp___68 ;
  unsigned char *tmp___69 ;
  unsigned char *tmp___70 ;
  unsigned char *tmp___71 ;
  x86_imm_buf imb___5 ;
  unsigned char *tmp___72 ;
  unsigned char *tmp___73 ;
  unsigned char *tmp___74 ;
  unsigned char *tmp___75 ;
  unsigned char _amd64_rex_bits___2 ;
  int tmp___76 ;
  int tmp___77 ;
  unsigned char *tmp___78 ;
  unsigned char *tmp___79 ;
  unsigned char *tmp___80 ;
  unsigned char *tmp___81 ;
  long tmp___82 ;
  unsigned char *tmp___83 ;
  unsigned char *tmp___84 ;
  unsigned char *tmp___85 ;
  unsigned char *tmp___86 ;
  unsigned char *tmp___87 ;
  unsigned char *tmp___88 ;
  x86_imm_buf imb___6 ;
  unsigned char *tmp___89 ;
  unsigned char *tmp___90 ;
  unsigned char *tmp___91 ;
  unsigned char *tmp___92 ;
  unsigned char *tmp___93 ;
  unsigned char *tmp___94 ;
  unsigned char *tmp___95 ;
  x86_imm_buf imb___7 ;
  unsigned char *tmp___96 ;
  unsigned char *tmp___97 ;
  unsigned char *tmp___98 ;
  unsigned char *tmp___99 ;
  unsigned char *tmp___100 ;
  unsigned char _amd64_rex_bits___3 ;
  int tmp___101 ;
  int tmp___102 ;
  int tmp___103 ;
  unsigned char *tmp___104 ;
  unsigned char *tmp___105 ;
  unsigned char *tmp___106 ;
  long tmp___107 ;
  unsigned char *tmp___108 ;
  x86_imm_buf imb___8 ;
  unsigned char *tmp___109 ;
  unsigned char *tmp___110 ;
  unsigned char *tmp___111 ;
  unsigned char *tmp___112 ;
  unsigned char *tmp___113 ;
  unsigned char *tmp___114 ;
  unsigned char *tmp___115 ;
  unsigned char *tmp___116 ;
  unsigned char *tmp___117 ;
  unsigned char *tmp___118 ;
  x86_imm_buf imb___9 ;
  unsigned char *tmp___119 ;
  unsigned char *tmp___120 ;
  unsigned char *tmp___121 ;
  unsigned char *tmp___122 ;
  unsigned char *tmp___123 ;
  unsigned char *tmp___124 ;
  unsigned char *tmp___125 ;
  x86_imm_buf imb___10 ;
  unsigned char *tmp___126 ;
  unsigned char *tmp___127 ;
  unsigned char *tmp___128 ;
  unsigned char *tmp___129 ;
  unsigned char _amd64_rex_bits___4 ;
  int tmp___130 ;
  int tmp___131 ;
  unsigned char *tmp___132 ;
  unsigned char *tmp___133 ;
  unsigned char *tmp___134 ;
  unsigned char *tmp___135 ;
  long tmp___136 ;
  unsigned char *tmp___137 ;
  unsigned char *tmp___138 ;
  unsigned char *tmp___139 ;
  unsigned char *tmp___140 ;
  unsigned char *tmp___141 ;
  unsigned char *tmp___142 ;
  x86_imm_buf imb___11 ;
  unsigned char *tmp___143 ;
  unsigned char *tmp___144 ;
  unsigned char *tmp___145 ;
  unsigned char *tmp___146 ;
  unsigned char *tmp___147 ;
  unsigned char *tmp___148 ;
  unsigned char *tmp___149 ;
  x86_imm_buf imb___12 ;
  unsigned char *tmp___150 ;
  unsigned char *tmp___151 ;
  unsigned char *tmp___152 ;
  unsigned char *tmp___153 ;
  unsigned char _amd64_rex_bits___5 ;
  int tmp___154 ;
  int tmp___155 ;
  int tmp___156 ;
  unsigned char *tmp___157 ;
  unsigned char *tmp___158 ;
  unsigned char *tmp___159 ;
  unsigned char *tmp___160 ;
  x86_imm_buf imb___13 ;
  unsigned char *tmp___161 ;
  unsigned char *tmp___162 ;
  unsigned char *tmp___163 ;
  unsigned char *tmp___164 ;
  unsigned char *tmp___165 ;
  unsigned char *tmp___166 ;
  unsigned char *tmp___167 ;
  unsigned char *tmp___168 ;
  unsigned char *tmp___169 ;
  unsigned char *tmp___170 ;
  x86_imm_buf imb___14 ;
  unsigned char *tmp___171 ;
  unsigned char *tmp___172 ;
  unsigned char *tmp___173 ;
  unsigned char *tmp___174 ;
  unsigned char _amd64_rex_bits___6 ;
  int tmp___175 ;
  int tmp___176 ;
  int tmp___177 ;
  unsigned char *tmp___178 ;
  unsigned char *tmp___179 ;
  unsigned char *tmp___180 ;
  unsigned char *tmp___181 ;
  long tmp___182 ;
  unsigned char *tmp___183 ;
  unsigned char *tmp___184 ;
  x86_imm_buf imb___15 ;
  unsigned char *tmp___185 ;
  unsigned char *tmp___186 ;
  unsigned char *tmp___187 ;
  unsigned char *tmp___188 ;
  unsigned char *tmp___189 ;
  unsigned char *tmp___190 ;
  unsigned char *tmp___191 ;
  unsigned char *tmp___192 ;
  unsigned char *tmp___193 ;
  unsigned char *tmp___194 ;
  x86_imm_buf imb___16 ;
  unsigned char *tmp___195 ;
  unsigned char *tmp___196 ;
  unsigned char *tmp___197 ;
  unsigned char *tmp___198 ;
  unsigned char _amd64_rex_bits___7 ;
  int tmp___199 ;
  int tmp___200 ;
  int tmp___201 ;
  int tmp___202 ;
  unsigned char *tmp___203 ;
  int tmp___204 ;
  unsigned char *tmp___205 ;
  unsigned char *tmp___206 ;
  unsigned char *tmp___207 ;
  long tmp___208 ;
  unsigned char *tmp___209 ;
  unsigned char *tmp___210 ;
  x86_imm_buf imb___17 ;
  unsigned char *tmp___211 ;
  unsigned char *tmp___212 ;
  unsigned char *tmp___213 ;
  unsigned char *tmp___214 ;
  unsigned char *tmp___215 ;
  unsigned char *tmp___216 ;
  unsigned char *tmp___217 ;
  unsigned char *tmp___218 ;
  unsigned char *tmp___219 ;
  unsigned char *tmp___220 ;
  x86_imm_buf imb___18 ;
  unsigned char *tmp___221 ;
  unsigned char *tmp___222 ;
  unsigned char *tmp___223 ;
  unsigned char *tmp___224 ;
  unsigned char _amd64_rex_bits___8 ;
  int tmp___225 ;
  int tmp___226 ;
  int tmp___227 ;
  unsigned char *tmp___228 ;
  unsigned char *tmp___229 ;
  unsigned char *tmp___230 ;
  unsigned char *tmp___231 ;
  long tmp___232 ;
  unsigned char *tmp___233 ;
  unsigned char *tmp___234 ;
  x86_imm_buf imb___19 ;
  unsigned char *tmp___235 ;
  unsigned char *tmp___236 ;
  unsigned char *tmp___237 ;
  unsigned char *tmp___238 ;
  unsigned char *tmp___239 ;
  unsigned char *tmp___240 ;
  unsigned char *tmp___241 ;
  unsigned char *tmp___242 ;
  unsigned char *tmp___243 ;
  unsigned char *tmp___244 ;
  x86_imm_buf imb___20 ;
  unsigned char *tmp___245 ;
  unsigned char *tmp___246 ;
  unsigned char *tmp___247 ;
  unsigned char *tmp___248 ;
  long tmp___249 ;

  {
#line 4394
  if ((int )op->arg_size == (int )sizeof(void *)) {
#line 4395
    if ((int )op->code & 0x02) {
#line 4395
      while (1) {
#line 4395
        if ((int )op->arg_size == 2) {
#line 4395
          tmp = jit->ip;
#line 4395
          (jit->ip) ++;
#line 4395
          *tmp = (unsigned char)102;
        }
#line 4395
        while (1) {
#line 4395
          if ((int )op->arg_size > 4) {
#line 4395
            tmp___0 = 8;
          } else {
#line 4395
            tmp___0 = 0;
          }
#line 4395
          if (a1 > 7L) {
#line 4395
            tmp___1 = 4;
          } else {
#line 4395
            tmp___1 = 0;
          }
#line 4395
          if (a2 > 7L) {
#line 4395
            tmp___2 = 1;
          } else {
#line 4395
            tmp___2 = 0;
          }
#line 4395
          _amd64_rex_bits = (unsigned char )((tmp___0 | tmp___1) | tmp___2);
#line 4395
          if ((int )_amd64_rex_bits != 0) {
#line 4395
            tmp___3 = jit->ip;
#line 4395
            (jit->ip) ++;
#line 4395
            *tmp___3 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
          } else
#line 4395
          if ((int )op->arg_size == 1) {
#line 4395
            tmp___3 = jit->ip;
#line 4395
            (jit->ip) ++;
#line 4395
            *tmp___3 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
          }
#line 4395
          break;
        }
#line 4395
        switch ((int )op->arg_size) {
        case 1: 
#line 4395
        tmp___4 = jit->ip;
#line 4395
        (jit->ip) ++;
#line 4395
        *tmp___4 = (unsigned char)138;
#line 4395
        break;
        case 8: 
        case 4: 
        case 2: 
#line 4395
        tmp___5 = jit->ip;
#line 4395
        (jit->ip) ++;
#line 4395
        *tmp___5 = (unsigned char)139;
#line 4395
        break;
        default: 
#line 4395
        tmp___6 = __builtin_expect(1L, 0L);
#line 4395
        if (tmp___6) {
#line 4395
          __assert_rtn((char const   *)"emit_ldx_op", (char const   *)"tmp/src.c",
                       3429, (char const   *)"0");
        }
        }
#line 4395
        while (1) {
#line 4395
          if (a2 == 16L) {
#line 4395
            while (1) {
#line 4395
              tmp___7 = jit->ip;
#line 4395
              (jit->ip) ++;
#line 4395
              *tmp___7 = (unsigned char )((((a1 & 7L) & 7L) << 3) | 5L);
#line 4395
              break;
            }
#line 4395
            while (1) {
#line 4395
              imb.val = (int )a3;
#line 4395
              tmp___8 = jit->ip;
#line 4395
              (jit->ip) ++;
#line 4395
              *tmp___8 = imb.b[0];
#line 4395
              tmp___9 = jit->ip;
#line 4395
              (jit->ip) ++;
#line 4395
              *tmp___9 = imb.b[1];
#line 4395
              tmp___10 = jit->ip;
#line 4395
              (jit->ip) ++;
#line 4395
              *tmp___10 = imb.b[2];
#line 4395
              tmp___11 = jit->ip;
#line 4395
              (jit->ip) ++;
#line 4395
              *tmp___11 = imb.b[3];
#line 4395
              break;
            }
          } else {
#line 4395
            while (1) {
#line 4395
              if ((a2 & 7L) == 4L) {
#line 4395
                if (a3 == 0L) {
#line 4395
                  while (1) {
#line 4395
                    tmp___12 = jit->ip;
#line 4395
                    (jit->ip) ++;
#line 4395
                    *tmp___12 = (unsigned char )((((a1 & 7L) & 7L) << 3) | 4L);
#line 4395
                    break;
                  }
#line 4395
                  while (1) {
#line 4395
                    tmp___13 = jit->ip;
#line 4395
                    (jit->ip) ++;
#line 4395
                    *tmp___13 = (unsigned char )((4 << 3) | 4);
#line 4395
                    break;
                  }
                } else
#line 4395
                if (a3 >= -128L) {
#line 4395
                  if (a3 <= 127L) {
#line 4395
                    while (1) {
#line 4395
                      tmp___14 = jit->ip;
#line 4395
                      (jit->ip) ++;
#line 4395
                      *tmp___14 = (unsigned char )(((long )(1 << 6) | (((a1 & 7L) & 7L) << 3)) | 4L);
#line 4395
                      break;
                    }
#line 4395
                    while (1) {
#line 4395
                      tmp___15 = jit->ip;
#line 4395
                      (jit->ip) ++;
#line 4395
                      *tmp___15 = (unsigned char )((4 << 3) | 4);
#line 4395
                      break;
                    }
#line 4395
                    while (1) {
#line 4395
                      *(jit->ip) = (unsigned char )(a3 & 255L);
#line 4395
                      (jit->ip) ++;
#line 4395
                      break;
                    }
                  } else {
#line 4395
                    goto _L;
                  }
                } else {
                  _L: /* CIL Label */ 
#line 4395
                  while (1) {
#line 4395
                    tmp___16 = jit->ip;
#line 4395
                    (jit->ip) ++;
#line 4395
                    *tmp___16 = (unsigned char )(((long )(2 << 6) | (((a1 & 7L) & 7L) << 3)) | 4L);
#line 4395
                    break;
                  }
#line 4395
                  while (1) {
#line 4395
                    tmp___17 = jit->ip;
#line 4395
                    (jit->ip) ++;
#line 4395
                    *tmp___17 = (unsigned char )((4 << 3) | 4);
#line 4395
                    break;
                  }
#line 4395
                  while (1) {
#line 4395
                    imb___0.val = (int )a3;
#line 4395
                    tmp___18 = jit->ip;
#line 4395
                    (jit->ip) ++;
#line 4395
                    *tmp___18 = imb___0.b[0];
#line 4395
                    tmp___19 = jit->ip;
#line 4395
                    (jit->ip) ++;
#line 4395
                    *tmp___19 = imb___0.b[1];
#line 4395
                    tmp___20 = jit->ip;
#line 4395
                    (jit->ip) ++;
#line 4395
                    *tmp___20 = imb___0.b[2];
#line 4395
                    tmp___21 = jit->ip;
#line 4395
                    (jit->ip) ++;
#line 4395
                    *tmp___21 = imb___0.b[3];
#line 4395
                    break;
                  }
                }
#line 4395
                break;
              }
#line 4395
              if (a3 == 0L) {
#line 4395
                if ((a2 & 7L) != 5L) {
#line 4395
                  while (1) {
#line 4395
                    tmp___22 = jit->ip;
#line 4395
                    (jit->ip) ++;
#line 4395
                    *tmp___22 = (unsigned char )((((a1 & 7L) & 7L) << 3) | ((a2 & 7L) & 7L));
#line 4395
                    break;
                  }
#line 4395
                  break;
                }
              }
#line 4395
              if (a3 >= -128L) {
#line 4395
                if (a3 <= 127L) {
#line 4395
                  while (1) {
#line 4395
                    tmp___23 = jit->ip;
#line 4395
                    (jit->ip) ++;
#line 4395
                    *tmp___23 = (unsigned char )(((long )(1 << 6) | (((a1 & 7L) & 7L) << 3)) | ((a2 & 7L) & 7L));
#line 4395
                    break;
                  }
#line 4395
                  while (1) {
#line 4395
                    *(jit->ip) = (unsigned char )(a3 & 255L);
#line 4395
                    (jit->ip) ++;
#line 4395
                    break;
                  }
                } else {
#line 4395
                  goto _L___0;
                }
              } else {
                _L___0: /* CIL Label */ 
#line 4395
                while (1) {
#line 4395
                  tmp___24 = jit->ip;
#line 4395
                  (jit->ip) ++;
#line 4395
                  *tmp___24 = (unsigned char )(((long )(2 << 6) | (((a1 & 7L) & 7L) << 3)) | ((a2 & 7L) & 7L));
#line 4395
                  break;
                }
#line 4395
                while (1) {
#line 4395
                  imb___1.val = (int )a3;
#line 4395
                  tmp___25 = jit->ip;
#line 4395
                  (jit->ip) ++;
#line 4395
                  *tmp___25 = imb___1.b[0];
#line 4395
                  tmp___26 = jit->ip;
#line 4395
                  (jit->ip) ++;
#line 4395
                  *tmp___26 = imb___1.b[1];
#line 4395
                  tmp___27 = jit->ip;
#line 4395
                  (jit->ip) ++;
#line 4395
                  *tmp___27 = imb___1.b[2];
#line 4395
                  tmp___28 = jit->ip;
#line 4395
                  (jit->ip) ++;
#line 4395
                  *tmp___28 = imb___1.b[3];
#line 4395
                  break;
                }
              }
#line 4395
              break;
            }
          }
#line 4395
          break;
        }
#line 4395
        break;
      }
    } else {
#line 4396
      while (1) {
#line 4396
        while (1) {
#line 4396
          if ((int )op->arg_size > 4) {
#line 4396
            tmp___29 = 8;
          } else {
#line 4396
            tmp___29 = 0;
          }
#line 4396
          if (a1 > 7L) {
#line 4396
            tmp___30 = 4;
          } else {
#line 4396
            tmp___30 = 0;
          }
#line 4396
          if (a3 > 7L) {
#line 4396
            tmp___31 = 2;
          } else {
#line 4396
            tmp___31 = 0;
          }
#line 4396
          if (a2 > 7L) {
#line 4396
            tmp___32 = 1;
          } else {
#line 4396
            tmp___32 = 0;
          }
#line 4396
          _amd64_rex_bits___0 = (unsigned char )(((tmp___29 | tmp___30) | tmp___31) | tmp___32);
#line 4396
          if ((int )_amd64_rex_bits___0 != 0) {
#line 4396
            tmp___33 = jit->ip;
#line 4396
            (jit->ip) ++;
#line 4396
            *tmp___33 = (unsigned char )(0x40 | (int )_amd64_rex_bits___0);
          } else
#line 4396
          if ((int )op->arg_size == 1) {
#line 4396
            tmp___33 = jit->ip;
#line 4396
            (jit->ip) ++;
#line 4396
            *tmp___33 = (unsigned char )(0x40 | (int )_amd64_rex_bits___0);
          }
#line 4396
          break;
        }
#line 4396
        while (1) {
#line 4396
          if ((int )op->arg_size == 8) {
#line 4396
            tmp___34 = 4;
          } else {
#line 4396
            tmp___34 = (int )op->arg_size;
          }
#line 4396
          switch (tmp___34) {
          case 1: 
#line 4396
          tmp___35 = jit->ip;
#line 4396
          (jit->ip) ++;
#line 4396
          *tmp___35 = (unsigned char)138;
#line 4396
          break;
          case 2: 
#line 4396
          tmp___36 = jit->ip;
#line 4396
          (jit->ip) ++;
#line 4396
          *tmp___36 = (unsigned char)102;
          case 4: 
#line 4396
          tmp___37 = jit->ip;
#line 4396
          (jit->ip) ++;
#line 4396
          *tmp___37 = (unsigned char)139;
#line 4396
          break;
          default: 
#line 4396
          tmp___38 = __builtin_expect(1L, 0L);
#line 4396
          if (tmp___38) {
#line 4396
            __assert_rtn((char const   *)"emit_ldx_op", (char const   *)"tmp/src.c",
                         3430, (char const   *)"0");
          }
          }
#line 4396
          while (1) {
#line 4396
            if ((a2 & 7L) == -1L) {
#line 4396
              while (1) {
#line 4396
                tmp___39 = jit->ip;
#line 4396
                (jit->ip) ++;
#line 4396
                *tmp___39 = (unsigned char )((((a1 & 7L) & 7L) << 3) | 4L);
#line 4396
                break;
              }
#line 4396
              while (1) {
#line 4396
                tmp___40 = jit->ip;
#line 4396
                (jit->ip) ++;
#line 4396
                *tmp___40 = (unsigned char )((((a3 & 7L) & 7L) << 3) | 5L);
#line 4396
                break;
              }
#line 4396
              while (1) {
#line 4396
                imb___2.val = 0;
#line 4396
                tmp___41 = jit->ip;
#line 4396
                (jit->ip) ++;
#line 4396
                *tmp___41 = imb___2.b[0];
#line 4396
                tmp___42 = jit->ip;
#line 4396
                (jit->ip) ++;
#line 4396
                *tmp___42 = imb___2.b[1];
#line 4396
                tmp___43 = jit->ip;
#line 4396
                (jit->ip) ++;
#line 4396
                *tmp___43 = imb___2.b[2];
#line 4396
                tmp___44 = jit->ip;
#line 4396
                (jit->ip) ++;
#line 4396
                *tmp___44 = imb___2.b[3];
#line 4396
                break;
              }
            } else
#line 4396
            if ((a2 & 7L) != 5L) {
#line 4396
              while (1) {
#line 4396
                tmp___45 = jit->ip;
#line 4396
                (jit->ip) ++;
#line 4396
                *tmp___45 = (unsigned char )((((a1 & 7L) & 7L) << 3) | 4L);
#line 4396
                break;
              }
#line 4396
              while (1) {
#line 4396
                tmp___46 = jit->ip;
#line 4396
                (jit->ip) ++;
#line 4396
                *tmp___46 = (unsigned char )(((((a3 & 7L) & 7L) & 7L) << 3) | (((a2 & 7L) & 7L) & 7L));
#line 4396
                break;
              }
            } else {
#line 4396
              while (1) {
#line 4396
                tmp___47 = jit->ip;
#line 4396
                (jit->ip) ++;
#line 4396
                *tmp___47 = (unsigned char )(((long )(1 << 6) | (((a1 & 7L) & 7L) << 3)) | 4L);
#line 4396
                break;
              }
#line 4396
              while (1) {
#line 4396
                tmp___48 = jit->ip;
#line 4396
                (jit->ip) ++;
#line 4396
                *tmp___48 = (unsigned char )(((((a3 & 7L) & 7L) & 7L) << 3) | (((a2 & 7L) & 7L) & 7L));
#line 4396
                break;
              }
#line 4396
              while (1) {
#line 4396
                *(jit->ip) = (unsigned char)0;
#line 4396
                (jit->ip) ++;
#line 4396
                break;
              }
            }
#line 4396
            break;
          }
#line 4396
          break;
        }
#line 4396
        break;
      }
    }
#line 4397
    return;
  }
#line 4399
  switch ((int )op->code) {
  case 746: 
#line 4400
  while (1) {
#line 4400
    if ((int )op->arg_size == 4) {
#line 4400
      while (1) {
#line 4400
        while (1) {
#line 4400
          if (a1 > 7L) {
#line 4400
            tmp___55 = 4;
          } else {
#line 4400
            tmp___55 = 0;
          }
#line 4400
          if (a2 > 7L) {
#line 4400
            tmp___56 = 1;
          } else {
#line 4400
            tmp___56 = 0;
          }
#line 4400
          _amd64_rex_bits___1 = (unsigned char )((8 | tmp___55) | tmp___56);
#line 4400
          if ((int )_amd64_rex_bits___1 != 0) {
#line 4400
            tmp___57 = jit->ip;
#line 4400
            (jit->ip) ++;
#line 4400
            *tmp___57 = (unsigned char )(0x40 | (int )_amd64_rex_bits___1);
          }
#line 4400
          break;
        }
#line 4400
        tmp___58 = jit->ip;
#line 4400
        (jit->ip) ++;
#line 4400
        *tmp___58 = (unsigned char)99;
#line 4400
        while (1) {
#line 4400
          if ((a2 & 7L) == 4L) {
#line 4400
            if (a3 == 0L) {
#line 4400
              while (1) {
#line 4400
                tmp___59 = jit->ip;
#line 4400
                (jit->ip) ++;
#line 4400
                *tmp___59 = (unsigned char )((((a1 & 7L) & 7L) << 3) | 4L);
#line 4400
                break;
              }
#line 4400
              while (1) {
#line 4400
                tmp___60 = jit->ip;
#line 4400
                (jit->ip) ++;
#line 4400
                *tmp___60 = (unsigned char )((4 << 3) | 4);
#line 4400
                break;
              }
            } else
#line 4400
            if (a3 >= -128L) {
#line 4400
              if (a3 <= 127L) {
#line 4400
                while (1) {
#line 4400
                  tmp___61 = jit->ip;
#line 4400
                  (jit->ip) ++;
#line 4400
                  *tmp___61 = (unsigned char )(((long )(1 << 6) | (((a1 & 7L) & 7L) << 3)) | 4L);
#line 4400
                  break;
                }
#line 4400
                while (1) {
#line 4400
                  tmp___62 = jit->ip;
#line 4400
                  (jit->ip) ++;
#line 4400
                  *tmp___62 = (unsigned char )((4 << 3) | 4);
#line 4400
                  break;
                }
#line 4400
                while (1) {
#line 4400
                  *(jit->ip) = (unsigned char )(a3 & 255L);
#line 4400
                  (jit->ip) ++;
#line 4400
                  break;
                }
              } else {
#line 4400
                goto _L___1;
              }
            } else {
              _L___1: /* CIL Label */ 
#line 4400
              while (1) {
#line 4400
                tmp___63 = jit->ip;
#line 4400
                (jit->ip) ++;
#line 4400
                *tmp___63 = (unsigned char )(((long )(2 << 6) | (((a1 & 7L) & 7L) << 3)) | 4L);
#line 4400
                break;
              }
#line 4400
              while (1) {
#line 4400
                tmp___64 = jit->ip;
#line 4400
                (jit->ip) ++;
#line 4400
                *tmp___64 = (unsigned char )((4 << 3) | 4);
#line 4400
                break;
              }
#line 4400
              while (1) {
#line 4400
                imb___4.val = (int )a3;
#line 4400
                tmp___65 = jit->ip;
#line 4400
                (jit->ip) ++;
#line 4400
                *tmp___65 = imb___4.b[0];
#line 4400
                tmp___66 = jit->ip;
#line 4400
                (jit->ip) ++;
#line 4400
                *tmp___66 = imb___4.b[1];
#line 4400
                tmp___67 = jit->ip;
#line 4400
                (jit->ip) ++;
#line 4400
                *tmp___67 = imb___4.b[2];
#line 4400
                tmp___68 = jit->ip;
#line 4400
                (jit->ip) ++;
#line 4400
                *tmp___68 = imb___4.b[3];
#line 4400
                break;
              }
            }
#line 4400
            break;
          }
#line 4400
          if (a3 == 0L) {
#line 4400
            if ((a2 & 7L) != 5L) {
#line 4400
              while (1) {
#line 4400
                tmp___69 = jit->ip;
#line 4400
                (jit->ip) ++;
#line 4400
                *tmp___69 = (unsigned char )((((a1 & 7L) & 7L) << 3) | ((a2 & 7L) & 7L));
#line 4400
                break;
              }
#line 4400
              break;
            }
          }
#line 4400
          if (a3 >= -128L) {
#line 4400
            if (a3 <= 127L) {
#line 4400
              while (1) {
#line 4400
                tmp___70 = jit->ip;
#line 4400
                (jit->ip) ++;
#line 4400
                *tmp___70 = (unsigned char )(((long )(1 << 6) | (((a1 & 7L) & 7L) << 3)) | ((a2 & 7L) & 7L));
#line 4400
                break;
              }
#line 4400
              while (1) {
#line 4400
                *(jit->ip) = (unsigned char )(a3 & 255L);
#line 4400
                (jit->ip) ++;
#line 4400
                break;
              }
            } else {
#line 4400
              goto _L___2;
            }
          } else {
            _L___2: /* CIL Label */ 
#line 4400
            while (1) {
#line 4400
              tmp___71 = jit->ip;
#line 4400
              (jit->ip) ++;
#line 4400
              *tmp___71 = (unsigned char )(((long )(2 << 6) | (((a1 & 7L) & 7L) << 3)) | ((a2 & 7L) & 7L));
#line 4400
              break;
            }
#line 4400
            while (1) {
#line 4400
              imb___5.val = (int )a3;
#line 4400
              tmp___72 = jit->ip;
#line 4400
              (jit->ip) ++;
#line 4400
              *tmp___72 = imb___5.b[0];
#line 4400
              tmp___73 = jit->ip;
#line 4400
              (jit->ip) ++;
#line 4400
              *tmp___73 = imb___5.b[1];
#line 4400
              tmp___74 = jit->ip;
#line 4400
              (jit->ip) ++;
#line 4400
              *tmp___74 = imb___5.b[2];
#line 4400
              tmp___75 = jit->ip;
#line 4400
              (jit->ip) ++;
#line 4400
              *tmp___75 = imb___5.b[3];
#line 4400
              break;
            }
          }
#line 4400
          break;
        }
#line 4400
        break;
      }
#line 4400
      break;
    }
#line 4400
    while (1) {
#line 4400
      if (a1 > 7L) {
#line 4400
        tmp___76 = 4;
      } else {
#line 4400
        tmp___76 = 0;
      }
#line 4400
      if (a2 > 7L) {
#line 4400
        tmp___77 = 1;
      } else {
#line 4400
        tmp___77 = 0;
      }
#line 4400
      _amd64_rex_bits___2 = (unsigned char )((8 | tmp___76) | tmp___77);
#line 4400
      if ((int )_amd64_rex_bits___2 != 0) {
#line 4400
        tmp___78 = jit->ip;
#line 4400
        (jit->ip) ++;
#line 4400
        *tmp___78 = (unsigned char )(0x40 | (int )_amd64_rex_bits___2);
      }
#line 4400
      break;
    }
#line 4400
    tmp___79 = jit->ip;
#line 4400
    (jit->ip) ++;
#line 4400
    *tmp___79 = (unsigned char)15;
#line 4400
    switch ((int )op->arg_size) {
    case 1: 
#line 4400
    tmp___80 = jit->ip;
#line 4400
    (jit->ip) ++;
#line 4400
    *tmp___80 = (unsigned char)190;
#line 4400
    break;
    case 2: 
#line 4400
    tmp___81 = jit->ip;
#line 4400
    (jit->ip) ++;
#line 4400
    *tmp___81 = (unsigned char)191;
#line 4400
    break;
    default: 
#line 4400
    tmp___82 = __builtin_expect(1L, 0L);
#line 4400
    if (tmp___82) {
#line 4400
      __assert_rtn((char const   *)"emit_ldx_op", (char const   *)"tmp/src.c", 3435,
                   (char const   *)"0");
    }
    }
#line 4400
    while (1) {
#line 4400
      if ((a2 & 7L) == 4L) {
#line 4400
        if (a3 == 0L) {
#line 4400
          while (1) {
#line 4400
            tmp___83 = jit->ip;
#line 4400
            (jit->ip) ++;
#line 4400
            *tmp___83 = (unsigned char )((((a1 & 7L) & 7L) << 3) | 4L);
#line 4400
            break;
          }
#line 4400
          while (1) {
#line 4400
            tmp___84 = jit->ip;
#line 4400
            (jit->ip) ++;
#line 4400
            *tmp___84 = (unsigned char )((4 << 3) | 4);
#line 4400
            break;
          }
        } else
#line 4400
        if (a3 >= -128L) {
#line 4400
          if (a3 <= 127L) {
#line 4400
            while (1) {
#line 4400
              tmp___85 = jit->ip;
#line 4400
              (jit->ip) ++;
#line 4400
              *tmp___85 = (unsigned char )(((long )(1 << 6) | (((a1 & 7L) & 7L) << 3)) | 4L);
#line 4400
              break;
            }
#line 4400
            while (1) {
#line 4400
              tmp___86 = jit->ip;
#line 4400
              (jit->ip) ++;
#line 4400
              *tmp___86 = (unsigned char )((4 << 3) | 4);
#line 4400
              break;
            }
#line 4400
            while (1) {
#line 4400
              *(jit->ip) = (unsigned char )(a3 & 255L);
#line 4400
              (jit->ip) ++;
#line 4400
              break;
            }
          } else {
#line 4400
            goto _L___3;
          }
        } else {
          _L___3: /* CIL Label */ 
#line 4400
          while (1) {
#line 4400
            tmp___87 = jit->ip;
#line 4400
            (jit->ip) ++;
#line 4400
            *tmp___87 = (unsigned char )(((long )(2 << 6) | (((a1 & 7L) & 7L) << 3)) | 4L);
#line 4400
            break;
          }
#line 4400
          while (1) {
#line 4400
            tmp___88 = jit->ip;
#line 4400
            (jit->ip) ++;
#line 4400
            *tmp___88 = (unsigned char )((4 << 3) | 4);
#line 4400
            break;
          }
#line 4400
          while (1) {
#line 4400
            imb___6.val = (int )a3;
#line 4400
            tmp___89 = jit->ip;
#line 4400
            (jit->ip) ++;
#line 4400
            *tmp___89 = imb___6.b[0];
#line 4400
            tmp___90 = jit->ip;
#line 4400
            (jit->ip) ++;
#line 4400
            *tmp___90 = imb___6.b[1];
#line 4400
            tmp___91 = jit->ip;
#line 4400
            (jit->ip) ++;
#line 4400
            *tmp___91 = imb___6.b[2];
#line 4400
            tmp___92 = jit->ip;
#line 4400
            (jit->ip) ++;
#line 4400
            *tmp___92 = imb___6.b[3];
#line 4400
            break;
          }
        }
#line 4400
        break;
      }
#line 4400
      if (a3 == 0L) {
#line 4400
        if ((a2 & 7L) != 5L) {
#line 4400
          while (1) {
#line 4400
            tmp___93 = jit->ip;
#line 4400
            (jit->ip) ++;
#line 4400
            *tmp___93 = (unsigned char )((((a1 & 7L) & 7L) << 3) | ((a2 & 7L) & 7L));
#line 4400
            break;
          }
#line 4400
          break;
        }
      }
#line 4400
      if (a3 >= -128L) {
#line 4400
        if (a3 <= 127L) {
#line 4400
          while (1) {
#line 4400
            tmp___94 = jit->ip;
#line 4400
            (jit->ip) ++;
#line 4400
            *tmp___94 = (unsigned char )(((long )(1 << 6) | (((a1 & 7L) & 7L) << 3)) | ((a2 & 7L) & 7L));
#line 4400
            break;
          }
#line 4400
          while (1) {
#line 4400
            *(jit->ip) = (unsigned char )(a3 & 255L);
#line 4400
            (jit->ip) ++;
#line 4400
            break;
          }
        } else {
#line 4400
          goto _L___4;
        }
      } else {
        _L___4: /* CIL Label */ 
#line 4400
        while (1) {
#line 4400
          tmp___95 = jit->ip;
#line 4400
          (jit->ip) ++;
#line 4400
          *tmp___95 = (unsigned char )(((long )(2 << 6) | (((a1 & 7L) & 7L) << 3)) | ((a2 & 7L) & 7L));
#line 4400
          break;
        }
#line 4400
        while (1) {
#line 4400
          imb___7.val = (int )a3;
#line 4400
          tmp___96 = jit->ip;
#line 4400
          (jit->ip) ++;
#line 4400
          *tmp___96 = imb___7.b[0];
#line 4400
          tmp___97 = jit->ip;
#line 4400
          (jit->ip) ++;
#line 4400
          *tmp___97 = imb___7.b[1];
#line 4400
          tmp___98 = jit->ip;
#line 4400
          (jit->ip) ++;
#line 4400
          *tmp___98 = imb___7.b[2];
#line 4400
          tmp___99 = jit->ip;
#line 4400
          (jit->ip) ++;
#line 4400
          *tmp___99 = imb___7.b[3];
#line 4400
          break;
        }
      }
#line 4400
      break;
    }
#line 4400
    break;
  }
#line 4400
  break;
  case 750: 
#line 4401
  while (1) {
#line 4401
    if ((int )op->arg_size == 8) {
#line 4401
      goto _L___7;
    } else
#line 4401
    if ((int )op->arg_size == 4) {
      _L___7: /* CIL Label */ 
#line 4401
      while (1) {
#line 4401
        if ((int )op->arg_size == 2) {
#line 4401
          tmp___100 = jit->ip;
#line 4401
          (jit->ip) ++;
#line 4401
          *tmp___100 = (unsigned char)102;
        }
#line 4401
        while (1) {
#line 4401
          if ((int )op->arg_size > 4) {
#line 4401
            tmp___101 = 8;
          } else {
#line 4401
            tmp___101 = 0;
          }
#line 4401
          if (a1 > 7L) {
#line 4401
            tmp___102 = 4;
          } else {
#line 4401
            tmp___102 = 0;
          }
#line 4401
          if (a2 > 7L) {
#line 4401
            tmp___103 = 1;
          } else {
#line 4401
            tmp___103 = 0;
          }
#line 4401
          _amd64_rex_bits___3 = (unsigned char )((tmp___101 | tmp___102) | tmp___103);
#line 4401
          if ((int )_amd64_rex_bits___3 != 0) {
#line 4401
            tmp___104 = jit->ip;
#line 4401
            (jit->ip) ++;
#line 4401
            *tmp___104 = (unsigned char )(0x40 | (int )_amd64_rex_bits___3);
          } else
#line 4401
          if ((int )op->arg_size == 1) {
#line 4401
            tmp___104 = jit->ip;
#line 4401
            (jit->ip) ++;
#line 4401
            *tmp___104 = (unsigned char )(0x40 | (int )_amd64_rex_bits___3);
          }
#line 4401
          break;
        }
#line 4401
        switch ((int )op->arg_size) {
        case 1: 
#line 4401
        tmp___105 = jit->ip;
#line 4401
        (jit->ip) ++;
#line 4401
        *tmp___105 = (unsigned char)138;
#line 4401
        break;
        case 8: 
        case 4: 
        case 2: 
#line 4401
        tmp___106 = jit->ip;
#line 4401
        (jit->ip) ++;
#line 4401
        *tmp___106 = (unsigned char)139;
#line 4401
        break;
        default: 
#line 4401
        tmp___107 = __builtin_expect(1L, 0L);
#line 4401
        if (tmp___107) {
#line 4401
          __assert_rtn((char const   *)"emit_ldx_op", (char const   *)"tmp/src.c",
                       3436, (char const   *)"0");
        }
        }
#line 4401
        while (1) {
#line 4401
          if (a2 == 16L) {
#line 4401
            while (1) {
#line 4401
              tmp___108 = jit->ip;
#line 4401
              (jit->ip) ++;
#line 4401
              *tmp___108 = (unsigned char )((((a1 & 7L) & 7L) << 3) | 5L);
#line 4401
              break;
            }
#line 4401
            while (1) {
#line 4401
              imb___8.val = (int )a3;
#line 4401
              tmp___109 = jit->ip;
#line 4401
              (jit->ip) ++;
#line 4401
              *tmp___109 = imb___8.b[0];
#line 4401
              tmp___110 = jit->ip;
#line 4401
              (jit->ip) ++;
#line 4401
              *tmp___110 = imb___8.b[1];
#line 4401
              tmp___111 = jit->ip;
#line 4401
              (jit->ip) ++;
#line 4401
              *tmp___111 = imb___8.b[2];
#line 4401
              tmp___112 = jit->ip;
#line 4401
              (jit->ip) ++;
#line 4401
              *tmp___112 = imb___8.b[3];
#line 4401
              break;
            }
          } else {
#line 4401
            while (1) {
#line 4401
              if ((a2 & 7L) == 4L) {
#line 4401
                if (a3 == 0L) {
#line 4401
                  while (1) {
#line 4401
                    tmp___113 = jit->ip;
#line 4401
                    (jit->ip) ++;
#line 4401
                    *tmp___113 = (unsigned char )((((a1 & 7L) & 7L) << 3) | 4L);
#line 4401
                    break;
                  }
#line 4401
                  while (1) {
#line 4401
                    tmp___114 = jit->ip;
#line 4401
                    (jit->ip) ++;
#line 4401
                    *tmp___114 = (unsigned char )((4 << 3) | 4);
#line 4401
                    break;
                  }
                } else
#line 4401
                if (a3 >= -128L) {
#line 4401
                  if (a3 <= 127L) {
#line 4401
                    while (1) {
#line 4401
                      tmp___115 = jit->ip;
#line 4401
                      (jit->ip) ++;
#line 4401
                      *tmp___115 = (unsigned char )(((long )(1 << 6) | (((a1 & 7L) & 7L) << 3)) | 4L);
#line 4401
                      break;
                    }
#line 4401
                    while (1) {
#line 4401
                      tmp___116 = jit->ip;
#line 4401
                      (jit->ip) ++;
#line 4401
                      *tmp___116 = (unsigned char )((4 << 3) | 4);
#line 4401
                      break;
                    }
#line 4401
                    while (1) {
#line 4401
                      *(jit->ip) = (unsigned char )(a3 & 255L);
#line 4401
                      (jit->ip) ++;
#line 4401
                      break;
                    }
                  } else {
#line 4401
                    goto _L___5;
                  }
                } else {
                  _L___5: /* CIL Label */ 
#line 4401
                  while (1) {
#line 4401
                    tmp___117 = jit->ip;
#line 4401
                    (jit->ip) ++;
#line 4401
                    *tmp___117 = (unsigned char )(((long )(2 << 6) | (((a1 & 7L) & 7L) << 3)) | 4L);
#line 4401
                    break;
                  }
#line 4401
                  while (1) {
#line 4401
                    tmp___118 = jit->ip;
#line 4401
                    (jit->ip) ++;
#line 4401
                    *tmp___118 = (unsigned char )((4 << 3) | 4);
#line 4401
                    break;
                  }
#line 4401
                  while (1) {
#line 4401
                    imb___9.val = (int )a3;
#line 4401
                    tmp___119 = jit->ip;
#line 4401
                    (jit->ip) ++;
#line 4401
                    *tmp___119 = imb___9.b[0];
#line 4401
                    tmp___120 = jit->ip;
#line 4401
                    (jit->ip) ++;
#line 4401
                    *tmp___120 = imb___9.b[1];
#line 4401
                    tmp___121 = jit->ip;
#line 4401
                    (jit->ip) ++;
#line 4401
                    *tmp___121 = imb___9.b[2];
#line 4401
                    tmp___122 = jit->ip;
#line 4401
                    (jit->ip) ++;
#line 4401
                    *tmp___122 = imb___9.b[3];
#line 4401
                    break;
                  }
                }
#line 4401
                break;
              }
#line 4401
              if (a3 == 0L) {
#line 4401
                if ((a2 & 7L) != 5L) {
#line 4401
                  while (1) {
#line 4401
                    tmp___123 = jit->ip;
#line 4401
                    (jit->ip) ++;
#line 4401
                    *tmp___123 = (unsigned char )((((a1 & 7L) & 7L) << 3) | ((a2 & 7L) & 7L));
#line 4401
                    break;
                  }
#line 4401
                  break;
                }
              }
#line 4401
              if (a3 >= -128L) {
#line 4401
                if (a3 <= 127L) {
#line 4401
                  while (1) {
#line 4401
                    tmp___124 = jit->ip;
#line 4401
                    (jit->ip) ++;
#line 4401
                    *tmp___124 = (unsigned char )(((long )(1 << 6) | (((a1 & 7L) & 7L) << 3)) | ((a2 & 7L) & 7L));
#line 4401
                    break;
                  }
#line 4401
                  while (1) {
#line 4401
                    *(jit->ip) = (unsigned char )(a3 & 255L);
#line 4401
                    (jit->ip) ++;
#line 4401
                    break;
                  }
                } else {
#line 4401
                  goto _L___6;
                }
              } else {
                _L___6: /* CIL Label */ 
#line 4401
                while (1) {
#line 4401
                  tmp___125 = jit->ip;
#line 4401
                  (jit->ip) ++;
#line 4401
                  *tmp___125 = (unsigned char )(((long )(2 << 6) | (((a1 & 7L) & 7L) << 3)) | ((a2 & 7L) & 7L));
#line 4401
                  break;
                }
#line 4401
                while (1) {
#line 4401
                  imb___10.val = (int )a3;
#line 4401
                  tmp___126 = jit->ip;
#line 4401
                  (jit->ip) ++;
#line 4401
                  *tmp___126 = imb___10.b[0];
#line 4401
                  tmp___127 = jit->ip;
#line 4401
                  (jit->ip) ++;
#line 4401
                  *tmp___127 = imb___10.b[1];
#line 4401
                  tmp___128 = jit->ip;
#line 4401
                  (jit->ip) ++;
#line 4401
                  *tmp___128 = imb___10.b[2];
#line 4401
                  tmp___129 = jit->ip;
#line 4401
                  (jit->ip) ++;
#line 4401
                  *tmp___129 = imb___10.b[3];
#line 4401
                  break;
                }
              }
#line 4401
              break;
            }
          }
#line 4401
          break;
        }
#line 4401
        break;
      }
#line 4401
      break;
    }
#line 4401
    while (1) {
#line 4401
      if (a1 > 7L) {
#line 4401
        tmp___130 = 4;
      } else {
#line 4401
        tmp___130 = 0;
      }
#line 4401
      if (a2 > 7L) {
#line 4401
        tmp___131 = 1;
      } else {
#line 4401
        tmp___131 = 0;
      }
#line 4401
      _amd64_rex_bits___4 = (unsigned char )((8 | tmp___130) | tmp___131);
#line 4401
      if ((int )_amd64_rex_bits___4 != 0) {
#line 4401
        tmp___132 = jit->ip;
#line 4401
        (jit->ip) ++;
#line 4401
        *tmp___132 = (unsigned char )(0x40 | (int )_amd64_rex_bits___4);
      }
#line 4401
      break;
    }
#line 4401
    tmp___133 = jit->ip;
#line 4401
    (jit->ip) ++;
#line 4401
    *tmp___133 = (unsigned char)15;
#line 4401
    switch ((int )op->arg_size) {
    case 1: 
#line 4401
    tmp___134 = jit->ip;
#line 4401
    (jit->ip) ++;
#line 4401
    *tmp___134 = (unsigned char)182;
#line 4401
    break;
    case 2: 
#line 4401
    tmp___135 = jit->ip;
#line 4401
    (jit->ip) ++;
#line 4401
    *tmp___135 = (unsigned char)183;
#line 4401
    break;
    default: 
#line 4401
    tmp___136 = __builtin_expect(1L, 0L);
#line 4401
    if (tmp___136) {
#line 4401
      __assert_rtn((char const   *)"emit_ldx_op", (char const   *)"tmp/src.c", 3436,
                   (char const   *)"0");
    }
    }
#line 4401
    while (1) {
#line 4401
      if ((a2 & 7L) == 4L) {
#line 4401
        if (a3 == 0L) {
#line 4401
          while (1) {
#line 4401
            tmp___137 = jit->ip;
#line 4401
            (jit->ip) ++;
#line 4401
            *tmp___137 = (unsigned char )((((a1 & 7L) & 7L) << 3) | 4L);
#line 4401
            break;
          }
#line 4401
          while (1) {
#line 4401
            tmp___138 = jit->ip;
#line 4401
            (jit->ip) ++;
#line 4401
            *tmp___138 = (unsigned char )((4 << 3) | 4);
#line 4401
            break;
          }
        } else
#line 4401
        if (a3 >= -128L) {
#line 4401
          if (a3 <= 127L) {
#line 4401
            while (1) {
#line 4401
              tmp___139 = jit->ip;
#line 4401
              (jit->ip) ++;
#line 4401
              *tmp___139 = (unsigned char )(((long )(1 << 6) | (((a1 & 7L) & 7L) << 3)) | 4L);
#line 4401
              break;
            }
#line 4401
            while (1) {
#line 4401
              tmp___140 = jit->ip;
#line 4401
              (jit->ip) ++;
#line 4401
              *tmp___140 = (unsigned char )((4 << 3) | 4);
#line 4401
              break;
            }
#line 4401
            while (1) {
#line 4401
              *(jit->ip) = (unsigned char )(a3 & 255L);
#line 4401
              (jit->ip) ++;
#line 4401
              break;
            }
          } else {
#line 4401
            goto _L___8;
          }
        } else {
          _L___8: /* CIL Label */ 
#line 4401
          while (1) {
#line 4401
            tmp___141 = jit->ip;
#line 4401
            (jit->ip) ++;
#line 4401
            *tmp___141 = (unsigned char )(((long )(2 << 6) | (((a1 & 7L) & 7L) << 3)) | 4L);
#line 4401
            break;
          }
#line 4401
          while (1) {
#line 4401
            tmp___142 = jit->ip;
#line 4401
            (jit->ip) ++;
#line 4401
            *tmp___142 = (unsigned char )((4 << 3) | 4);
#line 4401
            break;
          }
#line 4401
          while (1) {
#line 4401
            imb___11.val = (int )a3;
#line 4401
            tmp___143 = jit->ip;
#line 4401
            (jit->ip) ++;
#line 4401
            *tmp___143 = imb___11.b[0];
#line 4401
            tmp___144 = jit->ip;
#line 4401
            (jit->ip) ++;
#line 4401
            *tmp___144 = imb___11.b[1];
#line 4401
            tmp___145 = jit->ip;
#line 4401
            (jit->ip) ++;
#line 4401
            *tmp___145 = imb___11.b[2];
#line 4401
            tmp___146 = jit->ip;
#line 4401
            (jit->ip) ++;
#line 4401
            *tmp___146 = imb___11.b[3];
#line 4401
            break;
          }
        }
#line 4401
        break;
      }
#line 4401
      if (a3 == 0L) {
#line 4401
        if ((a2 & 7L) != 5L) {
#line 4401
          while (1) {
#line 4401
            tmp___147 = jit->ip;
#line 4401
            (jit->ip) ++;
#line 4401
            *tmp___147 = (unsigned char )((((a1 & 7L) & 7L) << 3) | ((a2 & 7L) & 7L));
#line 4401
            break;
          }
#line 4401
          break;
        }
      }
#line 4401
      if (a3 >= -128L) {
#line 4401
        if (a3 <= 127L) {
#line 4401
          while (1) {
#line 4401
            tmp___148 = jit->ip;
#line 4401
            (jit->ip) ++;
#line 4401
            *tmp___148 = (unsigned char )(((long )(1 << 6) | (((a1 & 7L) & 7L) << 3)) | ((a2 & 7L) & 7L));
#line 4401
            break;
          }
#line 4401
          while (1) {
#line 4401
            *(jit->ip) = (unsigned char )(a3 & 255L);
#line 4401
            (jit->ip) ++;
#line 4401
            break;
          }
        } else {
#line 4401
          goto _L___9;
        }
      } else {
        _L___9: /* CIL Label */ 
#line 4401
        while (1) {
#line 4401
          tmp___149 = jit->ip;
#line 4401
          (jit->ip) ++;
#line 4401
          *tmp___149 = (unsigned char )(((long )(2 << 6) | (((a1 & 7L) & 7L) << 3)) | ((a2 & 7L) & 7L));
#line 4401
          break;
        }
#line 4401
        while (1) {
#line 4401
          imb___12.val = (int )a3;
#line 4401
          tmp___150 = jit->ip;
#line 4401
          (jit->ip) ++;
#line 4401
          *tmp___150 = imb___12.b[0];
#line 4401
          tmp___151 = jit->ip;
#line 4401
          (jit->ip) ++;
#line 4401
          *tmp___151 = imb___12.b[1];
#line 4401
          tmp___152 = jit->ip;
#line 4401
          (jit->ip) ++;
#line 4401
          *tmp___152 = imb___12.b[2];
#line 4401
          tmp___153 = jit->ip;
#line 4401
          (jit->ip) ++;
#line 4401
          *tmp___153 = imb___12.b[3];
#line 4401
          break;
        }
      }
#line 4401
      break;
    }
#line 4401
    break;
  }
#line 4401
  break;
  case 745: 
#line 4402
  while (1) {
#line 4402
    if ((int )op->arg_size == 4) {
#line 4402
      while (1) {
#line 4402
        while (1) {
#line 4402
          if (a1 > 7L) {
#line 4402
            tmp___154 = 4;
          } else {
#line 4402
            tmp___154 = 0;
          }
#line 4402
          if (a3 > 7L) {
#line 4402
            tmp___155 = 2;
          } else {
#line 4402
            tmp___155 = 0;
          }
#line 4402
          if (a2 > 7L) {
#line 4402
            tmp___156 = 1;
          } else {
#line 4402
            tmp___156 = 0;
          }
#line 4402
          _amd64_rex_bits___5 = (unsigned char )(((8 | tmp___154) | tmp___155) | tmp___156);
#line 4402
          if ((int )_amd64_rex_bits___5 != 0) {
#line 4402
            tmp___157 = jit->ip;
#line 4402
            (jit->ip) ++;
#line 4402
            *tmp___157 = (unsigned char )(0x40 | (int )_amd64_rex_bits___5);
          }
#line 4402
          break;
        }
#line 4402
        tmp___158 = jit->ip;
#line 4402
        (jit->ip) ++;
#line 4402
        *tmp___158 = (unsigned char)99;
#line 4402
        while (1) {
#line 4402
          if ((a2 & 7L) == -1L) {
#line 4402
            while (1) {
#line 4402
              tmp___159 = jit->ip;
#line 4402
              (jit->ip) ++;
#line 4402
              *tmp___159 = (unsigned char )((((a1 & 7L) & 7L) << 3) | 4L);
#line 4402
              break;
            }
#line 4402
            while (1) {
#line 4402
              tmp___160 = jit->ip;
#line 4402
              (jit->ip) ++;
#line 4402
              *tmp___160 = (unsigned char )((((a3 & 7L) & 7L) << 3) | 5L);
#line 4402
              break;
            }
#line 4402
            while (1) {
#line 4402
              imb___13.val = 0;
#line 4402
              tmp___161 = jit->ip;
#line 4402
              (jit->ip) ++;
#line 4402
              *tmp___161 = imb___13.b[0];
#line 4402
              tmp___162 = jit->ip;
#line 4402
              (jit->ip) ++;
#line 4402
              *tmp___162 = imb___13.b[1];
#line 4402
              tmp___163 = jit->ip;
#line 4402
              (jit->ip) ++;
#line 4402
              *tmp___163 = imb___13.b[2];
#line 4402
              tmp___164 = jit->ip;
#line 4402
              (jit->ip) ++;
#line 4402
              *tmp___164 = imb___13.b[3];
#line 4402
              break;
            }
          } else
#line 4402
          if ((a2 & 7L) != 5L) {
#line 4402
            while (1) {
#line 4402
              tmp___165 = jit->ip;
#line 4402
              (jit->ip) ++;
#line 4402
              *tmp___165 = (unsigned char )((((a1 & 7L) & 7L) << 3) | 4L);
#line 4402
              break;
            }
#line 4402
            while (1) {
#line 4402
              tmp___166 = jit->ip;
#line 4402
              (jit->ip) ++;
#line 4402
              *tmp___166 = (unsigned char )(((((a3 & 7L) & 7L) & 7L) << 3) | (((a2 & 7L) & 7L) & 7L));
#line 4402
              break;
            }
          } else {
#line 4402
            while (1) {
#line 4402
              tmp___167 = jit->ip;
#line 4402
              (jit->ip) ++;
#line 4402
              *tmp___167 = (unsigned char )(((long )(1 << 6) | (((a1 & 7L) & 7L) << 3)) | 4L);
#line 4402
              break;
            }
#line 4402
            while (1) {
#line 4402
              tmp___168 = jit->ip;
#line 4402
              (jit->ip) ++;
#line 4402
              *tmp___168 = (unsigned char )(((((a3 & 7L) & 7L) & 7L) << 3) | (((a2 & 7L) & 7L) & 7L));
#line 4402
              break;
            }
#line 4402
            while (1) {
#line 4402
              *(jit->ip) = (unsigned char)0;
#line 4402
              (jit->ip) ++;
#line 4402
              break;
            }
          }
#line 4402
          break;
        }
#line 4402
        break;
      }
#line 4402
      break;
    }
#line 4402
    while (1) {
#line 4402
      if (a1 > 7L) {
#line 4402
        tmp___175 = 4;
      } else {
#line 4402
        tmp___175 = 0;
      }
#line 4402
      if (a3 > 7L) {
#line 4402
        tmp___176 = 2;
      } else {
#line 4402
        tmp___176 = 0;
      }
#line 4402
      if (a2 > 7L) {
#line 4402
        tmp___177 = 1;
      } else {
#line 4402
        tmp___177 = 0;
      }
#line 4402
      _amd64_rex_bits___6 = (unsigned char )(((8 | tmp___175) | tmp___176) | tmp___177);
#line 4402
      if ((int )_amd64_rex_bits___6 != 0) {
#line 4402
        tmp___178 = jit->ip;
#line 4402
        (jit->ip) ++;
#line 4402
        *tmp___178 = (unsigned char )(0x40 | (int )_amd64_rex_bits___6);
      }
#line 4402
      break;
    }
#line 4402
    tmp___179 = jit->ip;
#line 4402
    (jit->ip) ++;
#line 4402
    *tmp___179 = (unsigned char)15;
#line 4402
    switch ((int )op->arg_size) {
    case 1: 
#line 4402
    tmp___180 = jit->ip;
#line 4402
    (jit->ip) ++;
#line 4402
    *tmp___180 = (unsigned char)190;
#line 4402
    break;
    case 2: 
#line 4402
    tmp___181 = jit->ip;
#line 4402
    (jit->ip) ++;
#line 4402
    *tmp___181 = (unsigned char)191;
#line 4402
    break;
    default: 
#line 4402
    tmp___182 = __builtin_expect(1L, 0L);
#line 4402
    if (tmp___182) {
#line 4402
      __assert_rtn((char const   *)"emit_ldx_op", (char const   *)"tmp/src.c", 3437,
                   (char const   *)"0");
    }
    }
#line 4402
    while (1) {
#line 4402
      if ((a2 & 7L) == -1L) {
#line 4402
        while (1) {
#line 4402
          tmp___183 = jit->ip;
#line 4402
          (jit->ip) ++;
#line 4402
          *tmp___183 = (unsigned char )((((a1 & 7L) & 7L) << 3) | 4L);
#line 4402
          break;
        }
#line 4402
        while (1) {
#line 4402
          tmp___184 = jit->ip;
#line 4402
          (jit->ip) ++;
#line 4402
          *tmp___184 = (unsigned char )((((a3 & 7L) & 7L) << 3) | 5L);
#line 4402
          break;
        }
#line 4402
        while (1) {
#line 4402
          imb___15.val = 0;
#line 4402
          tmp___185 = jit->ip;
#line 4402
          (jit->ip) ++;
#line 4402
          *tmp___185 = imb___15.b[0];
#line 4402
          tmp___186 = jit->ip;
#line 4402
          (jit->ip) ++;
#line 4402
          *tmp___186 = imb___15.b[1];
#line 4402
          tmp___187 = jit->ip;
#line 4402
          (jit->ip) ++;
#line 4402
          *tmp___187 = imb___15.b[2];
#line 4402
          tmp___188 = jit->ip;
#line 4402
          (jit->ip) ++;
#line 4402
          *tmp___188 = imb___15.b[3];
#line 4402
          break;
        }
      } else
#line 4402
      if ((a2 & 7L) != 5L) {
#line 4402
        while (1) {
#line 4402
          tmp___189 = jit->ip;
#line 4402
          (jit->ip) ++;
#line 4402
          *tmp___189 = (unsigned char )((((a1 & 7L) & 7L) << 3) | 4L);
#line 4402
          break;
        }
#line 4402
        while (1) {
#line 4402
          tmp___190 = jit->ip;
#line 4402
          (jit->ip) ++;
#line 4402
          *tmp___190 = (unsigned char )(((((a3 & 7L) & 7L) & 7L) << 3) | (((a2 & 7L) & 7L) & 7L));
#line 4402
          break;
        }
      } else {
#line 4402
        while (1) {
#line 4402
          tmp___191 = jit->ip;
#line 4402
          (jit->ip) ++;
#line 4402
          *tmp___191 = (unsigned char )(((long )(1 << 6) | (((a1 & 7L) & 7L) << 3)) | 4L);
#line 4402
          break;
        }
#line 4402
        while (1) {
#line 4402
          tmp___192 = jit->ip;
#line 4402
          (jit->ip) ++;
#line 4402
          *tmp___192 = (unsigned char )(((((a3 & 7L) & 7L) & 7L) << 3) | (((a2 & 7L) & 7L) & 7L));
#line 4402
          break;
        }
#line 4402
        while (1) {
#line 4402
          *(jit->ip) = (unsigned char)0;
#line 4402
          (jit->ip) ++;
#line 4402
          break;
        }
      }
#line 4402
      break;
    }
#line 4402
    break;
  }
#line 4402
  break;
  case 749: 
#line 4403
  while (1) {
#line 4403
    if ((int )op->arg_size == 8) {
#line 4403
      goto _L___10;
    } else
#line 4403
    if ((int )op->arg_size == 4) {
      _L___10: /* CIL Label */ 
#line 4403
      while (1) {
#line 4403
        while (1) {
#line 4403
          if ((int )op->arg_size > 4) {
#line 4403
            tmp___199 = 8;
          } else {
#line 4403
            tmp___199 = 0;
          }
#line 4403
          if (a1 > 7L) {
#line 4403
            tmp___200 = 4;
          } else {
#line 4403
            tmp___200 = 0;
          }
#line 4403
          if (a3 > 7L) {
#line 4403
            tmp___201 = 2;
          } else {
#line 4403
            tmp___201 = 0;
          }
#line 4403
          if (a2 > 7L) {
#line 4403
            tmp___202 = 1;
          } else {
#line 4403
            tmp___202 = 0;
          }
#line 4403
          _amd64_rex_bits___7 = (unsigned char )(((tmp___199 | tmp___200) | tmp___201) | tmp___202);
#line 4403
          if ((int )_amd64_rex_bits___7 != 0) {
#line 4403
            tmp___203 = jit->ip;
#line 4403
            (jit->ip) ++;
#line 4403
            *tmp___203 = (unsigned char )(0x40 | (int )_amd64_rex_bits___7);
          } else
#line 4403
          if ((int )op->arg_size == 1) {
#line 4403
            tmp___203 = jit->ip;
#line 4403
            (jit->ip) ++;
#line 4403
            *tmp___203 = (unsigned char )(0x40 | (int )_amd64_rex_bits___7);
          }
#line 4403
          break;
        }
#line 4403
        while (1) {
#line 4403
          if ((int )op->arg_size == 8) {
#line 4403
            tmp___204 = 4;
          } else {
#line 4403
            tmp___204 = (int )op->arg_size;
          }
#line 4403
          switch (tmp___204) {
          case 1: 
#line 4403
          tmp___205 = jit->ip;
#line 4403
          (jit->ip) ++;
#line 4403
          *tmp___205 = (unsigned char)138;
#line 4403
          break;
          case 2: 
#line 4403
          tmp___206 = jit->ip;
#line 4403
          (jit->ip) ++;
#line 4403
          *tmp___206 = (unsigned char)102;
          case 4: 
#line 4403
          tmp___207 = jit->ip;
#line 4403
          (jit->ip) ++;
#line 4403
          *tmp___207 = (unsigned char)139;
#line 4403
          break;
          default: 
#line 4403
          tmp___208 = __builtin_expect(1L, 0L);
#line 4403
          if (tmp___208) {
#line 4403
            __assert_rtn((char const   *)"emit_ldx_op", (char const   *)"tmp/src.c",
                         3438, (char const   *)"0");
          }
          }
#line 4403
          while (1) {
#line 4403
            if ((a2 & 7L) == -1L) {
#line 4403
              while (1) {
#line 4403
                tmp___209 = jit->ip;
#line 4403
                (jit->ip) ++;
#line 4403
                *tmp___209 = (unsigned char )((((a1 & 7L) & 7L) << 3) | 4L);
#line 4403
                break;
              }
#line 4403
              while (1) {
#line 4403
                tmp___210 = jit->ip;
#line 4403
                (jit->ip) ++;
#line 4403
                *tmp___210 = (unsigned char )((((a3 & 7L) & 7L) << 3) | 5L);
#line 4403
                break;
              }
#line 4403
              while (1) {
#line 4403
                imb___17.val = 0;
#line 4403
                tmp___211 = jit->ip;
#line 4403
                (jit->ip) ++;
#line 4403
                *tmp___211 = imb___17.b[0];
#line 4403
                tmp___212 = jit->ip;
#line 4403
                (jit->ip) ++;
#line 4403
                *tmp___212 = imb___17.b[1];
#line 4403
                tmp___213 = jit->ip;
#line 4403
                (jit->ip) ++;
#line 4403
                *tmp___213 = imb___17.b[2];
#line 4403
                tmp___214 = jit->ip;
#line 4403
                (jit->ip) ++;
#line 4403
                *tmp___214 = imb___17.b[3];
#line 4403
                break;
              }
            } else
#line 4403
            if ((a2 & 7L) != 5L) {
#line 4403
              while (1) {
#line 4403
                tmp___215 = jit->ip;
#line 4403
                (jit->ip) ++;
#line 4403
                *tmp___215 = (unsigned char )((((a1 & 7L) & 7L) << 3) | 4L);
#line 4403
                break;
              }
#line 4403
              while (1) {
#line 4403
                tmp___216 = jit->ip;
#line 4403
                (jit->ip) ++;
#line 4403
                *tmp___216 = (unsigned char )(((((a3 & 7L) & 7L) & 7L) << 3) | (((a2 & 7L) & 7L) & 7L));
#line 4403
                break;
              }
            } else {
#line 4403
              while (1) {
#line 4403
                tmp___217 = jit->ip;
#line 4403
                (jit->ip) ++;
#line 4403
                *tmp___217 = (unsigned char )(((long )(1 << 6) | (((a1 & 7L) & 7L) << 3)) | 4L);
#line 4403
                break;
              }
#line 4403
              while (1) {
#line 4403
                tmp___218 = jit->ip;
#line 4403
                (jit->ip) ++;
#line 4403
                *tmp___218 = (unsigned char )(((((a3 & 7L) & 7L) & 7L) << 3) | (((a2 & 7L) & 7L) & 7L));
#line 4403
                break;
              }
#line 4403
              while (1) {
#line 4403
                *(jit->ip) = (unsigned char)0;
#line 4403
                (jit->ip) ++;
#line 4403
                break;
              }
            }
#line 4403
            break;
          }
#line 4403
          break;
        }
#line 4403
        break;
      }
#line 4403
      break;
    }
#line 4403
    while (1) {
#line 4403
      if (a1 > 7L) {
#line 4403
        tmp___225 = 4;
      } else {
#line 4403
        tmp___225 = 0;
      }
#line 4403
      if (a3 > 7L) {
#line 4403
        tmp___226 = 2;
      } else {
#line 4403
        tmp___226 = 0;
      }
#line 4403
      if (a2 > 7L) {
#line 4403
        tmp___227 = 1;
      } else {
#line 4403
        tmp___227 = 0;
      }
#line 4403
      _amd64_rex_bits___8 = (unsigned char )(((8 | tmp___225) | tmp___226) | tmp___227);
#line 4403
      if ((int )_amd64_rex_bits___8 != 0) {
#line 4403
        tmp___228 = jit->ip;
#line 4403
        (jit->ip) ++;
#line 4403
        *tmp___228 = (unsigned char )(0x40 | (int )_amd64_rex_bits___8);
      }
#line 4403
      break;
    }
#line 4403
    tmp___229 = jit->ip;
#line 4403
    (jit->ip) ++;
#line 4403
    *tmp___229 = (unsigned char)15;
#line 4403
    switch ((int )op->arg_size) {
    case 1: 
#line 4403
    tmp___230 = jit->ip;
#line 4403
    (jit->ip) ++;
#line 4403
    *tmp___230 = (unsigned char)182;
#line 4403
    break;
    case 2: 
#line 4403
    tmp___231 = jit->ip;
#line 4403
    (jit->ip) ++;
#line 4403
    *tmp___231 = (unsigned char)183;
#line 4403
    break;
    default: 
#line 4403
    tmp___232 = __builtin_expect(1L, 0L);
#line 4403
    if (tmp___232) {
#line 4403
      __assert_rtn((char const   *)"emit_ldx_op", (char const   *)"tmp/src.c", 3438,
                   (char const   *)"0");
    }
    }
#line 4403
    while (1) {
#line 4403
      if ((a2 & 7L) == -1L) {
#line 4403
        while (1) {
#line 4403
          tmp___233 = jit->ip;
#line 4403
          (jit->ip) ++;
#line 4403
          *tmp___233 = (unsigned char )((((a1 & 7L) & 7L) << 3) | 4L);
#line 4403
          break;
        }
#line 4403
        while (1) {
#line 4403
          tmp___234 = jit->ip;
#line 4403
          (jit->ip) ++;
#line 4403
          *tmp___234 = (unsigned char )((((a3 & 7L) & 7L) << 3) | 5L);
#line 4403
          break;
        }
#line 4403
        while (1) {
#line 4403
          imb___19.val = 0;
#line 4403
          tmp___235 = jit->ip;
#line 4403
          (jit->ip) ++;
#line 4403
          *tmp___235 = imb___19.b[0];
#line 4403
          tmp___236 = jit->ip;
#line 4403
          (jit->ip) ++;
#line 4403
          *tmp___236 = imb___19.b[1];
#line 4403
          tmp___237 = jit->ip;
#line 4403
          (jit->ip) ++;
#line 4403
          *tmp___237 = imb___19.b[2];
#line 4403
          tmp___238 = jit->ip;
#line 4403
          (jit->ip) ++;
#line 4403
          *tmp___238 = imb___19.b[3];
#line 4403
          break;
        }
      } else
#line 4403
      if ((a2 & 7L) != 5L) {
#line 4403
        while (1) {
#line 4403
          tmp___239 = jit->ip;
#line 4403
          (jit->ip) ++;
#line 4403
          *tmp___239 = (unsigned char )((((a1 & 7L) & 7L) << 3) | 4L);
#line 4403
          break;
        }
#line 4403
        while (1) {
#line 4403
          tmp___240 = jit->ip;
#line 4403
          (jit->ip) ++;
#line 4403
          *tmp___240 = (unsigned char )(((((a3 & 7L) & 7L) & 7L) << 3) | (((a2 & 7L) & 7L) & 7L));
#line 4403
          break;
        }
      } else {
#line 4403
        while (1) {
#line 4403
          tmp___241 = jit->ip;
#line 4403
          (jit->ip) ++;
#line 4403
          *tmp___241 = (unsigned char )(((long )(1 << 6) | (((a1 & 7L) & 7L) << 3)) | 4L);
#line 4403
          break;
        }
#line 4403
        while (1) {
#line 4403
          tmp___242 = jit->ip;
#line 4403
          (jit->ip) ++;
#line 4403
          *tmp___242 = (unsigned char )(((((a3 & 7L) & 7L) & 7L) << 3) | (((a2 & 7L) & 7L) & 7L));
#line 4403
          break;
        }
#line 4403
        while (1) {
#line 4403
          *(jit->ip) = (unsigned char)0;
#line 4403
          (jit->ip) ++;
#line 4403
          break;
        }
      }
#line 4403
      break;
    }
#line 4403
    break;
  }
#line 4403
  break;
  default: 
#line 4404
  tmp___249 = __builtin_expect(1L, 0L);
#line 4404
  if (tmp___249) {
#line 4404
    __assert_rtn((char const   *)"emit_ldx_op", (char const   *)"tmp/src.c", 3439,
                 (char const   *)"0");
  }
  }
#line 4406
  return;
}
}
/* END FUNCTION-DEF emit_ldx_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF emit_sse_fstx_op LOC=UNKNOWN */
static void emit_sse_fstx_op(struct jit *jit , jit_op *op , jit_value a1 , jit_value a2 ,
                             jit_value a3 ) 
{ 
  int live ;
  int tmp ;
  unsigned char *tmp___0 ;
  unsigned char _amd64_rex_bits ;
  int tmp___1 ;
  int tmp___2 ;
  unsigned char *tmp___3 ;
  unsigned char *tmp___4 ;
  unsigned char *tmp___5 ;
  unsigned char *tmp___6 ;
  unsigned char *tmp___7 ;
  unsigned char _amd64_rex_bits___0 ;
  int tmp___8 ;
  int tmp___9 ;
  unsigned char *tmp___10 ;
  unsigned char *tmp___11 ;
  unsigned char *tmp___12 ;
  unsigned char *tmp___13 ;
  unsigned char *tmp___14 ;
  unsigned char _amd64_rex_bits___1 ;
  int tmp___15 ;
  int tmp___16 ;
  unsigned char *tmp___17 ;
  unsigned char *tmp___18 ;
  unsigned char *tmp___19 ;
  unsigned char *tmp___20 ;
  unsigned char *tmp___21 ;
  unsigned char *tmp___22 ;
  unsigned char *tmp___23 ;
  unsigned char *tmp___24 ;
  unsigned char *tmp___25 ;
  x86_imm_buf imb ;
  unsigned char *tmp___26 ;
  unsigned char *tmp___27 ;
  unsigned char *tmp___28 ;
  unsigned char *tmp___29 ;
  unsigned char *tmp___30 ;
  unsigned char *tmp___31 ;
  unsigned char *tmp___32 ;
  x86_imm_buf imb___0 ;
  unsigned char *tmp___33 ;
  unsigned char *tmp___34 ;
  unsigned char *tmp___35 ;
  unsigned char *tmp___36 ;
  unsigned char *tmp___37 ;
  unsigned char _amd64_rex_bits___2 ;
  int tmp___38 ;
  int tmp___39 ;
  int tmp___40 ;
  unsigned char *tmp___41 ;
  unsigned char *tmp___42 ;
  unsigned char *tmp___43 ;
  unsigned char *tmp___44 ;
  unsigned char *tmp___45 ;
  x86_imm_buf imb___1 ;
  unsigned char *tmp___46 ;
  unsigned char *tmp___47 ;
  unsigned char *tmp___48 ;
  unsigned char *tmp___49 ;
  unsigned char *tmp___50 ;
  unsigned char *tmp___51 ;
  unsigned char *tmp___52 ;
  unsigned char *tmp___53 ;
  unsigned char *tmp___54 ;
  unsigned char *tmp___55 ;
  x86_imm_buf imb___2 ;
  unsigned char *tmp___56 ;
  unsigned char *tmp___57 ;
  unsigned char *tmp___58 ;
  unsigned char *tmp___59 ;
  unsigned char *tmp___60 ;
  unsigned char _amd64_rex_bits___3 ;
  int tmp___61 ;
  int tmp___62 ;
  unsigned char *tmp___63 ;
  unsigned char *tmp___64 ;
  unsigned char *tmp___65 ;
  unsigned char *tmp___66 ;
  unsigned char *tmp___67 ;
  unsigned char _amd64_rex_bits___4 ;
  int tmp___68 ;
  jit_value tmp___69 ;
  int tmp___70 ;
  jit_value tmp___71 ;
  unsigned char *tmp___72 ;
  unsigned char *tmp___73 ;
  unsigned char *tmp___74 ;
  unsigned char *tmp___75 ;
  x86_imm_buf imb___3 ;
  unsigned char *tmp___76 ;
  unsigned char *tmp___77 ;
  unsigned char *tmp___78 ;
  unsigned char *tmp___79 ;
  unsigned char *tmp___80 ;
  unsigned char *tmp___81 ;
  unsigned char *tmp___82 ;
  unsigned char *tmp___83 ;
  unsigned char *tmp___84 ;
  unsigned char *tmp___85 ;
  x86_imm_buf imb___4 ;
  unsigned char *tmp___86 ;
  unsigned char *tmp___87 ;
  unsigned char *tmp___88 ;
  unsigned char *tmp___89 ;
  unsigned char *tmp___90 ;
  unsigned char *tmp___91 ;
  unsigned char *tmp___92 ;
  x86_imm_buf imb___5 ;
  unsigned char *tmp___93 ;
  unsigned char *tmp___94 ;
  unsigned char *tmp___95 ;
  unsigned char *tmp___96 ;
  unsigned char *tmp___97 ;
  unsigned char _amd64_rex_bits___5 ;
  int tmp___98 ;
  int tmp___99 ;
  int tmp___100 ;
  unsigned char *tmp___101 ;
  unsigned char *tmp___102 ;
  unsigned char *tmp___103 ;
  unsigned char *tmp___104 ;
  unsigned char *tmp___105 ;
  x86_imm_buf imb___6 ;
  unsigned char *tmp___106 ;
  unsigned char *tmp___107 ;
  unsigned char *tmp___108 ;
  unsigned char *tmp___109 ;
  unsigned char *tmp___110 ;
  unsigned char *tmp___111 ;
  unsigned char *tmp___112 ;
  unsigned char *tmp___113 ;
  unsigned char *tmp___114 ;
  unsigned char *tmp___115 ;
  x86_imm_buf imb___7 ;
  unsigned char *tmp___116 ;
  unsigned char *tmp___117 ;
  unsigned char *tmp___118 ;
  unsigned char *tmp___119 ;

  {
#line 3116
  if ((unsigned long long )op->arg_size == sizeof(float )) {
#line 3117
    tmp = jit_set_get(op->live_out, (int )op->arg[2]);
#line 3117
    live = tmp;
#line 3118
    if (live) {
#line 3118
      while (1) {
#line 3118
        while (1) {
#line 3118
          tmp___0 = jit->ip;
#line 3118
          (jit->ip) ++;
#line 3118
          *tmp___0 = (unsigned char)102;
#line 3118
          while (1) {
#line 3118
            if (a3 > 7L) {
#line 3118
              tmp___1 = 4;
            } else {
#line 3118
              tmp___1 = 0;
            }
#line 3118
            if (a3 > 7L) {
#line 3118
              tmp___2 = 1;
            } else {
#line 3118
              tmp___2 = 0;
            }
#line 3118
            _amd64_rex_bits = (unsigned char )(tmp___1 | tmp___2);
#line 3118
            if ((int )_amd64_rex_bits != 0) {
#line 3118
              tmp___3 = jit->ip;
#line 3118
              (jit->ip) ++;
#line 3118
              *tmp___3 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
            }
#line 3118
            break;
          }
#line 3118
          tmp___4 = jit->ip;
#line 3118
          (jit->ip) ++;
#line 3118
          *tmp___4 = (unsigned char)15;
#line 3118
          tmp___5 = jit->ip;
#line 3118
          (jit->ip) ++;
#line 3118
          *tmp___5 = (unsigned char)198;
#line 3118
          while (1) {
#line 3118
            while (1) {
#line 3118
              tmp___6 = jit->ip;
#line 3118
              (jit->ip) ++;
#line 3118
              *tmp___6 = (unsigned char )(((long )(3 << 6) | ((a3 & 7L) << 3)) | (a3 & 7L));
#line 3118
              break;
            }
#line 3118
            break;
          }
#line 3118
          break;
        }
#line 3118
        while (1) {
#line 3118
          *(jit->ip) = (unsigned char)0;
#line 3118
          (jit->ip) ++;
#line 3118
          break;
        }
#line 3118
        break;
      }
    }
#line 3119
    while (1) {
#line 3119
      tmp___7 = jit->ip;
#line 3119
      (jit->ip) ++;
#line 3119
      *tmp___7 = (unsigned char)242;
#line 3119
      while (1) {
#line 3119
        if (a3 > 7L) {
#line 3119
          tmp___8 = 4;
        } else {
#line 3119
          tmp___8 = 0;
        }
#line 3119
        if (a3 > 7L) {
#line 3119
          tmp___9 = 1;
        } else {
#line 3119
          tmp___9 = 0;
        }
#line 3119
        _amd64_rex_bits___0 = (unsigned char )(tmp___8 | tmp___9);
#line 3119
        if ((int )_amd64_rex_bits___0 != 0) {
#line 3119
          tmp___10 = jit->ip;
#line 3119
          (jit->ip) ++;
#line 3119
          *tmp___10 = (unsigned char )(0x40 | (int )_amd64_rex_bits___0);
        }
#line 3119
        break;
      }
#line 3119
      tmp___11 = jit->ip;
#line 3119
      (jit->ip) ++;
#line 3119
      *tmp___11 = (unsigned char)15;
#line 3119
      tmp___12 = jit->ip;
#line 3119
      (jit->ip) ++;
#line 3119
      *tmp___12 = (unsigned char)90;
#line 3119
      while (1) {
#line 3119
        while (1) {
#line 3119
          tmp___13 = jit->ip;
#line 3119
          (jit->ip) ++;
#line 3119
          *tmp___13 = (unsigned char )(((long )(3 << 6) | ((a3 & 7L) << 3)) | (a3 & 7L));
#line 3119
          break;
        }
#line 3119
        break;
      }
#line 3119
      break;
    }
#line 3120
    if ((int )op->code & 0x02) {
#line 3120
      while (1) {
#line 3120
        tmp___14 = jit->ip;
#line 3120
        (jit->ip) ++;
#line 3120
        *tmp___14 = (unsigned char)243;
#line 3120
        while (1) {
#line 3120
          if (a3 > 7L) {
#line 3120
            tmp___15 = 4;
          } else {
#line 3120
            tmp___15 = 0;
          }
#line 3120
          if (a2 > 7L) {
#line 3120
            tmp___16 = 1;
          } else {
#line 3120
            tmp___16 = 0;
          }
#line 3120
          _amd64_rex_bits___1 = (unsigned char )(tmp___15 | tmp___16);
#line 3120
          if ((int )_amd64_rex_bits___1 != 0) {
#line 3120
            tmp___17 = jit->ip;
#line 3120
            (jit->ip) ++;
#line 3120
            *tmp___17 = (unsigned char )(0x40 | (int )_amd64_rex_bits___1);
          }
#line 3120
          break;
        }
#line 3120
        tmp___18 = jit->ip;
#line 3120
        (jit->ip) ++;
#line 3120
        *tmp___18 = (unsigned char)15;
#line 3120
        tmp___19 = jit->ip;
#line 3120
        (jit->ip) ++;
#line 3120
        *tmp___19 = (unsigned char)17;
#line 3120
        while (1) {
#line 3120
          if ((a2 & 7L) == 4L) {
#line 3120
            if (a1 == 0L) {
#line 3120
              while (1) {
#line 3120
                tmp___20 = jit->ip;
#line 3120
                (jit->ip) ++;
#line 3120
                *tmp___20 = (unsigned char )((((a3 & 7L) & 7L) << 3) | 4L);
#line 3120
                break;
              }
#line 3120
              while (1) {
#line 3120
                tmp___21 = jit->ip;
#line 3120
                (jit->ip) ++;
#line 3120
                *tmp___21 = (unsigned char )((4 << 3) | 4);
#line 3120
                break;
              }
            } else
#line 3120
            if (a1 >= -128L) {
#line 3120
              if (a1 <= 127L) {
#line 3120
                while (1) {
#line 3120
                  tmp___22 = jit->ip;
#line 3120
                  (jit->ip) ++;
#line 3120
                  *tmp___22 = (unsigned char )(((long )(1 << 6) | (((a3 & 7L) & 7L) << 3)) | 4L);
#line 3120
                  break;
                }
#line 3120
                while (1) {
#line 3120
                  tmp___23 = jit->ip;
#line 3120
                  (jit->ip) ++;
#line 3120
                  *tmp___23 = (unsigned char )((4 << 3) | 4);
#line 3120
                  break;
                }
#line 3120
                while (1) {
#line 3120
                  *(jit->ip) = (unsigned char )(a1 & 255L);
#line 3120
                  (jit->ip) ++;
#line 3120
                  break;
                }
              } else {
#line 3120
                goto _L;
              }
            } else {
              _L: /* CIL Label */ 
#line 3120
              while (1) {
#line 3120
                tmp___24 = jit->ip;
#line 3120
                (jit->ip) ++;
#line 3120
                *tmp___24 = (unsigned char )(((long )(2 << 6) | (((a3 & 7L) & 7L) << 3)) | 4L);
#line 3120
                break;
              }
#line 3120
              while (1) {
#line 3120
                tmp___25 = jit->ip;
#line 3120
                (jit->ip) ++;
#line 3120
                *tmp___25 = (unsigned char )((4 << 3) | 4);
#line 3120
                break;
              }
#line 3120
              while (1) {
#line 3120
                imb.val = (int )a1;
#line 3120
                tmp___26 = jit->ip;
#line 3120
                (jit->ip) ++;
#line 3120
                *tmp___26 = imb.b[0];
#line 3120
                tmp___27 = jit->ip;
#line 3120
                (jit->ip) ++;
#line 3120
                *tmp___27 = imb.b[1];
#line 3120
                tmp___28 = jit->ip;
#line 3120
                (jit->ip) ++;
#line 3120
                *tmp___28 = imb.b[2];
#line 3120
                tmp___29 = jit->ip;
#line 3120
                (jit->ip) ++;
#line 3120
                *tmp___29 = imb.b[3];
#line 3120
                break;
              }
            }
#line 3120
            break;
          }
#line 3120
          if (a1 == 0L) {
#line 3120
            if ((a2 & 7L) != 5L) {
#line 3120
              while (1) {
#line 3120
                tmp___30 = jit->ip;
#line 3120
                (jit->ip) ++;
#line 3120
                *tmp___30 = (unsigned char )((((a3 & 7L) & 7L) << 3) | ((a2 & 7L) & 7L));
#line 3120
                break;
              }
#line 3120
              break;
            }
          }
#line 3120
          if (a1 >= -128L) {
#line 3120
            if (a1 <= 127L) {
#line 3120
              while (1) {
#line 3120
                tmp___31 = jit->ip;
#line 3120
                (jit->ip) ++;
#line 3120
                *tmp___31 = (unsigned char )(((long )(1 << 6) | (((a3 & 7L) & 7L) << 3)) | ((a2 & 7L) & 7L));
#line 3120
                break;
              }
#line 3120
              while (1) {
#line 3120
                *(jit->ip) = (unsigned char )(a1 & 255L);
#line 3120
                (jit->ip) ++;
#line 3120
                break;
              }
            } else {
#line 3120
              goto _L___0;
            }
          } else {
            _L___0: /* CIL Label */ 
#line 3120
            while (1) {
#line 3120
              tmp___32 = jit->ip;
#line 3120
              (jit->ip) ++;
#line 3120
              *tmp___32 = (unsigned char )(((long )(2 << 6) | (((a3 & 7L) & 7L) << 3)) | ((a2 & 7L) & 7L));
#line 3120
              break;
            }
#line 3120
            while (1) {
#line 3120
              imb___0.val = (int )a1;
#line 3120
              tmp___33 = jit->ip;
#line 3120
              (jit->ip) ++;
#line 3120
              *tmp___33 = imb___0.b[0];
#line 3120
              tmp___34 = jit->ip;
#line 3120
              (jit->ip) ++;
#line 3120
              *tmp___34 = imb___0.b[1];
#line 3120
              tmp___35 = jit->ip;
#line 3120
              (jit->ip) ++;
#line 3120
              *tmp___35 = imb___0.b[2];
#line 3120
              tmp___36 = jit->ip;
#line 3120
              (jit->ip) ++;
#line 3120
              *tmp___36 = imb___0.b[3];
#line 3120
              break;
            }
          }
#line 3120
          break;
        }
#line 3120
        break;
      }
    } else {
#line 3121
      while (1) {
#line 3121
        tmp___37 = jit->ip;
#line 3121
        (jit->ip) ++;
#line 3121
        *tmp___37 = (unsigned char)243;
#line 3121
        while (1) {
#line 3121
          if (a3 > 7L) {
#line 3121
            tmp___38 = 4;
          } else {
#line 3121
            tmp___38 = 0;
          }
#line 3121
          if (a2 > 7L) {
#line 3121
            tmp___39 = 2;
          } else {
#line 3121
            tmp___39 = 0;
          }
#line 3121
          if (a1 > 7L) {
#line 3121
            tmp___40 = 1;
          } else {
#line 3121
            tmp___40 = 0;
          }
#line 3121
          _amd64_rex_bits___2 = (unsigned char )(((8 | tmp___38) | tmp___39) | tmp___40);
#line 3121
          if ((int )_amd64_rex_bits___2 != 0) {
#line 3121
            tmp___41 = jit->ip;
#line 3121
            (jit->ip) ++;
#line 3121
            *tmp___41 = (unsigned char )(0x40 | (int )_amd64_rex_bits___2);
          }
#line 3121
          break;
        }
#line 3121
        tmp___42 = jit->ip;
#line 3121
        (jit->ip) ++;
#line 3121
        *tmp___42 = (unsigned char)15;
#line 3121
        tmp___43 = jit->ip;
#line 3121
        (jit->ip) ++;
#line 3121
        *tmp___43 = (unsigned char)17;
#line 3121
        while (1) {
#line 3121
          if (a1 == -1L) {
#line 3121
            while (1) {
#line 3121
              tmp___44 = jit->ip;
#line 3121
              (jit->ip) ++;
#line 3121
              *tmp___44 = (unsigned char )(((a3 & 7L) << 3) | 4L);
#line 3121
              break;
            }
#line 3121
            while (1) {
#line 3121
              tmp___45 = jit->ip;
#line 3121
              (jit->ip) ++;
#line 3121
              *tmp___45 = (unsigned char )(((a2 & 7L) << 3) | 5L);
#line 3121
              break;
            }
#line 3121
            while (1) {
#line 3121
              imb___1.val = 0;
#line 3121
              tmp___46 = jit->ip;
#line 3121
              (jit->ip) ++;
#line 3121
              *tmp___46 = imb___1.b[0];
#line 3121
              tmp___47 = jit->ip;
#line 3121
              (jit->ip) ++;
#line 3121
              *tmp___47 = imb___1.b[1];
#line 3121
              tmp___48 = jit->ip;
#line 3121
              (jit->ip) ++;
#line 3121
              *tmp___48 = imb___1.b[2];
#line 3121
              tmp___49 = jit->ip;
#line 3121
              (jit->ip) ++;
#line 3121
              *tmp___49 = imb___1.b[3];
#line 3121
              break;
            }
          } else
#line 3121
          if (a1 != 5L) {
#line 3121
            while (1) {
#line 3121
              tmp___50 = jit->ip;
#line 3121
              (jit->ip) ++;
#line 3121
              *tmp___50 = (unsigned char )(((a3 & 7L) << 3) | 4L);
#line 3121
              break;
            }
#line 3121
            while (1) {
#line 3121
              tmp___51 = jit->ip;
#line 3121
              (jit->ip) ++;
#line 3121
              *tmp___51 = (unsigned char )((((a2 & 7L) & 7L) << 3) | ((a1 & 7L) & 7L));
#line 3121
              break;
            }
          } else {
#line 3121
            while (1) {
#line 3121
              tmp___52 = jit->ip;
#line 3121
              (jit->ip) ++;
#line 3121
              *tmp___52 = (unsigned char )(((long )(1 << 6) | ((a3 & 7L) << 3)) | 4L);
#line 3121
              break;
            }
#line 3121
            while (1) {
#line 3121
              tmp___53 = jit->ip;
#line 3121
              (jit->ip) ++;
#line 3121
              *tmp___53 = (unsigned char )((((a2 & 7L) & 7L) << 3) | ((a1 & 7L) & 7L));
#line 3121
              break;
            }
#line 3121
            while (1) {
#line 3121
              *(jit->ip) = (unsigned char)0;
#line 3121
              (jit->ip) ++;
#line 3121
              break;
            }
          }
#line 3121
          break;
        }
#line 3121
        break;
      }
    }
#line 3122
    if (live) {
#line 3122
      while (1) {
#line 3122
        while (1) {
#line 3122
          tmp___60 = jit->ip;
#line 3122
          (jit->ip) ++;
#line 3122
          *tmp___60 = (unsigned char)102;
#line 3122
          while (1) {
#line 3122
            if (a3 > 7L) {
#line 3122
              tmp___61 = 4;
            } else {
#line 3122
              tmp___61 = 0;
            }
#line 3122
            if (a3 > 7L) {
#line 3122
              tmp___62 = 1;
            } else {
#line 3122
              tmp___62 = 0;
            }
#line 3122
            _amd64_rex_bits___3 = (unsigned char )(tmp___61 | tmp___62);
#line 3122
            if ((int )_amd64_rex_bits___3 != 0) {
#line 3122
              tmp___63 = jit->ip;
#line 3122
              (jit->ip) ++;
#line 3122
              *tmp___63 = (unsigned char )(0x40 | (int )_amd64_rex_bits___3);
            }
#line 3122
            break;
          }
#line 3122
          tmp___64 = jit->ip;
#line 3122
          (jit->ip) ++;
#line 3122
          *tmp___64 = (unsigned char)15;
#line 3122
          tmp___65 = jit->ip;
#line 3122
          (jit->ip) ++;
#line 3122
          *tmp___65 = (unsigned char)198;
#line 3122
          while (1) {
#line 3122
            while (1) {
#line 3122
              tmp___66 = jit->ip;
#line 3122
              (jit->ip) ++;
#line 3122
              *tmp___66 = (unsigned char )(((long )(3 << 6) | ((a3 & 7L) << 3)) | (a3 & 7L));
#line 3122
              break;
            }
#line 3122
            break;
          }
#line 3122
          break;
        }
#line 3122
        while (1) {
#line 3122
          *(jit->ip) = (unsigned char)1;
#line 3122
          (jit->ip) ++;
#line 3122
          break;
        }
#line 3122
        break;
      }
    }
  } else
#line 3124
  if ((int )op->code & 0x02) {
#line 3124
    while (1) {
#line 3124
      tmp___67 = jit->ip;
#line 3124
      (jit->ip) ++;
#line 3124
      *tmp___67 = (unsigned char)102;
#line 3124
      while (1) {
#line 3124
        if (a3 > 7L) {
#line 3124
          tmp___68 = 4;
        } else {
#line 3124
          tmp___68 = 0;
        }
#line 3124
        if (a2 == 16L) {
#line 3124
          tmp___71 = (jit_value )0;
        } else {
#line 3124
          tmp___71 = a2;
        }
#line 3124
        if (tmp___71 > 7L) {
#line 3124
          tmp___70 = 1;
        } else {
#line 3124
          tmp___70 = 0;
        }
#line 3124
        _amd64_rex_bits___4 = (unsigned char )(tmp___68 | tmp___70);
#line 3124
        if ((int )_amd64_rex_bits___4 != 0) {
#line 3124
          tmp___72 = jit->ip;
#line 3124
          (jit->ip) ++;
#line 3124
          *tmp___72 = (unsigned char )(0x40 | (int )_amd64_rex_bits___4);
        }
#line 3124
        break;
      }
#line 3124
      tmp___73 = jit->ip;
#line 3124
      (jit->ip) ++;
#line 3124
      *tmp___73 = (unsigned char)15;
#line 3124
      tmp___74 = jit->ip;
#line 3124
      (jit->ip) ++;
#line 3124
      *tmp___74 = (unsigned char)19;
#line 3124
      while (1) {
#line 3124
        if (a2 == 16L) {
#line 3124
          while (1) {
#line 3124
            tmp___75 = jit->ip;
#line 3124
            (jit->ip) ++;
#line 3124
            *tmp___75 = (unsigned char )((((a3 & 7L) & 7L) << 3) | 5L);
#line 3124
            break;
          }
#line 3124
          while (1) {
#line 3124
            imb___3.val = (int )a1;
#line 3124
            tmp___76 = jit->ip;
#line 3124
            (jit->ip) ++;
#line 3124
            *tmp___76 = imb___3.b[0];
#line 3124
            tmp___77 = jit->ip;
#line 3124
            (jit->ip) ++;
#line 3124
            *tmp___77 = imb___3.b[1];
#line 3124
            tmp___78 = jit->ip;
#line 3124
            (jit->ip) ++;
#line 3124
            *tmp___78 = imb___3.b[2];
#line 3124
            tmp___79 = jit->ip;
#line 3124
            (jit->ip) ++;
#line 3124
            *tmp___79 = imb___3.b[3];
#line 3124
            break;
          }
        } else {
#line 3124
          while (1) {
#line 3124
            if ((a2 & 7L) == 4L) {
#line 3124
              if (a1 == 0L) {
#line 3124
                while (1) {
#line 3124
                  tmp___80 = jit->ip;
#line 3124
                  (jit->ip) ++;
#line 3124
                  *tmp___80 = (unsigned char )((((a3 & 7L) & 7L) << 3) | 4L);
#line 3124
                  break;
                }
#line 3124
                while (1) {
#line 3124
                  tmp___81 = jit->ip;
#line 3124
                  (jit->ip) ++;
#line 3124
                  *tmp___81 = (unsigned char )((4 << 3) | 4);
#line 3124
                  break;
                }
              } else
#line 3124
              if (a1 >= -128L) {
#line 3124
                if (a1 <= 127L) {
#line 3124
                  while (1) {
#line 3124
                    tmp___82 = jit->ip;
#line 3124
                    (jit->ip) ++;
#line 3124
                    *tmp___82 = (unsigned char )(((long )(1 << 6) | (((a3 & 7L) & 7L) << 3)) | 4L);
#line 3124
                    break;
                  }
#line 3124
                  while (1) {
#line 3124
                    tmp___83 = jit->ip;
#line 3124
                    (jit->ip) ++;
#line 3124
                    *tmp___83 = (unsigned char )((4 << 3) | 4);
#line 3124
                    break;
                  }
#line 3124
                  while (1) {
#line 3124
                    *(jit->ip) = (unsigned char )(a1 & 255L);
#line 3124
                    (jit->ip) ++;
#line 3124
                    break;
                  }
                } else {
#line 3124
                  goto _L___1;
                }
              } else {
                _L___1: /* CIL Label */ 
#line 3124
                while (1) {
#line 3124
                  tmp___84 = jit->ip;
#line 3124
                  (jit->ip) ++;
#line 3124
                  *tmp___84 = (unsigned char )(((long )(2 << 6) | (((a3 & 7L) & 7L) << 3)) | 4L);
#line 3124
                  break;
                }
#line 3124
                while (1) {
#line 3124
                  tmp___85 = jit->ip;
#line 3124
                  (jit->ip) ++;
#line 3124
                  *tmp___85 = (unsigned char )((4 << 3) | 4);
#line 3124
                  break;
                }
#line 3124
                while (1) {
#line 3124
                  imb___4.val = (int )a1;
#line 3124
                  tmp___86 = jit->ip;
#line 3124
                  (jit->ip) ++;
#line 3124
                  *tmp___86 = imb___4.b[0];
#line 3124
                  tmp___87 = jit->ip;
#line 3124
                  (jit->ip) ++;
#line 3124
                  *tmp___87 = imb___4.b[1];
#line 3124
                  tmp___88 = jit->ip;
#line 3124
                  (jit->ip) ++;
#line 3124
                  *tmp___88 = imb___4.b[2];
#line 3124
                  tmp___89 = jit->ip;
#line 3124
                  (jit->ip) ++;
#line 3124
                  *tmp___89 = imb___4.b[3];
#line 3124
                  break;
                }
              }
#line 3124
              break;
            }
#line 3124
            if (a1 == 0L) {
#line 3124
              if ((a2 & 7L) != 5L) {
#line 3124
                while (1) {
#line 3124
                  tmp___90 = jit->ip;
#line 3124
                  (jit->ip) ++;
#line 3124
                  *tmp___90 = (unsigned char )((((a3 & 7L) & 7L) << 3) | ((a2 & 7L) & 7L));
#line 3124
                  break;
                }
#line 3124
                break;
              }
            }
#line 3124
            if (a1 >= -128L) {
#line 3124
              if (a1 <= 127L) {
#line 3124
                while (1) {
#line 3124
                  tmp___91 = jit->ip;
#line 3124
                  (jit->ip) ++;
#line 3124
                  *tmp___91 = (unsigned char )(((long )(1 << 6) | (((a3 & 7L) & 7L) << 3)) | ((a2 & 7L) & 7L));
#line 3124
                  break;
                }
#line 3124
                while (1) {
#line 3124
                  *(jit->ip) = (unsigned char )(a1 & 255L);
#line 3124
                  (jit->ip) ++;
#line 3124
                  break;
                }
              } else {
#line 3124
                goto _L___2;
              }
            } else {
              _L___2: /* CIL Label */ 
#line 3124
              while (1) {
#line 3124
                tmp___92 = jit->ip;
#line 3124
                (jit->ip) ++;
#line 3124
                *tmp___92 = (unsigned char )(((long )(2 << 6) | (((a3 & 7L) & 7L) << 3)) | ((a2 & 7L) & 7L));
#line 3124
                break;
              }
#line 3124
              while (1) {
#line 3124
                imb___5.val = (int )a1;
#line 3124
                tmp___93 = jit->ip;
#line 3124
                (jit->ip) ++;
#line 3124
                *tmp___93 = imb___5.b[0];
#line 3124
                tmp___94 = jit->ip;
#line 3124
                (jit->ip) ++;
#line 3124
                *tmp___94 = imb___5.b[1];
#line 3124
                tmp___95 = jit->ip;
#line 3124
                (jit->ip) ++;
#line 3124
                *tmp___95 = imb___5.b[2];
#line 3124
                tmp___96 = jit->ip;
#line 3124
                (jit->ip) ++;
#line 3124
                *tmp___96 = imb___5.b[3];
#line 3124
                break;
              }
            }
#line 3124
            break;
          }
        }
#line 3124
        break;
      }
#line 3124
      break;
    }
  } else {
#line 3125
    while (1) {
#line 3125
      tmp___97 = jit->ip;
#line 3125
      (jit->ip) ++;
#line 3125
      *tmp___97 = (unsigned char)102;
#line 3125
      while (1) {
#line 3125
        if (a3 > 7L) {
#line 3125
          tmp___98 = 4;
        } else {
#line 3125
          tmp___98 = 0;
        }
#line 3125
        if (a2 > 7L) {
#line 3125
          tmp___99 = 2;
        } else {
#line 3125
          tmp___99 = 0;
        }
#line 3125
        if (a1 > 7L) {
#line 3125
          tmp___100 = 1;
        } else {
#line 3125
          tmp___100 = 0;
        }
#line 3125
        _amd64_rex_bits___5 = (unsigned char )(((8 | tmp___98) | tmp___99) | tmp___100);
#line 3125
        if ((int )_amd64_rex_bits___5 != 0) {
#line 3125
          tmp___101 = jit->ip;
#line 3125
          (jit->ip) ++;
#line 3125
          *tmp___101 = (unsigned char )(0x40 | (int )_amd64_rex_bits___5);
        }
#line 3125
        break;
      }
#line 3125
      tmp___102 = jit->ip;
#line 3125
      (jit->ip) ++;
#line 3125
      *tmp___102 = (unsigned char)15;
#line 3125
      tmp___103 = jit->ip;
#line 3125
      (jit->ip) ++;
#line 3125
      *tmp___103 = (unsigned char)19;
#line 3125
      while (1) {
#line 3125
        if (a1 == -1L) {
#line 3125
          while (1) {
#line 3125
            tmp___104 = jit->ip;
#line 3125
            (jit->ip) ++;
#line 3125
            *tmp___104 = (unsigned char )(((a3 & 7L) << 3) | 4L);
#line 3125
            break;
          }
#line 3125
          while (1) {
#line 3125
            tmp___105 = jit->ip;
#line 3125
            (jit->ip) ++;
#line 3125
            *tmp___105 = (unsigned char )(((a2 & 7L) << 3) | 5L);
#line 3125
            break;
          }
#line 3125
          while (1) {
#line 3125
            imb___6.val = 0;
#line 3125
            tmp___106 = jit->ip;
#line 3125
            (jit->ip) ++;
#line 3125
            *tmp___106 = imb___6.b[0];
#line 3125
            tmp___107 = jit->ip;
#line 3125
            (jit->ip) ++;
#line 3125
            *tmp___107 = imb___6.b[1];
#line 3125
            tmp___108 = jit->ip;
#line 3125
            (jit->ip) ++;
#line 3125
            *tmp___108 = imb___6.b[2];
#line 3125
            tmp___109 = jit->ip;
#line 3125
            (jit->ip) ++;
#line 3125
            *tmp___109 = imb___6.b[3];
#line 3125
            break;
          }
        } else
#line 3125
        if (a1 != 5L) {
#line 3125
          while (1) {
#line 3125
            tmp___110 = jit->ip;
#line 3125
            (jit->ip) ++;
#line 3125
            *tmp___110 = (unsigned char )(((a3 & 7L) << 3) | 4L);
#line 3125
            break;
          }
#line 3125
          while (1) {
#line 3125
            tmp___111 = jit->ip;
#line 3125
            (jit->ip) ++;
#line 3125
            *tmp___111 = (unsigned char )((((a2 & 7L) & 7L) << 3) | ((a1 & 7L) & 7L));
#line 3125
            break;
          }
        } else {
#line 3125
          while (1) {
#line 3125
            tmp___112 = jit->ip;
#line 3125
            (jit->ip) ++;
#line 3125
            *tmp___112 = (unsigned char )(((long )(1 << 6) | ((a3 & 7L) << 3)) | 4L);
#line 3125
            break;
          }
#line 3125
          while (1) {
#line 3125
            tmp___113 = jit->ip;
#line 3125
            (jit->ip) ++;
#line 3125
            *tmp___113 = (unsigned char )((((a2 & 7L) & 7L) << 3) | ((a1 & 7L) & 7L));
#line 3125
            break;
          }
#line 3125
          while (1) {
#line 3125
            *(jit->ip) = (unsigned char)0;
#line 3125
            (jit->ip) ++;
#line 3125
            break;
          }
        }
#line 3125
        break;
      }
#line 3125
      break;
    }
  }
#line 3127
  return;
}
}
/* END FUNCTION-DEF emit_sse_fstx_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF print_rmap_callback LOC=UNKNOWN */
static void print_rmap_callback(jit_tree_key key , jit_tree_value value , void *disasm ) 
{ 
  char buf[256] ;

  {
#line 5172
  jit_get_reg_name((struct jit_disasm *)disasm, buf, (int )key);
#line 5173
  printf((char const   */* __restrict  */)"%s=%s ", buf, ((jit_hw_reg *)value)->name);
#line 5174
  return;
}
}
/* END FUNCTION-DEF print_rmap_callback LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_flw_analysis LOC=UNKNOWN */
__inline static void jit_flw_analysis(struct jit *jit ) 
{ 
  jit_op *op ;
  jit_op *tmp ;
  jit_op *first ;
  jit_op *second ;

  {
#line 4853
  jit_flw_initialize(jit);
#line 4854
  tmp = jit_op_first(jit->ops);
#line 4854
  op = tmp;
#line 4855
  while (op) {
#line 4856
    if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 688U) {
#line 4857
      first = op;
#line 4858
      while (1) {
#line 4859
        if ((unsigned long )op->next == (unsigned long )((void *)0)) {
#line 4860
          second = op;
#line 4861
          analyze_function(jit, first, second);
#line 4862
          break;
        } else
#line 4859
        if ((unsigned int )((jit_opcode )((int )(op->next)->code & 0xfff8)) == 688U) {
#line 4860
          second = op;
#line 4861
          analyze_function(jit, first, second);
#line 4862
          break;
        }
#line 4864
        op = op->next;
      }
    }
#line 4867
    op = op->next;
  }
#line 4869
  return;
}
}
/* END FUNCTION-DEF jit_flw_analysis LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF _cipher$_xtea_decipher LOC=UNKNOWN */
void _cipher$_xtea_decipher(unsigned int block_no , unsigned int num_rounds , unsigned int *v ,
                            unsigned int *key , unsigned int size ) 
{ 
  unsigned int i ;

  {
  i = 0;
  while (i < size / 8) {
    _cipher$_xtea_decipherBlock(num_rounds, v, key);
    v += 2;
    i ++;
  }
}
}
/* END FUNCTION-DEF _cipher$_xtea_decipher LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF open_disasm LOC=UNKNOWN */
static FILE *open_disasm(void) 
{ 
  int fds[2] ;
  pid_t child ;
  pid_t tmp ;
  char *path ;
  FILE *f ;
  FILE *tmp___0 ;

  {
#line 5542
  pipe((int *)(fds));
#line 5543
  tmp = fork();
#line 5543
  child = tmp;
#line 5544
  if (child == 0) {
#line 5545
    close(fds[1]);
#line 5546
    dup2(fds[0], 0);
#line 5548
    path = "./myjit-disasm";
#line 5549
    execlp((char const   *)path, (char const   *)path, (void *)0);
#line 5550
    path = "myjit-disasm";
#line 5551
    execlp((char const   *)path, (char const   *)path, (void *)0);
#line 5552
    path = getenv((char const   *)"MYJIT_DISASM");
#line 5553
    if (path) {
#line 5553
      execlp((char const   *)path, (char const   *)path, (void *)0);
    }
#line 5554
    printf((char const   */* __restrict  */)"myjit-disasm not found\n\n");
#line 5555
    printf((char const   */* __restrict  */)"In order to list myjit operations along with the machine code, the MyJIT disassembler has to be present in the current directory or its path has to be specified in the MYJIT_DISASM environment variable.\nThe disassembler\'s source code can be found in the \"disasm/\" directory.\n\n");
#line 5556
    exit(1);
  }
#line 5558
  close(fds[0]);
#line 5559
  tmp___0 = fdopen(fds[1], (char const   *)"w");
#line 5559
  f = tmp___0;
#line 5560
  return (f);
}
}
/* END FUNCTION-DEF open_disasm LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF rename_reg LOC=UNKNOWN */
static void rename_reg(jit_op *op , int r1 , int r2 ) 
{ 


  {
#line 5917
  insert_reg_op(432, op, (jit_value )r1, (jit_value )r2);
#line 5918
  return;
}
}
/* END FUNCTION-DEF rename_reg LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF get_frame_size LOC=UNKNOWN */
static int get_frame_size(struct jit *jit , struct jit_func_info *info ) 
{ 
  int stack_mem ;
  int tmp ;
  int tmp___0 ;
  jit_value tmp___1 ;

  {
#line 3184
  stack_mem = 0;
#line 3185
  stack_mem = (int )((long )stack_mem + info->allocai_mem);
#line 3186
  stack_mem += info->gp_reg_count * (int )sizeof(void *);
#line 3187
  stack_mem = (int )((unsigned long long )stack_mem + (unsigned long long )info->fp_reg_count * sizeof(double ));
#line 3188
  if ((jit->reg_al)->gp_arg_reg_cnt < info->general_arg_cnt) {
#line 3188
    tmp = (jit->reg_al)->gp_arg_reg_cnt;
  } else {
#line 3188
    tmp = info->general_arg_cnt;
  }
#line 3188
  stack_mem += tmp * (int )sizeof(void *);
#line 3189
  if ((jit->reg_al)->fp_arg_reg_cnt < info->float_arg_cnt) {
#line 3189
    tmp___0 = (jit->reg_al)->fp_arg_reg_cnt;
  } else {
#line 3189
    tmp___0 = info->float_arg_cnt;
  }
#line 3189
  stack_mem += tmp___0 * (int )sizeof(void *);
#line 3190
  tmp___1 = jit_value_align((jit_value )stack_mem, (jit_value )16);
#line 3190
  return ((int )tmp___1);
}
}
/* END FUNCTION-DEF get_frame_size LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF print_op LOC=UNKNOWN */
int print_op(FILE *f , struct jit_disasm *disasm , struct jit_op *op , jit_tree *labels ,
             int verbosity ) 
{ 
  struct output_buf *linebuf ;
  struct output_buf *tmp ;
  jit_tree *lab ;
  jit_tree *tmp___0 ;
  long tmp___1 ;
  char *op_name ;
  char *tmp___2 ;
  int tmp___3 ;
  int i ;
  long tmp___4 ;
  int len ;
  size_t tmp___5 ;

  {
#line 5311
  tmp = ob_new();
#line 5311
  linebuf = tmp;
#line 5312
  if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 136U) {
#line 5312
    goto _L;
  } else
#line 5312
  if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 616U) {
    _L: /* CIL Label */ 
#line 5313
    tmp___0 = jit_tree_search(labels, op->arg[0]);
#line 5313
    lab = tmp___0;
#line 5314
    if (lab) {
#line 5315
      if ((long )lab->value < 0L) {
#line 5315
        tmp___1 = - ((long )lab->value);
      } else {
#line 5315
        tmp___1 = (long )lab->value;
      }
#line 5315
      ob_printf(linebuf, (char const   *)disasm->label_template, tmp___1);
#line 5316
      ob_printf(linebuf, (char const   *)":");
    }
#line 5318
    goto print;
  }
#line 5320
  if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 192U) {
#line 5321
    print_comment(linebuf, op);
#line 5322
    goto print;
  }
#line 5324
  if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 264U) {
#line 5325
    ob_append(linebuf, disasm->indent_template);
#line 5326
    ob_append(linebuf, ".trace");
#line 5327
    goto print;
  }
#line 5329
  tmp___2 = jit_get_op_name(op);
#line 5329
  op_name = tmp___2;
#line 5330
  if ((int )*(op_name + 0) == 46) {
#line 5330
    if (verbosity & 0x100) {
#line 5331
      tmp___3 = print_load_op(disasm, linebuf, op);
#line 5331
      if (tmp___3) {
#line 5331
        goto print;
      }
    }
  }
#line 5333
  ob_append(linebuf, disasm->indent_template);
#line 5334
  if ((int )*(op_name + 0) == 46) {
#line 5335
    switch ((unsigned int )((jit_opcode )((int )op->code & 0xfff8))) {
    case 872U: 
    case 376U: 
#line 5338
    ob_printf(linebuf, (char const   *)"%s ", op_name);
#line 5339
    ob_pad(linebuf, 13);
#line 5340
    ob_printf(linebuf, (char const   *)disasm->generic_value_template, op->arg[0]);
#line 5341
    goto print;
    case 160U: 
#line 5343
    ob_printf(linebuf, (char const   *)"%s ", op_name);
#line 5344
    ob_pad(linebuf, 13);
#line 5345
    i = 0;
#line 5345
    while ((jit_value )i < op->arg[0]) {
#line 5346
      ob_printf(linebuf, (char const   *)disasm->generic_value_template, (int )*((unsigned char *)op->addendum + i));
#line 5347
      ob_printf(linebuf, (char const   *)" ");
#line 5345
      i ++;
    }
#line 5349
    goto print;
    case 704U: 
    case 856U: 
#line 5352
    ob_printf(linebuf, (char const   *)"%s ", op_name);
#line 5353
    ob_pad(linebuf, 13);
#line 5354
    print_addr(disasm, linebuf, labels, op, 0);
#line 5355
    goto print;
    default: 
#line 5357
    goto print;
    }
  }
#line 5360
  print_full_op_name(linebuf, op);
#line 5361
  ob_pad(linebuf, 12);
#line 5362
  if ((int )op->arg_size == 1) {
#line 5362
    ob_append(linebuf, " (byte)");
  }
#line 5363
  if ((int )op->arg_size == 2) {
#line 5363
    ob_append(linebuf, " (word)");
  }
#line 5364
  if ((int )op->arg_size == 4) {
#line 5364
    ob_append(linebuf, " (dword)");
  }
#line 5365
  if ((int )op->arg_size == 8) {
#line 5365
    ob_append(linebuf, " (qword)");
  }
#line 5366
  switch ((unsigned int )((jit_opcode )((int )op->code & 0xfff8))) {
  case 784U: 
#line 5367
  break;
  case 352U: 
#line 5369
  print_str(linebuf, (char *)op->arg[0]);
#line 5370
  if (! ((int )op->code & 0x02)) {
#line 5371
    ob_append(linebuf, ", ");
#line 5372
    print_arg(disasm, linebuf, op, 2);
  }
#line 5374
  break;
  case 832U: 
  case 280U: 
#line 5377
  ob_append(linebuf, " ");
#line 5378
  print_arg(disasm, linebuf, op, 1);
#line 5379
  ob_append(linebuf, ", ");
#line 5380
  print_addr(disasm, linebuf, labels, op, 1);
#line 5381
  break;
  case 520U: 
#line 5383
  switch (op->arg[0]) {
  case 0L: 
#line 5384
  ob_append(linebuf, " integer");
#line 5384
  break;
  case 1L: 
#line 5385
  ob_append(linebuf, " uns. integer");
#line 5385
  break;
  case 2L: 
#line 5386
  ob_append(linebuf, " float");
#line 5386
  break;
  case 3L: 
#line 5387
  ob_append(linebuf, " ptr");
#line 5387
  break;
  default: 
#line 5388
  tmp___4 = __builtin_expect(1L, 0L);
#line 5388
  if (tmp___4) {
#line 5388
    __assert_rtn((char const   *)"print_op", (char const   *)"tmp/src.c", 4630, (char const   *)"0");
  }
  }
#line 5390
  ob_append(linebuf, ", ");
#line 5391
  print_arg(disasm, linebuf, op, 2);
#line 5392
  break;
  default: 
#line 5394
  print_args(disasm, linebuf, op, labels);
  }
  print: 
#line 5397
  fprintf((FILE */* __restrict  */)f, (char const   */* __restrict  */)"%s", linebuf->buf);
#line 5398
  tmp___5 = strlen((char const   *)linebuf->buf);
#line 5398
  len = (int )tmp___5;
#line 5399
  ob_free(linebuf);
#line 5400
  return (len);
}
}
/* END FUNCTION-DEF print_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_set_new LOC=UNKNOWN */
__inline static jit_set *jit_set_new(void) 
{ 
  jit_set *s ;
  void *tmp ;

  {
#line 2261
  tmp = malloc((size_t )sizeof(jit_set ));
#line 2261
  s = (jit_set *)tmp;
#line 2262
  s->root = (jit_tree *)((void *)0);
#line 2263
  return (s);
}
}
/* END FUNCTION-DEF jit_set_new LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_flw_initialize LOC=UNKNOWN */
__inline static void jit_flw_initialize(struct jit *jit ) 
{ 
  struct jit_func_info *func_info ;
  jit_op *op ;
  jit_op *tmp ;
  int i ;
  int arg_id ;

  {
#line 4748
  func_info = (struct jit_func_info *)((void *)0);
#line 4749
  tmp = jit_op_first(jit->ops);
#line 4749
  op = tmp;
#line 4750
  while (op) {
#line 4751
    op->live_in = jit_set_new();
#line 4752
    op->live_out = jit_set_new();
#line 4753
    i = 0;
#line 4753
    while (i < 3) {
#line 4754
      if ((((int )op->spec >> ((i + 1) - 1) * 2) & 0x03) == 0x01) {
#line 4755
        jit_set_add(op->live_in, (int )op->arg[i]);
      }
#line 4753
      i ++;
    }
#line 4756
    if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 688U) {
#line 4757
      func_info = (struct jit_func_info *)op->arg[1];
    }
#line 4759
    if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 224U) {
#line 4760
      arg_id = (int )op->arg[1];
#line 4761
      if ((unsigned int )(func_info->args + arg_id)->type != 2U) {
#line 4762
        jit_set_add(op->live_in, (3 << 1) | ((arg_id & 0xfffffff) << 4));
      } else {
#line 4764
        jit_set_add(op->live_in, (1 | (3 << 1)) | ((arg_id & 0xfffffff) << 4));
#line 4765
        if ((func_info->args + arg_id)->overflow) {
#line 4766
          jit_set_add(op->live_in, ((1 | (3 << 1)) | (1 << 3)) | ((arg_id & 0xfffffff) << 4));
        }
      }
    }
#line 4769
    op = op->next;
  }
#line 4771
  return;
}
}
/* END FUNCTION-DEF jit_flw_initialize LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF emit_sse_change_sign LOC=UNKNOWN */
static void emit_sse_change_sign(struct jit *jit , jit_op *op , int reg ) 
{ 
  unsigned char *tmp ;

  {
#line 3007
  tmp = emit_sse_get_sign_mask();
#line 3007
  sse_alu_pd_reg_safeimm(jit, op, 87, reg, (double *)tmp);
#line 3008
  return;
}
}
/* END FUNCTION-DEF emit_sse_change_sign LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF node_insert LOC=UNKNOWN */
static jit_tree *node_insert(jit_tree *h , jit_tree_key key , jit_tree_value value ,
                             int *found ) 
{ 
  jit_tree *tmp ;
  int tmp___0 ;
  int tmp___1 ;
  jit_tree *tmp___2 ;

  {
#line 2116
  if ((unsigned long )h == (unsigned long )((void *)0)) {
#line 2116
    tmp = node_new(key, value);
#line 2116
    return (tmp);
  }
#line 2117
  tmp___0 = is_red(h->left);
#line 2117
  if (tmp___0) {
#line 2117
    tmp___1 = is_red(h->right);
#line 2117
    if (tmp___1) {
#line 2117
      color_flip(h);
    }
  }
#line 2118
  if (h->key == key) {
#line 2119
    h->value = value;
#line 2120
    if (found) {
#line 2120
      *found = 1;
    }
  } else
#line 2121
  if (h->key > key) {
#line 2121
    h->left = node_insert(h->left, key, value, found);
  } else {
#line 2122
    h->right = node_insert(h->right, key, value, found);
  }
#line 2123
  tmp___2 = fixup(h);
#line 2123
  return (tmp___2);
}
}
/* END FUNCTION-DEF node_insert LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_add_fop LOC=UNKNOWN */
struct jit_op *jit_add_fop(struct jit *jit , unsigned short code , unsigned char spec ,
                           jit_value arg1 , jit_value arg2 , jit_value arg3 , double flt_imm ,
                           unsigned char arg_size , struct jit_debug_info *debug_info ) 
{ 
  struct jit_op *r ;
  struct jit_op *tmp ;

  {
#line 6339
  tmp = jit_add_op(jit, code, spec, arg1, arg2, arg3, arg_size, debug_info);
#line 6339
  r = tmp;
#line 6340
  r->fp = (unsigned char)1;
#line 6341
  r->flt_imm = flt_imm;
#line 6342
  return (r);
}
}
/* END FUNCTION-DEF jit_add_fop LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_set_clone LOC=UNKNOWN */
__inline static jit_set *jit_set_clone(jit_set *s ) 
{ 
  jit_set *clone ;
  jit_set *tmp ;

  {
#line 2267
  tmp = jit_set_new();
#line 2267
  clone = tmp;
#line 2268
  clone->root = jit_tree_clone(s->root);
#line 2269
  return (clone);
}
}
/* END FUNCTION-DEF jit_set_clone LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF is_active_register LOC=UNKNOWN */
static int is_active_register(struct jit_reg_allocator *al , jit_hw_reg *reg , jit_op *op ) 
{ 
  jit_value vreg ;
  jit_hw_reg *hw ;
  jit_hw_reg *tmp ;
  int tmp___0 ;
  int tmp___1 ;
  int tmp___2 ;
  int tmp___3 ;

  {
#line 4000
  if ((unsigned long )op->next == (unsigned long )((void *)0)) {
#line 4000
    return (0);
  }
#line 4001
  if ((unsigned int )((jit_opcode )((int )(op->next)->code & 0xfff8)) == 216U) {
#line 4001
    return (1);
  } else
#line 4001
  if ((unsigned int )((jit_opcode )((int )(op->next)->code & 0xfff8)) == 200U) {
#line 4001
    return (1);
  } else
#line 4001
  if ((unsigned int )((jit_opcode )((int )(op->next)->code & 0xfff8)) == 232U) {
#line 4001
    return (1);
  }
#line 4002
  if ((unsigned int )((jit_opcode )((int )(op->next)->code & 0xfff8)) == 472U) {
#line 4002
    if ((unsigned long )reg == (unsigned long )al->ret_reg) {
#line 4002
      return (1);
    }
  }
#line 4003
  if ((unsigned long )(op->next)->regmap == (unsigned long )((void *)0)) {
#line 4003
    return (1);
  }
#line 4004
  if ((unsigned long )(op->prev)->regmap == (unsigned long )((void *)0)) {
#line 4004
    return (1);
  }
#line 4006
  tmp = rmap_is_associated(op->regmap, reg->id, (int )reg->fp, & vreg);
#line 4006
  hw = tmp;
#line 4007
  if (hw) {
#line 4008
    if (op->prev) {
#line 4008
      if ((op->prev)->live_in) {
#line 4008
        tmp___0 = jit_set_get((op->prev)->live_in, (int )vreg);
#line 4008
        if (tmp___0) {
#line 4008
          return (1);
        } else {
#line 4008
          goto _L;
        }
      } else
      _L: /* CIL Label */ 
#line 4008
      if ((op->prev)->live_out) {
#line 4008
        tmp___1 = jit_set_get((op->prev)->live_out, (int )vreg);
#line 4008
        if (tmp___1) {
#line 4008
          return (1);
        }
      }
    }
#line 4009
    if (op->next) {
#line 4009
      if ((op->next)->live_in) {
#line 4009
        tmp___2 = jit_set_get((op->next)->live_in, (int )vreg);
#line 4009
        if (tmp___2) {
#line 4009
          return (1);
        } else {
#line 4009
          goto _L___0;
        }
      } else
      _L___0: /* CIL Label */ 
#line 4009
      if ((op->next)->live_out) {
#line 4009
        tmp___3 = jit_set_get((op->next)->live_out, (int )vreg);
#line 4009
        if (tmp___3) {
#line 4009
          return (1);
        }
      }
    }
#line 4010
    return (0);
  }
#line 4012
  return (0);
}
}
/* END FUNCTION-DEF is_active_register LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF emit_set_fparg LOC=UNKNOWN */
__inline static void emit_set_fparg(struct jit *jit , struct jit_out_arg *arg ) 
{ 
  int sreg ;
  int reg ;
  jit_value value ;
  int pos ;
  int tmp ;
  unsigned char *tmp___0 ;
  unsigned char _amd64_rex_bits ;
  int tmp___1 ;
  unsigned char *tmp___2 ;
  unsigned char *tmp___3 ;
  unsigned char *tmp___4 ;
  unsigned char *tmp___5 ;
  x86_imm_buf imb ;
  unsigned char *tmp___6 ;
  unsigned char *tmp___7 ;
  unsigned char *tmp___8 ;
  unsigned char *tmp___9 ;
  unsigned char *tmp___10 ;
  unsigned char *tmp___11 ;
  unsigned char *tmp___12 ;
  unsigned char *tmp___13 ;
  unsigned char *tmp___14 ;
  unsigned char *tmp___15 ;
  x86_imm_buf imb___0 ;
  unsigned char *tmp___16 ;
  unsigned char *tmp___17 ;
  unsigned char *tmp___18 ;
  unsigned char *tmp___19 ;
  unsigned char *tmp___20 ;
  unsigned char *tmp___21 ;
  unsigned char *tmp___22 ;
  x86_imm_buf imb___1 ;
  unsigned char *tmp___23 ;
  unsigned char *tmp___24 ;
  unsigned char *tmp___25 ;
  unsigned char *tmp___26 ;
  unsigned char *tmp___27 ;
  unsigned char _amd64_rex_bits___0 ;
  int tmp___28 ;
  unsigned char *tmp___29 ;
  unsigned char *tmp___30 ;
  unsigned char *tmp___31 ;
  unsigned char *tmp___32 ;
  x86_imm_buf imb___2 ;
  unsigned char *tmp___33 ;
  unsigned char *tmp___34 ;
  unsigned char *tmp___35 ;
  unsigned char *tmp___36 ;
  unsigned char *tmp___37 ;
  unsigned char *tmp___38 ;
  unsigned char *tmp___39 ;
  unsigned char *tmp___40 ;
  unsigned char *tmp___41 ;
  unsigned char *tmp___42 ;
  x86_imm_buf imb___3 ;
  unsigned char *tmp___43 ;
  unsigned char *tmp___44 ;
  unsigned char *tmp___45 ;
  unsigned char *tmp___46 ;
  unsigned char *tmp___47 ;
  unsigned char *tmp___48 ;
  unsigned char *tmp___49 ;
  x86_imm_buf imb___4 ;
  unsigned char *tmp___50 ;
  unsigned char *tmp___51 ;
  unsigned char *tmp___52 ;
  unsigned char *tmp___53 ;
  unsigned char *tmp___54 ;
  unsigned char _amd64_rex_bits___1 ;
  int tmp___55 ;
  int tmp___56 ;
  unsigned char *tmp___57 ;
  unsigned char *tmp___58 ;
  unsigned char *tmp___59 ;
  unsigned char *tmp___60 ;
  unsigned char *tmp___61 ;
  unsigned char _amd64_rex_bits___2 ;
  int tmp___62 ;
  int tmp___63 ;
  unsigned char *tmp___64 ;
  unsigned char *tmp___65 ;
  unsigned char *tmp___66 ;
  unsigned char *tmp___67 ;
  int tmp___68 ;
  float val ;
  unsigned int tmp___69 ;
  unsigned long long tmp___70 ;
  unsigned char _amd64_rex_bits___3 ;
  unsigned char *tmp___71 ;
  unsigned char *tmp___72 ;
  amd64_imm_buf imb___5 ;
  unsigned char *tmp___73 ;
  unsigned char *tmp___74 ;
  unsigned char *tmp___75 ;
  unsigned char *tmp___76 ;
  unsigned char *tmp___77 ;
  unsigned char *tmp___78 ;
  unsigned char *tmp___79 ;
  unsigned char *tmp___80 ;
  x86_imm_buf imb___6 ;
  unsigned char *tmp___81 ;
  unsigned char *tmp___82 ;
  unsigned char *tmp___83 ;
  unsigned char *tmp___84 ;
  unsigned char *tmp___85 ;
  unsigned char _amd64_rex_bits___4 ;
  int tmp___86 ;
  unsigned char *tmp___87 ;
  unsigned char *tmp___88 ;
  unsigned char *tmp___89 ;
  unsigned char *tmp___90 ;
  unsigned char _amd64_rex_bits___5 ;
  unsigned char *tmp___91 ;
  unsigned char *tmp___92 ;
  amd64_imm_buf imb___7 ;
  unsigned char *tmp___93 ;
  unsigned char *tmp___94 ;
  unsigned char *tmp___95 ;
  unsigned char *tmp___96 ;
  unsigned char *tmp___97 ;
  unsigned char *tmp___98 ;
  unsigned char *tmp___99 ;
  unsigned char *tmp___100 ;
  x86_imm_buf imb___8 ;
  unsigned char *tmp___101 ;
  unsigned char *tmp___102 ;
  unsigned char *tmp___103 ;
  unsigned char *tmp___104 ;
  unsigned char *tmp___105 ;
  unsigned char _amd64_rex_bits___6 ;
  int tmp___106 ;
  unsigned char *tmp___107 ;
  unsigned char *tmp___108 ;
  unsigned char *tmp___109 ;
  unsigned char *tmp___110 ;

  {
#line 3617
  reg = (*((jit->reg_al)->fp_arg_regs + arg->argpos))->id;
#line 3618
  value = arg->value.generic;
#line 3619
  if (arg->isreg) {
#line 3620
    tmp___68 = is_spilled(value, jit->prepared_args.op, & sreg);
#line 3620
    if (tmp___68) {
#line 3621
      tmp = stack_reg_pos(jit, (int )value);
#line 3621
      pos = tmp;
#line 3622
      if ((unsigned long long )arg->size == sizeof(float )) {
#line 3623
        while (1) {
#line 3623
          tmp___0 = jit->ip;
#line 3623
          (jit->ip) ++;
#line 3623
          *tmp___0 = (unsigned char)242;
#line 3623
          while (1) {
#line 3623
            if (reg > 7) {
#line 3623
              tmp___1 = 4;
            } else {
#line 3623
              tmp___1 = 0;
            }
#line 3623
            _amd64_rex_bits = (unsigned char )tmp___1;
#line 3623
            if ((int )_amd64_rex_bits != 0) {
#line 3623
              tmp___2 = jit->ip;
#line 3623
              (jit->ip) ++;
#line 3623
              *tmp___2 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
            }
#line 3623
            break;
          }
#line 3623
          tmp___3 = jit->ip;
#line 3623
          (jit->ip) ++;
#line 3623
          *tmp___3 = (unsigned char)15;
#line 3623
          tmp___4 = jit->ip;
#line 3623
          (jit->ip) ++;
#line 3623
          *tmp___4 = (unsigned char)90;
#line 3623
          while (1) {
#line 3623
            while (1) {
#line 3623
              if (0) {
#line 3623
                if (pos == 0) {
#line 3623
                  while (1) {
#line 3623
                    tmp___10 = jit->ip;
#line 3623
                    (jit->ip) ++;
#line 3623
                    *tmp___10 = (unsigned char )((((reg & 0x7) & 0x07) << 3) | 4);
#line 3623
                    break;
                  }
#line 3623
                  while (1) {
#line 3623
                    tmp___11 = jit->ip;
#line 3623
                    (jit->ip) ++;
#line 3623
                    *tmp___11 = (unsigned char )((4 << 3) | 4);
#line 3623
                    break;
                  }
                } else
#line 3623
                if ((jit_value )pos >= -128L) {
#line 3623
                  if ((jit_value )pos <= 127L) {
#line 3623
                    while (1) {
#line 3623
                      tmp___12 = jit->ip;
#line 3623
                      (jit->ip) ++;
#line 3623
                      *tmp___12 = (unsigned char )(((1 << 6) | (((reg & 0x7) & 0x07) << 3)) | 4);
#line 3623
                      break;
                    }
#line 3623
                    while (1) {
#line 3623
                      tmp___13 = jit->ip;
#line 3623
                      (jit->ip) ++;
#line 3623
                      *tmp___13 = (unsigned char )((4 << 3) | 4);
#line 3623
                      break;
                    }
#line 3623
                    while (1) {
#line 3623
                      *(jit->ip) = (unsigned char )(pos & 0xff);
#line 3623
                      (jit->ip) ++;
#line 3623
                      break;
                    }
                  } else {
#line 3623
                    goto _L;
                  }
                } else {
                  _L: /* CIL Label */ 
#line 3623
                  while (1) {
#line 3623
                    tmp___14 = jit->ip;
#line 3623
                    (jit->ip) ++;
#line 3623
                    *tmp___14 = (unsigned char )(((2 << 6) | (((reg & 0x7) & 0x07) << 3)) | 4);
#line 3623
                    break;
                  }
#line 3623
                  while (1) {
#line 3623
                    tmp___15 = jit->ip;
#line 3623
                    (jit->ip) ++;
#line 3623
                    *tmp___15 = (unsigned char )((4 << 3) | 4);
#line 3623
                    break;
                  }
#line 3623
                  while (1) {
#line 3623
                    imb___0.val = pos;
#line 3623
                    tmp___16 = jit->ip;
#line 3623
                    (jit->ip) ++;
#line 3623
                    *tmp___16 = imb___0.b[0];
#line 3623
                    tmp___17 = jit->ip;
#line 3623
                    (jit->ip) ++;
#line 3623
                    *tmp___17 = imb___0.b[1];
#line 3623
                    tmp___18 = jit->ip;
#line 3623
                    (jit->ip) ++;
#line 3623
                    *tmp___18 = imb___0.b[2];
#line 3623
                    tmp___19 = jit->ip;
#line 3623
                    (jit->ip) ++;
#line 3623
                    *tmp___19 = imb___0.b[3];
#line 3623
                    break;
                  }
                }
#line 3623
                break;
              }
#line 3623
              if (pos == 0) {

              }
#line 3623
              if ((jit_value )pos >= -128L) {
#line 3623
                if ((jit_value )pos <= 127L) {
#line 3623
                  while (1) {
#line 3623
                    tmp___21 = jit->ip;
#line 3623
                    (jit->ip) ++;
#line 3623
                    *tmp___21 = (unsigned char )(((1 << 6) | (((reg & 0x7) & 0x07) << 3)) | 5);
#line 3623
                    break;
                  }
#line 3623
                  while (1) {
#line 3623
                    *(jit->ip) = (unsigned char )(pos & 0xff);
#line 3623
                    (jit->ip) ++;
#line 3623
                    break;
                  }
                } else {
#line 3623
                  goto _L___0;
                }
              } else {
                _L___0: /* CIL Label */ 
#line 3623
                while (1) {
#line 3623
                  tmp___22 = jit->ip;
#line 3623
                  (jit->ip) ++;
#line 3623
                  *tmp___22 = (unsigned char )(((2 << 6) | (((reg & 0x7) & 0x07) << 3)) | 5);
#line 3623
                  break;
                }
#line 3623
                while (1) {
#line 3623
                  imb___1.val = pos;
#line 3623
                  tmp___23 = jit->ip;
#line 3623
                  (jit->ip) ++;
#line 3623
                  *tmp___23 = imb___1.b[0];
#line 3623
                  tmp___24 = jit->ip;
#line 3623
                  (jit->ip) ++;
#line 3623
                  *tmp___24 = imb___1.b[1];
#line 3623
                  tmp___25 = jit->ip;
#line 3623
                  (jit->ip) ++;
#line 3623
                  *tmp___25 = imb___1.b[2];
#line 3623
                  tmp___26 = jit->ip;
#line 3623
                  (jit->ip) ++;
#line 3623
                  *tmp___26 = imb___1.b[3];
#line 3623
                  break;
                }
              }
#line 3623
              break;
            }
#line 3623
            break;
          }
#line 3623
          break;
        }
      } else {
#line 3624
        while (1) {
#line 3624
          tmp___27 = jit->ip;
#line 3624
          (jit->ip) ++;
#line 3624
          *tmp___27 = (unsigned char)102;
#line 3624
          while (1) {
#line 3624
            if (reg > 7) {
#line 3624
              tmp___28 = 4;
            } else {
#line 3624
              tmp___28 = 0;
            }
#line 3624
            _amd64_rex_bits___0 = (unsigned char )tmp___28;
#line 3624
            if ((int )_amd64_rex_bits___0 != 0) {
#line 3624
              tmp___29 = jit->ip;
#line 3624
              (jit->ip) ++;
#line 3624
              *tmp___29 = (unsigned char )(0x40 | (int )_amd64_rex_bits___0);
            }
#line 3624
            break;
          }
#line 3624
          tmp___30 = jit->ip;
#line 3624
          (jit->ip) ++;
#line 3624
          *tmp___30 = (unsigned char)15;
#line 3624
          tmp___31 = jit->ip;
#line 3624
          (jit->ip) ++;
#line 3624
          *tmp___31 = (unsigned char)18;
#line 3624
          while (1) {
#line 3624
            while (1) {
#line 3624
              if (0) {
#line 3624
                if (pos == 0) {
#line 3624
                  while (1) {
#line 3624
                    tmp___37 = jit->ip;
#line 3624
                    (jit->ip) ++;
#line 3624
                    *tmp___37 = (unsigned char )((((reg & 0x7) & 0x07) << 3) | 4);
#line 3624
                    break;
                  }
#line 3624
                  while (1) {
#line 3624
                    tmp___38 = jit->ip;
#line 3624
                    (jit->ip) ++;
#line 3624
                    *tmp___38 = (unsigned char )((4 << 3) | 4);
#line 3624
                    break;
                  }
                } else
#line 3624
                if ((jit_value )pos >= -128L) {
#line 3624
                  if ((jit_value )pos <= 127L) {
#line 3624
                    while (1) {
#line 3624
                      tmp___39 = jit->ip;
#line 3624
                      (jit->ip) ++;
#line 3624
                      *tmp___39 = (unsigned char )(((1 << 6) | (((reg & 0x7) & 0x07) << 3)) | 4);
#line 3624
                      break;
                    }
#line 3624
                    while (1) {
#line 3624
                      tmp___40 = jit->ip;
#line 3624
                      (jit->ip) ++;
#line 3624
                      *tmp___40 = (unsigned char )((4 << 3) | 4);
#line 3624
                      break;
                    }
#line 3624
                    while (1) {
#line 3624
                      *(jit->ip) = (unsigned char )(pos & 0xff);
#line 3624
                      (jit->ip) ++;
#line 3624
                      break;
                    }
                  } else {
#line 3624
                    goto _L___1;
                  }
                } else {
                  _L___1: /* CIL Label */ 
#line 3624
                  while (1) {
#line 3624
                    tmp___41 = jit->ip;
#line 3624
                    (jit->ip) ++;
#line 3624
                    *tmp___41 = (unsigned char )(((2 << 6) | (((reg & 0x7) & 0x07) << 3)) | 4);
#line 3624
                    break;
                  }
#line 3624
                  while (1) {
#line 3624
                    tmp___42 = jit->ip;
#line 3624
                    (jit->ip) ++;
#line 3624
                    *tmp___42 = (unsigned char )((4 << 3) | 4);
#line 3624
                    break;
                  }
#line 3624
                  while (1) {
#line 3624
                    imb___3.val = pos;
#line 3624
                    tmp___43 = jit->ip;
#line 3624
                    (jit->ip) ++;
#line 3624
                    *tmp___43 = imb___3.b[0];
#line 3624
                    tmp___44 = jit->ip;
#line 3624
                    (jit->ip) ++;
#line 3624
                    *tmp___44 = imb___3.b[1];
#line 3624
                    tmp___45 = jit->ip;
#line 3624
                    (jit->ip) ++;
#line 3624
                    *tmp___45 = imb___3.b[2];
#line 3624
                    tmp___46 = jit->ip;
#line 3624
                    (jit->ip) ++;
#line 3624
                    *tmp___46 = imb___3.b[3];
#line 3624
                    break;
                  }
                }
#line 3624
                break;
              }
#line 3624
              if (pos == 0) {

              }
#line 3624
              if ((jit_value )pos >= -128L) {
#line 3624
                if ((jit_value )pos <= 127L) {
#line 3624
                  while (1) {
#line 3624
                    tmp___48 = jit->ip;
#line 3624
                    (jit->ip) ++;
#line 3624
                    *tmp___48 = (unsigned char )(((1 << 6) | (((reg & 0x7) & 0x07) << 3)) | 5);
#line 3624
                    break;
                  }
#line 3624
                  while (1) {
#line 3624
                    *(jit->ip) = (unsigned char )(pos & 0xff);
#line 3624
                    (jit->ip) ++;
#line 3624
                    break;
                  }
                } else {
#line 3624
                  goto _L___2;
                }
              } else {
                _L___2: /* CIL Label */ 
#line 3624
                while (1) {
#line 3624
                  tmp___49 = jit->ip;
#line 3624
                  (jit->ip) ++;
#line 3624
                  *tmp___49 = (unsigned char )(((2 << 6) | (((reg & 0x7) & 0x07) << 3)) | 5);
#line 3624
                  break;
                }
#line 3624
                while (1) {
#line 3624
                  imb___4.val = pos;
#line 3624
                  tmp___50 = jit->ip;
#line 3624
                  (jit->ip) ++;
#line 3624
                  *tmp___50 = imb___4.b[0];
#line 3624
                  tmp___51 = jit->ip;
#line 3624
                  (jit->ip) ++;
#line 3624
                  *tmp___51 = imb___4.b[1];
#line 3624
                  tmp___52 = jit->ip;
#line 3624
                  (jit->ip) ++;
#line 3624
                  *tmp___52 = imb___4.b[2];
#line 3624
                  tmp___53 = jit->ip;
#line 3624
                  (jit->ip) ++;
#line 3624
                  *tmp___53 = imb___4.b[3];
#line 3624
                  break;
                }
              }
#line 3624
              break;
            }
#line 3624
            break;
          }
#line 3624
          break;
        }
      }
    } else
#line 3626
    if ((unsigned long long )arg->size == sizeof(float )) {
#line 3627
      while (1) {
#line 3627
        tmp___54 = jit->ip;
#line 3627
        (jit->ip) ++;
#line 3627
        *tmp___54 = (unsigned char)242;
#line 3627
        while (1) {
#line 3627
          if (reg > 7) {
#line 3627
            tmp___55 = 4;
          } else {
#line 3627
            tmp___55 = 0;
          }
#line 3627
          if (sreg > 7) {
#line 3627
            tmp___56 = 1;
          } else {
#line 3627
            tmp___56 = 0;
          }
#line 3627
          _amd64_rex_bits___1 = (unsigned char )(tmp___55 | tmp___56);
#line 3627
          if ((int )_amd64_rex_bits___1 != 0) {
#line 3627
            tmp___57 = jit->ip;
#line 3627
            (jit->ip) ++;
#line 3627
            *tmp___57 = (unsigned char )(0x40 | (int )_amd64_rex_bits___1);
          }
#line 3627
          break;
        }
#line 3627
        tmp___58 = jit->ip;
#line 3627
        (jit->ip) ++;
#line 3627
        *tmp___58 = (unsigned char)15;
#line 3627
        tmp___59 = jit->ip;
#line 3627
        (jit->ip) ++;
#line 3627
        *tmp___59 = (unsigned char)90;
#line 3627
        while (1) {
#line 3627
          while (1) {
#line 3627
            tmp___60 = jit->ip;
#line 3627
            (jit->ip) ++;
#line 3627
            *tmp___60 = (unsigned char )(((3 << 6) | ((reg & 0x07) << 3)) | (sreg & 0x07));
#line 3627
            break;
          }
#line 3627
          break;
        }
#line 3627
        break;
      }
    } else
#line 3628
    if (reg != sreg) {
#line 3628
      while (1) {
#line 3628
        tmp___61 = jit->ip;
#line 3628
        (jit->ip) ++;
#line 3628
        *tmp___61 = (unsigned char)242;
#line 3628
        while (1) {
#line 3628
          if (reg > 7) {
#line 3628
            tmp___62 = 4;
          } else {
#line 3628
            tmp___62 = 0;
          }
#line 3628
          if (sreg > 7) {
#line 3628
            tmp___63 = 1;
          } else {
#line 3628
            tmp___63 = 0;
          }
#line 3628
          _amd64_rex_bits___2 = (unsigned char )(tmp___62 | tmp___63);
#line 3628
          if ((int )_amd64_rex_bits___2 != 0) {
#line 3628
            tmp___64 = jit->ip;
#line 3628
            (jit->ip) ++;
#line 3628
            *tmp___64 = (unsigned char )(0x40 | (int )_amd64_rex_bits___2);
          }
#line 3628
          break;
        }
#line 3628
        tmp___65 = jit->ip;
#line 3628
        (jit->ip) ++;
#line 3628
        *tmp___65 = (unsigned char)15;
#line 3628
        tmp___66 = jit->ip;
#line 3628
        (jit->ip) ++;
#line 3628
        *tmp___66 = (unsigned char)16;
#line 3628
        while (1) {
#line 3628
          while (1) {
#line 3628
            tmp___67 = jit->ip;
#line 3628
            (jit->ip) ++;
#line 3628
            *tmp___67 = (unsigned char )(((3 << 6) | ((reg & 0x07) << 3)) | (sreg & 0x07));
#line 3628
            break;
          }
#line 3628
          break;
        }
#line 3628
        break;
      }
    }
  } else
#line 3631
  if ((unsigned long long )arg->size == sizeof(float )) {
#line 3632
    val = (float )arg->value.fp;
#line 3634
    tmp___70 = __builtin_object_size((void *)(& tmp___69), 0);
#line 3634
    __builtin___memcpy_chk((void *)(& tmp___69), (void const   *)(& val), sizeof(float ),
                           tmp___70);
#line 3635
    while (1) {
#line 3635
      while (1) {
#line 3635
        _amd64_rex_bits___3 = (unsigned char)0;
#line 3635
        if ((int )_amd64_rex_bits___3 != 0) {
#line 3635
          tmp___71 = jit->ip;
#line 3635
          (jit->ip) ++;
#line 3635
          *tmp___71 = (unsigned char )(0x40 | (int )_amd64_rex_bits___3);
        }
#line 3635
        break;
      }
#line 3635
      tmp___72 = jit->ip;
#line 3635
      (jit->ip) ++;
#line 3635
      *tmp___72 = (unsigned char)184;
#line 3635
      while (1) {
#line 3635
        imb___6.val = (int )((size_t )tmp___69);
#line 3635
        tmp___81 = jit->ip;
#line 3635
        (jit->ip) ++;
#line 3635
        *tmp___81 = imb___6.b[0];
#line 3635
        tmp___82 = jit->ip;
#line 3635
        (jit->ip) ++;
#line 3635
        *tmp___82 = imb___6.b[1];
#line 3635
        tmp___83 = jit->ip;
#line 3635
        (jit->ip) ++;
#line 3635
        *tmp___83 = imb___6.b[2];
#line 3635
        tmp___84 = jit->ip;
#line 3635
        (jit->ip) ++;
#line 3635
        *tmp___84 = imb___6.b[3];
#line 3635
        break;
      }
#line 3635
      break;
    }
#line 3636
    while (1) {
#line 3636
      tmp___85 = jit->ip;
#line 3636
      (jit->ip) ++;
#line 3636
      *tmp___85 = (unsigned char)102;
#line 3636
      while (1) {
#line 3636
        if (reg > 7) {
#line 3636
          tmp___86 = 4;
        } else {
#line 3636
          tmp___86 = 0;
        }
#line 3636
        _amd64_rex_bits___4 = (unsigned char )tmp___86;
#line 3636
        if ((int )_amd64_rex_bits___4 != 0) {
#line 3636
          tmp___87 = jit->ip;
#line 3636
          (jit->ip) ++;
#line 3636
          *tmp___87 = (unsigned char )(0x40 | (int )_amd64_rex_bits___4);
        }
#line 3636
        break;
      }
#line 3636
      tmp___88 = jit->ip;
#line 3636
      (jit->ip) ++;
#line 3636
      *tmp___88 = (unsigned char)15;
#line 3636
      tmp___89 = jit->ip;
#line 3636
      (jit->ip) ++;
#line 3636
      *tmp___89 = (unsigned char)110;
#line 3636
      while (1) {
#line 3636
        while (1) {
#line 3636
          tmp___90 = jit->ip;
#line 3636
          (jit->ip) ++;
#line 3636
          *tmp___90 = (unsigned char )((3 << 6) | ((reg & 0x07) << 3));
#line 3636
          break;
        }
#line 3636
        break;
      }
#line 3636
      break;
    }
  } else {
#line 3638
    while (1) {
#line 3638
      while (1) {
#line 3638
        _amd64_rex_bits___5 = (unsigned char)8;
#line 3638
        if ((int )_amd64_rex_bits___5 != 0) {
#line 3638
          tmp___91 = jit->ip;
#line 3638
          (jit->ip) ++;
#line 3638
          *tmp___91 = (unsigned char )(0x40 | (int )_amd64_rex_bits___5);
        }
#line 3638
        break;
      }
#line 3638
      tmp___92 = jit->ip;
#line 3638
      (jit->ip) ++;
#line 3638
      *tmp___92 = (unsigned char)184;
#line 3638
      while (1) {
#line 3638
        imb___7.val = (size_t )value;
#line 3638
        tmp___93 = jit->ip;
#line 3638
        (jit->ip) ++;
#line 3638
        *tmp___93 = imb___7.b[0];
#line 3638
        tmp___94 = jit->ip;
#line 3638
        (jit->ip) ++;
#line 3638
        *tmp___94 = imb___7.b[1];
#line 3638
        tmp___95 = jit->ip;
#line 3638
        (jit->ip) ++;
#line 3638
        *tmp___95 = imb___7.b[2];
#line 3638
        tmp___96 = jit->ip;
#line 3638
        (jit->ip) ++;
#line 3638
        *tmp___96 = imb___7.b[3];
#line 3638
        tmp___97 = jit->ip;
#line 3638
        (jit->ip) ++;
#line 3638
        *tmp___97 = imb___7.b[4];
#line 3638
        tmp___98 = jit->ip;
#line 3638
        (jit->ip) ++;
#line 3638
        *tmp___98 = imb___7.b[5];
#line 3638
        tmp___99 = jit->ip;
#line 3638
        (jit->ip) ++;
#line 3638
        *tmp___99 = imb___7.b[6];
#line 3638
        tmp___100 = jit->ip;
#line 3638
        (jit->ip) ++;
#line 3638
        *tmp___100 = imb___7.b[7];
#line 3638
        break;
      }
#line 3638
      break;
    }
#line 3639
    while (1) {
#line 3639
      tmp___105 = jit->ip;
#line 3639
      (jit->ip) ++;
#line 3639
      *tmp___105 = (unsigned char)102;
#line 3639
      while (1) {
#line 3639
        if (reg > 7) {
#line 3639
          tmp___106 = 4;
        } else {
#line 3639
          tmp___106 = 0;
        }
#line 3639
        _amd64_rex_bits___6 = (unsigned char )(8 | tmp___106);
#line 3639
        if ((int )_amd64_rex_bits___6 != 0) {
#line 3639
          tmp___107 = jit->ip;
#line 3639
          (jit->ip) ++;
#line 3639
          *tmp___107 = (unsigned char )(0x40 | (int )_amd64_rex_bits___6);
        }
#line 3639
        break;
      }
#line 3639
      tmp___108 = jit->ip;
#line 3639
      (jit->ip) ++;
#line 3639
      *tmp___108 = (unsigned char)15;
#line 3639
      tmp___109 = jit->ip;
#line 3639
      (jit->ip) ++;
#line 3639
      *tmp___109 = (unsigned char)110;
#line 3639
      while (1) {
#line 3639
        while (1) {
#line 3639
          tmp___110 = jit->ip;
#line 3639
          (jit->ip) ++;
#line 3639
          *tmp___110 = (unsigned char )((3 << 6) | ((reg & 0x07) << 3));
#line 3639
          break;
        }
#line 3639
        break;
      }
#line 3639
      break;
    }
  }
#line 3642
  return;
}
}
/* END FUNCTION-DEF emit_set_fparg LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF ob_pad LOC=UNKNOWN */
static void ob_pad(struct output_buf *ob , int size ) 
{ 
  size_t tmp ;

  {
#line 4982
  while (1) {
#line 4982
    tmp = strlen((char const   *)ob->buf);
#line 4982
    if (! (tmp < (size_t )size)) {
#line 4982
      break;
    }
#line 4983
    ob_append(ob, " ");
  }
#line 4984
  return;
}
}
/* END FUNCTION-DEF ob_pad LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF emit_transfer_op LOC=UNKNOWN */
static void emit_transfer_op(struct jit *jit , jit_op *op , int alu_op ) 
{ 
  jit_op *init_op ;
  struct transfer_info *tinf ;
  unsigned char _amd64_rex_bits ;
  int tmp ;
  int tmp___0 ;
  int tmp___1 ;
  unsigned char *tmp___2 ;
  unsigned char *tmp___3 ;
  unsigned char *tmp___4 ;
  unsigned char *tmp___5 ;
  x86_imm_buf imb ;
  unsigned char *tmp___6 ;
  unsigned char *tmp___7 ;
  unsigned char *tmp___8 ;
  unsigned char *tmp___9 ;
  unsigned char *tmp___10 ;
  unsigned char *tmp___11 ;
  unsigned char *tmp___12 ;
  unsigned char *tmp___13 ;
  unsigned char *tmp___14 ;
  unsigned char *tmp___15 ;
  x86_imm_buf imb___0 ;
  unsigned char *tmp___16 ;
  unsigned char *tmp___17 ;
  unsigned char *tmp___18 ;
  unsigned char *tmp___19 ;
  unsigned char _amd64_rex_bits___0 ;
  int tmp___20 ;
  unsigned char *tmp___21 ;
  unsigned char *tmp___22 ;
  unsigned char *tmp___23 ;
  unsigned char *tmp___24 ;
  unsigned char *tmp___25 ;
  unsigned char *tmp___26 ;
  unsigned char *tmp___27 ;
  unsigned char *tmp___28 ;
  x86_imm_buf imb___1 ;
  unsigned char *tmp___29 ;
  unsigned char *tmp___30 ;
  unsigned char *tmp___31 ;
  unsigned char *tmp___32 ;
  unsigned char *tmp___33 ;
  unsigned char *tmp___34 ;
  unsigned char *tmp___35 ;
  x86_imm_buf imb___2 ;
  unsigned char *tmp___36 ;
  unsigned char *tmp___37 ;
  unsigned char *tmp___38 ;
  unsigned char *tmp___39 ;
  unsigned char _amd64_rex_bits___1 ;
  int tmp___40 ;
  unsigned char *tmp___41 ;
  unsigned char *tmp___42 ;
  unsigned char *tmp___43 ;
  unsigned char *tmp___44 ;
  unsigned char *tmp___45 ;
  unsigned char *tmp___46 ;
  unsigned char *tmp___47 ;
  unsigned char *tmp___48 ;
  x86_imm_buf imb___3 ;
  unsigned char *tmp___49 ;
  unsigned char *tmp___50 ;
  unsigned char *tmp___51 ;
  unsigned char *tmp___52 ;
  unsigned char *tmp___53 ;
  unsigned char *tmp___54 ;
  unsigned char *tmp___55 ;
  x86_imm_buf imb___4 ;
  unsigned char *tmp___56 ;
  unsigned char *tmp___57 ;
  unsigned char *tmp___58 ;
  unsigned char *tmp___59 ;
  unsigned char _amd64_rex_bits___2 ;
  int tmp___60 ;
  int tmp___61 ;
  unsigned char *tmp___62 ;
  unsigned char *tmp___63 ;
  unsigned char *tmp___64 ;
  unsigned char _amd64_rex_bits___3 ;
  int tmp___65 ;
  unsigned char *tmp___66 ;
  unsigned char *tmp___67 ;
  unsigned char *tmp___68 ;
  unsigned char *tmp___69 ;
  unsigned char *tmp___70 ;
  unsigned char *tmp___71 ;
  int tmp___72 ;
  unsigned char *tmp___73 ;
  unsigned char *tmp___74 ;
  x86_imm_buf imb___5 ;
  int tmp___75 ;
  unsigned char *tmp___76 ;
  unsigned char *tmp___77 ;
  unsigned char *tmp___78 ;
  unsigned char *tmp___79 ;
  int tmp___80 ;
  int tmp___81 ;
  int tmp___82 ;
  unsigned char *tmp___83 ;
  int tmp___84 ;
  unsigned char *tmp___85 ;
  int tmp___86 ;
  unsigned char *tmp___87 ;
  x86_imm_buf imb___6 ;
  int tmp___88 ;
  unsigned char *tmp___89 ;
  unsigned char *tmp___90 ;
  unsigned char *tmp___91 ;
  unsigned char *tmp___92 ;
  int tmp___93 ;
  int tmp___94 ;

  {
#line 4487
  init_op = op->prev;
#line 4488
  while ((unsigned int )((jit_opcode )((int )init_op->code & 0xfff8)) != 184U) {
#line 4489
    init_op = init_op->prev;
  }
#line 4490
  tinf = (struct transfer_info *)init_op->addendum;
#line 4491
  if (op->arg[1] == (jit_value )((2 << 1) | (1 << 4))) {
#line 4492
    while (1) {
#line 4492
      while (1) {
#line 4492
        if (tinf->scrapreg > 7) {
#line 4492
          tmp = 4;
        } else {
#line 4492
          tmp = 0;
        }
#line 4492
        if (tinf->counterreg > 7) {
#line 4492
          tmp___0 = 2;
        } else {
#line 4492
          tmp___0 = 0;
        }
#line 4492
        if (tinf->destreg > 7) {
#line 4492
          tmp___1 = 1;
        } else {
#line 4492
          tmp___1 = 0;
        }
#line 4492
        _amd64_rex_bits = (unsigned char )(((8 | tmp) | tmp___0) | tmp___1);
#line 4492
        if ((int )_amd64_rex_bits != 0) {
#line 4492
          tmp___2 = jit->ip;
#line 4492
          (jit->ip) ++;
#line 4492
          *tmp___2 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
        }
#line 4492
        break;
      }
#line 4492
      while (1) {
#line 4492
        tmp___3 = jit->ip;
#line 4492
        (jit->ip) ++;
#line 4492
        *tmp___3 = (unsigned char )(((int )((unsigned char )alu_op) << 3) + 3);
#line 4492
        while (1) {
#line 4492
          if ((tinf->destreg & 0x7) == -1) {
#line 4492
            while (1) {
#line 4492
              tmp___4 = jit->ip;
#line 4492
              (jit->ip) ++;
#line 4492
              *tmp___4 = (unsigned char )((((tinf->scrapreg & 0x7) & 0x07) << 3) | 4);
#line 4492
              break;
            }
#line 4492
            while (1) {
#line 4492
              tmp___5 = jit->ip;
#line 4492
              (jit->ip) ++;
#line 4492
              *tmp___5 = (unsigned char )((((tinf->counterreg & 0x7) & 0x07) << 3) | 5);
#line 4492
              break;
            }
#line 4492
            while (1) {
#line 4492
              imb.val = - tinf->block_size;
#line 4492
              tmp___6 = jit->ip;
#line 4492
              (jit->ip) ++;
#line 4492
              *tmp___6 = imb.b[0];
#line 4492
              tmp___7 = jit->ip;
#line 4492
              (jit->ip) ++;
#line 4492
              *tmp___7 = imb.b[1];
#line 4492
              tmp___8 = jit->ip;
#line 4492
              (jit->ip) ++;
#line 4492
              *tmp___8 = imb.b[2];
#line 4492
              tmp___9 = jit->ip;
#line 4492
              (jit->ip) ++;
#line 4492
              *tmp___9 = imb.b[3];
#line 4492
              break;
            }
          } else
#line 4492
          if (- tinf->block_size == 0) {
#line 4492
            if ((tinf->destreg & 0x7) != 5) {
#line 4492
              while (1) {
#line 4492
                tmp___10 = jit->ip;
#line 4492
                (jit->ip) ++;
#line 4492
                *tmp___10 = (unsigned char )((((tinf->scrapreg & 0x7) & 0x07) << 3) | 4);
#line 4492
                break;
              }
#line 4492
              while (1) {
#line 4492
                tmp___11 = jit->ip;
#line 4492
                (jit->ip) ++;
#line 4492
                *tmp___11 = (unsigned char )(((((tinf->counterreg & 0x7) & 0x7) & 0x07) << 3) | (((tinf->destreg & 0x7) & 0x7) & 0x07));
#line 4492
                break;
              }
            } else {
#line 4492
              goto _L___0;
            }
          } else
          _L___0: /* CIL Label */ 
#line 4492
          if ((jit_value )(- tinf->block_size) >= -128L) {
#line 4492
            if ((jit_value )(- tinf->block_size) <= 127L) {
#line 4492
              while (1) {
#line 4492
                tmp___12 = jit->ip;
#line 4492
                (jit->ip) ++;
#line 4492
                *tmp___12 = (unsigned char )(((1 << 6) | (((tinf->scrapreg & 0x7) & 0x07) << 3)) | 4);
#line 4492
                break;
              }
#line 4492
              while (1) {
#line 4492
                tmp___13 = jit->ip;
#line 4492
                (jit->ip) ++;
#line 4492
                *tmp___13 = (unsigned char )(((((tinf->counterreg & 0x7) & 0x7) & 0x07) << 3) | (((tinf->destreg & 0x7) & 0x7) & 0x07));
#line 4492
                break;
              }
#line 4492
              while (1) {
#line 4492
                *(jit->ip) = (unsigned char )(- tinf->block_size & 0xff);
#line 4492
                (jit->ip) ++;
#line 4492
                break;
              }
            } else {
#line 4492
              goto _L;
            }
          } else {
            _L: /* CIL Label */ 
#line 4492
            while (1) {
#line 4492
              tmp___14 = jit->ip;
#line 4492
              (jit->ip) ++;
#line 4492
              *tmp___14 = (unsigned char )(((2 << 6) | (((tinf->scrapreg & 0x7) & 0x07) << 3)) | 4);
#line 4492
              break;
            }
#line 4492
            while (1) {
#line 4492
              tmp___15 = jit->ip;
#line 4492
              (jit->ip) ++;
#line 4492
              *tmp___15 = (unsigned char )(((((tinf->counterreg & 0x7) & 0x7) & 0x07) << 3) | (((tinf->destreg & 0x7) & 0x7) & 0x07));
#line 4492
              break;
            }
#line 4492
            while (1) {
#line 4492
              imb___0.val = - tinf->block_size;
#line 4492
              tmp___16 = jit->ip;
#line 4492
              (jit->ip) ++;
#line 4492
              *tmp___16 = imb___0.b[0];
#line 4492
              tmp___17 = jit->ip;
#line 4492
              (jit->ip) ++;
#line 4492
              *tmp___17 = imb___0.b[1];
#line 4492
              tmp___18 = jit->ip;
#line 4492
              (jit->ip) ++;
#line 4492
              *tmp___18 = imb___0.b[2];
#line 4492
              tmp___19 = jit->ip;
#line 4492
              (jit->ip) ++;
#line 4492
              *tmp___19 = imb___0.b[3];
#line 4492
              break;
            }
          }
#line 4492
          break;
        }
#line 4492
        break;
      }
#line 4492
      break;
    }
  } else
#line 4493
  if (op->r_arg[1] != -1L) {
#line 4494
    if (op->r_arg[1] == (jit_value )tinf->counterreg) {
#line 4494
      if (tinf->counter_in_use) {
#line 4495
        while (1) {
#line 4495
          while (1) {
#line 4495
            if (tinf->scrapreg > 7) {
#line 4495
              tmp___20 = 4;
            } else {
#line 4495
              tmp___20 = 0;
            }
#line 4495
            _amd64_rex_bits___0 = (unsigned char )(8 | tmp___20);
#line 4495
            if ((int )_amd64_rex_bits___0 != 0) {
#line 4495
              tmp___21 = jit->ip;
#line 4495
              (jit->ip) ++;
#line 4495
              *tmp___21 = (unsigned char )(0x40 | (int )_amd64_rex_bits___0);
            }
#line 4495
            break;
          }
#line 4495
          while (1) {
#line 4495
            tmp___22 = jit->ip;
#line 4495
            (jit->ip) ++;
#line 4495
            *tmp___22 = (unsigned char )(((int )((unsigned char )alu_op) << 3) + 3);
#line 4495
            while (1) {
#line 4495
              if (- ((int )sizeof(void *)) == 0) {
#line 4495
                while (1) {
#line 4495
                  tmp___23 = jit->ip;
#line 4495
                  (jit->ip) ++;
#line 4495
                  *tmp___23 = (unsigned char )((((tinf->scrapreg & 0x7) & 0x07) << 3) | 4);
#line 4495
                  break;
                }
#line 4495
                while (1) {
#line 4495
                  tmp___24 = jit->ip;
#line 4495
                  (jit->ip) ++;
#line 4495
                  *tmp___24 = (unsigned char )((4 << 3) | 4);
#line 4495
                  break;
                }
              } else
#line 4495
              if ((jit_value )(- ((int )sizeof(void *))) >= -128L) {
#line 4495
                if ((jit_value )(- ((int )sizeof(void *))) <= 127L) {
#line 4495
                  while (1) {
#line 4495
                    tmp___25 = jit->ip;
#line 4495
                    (jit->ip) ++;
#line 4495
                    *tmp___25 = (unsigned char )(((1 << 6) | (((tinf->scrapreg & 0x7) & 0x07) << 3)) | 4);
#line 4495
                    break;
                  }
#line 4495
                  while (1) {
#line 4495
                    tmp___26 = jit->ip;
#line 4495
                    (jit->ip) ++;
#line 4495
                    *tmp___26 = (unsigned char )((4 << 3) | 4);
#line 4495
                    break;
                  }
#line 4495
                  while (1) {
#line 4495
                    *(jit->ip) = (unsigned char )(- ((int )sizeof(void *)) & 0xff);
#line 4495
                    (jit->ip) ++;
#line 4495
                    break;
                  }
                } else {
#line 4495
                  goto _L___1;
                }
              } else {
                _L___1: /* CIL Label */ 
#line 4495
                while (1) {
#line 4495
                  tmp___27 = jit->ip;
#line 4495
                  (jit->ip) ++;
#line 4495
                  *tmp___27 = (unsigned char )(((2 << 6) | (((tinf->scrapreg & 0x7) & 0x07) << 3)) | 4);
#line 4495
                  break;
                }
#line 4495
                while (1) {
#line 4495
                  tmp___28 = jit->ip;
#line 4495
                  (jit->ip) ++;
#line 4495
                  *tmp___28 = (unsigned char )((4 << 3) | 4);
#line 4495
                  break;
                }
#line 4495
                while (1) {
#line 4495
                  imb___1.val = - ((int )sizeof(void *));
#line 4495
                  tmp___29 = jit->ip;
#line 4495
                  (jit->ip) ++;
#line 4495
                  *tmp___29 = imb___1.b[0];
#line 4495
                  tmp___30 = jit->ip;
#line 4495
                  (jit->ip) ++;
#line 4495
                  *tmp___30 = imb___1.b[1];
#line 4495
                  tmp___31 = jit->ip;
#line 4495
                  (jit->ip) ++;
#line 4495
                  *tmp___31 = imb___1.b[2];
#line 4495
                  tmp___32 = jit->ip;
#line 4495
                  (jit->ip) ++;
#line 4495
                  *tmp___32 = imb___1.b[3];
#line 4495
                  break;
                }
              }
#line 4495
              break;
#line 4495
              if (- ((int )sizeof(void *)) == 0) {
#line 4495
                while (1) {
#line 4495
                  tmp___33 = jit->ip;
#line 4495
                  (jit->ip) ++;
#line 4495
                  *tmp___33 = (unsigned char )((((tinf->scrapreg & 0x7) & 0x07) << 3) | 4);
#line 4495
                  break;
                }
#line 4495
                break;
              }
#line 4495
              if ((jit_value )(- ((int )sizeof(void *))) >= -128L) {
#line 4495
                if ((jit_value )(- ((int )sizeof(void *))) <= 127L) {
#line 4495
                  while (1) {
#line 4495
                    tmp___34 = jit->ip;
#line 4495
                    (jit->ip) ++;
#line 4495
                    *tmp___34 = (unsigned char )(((1 << 6) | (((tinf->scrapreg & 0x7) & 0x07) << 3)) | 4);
#line 4495
                    break;
                  }
#line 4495
                  while (1) {
#line 4495
                    *(jit->ip) = (unsigned char )(- ((int )sizeof(void *)) & 0xff);
#line 4495
                    (jit->ip) ++;
#line 4495
                    break;
                  }
                } else {
#line 4495
                  goto _L___2;
                }
              } else {
                _L___2: /* CIL Label */ 
#line 4495
                while (1) {
#line 4495
                  tmp___35 = jit->ip;
#line 4495
                  (jit->ip) ++;
#line 4495
                  *tmp___35 = (unsigned char )(((2 << 6) | (((tinf->scrapreg & 0x7) & 0x07) << 3)) | 4);
#line 4495
                  break;
                }
#line 4495
                while (1) {
#line 4495
                  imb___2.val = - ((int )sizeof(void *));
#line 4495
                  tmp___36 = jit->ip;
#line 4495
                  (jit->ip) ++;
#line 4495
                  *tmp___36 = imb___2.b[0];
#line 4495
                  tmp___37 = jit->ip;
#line 4495
                  (jit->ip) ++;
#line 4495
                  *tmp___37 = imb___2.b[1];
#line 4495
                  tmp___38 = jit->ip;
#line 4495
                  (jit->ip) ++;
#line 4495
                  *tmp___38 = imb___2.b[2];
#line 4495
                  tmp___39 = jit->ip;
#line 4495
                  (jit->ip) ++;
#line 4495
                  *tmp___39 = imb___2.b[3];
#line 4495
                  break;
                }
              }
#line 4495
              break;
            }
#line 4495
            break;
          }
#line 4495
          break;
        }
      } else {
#line 4494
        goto _L___6;
      }
    } else
    _L___6: /* CIL Label */ 
#line 4496
    if (op->r_arg[1] == (jit_value )tinf->scrapreg) {
#line 4496
      if (tinf->scrap_in_use) {
#line 4497
        while (1) {
#line 4497
          while (1) {
#line 4497
            if (tinf->scrapreg > 7) {
#line 4497
              tmp___40 = 4;
            } else {
#line 4497
              tmp___40 = 0;
            }
#line 4497
            _amd64_rex_bits___1 = (unsigned char )(8 | tmp___40);
#line 4497
            if ((int )_amd64_rex_bits___1 != 0) {
#line 4497
              tmp___41 = jit->ip;
#line 4497
              (jit->ip) ++;
#line 4497
              *tmp___41 = (unsigned char )(0x40 | (int )_amd64_rex_bits___1);
            }
#line 4497
            break;
          }
#line 4497
          while (1) {
#line 4497
            tmp___42 = jit->ip;
#line 4497
            (jit->ip) ++;
#line 4497
            *tmp___42 = (unsigned char )(((int )((unsigned char )alu_op) << 3) + 3);
#line 4497
            while (1) {
#line 4497
              if (- ((int )sizeof(void *)) * 2 == 0) {
#line 4497
                while (1) {
#line 4497
                  tmp___43 = jit->ip;
#line 4497
                  (jit->ip) ++;
#line 4497
                  *tmp___43 = (unsigned char )((((tinf->scrapreg & 0x7) & 0x07) << 3) | 4);
#line 4497
                  break;
                }
#line 4497
                while (1) {
#line 4497
                  tmp___44 = jit->ip;
#line 4497
                  (jit->ip) ++;
#line 4497
                  *tmp___44 = (unsigned char )((4 << 3) | 4);
#line 4497
                  break;
                }
              } else
#line 4497
              if ((jit_value )(- ((int )sizeof(void *)) * 2) >= -128L) {
#line 4497
                if ((jit_value )(- ((int )sizeof(void *)) * 2) <= 127L) {
#line 4497
                  while (1) {
#line 4497
                    tmp___45 = jit->ip;
#line 4497
                    (jit->ip) ++;
#line 4497
                    *tmp___45 = (unsigned char )(((1 << 6) | (((tinf->scrapreg & 0x7) & 0x07) << 3)) | 4);
#line 4497
                    break;
                  }
#line 4497
                  while (1) {
#line 4497
                    tmp___46 = jit->ip;
#line 4497
                    (jit->ip) ++;
#line 4497
                    *tmp___46 = (unsigned char )((4 << 3) | 4);
#line 4497
                    break;
                  }
#line 4497
                  while (1) {
#line 4497
                    *(jit->ip) = (unsigned char )(- ((int )sizeof(void *)) * 2 & 0xff);
#line 4497
                    (jit->ip) ++;
#line 4497
                    break;
                  }
                } else {
#line 4497
                  goto _L___3;
                }
              } else {
                _L___3: /* CIL Label */ 
#line 4497
                while (1) {
#line 4497
                  tmp___47 = jit->ip;
#line 4497
                  (jit->ip) ++;
#line 4497
                  *tmp___47 = (unsigned char )(((2 << 6) | (((tinf->scrapreg & 0x7) & 0x07) << 3)) | 4);
#line 4497
                  break;
                }
#line 4497
                while (1) {
#line 4497
                  tmp___48 = jit->ip;
#line 4497
                  (jit->ip) ++;
#line 4497
                  *tmp___48 = (unsigned char )((4 << 3) | 4);
#line 4497
                  break;
                }
#line 4497
                while (1) {
#line 4497
                  imb___3.val = - ((int )sizeof(void *)) * 2;
#line 4497
                  tmp___49 = jit->ip;
#line 4497
                  (jit->ip) ++;
#line 4497
                  *tmp___49 = imb___3.b[0];
#line 4497
                  tmp___50 = jit->ip;
#line 4497
                  (jit->ip) ++;
#line 4497
                  *tmp___50 = imb___3.b[1];
#line 4497
                  tmp___51 = jit->ip;
#line 4497
                  (jit->ip) ++;
#line 4497
                  *tmp___51 = imb___3.b[2];
#line 4497
                  tmp___52 = jit->ip;
#line 4497
                  (jit->ip) ++;
#line 4497
                  *tmp___52 = imb___3.b[3];
#line 4497
                  break;
                }
              }
#line 4497
              break;
#line 4497
              if (- ((int )sizeof(void *)) * 2 == 0) {
#line 4497
                while (1) {
#line 4497
                  tmp___53 = jit->ip;
#line 4497
                  (jit->ip) ++;
#line 4497
                  *tmp___53 = (unsigned char )((((tinf->scrapreg & 0x7) & 0x07) << 3) | 4);
#line 4497
                  break;
                }
#line 4497
                break;
              }
#line 4497
              if ((jit_value )(- ((int )sizeof(void *)) * 2) >= -128L) {
#line 4497
                if ((jit_value )(- ((int )sizeof(void *)) * 2) <= 127L) {
#line 4497
                  while (1) {
#line 4497
                    tmp___54 = jit->ip;
#line 4497
                    (jit->ip) ++;
#line 4497
                    *tmp___54 = (unsigned char )(((1 << 6) | (((tinf->scrapreg & 0x7) & 0x07) << 3)) | 4);
#line 4497
                    break;
                  }
#line 4497
                  while (1) {
#line 4497
                    *(jit->ip) = (unsigned char )(- ((int )sizeof(void *)) * 2 & 0xff);
#line 4497
                    (jit->ip) ++;
#line 4497
                    break;
                  }
                } else {
#line 4497
                  goto _L___4;
                }
              } else {
                _L___4: /* CIL Label */ 
#line 4497
                while (1) {
#line 4497
                  tmp___55 = jit->ip;
#line 4497
                  (jit->ip) ++;
#line 4497
                  *tmp___55 = (unsigned char )(((2 << 6) | (((tinf->scrapreg & 0x7) & 0x07) << 3)) | 4);
#line 4497
                  break;
                }
#line 4497
                while (1) {
#line 4497
                  imb___4.val = - ((int )sizeof(void *)) * 2;
#line 4497
                  tmp___56 = jit->ip;
#line 4497
                  (jit->ip) ++;
#line 4497
                  *tmp___56 = imb___4.b[0];
#line 4497
                  tmp___57 = jit->ip;
#line 4497
                  (jit->ip) ++;
#line 4497
                  *tmp___57 = imb___4.b[1];
#line 4497
                  tmp___58 = jit->ip;
#line 4497
                  (jit->ip) ++;
#line 4497
                  *tmp___58 = imb___4.b[2];
#line 4497
                  tmp___59 = jit->ip;
#line 4497
                  (jit->ip) ++;
#line 4497
                  *tmp___59 = imb___4.b[3];
#line 4497
                  break;
                }
              }
#line 4497
              break;
            }
#line 4497
            break;
          }
#line 4497
          break;
        }
      } else {
#line 4496
        goto _L___5;
      }
    } else {
      _L___5: /* CIL Label */ 
#line 4498
      while (1) {
#line 4498
        while (1) {
#line 4498
          if (tinf->scrapreg > 7) {
#line 4498
            tmp___60 = 4;
          } else {
#line 4498
            tmp___60 = 0;
          }
#line 4498
          if (op->r_arg[1] > 7L) {
#line 4498
            tmp___61 = 1;
          } else {
#line 4498
            tmp___61 = 0;
          }
#line 4498
          _amd64_rex_bits___2 = (unsigned char )((8 | tmp___60) | tmp___61);
#line 4498
          if ((int )_amd64_rex_bits___2 != 0) {
#line 4498
            tmp___62 = jit->ip;
#line 4498
            (jit->ip) ++;
#line 4498
            *tmp___62 = (unsigned char )(0x40 | (int )_amd64_rex_bits___2);
          }
#line 4498
          break;
        }
#line 4498
        tmp___63 = jit->ip;
#line 4498
        (jit->ip) ++;
#line 4498
        *tmp___63 = (unsigned char )(((int )((unsigned char )alu_op) << 3) + 3);
#line 4498
        while (1) {
#line 4498
          while (1) {
#line 4498
            tmp___64 = jit->ip;
#line 4498
            (jit->ip) ++;
#line 4498
            *tmp___64 = (unsigned char )((long )((3 << 6) | ((tinf->scrapreg & 0x07) << 3)) | (op->r_arg[1] & 7L));
#line 4498
            break;
          }
#line 4498
          break;
        }
#line 4498
        break;
      }
    }
  } else {
#line 4500
    while (1) {
#line 4500
      while (1) {
#line 4500
        if (tinf->scrapreg > 7) {
#line 4500
          tmp___65 = 4;
        } else {
#line 4500
          tmp___65 = 0;
        }
#line 4500
        _amd64_rex_bits___3 = (unsigned char )(8 | tmp___65);
#line 4500
        if ((int )_amd64_rex_bits___3 != 0) {
#line 4500
          tmp___66 = jit->ip;
#line 4500
          (jit->ip) ++;
#line 4500
          *tmp___66 = (unsigned char )(0x40 | (int )_amd64_rex_bits___3);
        }
#line 4500
        break;
      }
#line 4500
      while (1) {
#line 4500
        tmp___67 = jit->ip;
#line 4500
        (jit->ip) ++;
#line 4500
        *tmp___67 = (unsigned char )(((int )((unsigned char )alu_op) << 3) + 3);
#line 4500
        while (1) {
#line 4500
          if (0) {
#line 4500
            tmp___82 = stack_reg_pos(jit, (int )op->arg[1]);
#line 4500
            if (tmp___82 == 0) {
#line 4500
              while (1) {
#line 4500
                tmp___68 = jit->ip;
#line 4500
                (jit->ip) ++;
#line 4500
                *tmp___68 = (unsigned char )((((tinf->scrapreg & 0x7) & 0x07) << 3) | 4);
#line 4500
                break;
              }
#line 4500
              while (1) {
#line 4500
                tmp___69 = jit->ip;
#line 4500
                (jit->ip) ++;
#line 4500
                *tmp___69 = (unsigned char )((4 << 3) | 4);
#line 4500
                break;
              }
            } else {
#line 4500
              tmp___80 = stack_reg_pos(jit, (int )op->arg[1]);
#line 4500
              if ((jit_value )tmp___80 >= -128L) {
#line 4500
                tmp___81 = stack_reg_pos(jit, (int )op->arg[1]);
#line 4500
                if ((jit_value )tmp___81 <= 127L) {
#line 4500
                  while (1) {
#line 4500
                    tmp___70 = jit->ip;
#line 4500
                    (jit->ip) ++;
#line 4500
                    *tmp___70 = (unsigned char )(((1 << 6) | (((tinf->scrapreg & 0x7) & 0x07) << 3)) | 4);
#line 4500
                    break;
                  }
#line 4500
                  while (1) {
#line 4500
                    tmp___71 = jit->ip;
#line 4500
                    (jit->ip) ++;
#line 4500
                    *tmp___71 = (unsigned char )((4 << 3) | 4);
#line 4500
                    break;
                  }
#line 4500
                  while (1) {
#line 4500
                    tmp___72 = stack_reg_pos(jit, (int )op->arg[1]);
#line 4500
                    *(jit->ip) = (unsigned char )(tmp___72 & 0xff);
#line 4500
                    (jit->ip) ++;
#line 4500
                    break;
                  }
                } else {
#line 4500
                  goto _L___7;
                }
              } else {
                _L___7: /* CIL Label */ 
#line 4500
                while (1) {
#line 4500
                  tmp___73 = jit->ip;
#line 4500
                  (jit->ip) ++;
#line 4500
                  *tmp___73 = (unsigned char )(((2 << 6) | (((tinf->scrapreg & 0x7) & 0x07) << 3)) | 4);
#line 4500
                  break;
                }
#line 4500
                while (1) {
#line 4500
                  tmp___74 = jit->ip;
#line 4500
                  (jit->ip) ++;
#line 4500
                  *tmp___74 = (unsigned char )((4 << 3) | 4);
#line 4500
                  break;
                }
#line 4500
                while (1) {
#line 4500
                  tmp___75 = stack_reg_pos(jit, (int )op->arg[1]);
#line 4500
                  imb___5.val = tmp___75;
#line 4500
                  tmp___76 = jit->ip;
#line 4500
                  (jit->ip) ++;
#line 4500
                  *tmp___76 = imb___5.b[0];
#line 4500
                  tmp___77 = jit->ip;
#line 4500
                  (jit->ip) ++;
#line 4500
                  *tmp___77 = imb___5.b[1];
#line 4500
                  tmp___78 = jit->ip;
#line 4500
                  (jit->ip) ++;
#line 4500
                  *tmp___78 = imb___5.b[2];
#line 4500
                  tmp___79 = jit->ip;
#line 4500
                  (jit->ip) ++;
#line 4500
                  *tmp___79 = imb___5.b[3];
#line 4500
                  break;
                }
              }
            }
#line 4500
            break;
          }
#line 4500
          tmp___84 = stack_reg_pos(jit, (int )op->arg[1]);
#line 4500
          if (tmp___84 == 0) {

          }
#line 4500
          tmp___93 = stack_reg_pos(jit, (int )op->arg[1]);
#line 4500
          if ((jit_value )tmp___93 >= -128L) {
#line 4500
            tmp___94 = stack_reg_pos(jit, (int )op->arg[1]);
#line 4500
            if ((jit_value )tmp___94 <= 127L) {
#line 4500
              while (1) {
#line 4500
                tmp___85 = jit->ip;
#line 4500
                (jit->ip) ++;
#line 4500
                *tmp___85 = (unsigned char )(((1 << 6) | (((tinf->scrapreg & 0x7) & 0x07) << 3)) | 5);
#line 4500
                break;
              }
#line 4500
              while (1) {
#line 4500
                tmp___86 = stack_reg_pos(jit, (int )op->arg[1]);
#line 4500
                *(jit->ip) = (unsigned char )(tmp___86 & 0xff);
#line 4500
                (jit->ip) ++;
#line 4500
                break;
              }
            } else {
#line 4500
              goto _L___8;
            }
          } else {
            _L___8: /* CIL Label */ 
#line 4500
            while (1) {
#line 4500
              tmp___87 = jit->ip;
#line 4500
              (jit->ip) ++;
#line 4500
              *tmp___87 = (unsigned char )(((2 << 6) | (((tinf->scrapreg & 0x7) & 0x07) << 3)) | 5);
#line 4500
              break;
            }
#line 4500
            while (1) {
#line 4500
              tmp___88 = stack_reg_pos(jit, (int )op->arg[1]);
#line 4500
              imb___6.val = tmp___88;
#line 4500
              tmp___89 = jit->ip;
#line 4500
              (jit->ip) ++;
#line 4500
              *tmp___89 = imb___6.b[0];
#line 4500
              tmp___90 = jit->ip;
#line 4500
              (jit->ip) ++;
#line 4500
              *tmp___90 = imb___6.b[1];
#line 4500
              tmp___91 = jit->ip;
#line 4500
              (jit->ip) ++;
#line 4500
              *tmp___91 = imb___6.b[2];
#line 4500
              tmp___92 = jit->ip;
#line 4500
              (jit->ip) ++;
#line 4500
              *tmp___92 = imb___6.b[3];
#line 4500
              break;
            }
          }
#line 4500
          break;
        }
#line 4500
        break;
      }
#line 4500
      break;
    }
  }
#line 4501
  if (op->arg[0]) {
#line 4501
    emit_transfer_loop(jit, (jit_op *)op->arg[0]);
  }
#line 4502
  return;
}
}
/* END FUNCTION-DEF emit_transfer_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_set_to_array LOC=UNKNOWN */
__inline static void jit_set_to_array(jit_set *s , jit_value *dest ) 
{ 
  struct copy_target t ;

  {
#line 2313
  t.target = dest;
#line 2314
  t.index = 0;
#line 2315
  jit_tree_walk(s->root, & copy_reg_to_array, (void *)(& t));
#line 2316
  return;
}
}
/* END FUNCTION-DEF jit_set_to_array LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_expand_patches_and_labels LOC=UNKNOWN */
void jit_expand_patches_and_labels(struct jit *jit ) 
{ 
  jit_op *op ;
  jit_op *tmp ;
  int tmp___0 ;
  int tmp___1 ;

  {
#line 6464
  tmp = jit_op_first(jit->ops);
#line 6464
  op = tmp;
#line 6464
  while ((unsigned long )op != (unsigned long )((void *)0)) {
#line 6465
    if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 616U) {
#line 6466
      ((jit_op *)op->arg[0])->jmp_addr = op;
    }
#line 6468
    if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 136U) {
#line 6469
      ((jit_label *)op->arg[0])->op = op;
    }
#line 6471
    if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) != 136U) {
#line 6471
      tmp___0 = jit_is_label(jit, (void *)op->arg[0]);
#line 6471
      if (tmp___0) {
#line 6472
        op->jmp_addr = ((jit_label *)op->arg[0])->op;
      }
    }
#line 6474
    if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) != 136U) {
#line 6474
      tmp___1 = jit_is_label(jit, (void *)op->arg[1]);
#line 6474
      if (tmp___1) {
#line 6475
        op->jmp_addr = ((jit_label *)op->arg[1])->op;
      }
    }
#line 6464
    op = op->next;
  }
#line 6478
  return;
}
}
/* END FUNCTION-DEF jit_expand_patches_and_labels LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_op_delete LOC=UNKNOWN */
__inline static void jit_op_delete(jit_op *op ) 
{ 


  {
#line 2508
  (op->prev)->next = op->next;
#line 2509
  if (op->next) {
#line 2509
    (op->next)->prev = op->prev;
  }
#line 2510
  jit_free_op(op);
#line 2511
  return;
}
}
/* END FUNCTION-DEF jit_op_delete LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF branch_adjustment LOC=UNKNOWN */
__inline static void branch_adjustment(struct jit *jit , jit_op *op ) 
{ 
  int tmp ;
  jit_rmap *cur_regmap ;
  jit_rmap *tgt_regmap ;
  jit_op *o ;
  struct jit_op *tmp___0 ;
  int tmp___1 ;
  jit_op *o2 ;
  struct jit_op *tmp___2 ;
  int tmp___3 ;

  {
#line 6237
  tmp = jit_op_is_cond_branch(op);
#line 6237
  if (! tmp) {
#line 6237
    return;
  }
#line 6238
  cur_regmap = op->regmap;
#line 6239
  tgt_regmap = (op->jmp_addr)->regmap;
#line 6240
  tmp___3 = rmap_equal(op, cur_regmap, tgt_regmap);
#line 6240
  if (! tmp___3) {
#line 6241
    switch ((unsigned int )((jit_opcode )((int )op->code & 0xfff8))) {
    case 496U: 
#line 6242
    op->code = (unsigned short )(336 | ((int )op->code & 0x7));
#line 6242
    break;
    case 448U: 
#line 6243
    op->code = (unsigned short )(288 | ((int )op->code & 0x7));
#line 6243
    break;
    case 96U: 
#line 6244
    op->code = (unsigned short )(760 | ((int )op->code & 0x7));
#line 6244
    break;
    case 336U: 
#line 6245
    op->code = (unsigned short )(496 | ((int )op->code & 0x7));
#line 6245
    break;
    case 760U: 
#line 6246
    op->code = (unsigned short )(96 | ((int )op->code & 0x7));
#line 6246
    break;
    case 288U: 
#line 6247
    op->code = (unsigned short )(448 | ((int )op->code & 0x7));
#line 6247
    break;
    case 384U: 
#line 6248
    op->code = (unsigned short )(304 | ((int )op->code & 0x7));
#line 6248
    break;
    case 272U: 
#line 6249
    op->code = (unsigned short )(600 | ((int )op->code & 0x7));
#line 6249
    break;
    case 304U: 
#line 6250
    op->code = (unsigned short )(384 | ((int )op->code & 0x7));
#line 6250
    break;
    case 600U: 
#line 6251
    op->code = (unsigned short )(272 | ((int )op->code & 0x7));
#line 6251
    break;
    case 632U: 
#line 6252
    op->code = (unsigned short )(792 | ((int )op->code & 0x7));
#line 6252
    break;
    case 696U: 
#line 6253
    op->code = (unsigned short )(504 | ((int )op->code & 0x7));
#line 6253
    break;
    case 648U: 
#line 6254
    op->code = (unsigned short )(896 | ((int )op->code & 0x7));
#line 6254
    break;
    case 792U: 
#line 6255
    op->code = (unsigned short )(632 | ((int )op->code & 0x7));
#line 6255
    break;
    case 896U: 
#line 6256
    op->code = (unsigned short )(648 | ((int )op->code & 0x7));
#line 6256
    break;
    case 504U: 
#line 6257
    op->code = (unsigned short )(696 | ((int )op->code & 0x7));
#line 6257
    break;
    default: 
#line 6258
    break;
    }
#line 6260
    tmp___0 = jit_op_new((unsigned short)626, (unsigned char)2, op->arg[0], (jit_value )0,
                         (jit_value )0, (unsigned char)0);
#line 6260
    o = tmp___0;
#line 6261
    o->r_arg[0] = op->r_arg[0];
#line 6262
    o->regmap = rmap_clone(op->regmap);
#line 6263
    o->live_in = jit_set_clone(op->live_in);
#line 6264
    o->live_out = jit_set_clone(op->live_out);
#line 6265
    o->jmp_addr = op->jmp_addr;
#line 6266
    tmp___1 = jit_is_label(jit, (void *)op->r_arg[0]);
#line 6266
    if (! tmp___1) {
#line 6267
      (op->jmp_addr)->arg[0] = (jit_value )o;
#line 6268
      (op->jmp_addr)->r_arg[0] = (jit_value )o;
    }
#line 6270
    jit_op_append(op, o);
#line 6271
    tmp___2 = jit_op_new((unsigned short)616, (unsigned char)2, (jit_value )op, (jit_value )0,
                         (jit_value )0, (unsigned char)0);
#line 6271
    o2 = tmp___2;
#line 6272
    o2->r_arg[0] = o2->arg[0];
#line 6273
    jit_op_append(o, o2);
#line 6274
    op->arg[0] = (jit_value )o2;
#line 6275
    op->r_arg[0] = (jit_value )o2;
#line 6276
    op->jmp_addr = o2;
  }
#line 6278
  return;
}
}
/* END FUNCTION-DEF branch_adjustment LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_value_align LOC=UNKNOWN */
__inline static jit_value jit_value_align(jit_value value , jit_value alignment ) 
{ 


  {
#line 2586
  return ((value + (alignment - 1L)) & - alignment);
}
}
/* END FUNCTION-DEF jit_value_align LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_allocai LOC=UNKNOWN */
int jit_allocai(struct jit *jit , int size ) 
{ 
  jit_value real_size ;
  jit_value tmp ;
  struct jit_func_info *tmp___0 ;
  struct jit_func_info *tmp___1 ;

  {
#line 4539
  tmp = jit_value_align((jit_value )size, (jit_value )16);
#line 4539
  real_size = tmp;
#line 4540
  jit_add_op(jit, (unsigned short)442, (unsigned char)2, real_size, (jit_value )0,
             (jit_value )0, (unsigned char)0, (struct jit_debug_info *)((void *)0));
#line 4541
  tmp___0 = jit_current_func_info(jit);
#line 4541
  tmp___0->allocai_mem += real_size;
#line 4542
  tmp___1 = jit_current_func_info(jit);
#line 4542
  return ((int )(- tmp___1->allocai_mem));
}
}
/* END FUNCTION-DEF jit_allocai LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF emit_sse_neg_op LOC=UNKNOWN */
static void emit_sse_neg_op(struct jit *jit , jit_op *op , jit_value a1 , jit_value a2 ) 
{ 
  unsigned char *tmp ;
  unsigned char _amd64_rex_bits ;
  int tmp___0 ;
  int tmp___1 ;
  unsigned char *tmp___2 ;
  unsigned char *tmp___3 ;
  unsigned char *tmp___4 ;
  unsigned char *tmp___5 ;

  {
#line 3037
  if (a1 != a2) {
#line 3037
    while (1) {
#line 3037
      tmp = jit->ip;
#line 3037
      (jit->ip) ++;
#line 3037
      *tmp = (unsigned char)242;
#line 3037
      while (1) {
#line 3037
        if (a1 > 7L) {
#line 3037
          tmp___0 = 4;
        } else {
#line 3037
          tmp___0 = 0;
        }
#line 3037
        if (a2 > 7L) {
#line 3037
          tmp___1 = 1;
        } else {
#line 3037
          tmp___1 = 0;
        }
#line 3037
        _amd64_rex_bits = (unsigned char )(tmp___0 | tmp___1);
#line 3037
        if ((int )_amd64_rex_bits != 0) {
#line 3037
          tmp___2 = jit->ip;
#line 3037
          (jit->ip) ++;
#line 3037
          *tmp___2 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
        }
#line 3037
        break;
      }
#line 3037
      tmp___3 = jit->ip;
#line 3037
      (jit->ip) ++;
#line 3037
      *tmp___3 = (unsigned char)15;
#line 3037
      tmp___4 = jit->ip;
#line 3037
      (jit->ip) ++;
#line 3037
      *tmp___4 = (unsigned char)16;
#line 3037
      while (1) {
#line 3037
        while (1) {
#line 3037
          tmp___5 = jit->ip;
#line 3037
          (jit->ip) ++;
#line 3037
          *tmp___5 = (unsigned char )(((long )(3 << 6) | ((a1 & 7L) << 3)) | (a2 & 7L));
#line 3037
          break;
        }
#line 3037
        break;
      }
#line 3037
      break;
    }
  }
#line 3038
  emit_sse_change_sign(jit, op, (int )a1);
#line 3039
  return;
}
}
/* END FUNCTION-DEF emit_sse_neg_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF emit_fretval_op LOC=UNKNOWN */
static void emit_fretval_op(struct jit *jit , jit_op *op ) 
{ 
  unsigned char *tmp ;
  unsigned char _amd64_rex_bits ;
  unsigned char *tmp___0 ;
  unsigned char *tmp___1 ;
  unsigned char *tmp___2 ;
  unsigned char *tmp___3 ;

  {
#line 3832
  if ((unsigned long long )op->arg_size == sizeof(float )) {
#line 3832
    while (1) {
#line 3832
      tmp = jit->ip;
#line 3832
      (jit->ip) ++;
#line 3832
      *tmp = (unsigned char)243;
#line 3832
      while (1) {
#line 3832
        _amd64_rex_bits = (unsigned char)0;
#line 3832
        if ((int )_amd64_rex_bits != 0) {
#line 3832
          tmp___0 = jit->ip;
#line 3832
          (jit->ip) ++;
#line 3832
          *tmp___0 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
        }
#line 3832
        break;
      }
#line 3832
      tmp___1 = jit->ip;
#line 3832
      (jit->ip) ++;
#line 3832
      *tmp___1 = (unsigned char)15;
#line 3832
      tmp___2 = jit->ip;
#line 3832
      (jit->ip) ++;
#line 3832
      *tmp___2 = (unsigned char)90;
#line 3832
      while (1) {
#line 3832
        while (1) {
#line 3832
          tmp___3 = jit->ip;
#line 3832
          (jit->ip) ++;
#line 3832
          *tmp___3 = (unsigned char )(3 << 6);
#line 3832
          break;
        }
#line 3832
        break;
      }
#line 3832
      break;
    }
  }
#line 3833
  return;
}
}
/* END FUNCTION-DEF emit_fretval_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF emit_save_all_regs LOC=UNKNOWN */
static void emit_save_all_regs(struct jit *jit , jit_op *op ) 
{ 
  struct jit_reg_allocator *al ;
  unsigned char _amd64_rex_bits ;
  unsigned char *tmp ;
  unsigned char *tmp___0 ;
  int i ;
  jit_hw_reg *reg ;
  unsigned char _amd64_rex_bits___0 ;
  int tmp___1 ;
  unsigned char *tmp___2 ;
  unsigned char *tmp___3 ;
  int tmp___4 ;
  int i___0 ;
  jit_hw_reg *reg___0 ;
  unsigned char _amd64_rex_bits___1 ;
  unsigned char *tmp___5 ;
  unsigned char *tmp___6 ;
  unsigned char *tmp___7 ;
  unsigned char _amd64_rex_bits___2 ;
  unsigned char *tmp___8 ;
  unsigned char *tmp___9 ;
  x86_imm_buf imb ;
  unsigned char *tmp___10 ;
  unsigned char *tmp___11 ;
  unsigned char *tmp___12 ;
  unsigned char *tmp___13 ;
  unsigned char _amd64_rex_bits___3 ;
  unsigned char *tmp___14 ;
  unsigned char *tmp___15 ;
  unsigned char *tmp___16 ;
  x86_imm_buf imb___0 ;
  unsigned char *tmp___17 ;
  unsigned char *tmp___18 ;
  unsigned char *tmp___19 ;
  unsigned char *tmp___20 ;
  unsigned char *tmp___21 ;
  unsigned char _amd64_rex_bits___4 ;
  int tmp___22 ;
  unsigned char *tmp___23 ;
  unsigned char *tmp___24 ;
  unsigned char *tmp___25 ;
  unsigned char *tmp___26 ;
  x86_imm_buf imb___1 ;
  unsigned char *tmp___27 ;
  unsigned char *tmp___28 ;
  unsigned char *tmp___29 ;
  unsigned char *tmp___30 ;
  unsigned char *tmp___31 ;
  unsigned char *tmp___32 ;
  unsigned char *tmp___33 ;
  unsigned char *tmp___34 ;
  unsigned char *tmp___35 ;
  unsigned char *tmp___36 ;
  x86_imm_buf imb___2 ;
  unsigned char *tmp___37 ;
  unsigned char *tmp___38 ;
  unsigned char *tmp___39 ;
  unsigned char *tmp___40 ;
  unsigned char *tmp___41 ;
  unsigned char *tmp___42 ;
  unsigned char *tmp___43 ;
  x86_imm_buf imb___3 ;
  unsigned char *tmp___44 ;
  unsigned char *tmp___45 ;
  unsigned char *tmp___46 ;
  unsigned char *tmp___47 ;
  int tmp___48 ;
  int alignment ;
  int tmp___49 ;
  unsigned char _amd64_rex_bits___5 ;
  unsigned char *tmp___50 ;
  unsigned char *tmp___51 ;
  unsigned char *tmp___52 ;
  unsigned char _amd64_rex_bits___6 ;
  unsigned char *tmp___53 ;
  unsigned char *tmp___54 ;
  x86_imm_buf imb___4 ;
  unsigned char *tmp___55 ;
  unsigned char *tmp___56 ;
  unsigned char *tmp___57 ;
  unsigned char *tmp___58 ;
  unsigned char _amd64_rex_bits___7 ;
  unsigned char *tmp___59 ;
  unsigned char *tmp___60 ;
  unsigned char *tmp___61 ;
  x86_imm_buf imb___5 ;
  unsigned char *tmp___62 ;
  unsigned char *tmp___63 ;
  unsigned char *tmp___64 ;
  unsigned char *tmp___65 ;

  {
#line 4033
  al = jit->reg_al;
#line 4034
  while (1) {
#line 4034
    while (1) {
#line 4034
      _amd64_rex_bits = (unsigned char)8;
#line 4034
      if ((int )_amd64_rex_bits != 0) {
#line 4034
        tmp = jit->ip;
#line 4034
        (jit->ip) ++;
#line 4034
        *tmp = (unsigned char )(0x40 | (int )_amd64_rex_bits);
      }
#line 4034
      break;
    }
#line 4034
    while (1) {
#line 4034
      tmp___0 = jit->ip;
#line 4034
      (jit->ip) ++;
#line 4034
      *tmp___0 = (unsigned char)156;
#line 4034
      break;
    }
#line 4034
    break;
  }
#line 4035
  i = 0;
#line 4035
  while (i < al->gp_reg_cnt) {
#line 4036
    reg = al->gp_regs + i;
#line 4037
    if (! reg->callee_saved) {
#line 4037
      tmp___4 = is_active_register(al, reg, op);
#line 4037
      if (tmp___4) {
#line 4038
        while (1) {
#line 4038
          while (1) {
#line 4038
            if (reg->id > 7) {
#line 4038
              tmp___1 = 1;
            } else {
#line 4038
              tmp___1 = 0;
            }
#line 4038
            _amd64_rex_bits___0 = (unsigned char )tmp___1;
#line 4038
            if ((int )_amd64_rex_bits___0 != 0) {
#line 4038
              tmp___2 = jit->ip;
#line 4038
              (jit->ip) ++;
#line 4038
              *tmp___2 = (unsigned char )(0x40 | (int )_amd64_rex_bits___0);
            }
#line 4038
            break;
          }
#line 4038
          tmp___3 = jit->ip;
#line 4038
          (jit->ip) ++;
#line 4038
          *tmp___3 = (unsigned char )(80 + (reg->id & 0x7));
#line 4038
          break;
        }
      }
    }
#line 4035
    i ++;
  }
#line 4040
  i___0 = 0;
#line 4040
  while (i___0 < al->fp_reg_cnt) {
#line 4041
    reg___0 = al->fp_regs + i___0;
#line 4042
    if (! reg___0->callee_saved) {
#line 4042
      tmp___48 = is_active_register(al, reg___0, op);
#line 4042
      if (tmp___48) {
#line 4043
        while (1) {
#line 4043
          while (1) {
#line 4043
            _amd64_rex_bits___1 = (unsigned char)8;
#line 4043
            if ((int )_amd64_rex_bits___1 != 0) {
#line 4043
              tmp___5 = jit->ip;
#line 4043
              (jit->ip) ++;
#line 4043
              *tmp___5 = (unsigned char )(0x40 | (int )_amd64_rex_bits___1);
            }
#line 4043
            break;
          }
#line 4043
          tmp___6 = jit->ip;
#line 4043
          (jit->ip) ++;
#line 4043
          *tmp___6 = (unsigned char)131;
#line 4043
          while (1) {
#line 4043
            while (1) {
#line 4043
              tmp___7 = jit->ip;
#line 4043
              (jit->ip) ++;
#line 4043
              *tmp___7 = (unsigned char )(((3 << 6) | (5 << 3)) | 4);
#line 4043
              break;
            }
#line 4043
            break;
          }
#line 4043
          while (1) {
#line 4043
            *(jit->ip) = (unsigned char)8;
#line 4043
            (jit->ip) ++;
#line 4043
            break;
          }
#line 4043
          break;
        }
#line 4043
        while (1) {
#line 4043
          tmp___21 = jit->ip;
#line 4043
          (jit->ip) ++;
#line 4043
          *tmp___21 = (unsigned char)102;
#line 4043
          while (1) {
#line 4043
            if (reg___0->id > 7) {
#line 4043
              tmp___22 = 4;
            } else {
#line 4043
              tmp___22 = 0;
            }
#line 4043
            _amd64_rex_bits___4 = (unsigned char )tmp___22;
#line 4043
            if ((int )_amd64_rex_bits___4 != 0) {
#line 4043
              tmp___23 = jit->ip;
#line 4043
              (jit->ip) ++;
#line 4043
              *tmp___23 = (unsigned char )(0x40 | (int )_amd64_rex_bits___4);
            }
#line 4043
            break;
          }
#line 4043
          tmp___24 = jit->ip;
#line 4043
          (jit->ip) ++;
#line 4043
          *tmp___24 = (unsigned char)15;
#line 4043
          tmp___25 = jit->ip;
#line 4043
          (jit->ip) ++;
#line 4043
          *tmp___25 = (unsigned char)19;
#line 4043
          while (1) {
#line 4043
            while (1) {
#line 4043
              while (1) {
#line 4043
                tmp___31 = jit->ip;
#line 4043
                (jit->ip) ++;
#line 4043
                *tmp___31 = (unsigned char )((((reg___0->id & 0x7) & 0x07) << 3) | 4);
#line 4043
                break;
              }
#line 4043
              while (1) {
#line 4043
                tmp___32 = jit->ip;
#line 4043
                (jit->ip) ++;
#line 4043
                *tmp___32 = (unsigned char )((4 << 3) | 4);
#line 4043
                break;
              }
#line 4043
              break;
#line 4043
              while (1) {
#line 4043
                tmp___41 = jit->ip;
#line 4043
                (jit->ip) ++;
#line 4043
                *tmp___41 = (unsigned char )((((reg___0->id & 0x7) & 0x07) << 3) | 4);
#line 4043
                break;
              }
#line 4043
              break;
#line 4043
              while (1) {
#line 4043
                tmp___42 = jit->ip;
#line 4043
                (jit->ip) ++;
#line 4043
                *tmp___42 = (unsigned char )(((1 << 6) | (((reg___0->id & 0x7) & 0x07) << 3)) | 4);
#line 4043
                break;
              }
#line 4043
              while (1) {
#line 4043
                *(jit->ip) = (unsigned char)0;
#line 4043
                (jit->ip) ++;
#line 4043
                break;
              }
#line 4043
              break;
            }
#line 4043
            break;
          }
#line 4043
          break;
        }
      }
    }
#line 4043
    while (1) {
#line 4043
      break;
    }
#line 4040
    i___0 ++;
  }
#line 4045
  tmp___49 = required_stack_space_for_regs(jit, op);
#line 4045
  alignment = tmp___49 % 16;
#line 4046
  if (alignment != 0) {
#line 4046
    while (1) {
#line 4046
      if ((jit_value )(16 - alignment) >= -128L) {
#line 4046
        if ((jit_value )(16 - alignment) <= 127L) {
#line 4046
          while (1) {
#line 4046
            _amd64_rex_bits___5 = (unsigned char)8;
#line 4046
            if ((int )_amd64_rex_bits___5 != 0) {
#line 4046
              tmp___50 = jit->ip;
#line 4046
              (jit->ip) ++;
#line 4046
              *tmp___50 = (unsigned char )(0x40 | (int )_amd64_rex_bits___5);
            }
#line 4046
            break;
          }
#line 4046
          tmp___51 = jit->ip;
#line 4046
          (jit->ip) ++;
#line 4046
          *tmp___51 = (unsigned char)131;
#line 4046
          while (1) {
#line 4046
            while (1) {
#line 4046
              tmp___52 = jit->ip;
#line 4046
              (jit->ip) ++;
#line 4046
              *tmp___52 = (unsigned char )(((3 << 6) | (5 << 3)) | 4);
#line 4046
              break;
            }
#line 4046
            break;
          }
#line 4046
          while (1) {
#line 4046
            *(jit->ip) = (unsigned char )((16 - alignment) & 0xff);
#line 4046
            (jit->ip) ++;
#line 4046
            break;
          }
        } else {
#line 4046
          goto _L;
        }
      } else {
        _L: /* CIL Label */ 
#line 4046
        while (1) {
#line 4046
          _amd64_rex_bits___7 = (unsigned char)8;
#line 4046
          if ((int )_amd64_rex_bits___7 != 0) {
#line 4046
            tmp___59 = jit->ip;
#line 4046
            (jit->ip) ++;
#line 4046
            *tmp___59 = (unsigned char )(0x40 | (int )_amd64_rex_bits___7);
          }
#line 4046
          break;
        }
#line 4046
        tmp___60 = jit->ip;
#line 4046
        (jit->ip) ++;
#line 4046
        *tmp___60 = (unsigned char)129;
#line 4046
        while (1) {
#line 4046
          while (1) {
#line 4046
            tmp___61 = jit->ip;
#line 4046
            (jit->ip) ++;
#line 4046
            *tmp___61 = (unsigned char )(((3 << 6) | (5 << 3)) | 4);
#line 4046
            break;
          }
#line 4046
          break;
        }
#line 4046
        while (1) {
#line 4046
          imb___5.val = 16 - alignment;
#line 4046
          tmp___62 = jit->ip;
#line 4046
          (jit->ip) ++;
#line 4046
          *tmp___62 = imb___5.b[0];
#line 4046
          tmp___63 = jit->ip;
#line 4046
          (jit->ip) ++;
#line 4046
          *tmp___63 = imb___5.b[1];
#line 4046
          tmp___64 = jit->ip;
#line 4046
          (jit->ip) ++;
#line 4046
          *tmp___64 = imb___5.b[2];
#line 4046
          tmp___65 = jit->ip;
#line 4046
          (jit->ip) ++;
#line 4046
          *tmp___65 = imb___5.b[3];
#line 4046
          break;
        }
      }
#line 4046
      break;
    }
  }
#line 4047
  return;
}
}
/* END FUNCTION-DEF emit_save_all_regs LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF move_red_right LOC=UNKNOWN */
__inline static jit_tree *move_red_right(jit_tree *h ) 
{ 
  int tmp ;

  {
#line 2150
  color_flip(h);
#line 2151
  tmp = is_red((h->left)->left);
#line 2151
  if (tmp) {
#line 2152
    h = rotate_right(h);
#line 2153
    color_flip(h);
  }
#line 2155
  return (h);
}
}
/* END FUNCTION-DEF move_red_right LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF emit_branch_op LOC=UNKNOWN */
static void emit_branch_op(struct jit *jit , struct jit_op *op , int cond , int imm ,
                           int sign ) 
{ 
  unsigned char _amd64_rex_bits ;
  int tmp ;
  unsigned char *tmp___0 ;
  unsigned char *tmp___1 ;
  unsigned char *tmp___2 ;
  unsigned char _amd64_rex_bits___0 ;
  unsigned char *tmp___3 ;
  unsigned char *tmp___4 ;
  x86_imm_buf imb ;
  unsigned char *tmp___5 ;
  unsigned char *tmp___6 ;
  unsigned char *tmp___7 ;
  unsigned char *tmp___8 ;
  unsigned char _amd64_rex_bits___1 ;
  int tmp___9 ;
  unsigned char *tmp___10 ;
  unsigned char *tmp___11 ;
  unsigned char *tmp___12 ;
  x86_imm_buf imb___0 ;
  unsigned char *tmp___13 ;
  unsigned char *tmp___14 ;
  unsigned char *tmp___15 ;
  unsigned char *tmp___16 ;
  unsigned char _amd64_rex_bits___2 ;
  int tmp___17 ;
  int tmp___18 ;
  unsigned char *tmp___19 ;
  unsigned char *tmp___20 ;
  unsigned char *tmp___21 ;
  unsigned char _amd64_rex_bits___3 ;
  unsigned char *tmp___22 ;
  int offset ;
  int tmp___23 ;
  size_t tmp___24 ;
  int tmp___25 ;
  unsigned char *tmp___26 ;
  unsigned char *tmp___27 ;
  unsigned char *tmp___28 ;
  x86_imm_buf imb___1 ;
  unsigned char *tmp___29 ;
  unsigned char *tmp___30 ;
  unsigned char *tmp___31 ;
  unsigned char *tmp___32 ;

  {
#line 4349
  if (imm) {
#line 4349
    while (1) {
#line 4349
      if (op->r_arg[2] >= -128L) {
#line 4349
        if (op->r_arg[2] <= 127L) {
#line 4349
          while (1) {
#line 4349
            if (op->r_arg[1] > 7L) {
#line 4349
              tmp = 1;
            } else {
#line 4349
              tmp = 0;
            }
#line 4349
            _amd64_rex_bits = (unsigned char )(8 | tmp);
#line 4349
            if ((int )_amd64_rex_bits != 0) {
#line 4349
              tmp___0 = jit->ip;
#line 4349
              (jit->ip) ++;
#line 4349
              *tmp___0 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
            }
#line 4349
            break;
          }
#line 4349
          tmp___1 = jit->ip;
#line 4349
          (jit->ip) ++;
#line 4349
          *tmp___1 = (unsigned char)131;
#line 4349
          while (1) {
#line 4349
            while (1) {
#line 4349
              tmp___2 = jit->ip;
#line 4349
              (jit->ip) ++;
#line 4349
              *tmp___2 = (unsigned char )((long )((3 << 6) | (7 << 3)) | (op->r_arg[1] & 7L));
#line 4349
              break;
            }
#line 4349
            break;
          }
#line 4349
          while (1) {
#line 4349
            *(jit->ip) = (unsigned char )(op->r_arg[2] & 255L);
#line 4349
            (jit->ip) ++;
#line 4349
            break;
          }
        } else {
#line 4349
          goto _L;
        }
      } else
      _L: /* CIL Label */ 
#line 4349
      if (op->r_arg[1] == 0L) {
#line 4349
        while (1) {
#line 4349
          _amd64_rex_bits___0 = (unsigned char)8;
#line 4349
          if ((int )_amd64_rex_bits___0 != 0) {
#line 4349
            tmp___3 = jit->ip;
#line 4349
            (jit->ip) ++;
#line 4349
            *tmp___3 = (unsigned char )(0x40 | (int )_amd64_rex_bits___0);
          }
#line 4349
          break;
        }
#line 4349
        tmp___4 = jit->ip;
#line 4349
        (jit->ip) ++;
#line 4349
        *tmp___4 = (unsigned char )((7 << 3) + 5);
#line 4349
        while (1) {
#line 4349
          imb.val = (int )op->r_arg[2];
#line 4349
          tmp___5 = jit->ip;
#line 4349
          (jit->ip) ++;
#line 4349
          *tmp___5 = imb.b[0];
#line 4349
          tmp___6 = jit->ip;
#line 4349
          (jit->ip) ++;
#line 4349
          *tmp___6 = imb.b[1];
#line 4349
          tmp___7 = jit->ip;
#line 4349
          (jit->ip) ++;
#line 4349
          *tmp___7 = imb.b[2];
#line 4349
          tmp___8 = jit->ip;
#line 4349
          (jit->ip) ++;
#line 4349
          *tmp___8 = imb.b[3];
#line 4349
          break;
        }
      } else {
#line 4349
        while (1) {
#line 4349
          if (op->r_arg[1] > 7L) {
#line 4349
            tmp___9 = 1;
          } else {
#line 4349
            tmp___9 = 0;
          }
#line 4349
          _amd64_rex_bits___1 = (unsigned char )(8 | tmp___9);
#line 4349
          if ((int )_amd64_rex_bits___1 != 0) {
#line 4349
            tmp___10 = jit->ip;
#line 4349
            (jit->ip) ++;
#line 4349
            *tmp___10 = (unsigned char )(0x40 | (int )_amd64_rex_bits___1);
          }
#line 4349
          break;
        }
#line 4349
        tmp___11 = jit->ip;
#line 4349
        (jit->ip) ++;
#line 4349
        *tmp___11 = (unsigned char)129;
#line 4349
        while (1) {
#line 4349
          while (1) {
#line 4349
            tmp___12 = jit->ip;
#line 4349
            (jit->ip) ++;
#line 4349
            *tmp___12 = (unsigned char )((long )((3 << 6) | (7 << 3)) | (op->r_arg[1] & 7L));
#line 4349
            break;
          }
#line 4349
          break;
        }
#line 4349
        while (1) {
#line 4349
          imb___0.val = (int )op->r_arg[2];
#line 4349
          tmp___13 = jit->ip;
#line 4349
          (jit->ip) ++;
#line 4349
          *tmp___13 = imb___0.b[0];
#line 4349
          tmp___14 = jit->ip;
#line 4349
          (jit->ip) ++;
#line 4349
          *tmp___14 = imb___0.b[1];
#line 4349
          tmp___15 = jit->ip;
#line 4349
          (jit->ip) ++;
#line 4349
          *tmp___15 = imb___0.b[2];
#line 4349
          tmp___16 = jit->ip;
#line 4349
          (jit->ip) ++;
#line 4349
          *tmp___16 = imb___0.b[3];
#line 4349
          break;
        }
      }
#line 4349
      break;
    }
  } else {
#line 4350
    while (1) {
#line 4350
      while (1) {
#line 4350
        if (op->r_arg[1] > 7L) {
#line 4350
          tmp___17 = 4;
        } else {
#line 4350
          tmp___17 = 0;
        }
#line 4350
        if (op->r_arg[2] > 7L) {
#line 4350
          tmp___18 = 1;
        } else {
#line 4350
          tmp___18 = 0;
        }
#line 4350
        _amd64_rex_bits___2 = (unsigned char )((8 | tmp___17) | tmp___18);
#line 4350
        if ((int )_amd64_rex_bits___2 != 0) {
#line 4350
          tmp___19 = jit->ip;
#line 4350
          (jit->ip) ++;
#line 4350
          *tmp___19 = (unsigned char )(0x40 | (int )_amd64_rex_bits___2);
        }
#line 4350
        break;
      }
#line 4350
      tmp___20 = jit->ip;
#line 4350
      (jit->ip) ++;
#line 4350
      *tmp___20 = (unsigned char )((7 << 3) + 3);
#line 4350
      while (1) {
#line 4350
        while (1) {
#line 4350
          tmp___21 = jit->ip;
#line 4350
          (jit->ip) ++;
#line 4350
          *tmp___21 = (unsigned char )(((long )(3 << 6) | ((op->r_arg[1] & 7L) << 3)) | (op->r_arg[2] & 7L));
#line 4350
          break;
        }
#line 4350
        break;
      }
#line 4350
      break;
    }
  }
#line 4351
  op->patch_addr = (jit_value )jit->ip - (jit_value )jit->buf;
#line 4352
  while (1) {
#line 4352
    while (1) {
#line 4352
      _amd64_rex_bits___3 = (unsigned char)8;
#line 4352
      if ((int )_amd64_rex_bits___3 != 0) {
#line 4352
        tmp___22 = jit->ip;
#line 4352
        (jit->ip) ++;
#line 4352
        *tmp___22 = (unsigned char )(0x40 | (int )_amd64_rex_bits___3);
      }
#line 4352
      break;
    }
#line 4352
    while (1) {
#line 4352
      tmp___25 = jit_is_label(jit, (void *)op->r_arg[0]);
#line 4352
      if (tmp___25) {
#line 4352
        tmp___24 = ((size_t )((jit_value )jit->buf) + ((jit_label *)op->r_arg[0])->pos) - (size_t )((jit_value )jit->ip);
      } else {
#line 4352
        tmp___24 = (size_t )op->r_arg[0];
      }
#line 4352
      offset = (int )(tmp___24 - 6UL);
#line 4352
      while (1) {
#line 4352
        tmp___26 = jit->ip;
#line 4352
        (jit->ip) ++;
#line 4352
        *tmp___26 = (unsigned char)15;
#line 4352
        if (sign) {
#line 4352
          tmp___27 = jit->ip;
#line 4352
          (jit->ip) ++;
#line 4352
          *tmp___27 = (unsigned char )((int const   )x86_cc_signed_map[cond] + 16);
        } else {
#line 4352
          tmp___28 = jit->ip;
#line 4352
          (jit->ip) ++;
#line 4352
          *tmp___28 = (unsigned char )((int const   )x86_cc_unsigned_map[cond] + 16);
        }
#line 4352
        while (1) {
#line 4352
          imb___1.val = offset;
#line 4352
          tmp___29 = jit->ip;
#line 4352
          (jit->ip) ++;
#line 4352
          *tmp___29 = imb___1.b[0];
#line 4352
          tmp___30 = jit->ip;
#line 4352
          (jit->ip) ++;
#line 4352
          *tmp___30 = imb___1.b[1];
#line 4352
          tmp___31 = jit->ip;
#line 4352
          (jit->ip) ++;
#line 4352
          *tmp___31 = imb___1.b[2];
#line 4352
          tmp___32 = jit->ip;
#line 4352
          (jit->ip) ++;
#line 4352
          *tmp___32 = imb___1.b[3];
#line 4352
          break;
        }
#line 4352
        break;
      }
#line 4352
      break;
    }
#line 4352
    break;
  }
#line 4353
  return;
}
}
/* END FUNCTION-DEF emit_branch_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF _OSSwapInt32 LOC=UNKNOWN */
__inline static __uint32_t _OSSwapInt32(__uint32_t _data ) 
{ 
  int tmp ;

  {
#line 60 "/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/libkern/i386/_OSByteOrder.h"
  tmp = __builtin_bswap32((int )_data);
#line 60
  return ((__uint32_t )tmp);
}
}
/* END FUNCTION-DEF _OSSwapInt32 LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF sse_alu_pd_reg_safeimm LOC=UNKNOWN */
static void sse_alu_pd_reg_safeimm(struct jit *jit , jit_op *op , int op_id , int reg ,
                                   double *imm ) 
{ 
  jit_hw_reg *r ;
  jit_hw_reg *tmp ;
  int _amd64_width_temp ;
  unsigned char _amd64_rex_bits ;
  int tmp___0 ;
  int tmp___1 ;
  int tmp___2 ;
  int tmp___3 ;
  unsigned char *tmp___4 ;
  int tmp___5 ;
  unsigned char *tmp___6 ;
  amd64_imm_buf imb ;
  unsigned char *tmp___7 ;
  unsigned char *tmp___8 ;
  unsigned char *tmp___9 ;
  unsigned char *tmp___10 ;
  unsigned char *tmp___11 ;
  unsigned char *tmp___12 ;
  unsigned char *tmp___13 ;
  unsigned char *tmp___14 ;
  x86_imm_buf imb___0 ;
  unsigned char *tmp___15 ;
  unsigned char *tmp___16 ;
  unsigned char *tmp___17 ;
  unsigned char *tmp___18 ;
  int tmp___19 ;
  unsigned char *tmp___20 ;
  unsigned char _amd64_rex_bits___0 ;
  int tmp___21 ;
  int tmp___22 ;
  int tmp___23 ;
  int tmp___24 ;
  unsigned char *tmp___25 ;
  unsigned char *tmp___26 ;
  unsigned char *tmp___27 ;
  unsigned char *tmp___28 ;
  x86_imm_buf imb___1 ;
  unsigned char *tmp___29 ;
  unsigned char *tmp___30 ;
  unsigned char *tmp___31 ;
  unsigned char *tmp___32 ;
  unsigned char *tmp___33 ;
  unsigned char *tmp___34 ;
  unsigned char *tmp___35 ;
  unsigned char *tmp___36 ;
  unsigned char *tmp___37 ;
  unsigned char *tmp___38 ;
  x86_imm_buf imb___2 ;
  unsigned char *tmp___39 ;
  unsigned char *tmp___40 ;
  unsigned char *tmp___41 ;
  unsigned char *tmp___42 ;
  unsigned char *tmp___43 ;
  unsigned char *tmp___44 ;
  unsigned char *tmp___45 ;
  x86_imm_buf imb___3 ;
  unsigned char *tmp___46 ;
  unsigned char *tmp___47 ;
  unsigned char *tmp___48 ;
  unsigned char *tmp___49 ;
  unsigned char _amd64_rex_bits___1 ;
  unsigned char *tmp___50 ;
  unsigned char *tmp___51 ;
  int _amd64_width_temp___0 ;
  unsigned char _amd64_rex_bits___2 ;
  int tmp___52 ;
  int tmp___53 ;
  int tmp___54 ;
  unsigned char *tmp___55 ;
  int tmp___56 ;
  unsigned char *tmp___57 ;
  amd64_imm_buf imb___4 ;
  unsigned char *tmp___58 ;
  unsigned char *tmp___59 ;
  unsigned char *tmp___60 ;
  unsigned char *tmp___61 ;
  unsigned char *tmp___62 ;
  unsigned char *tmp___63 ;
  unsigned char *tmp___64 ;
  unsigned char *tmp___65 ;
  x86_imm_buf imb___5 ;
  unsigned char *tmp___66 ;
  unsigned char *tmp___67 ;
  unsigned char *tmp___68 ;
  unsigned char *tmp___69 ;
  int tmp___70 ;
  unsigned char *tmp___71 ;
  unsigned char _amd64_rex_bits___3 ;
  int tmp___72 ;
  unsigned char *tmp___73 ;
  unsigned char *tmp___74 ;
  unsigned char *tmp___75 ;
  unsigned char *tmp___76 ;
  x86_imm_buf imb___6 ;
  unsigned char *tmp___77 ;
  unsigned char *tmp___78 ;
  unsigned char *tmp___79 ;
  unsigned char *tmp___80 ;
  unsigned char *tmp___81 ;
  unsigned char *tmp___82 ;
  unsigned char *tmp___83 ;
  unsigned char *tmp___84 ;
  unsigned char *tmp___85 ;
  unsigned char *tmp___86 ;
  x86_imm_buf imb___7 ;
  unsigned char *tmp___87 ;
  unsigned char *tmp___88 ;
  unsigned char *tmp___89 ;
  unsigned char *tmp___90 ;
  unsigned char *tmp___91 ;
  unsigned char *tmp___92 ;
  unsigned char *tmp___93 ;
  x86_imm_buf imb___8 ;
  unsigned char *tmp___94 ;
  unsigned char *tmp___95 ;
  unsigned char *tmp___96 ;
  unsigned char *tmp___97 ;
  unsigned char _amd64_rex_bits___4 ;
  unsigned char *tmp___98 ;
  unsigned char *tmp___99 ;
  unsigned char *tmp___100 ;
  unsigned char _amd64_rex_bits___5 ;
  int tmp___101 ;
  unsigned char *tmp___102 ;
  unsigned char *tmp___103 ;
  unsigned char *tmp___104 ;
  unsigned char *tmp___105 ;
  unsigned char *tmp___106 ;
  x86_imm_buf imb___9 ;
  unsigned char *tmp___107 ;
  unsigned char *tmp___108 ;
  unsigned char *tmp___109 ;
  unsigned char *tmp___110 ;

  {
#line 2953
  if ((jit_unsigned_value )imm > 0xffffffffUL) {
#line 2954
    tmp = jit_get_unused_reg(jit->reg_al, op, 0);
#line 2954
    r = tmp;
#line 2955
    if (r) {
#line 2956
      while (1) {
#line 2956
        _amd64_width_temp = (size_t )((jit_value )imm) == (size_t )((int )((size_t )((jit_value )imm)));
#line 2956
        while (1) {
#line 2956
          while (1) {
#line 2956
            if (_amd64_width_temp) {
#line 2956
              tmp___2 = 4;
            } else {
#line 2956
              tmp___2 = 8;
            }
#line 2956
            if (tmp___2 > 4) {
#line 2956
              tmp___1 = 8;
            } else {
#line 2956
              tmp___1 = 0;
            }
#line 2956
            if (r->id > 7) {
#line 2956
              tmp___3 = 1;
            } else {
#line 2956
              tmp___3 = 0;
            }
#line 2956
            _amd64_rex_bits = (unsigned char )(tmp___1 | tmp___3);
#line 2956
            if ((int )_amd64_rex_bits != 0) {
#line 2956
              tmp___4 = jit->ip;
#line 2956
              (jit->ip) ++;
#line 2956
              *tmp___4 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
            } else {
#line 2956
              if (_amd64_width_temp) {
#line 2956
                tmp___5 = 4;
              } else {
#line 2956
                tmp___5 = 8;
              }
#line 2956
              if (tmp___5 == 1) {
#line 2956
                tmp___4 = jit->ip;
#line 2956
                (jit->ip) ++;
#line 2956
                *tmp___4 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
              }
            }
#line 2956
            break;
          }
#line 2956
          tmp___6 = jit->ip;
#line 2956
          (jit->ip) ++;
#line 2956
          *tmp___6 = (unsigned char )(184 + (r->id & 0x7));
#line 2956
          if (_amd64_width_temp) {
#line 2956
            tmp___19 = 4;
          } else {
#line 2956
            tmp___19 = 8;
          }
#line 2956
          if (tmp___19 == 8) {
#line 2956
            while (1) {
#line 2956
              imb.val = (size_t )((jit_value )imm);
#line 2956
              tmp___7 = jit->ip;
#line 2956
              (jit->ip) ++;
#line 2956
              *tmp___7 = imb.b[0];
#line 2956
              tmp___8 = jit->ip;
#line 2956
              (jit->ip) ++;
#line 2956
              *tmp___8 = imb.b[1];
#line 2956
              tmp___9 = jit->ip;
#line 2956
              (jit->ip) ++;
#line 2956
              *tmp___9 = imb.b[2];
#line 2956
              tmp___10 = jit->ip;
#line 2956
              (jit->ip) ++;
#line 2956
              *tmp___10 = imb.b[3];
#line 2956
              tmp___11 = jit->ip;
#line 2956
              (jit->ip) ++;
#line 2956
              *tmp___11 = imb.b[4];
#line 2956
              tmp___12 = jit->ip;
#line 2956
              (jit->ip) ++;
#line 2956
              *tmp___12 = imb.b[5];
#line 2956
              tmp___13 = jit->ip;
#line 2956
              (jit->ip) ++;
#line 2956
              *tmp___13 = imb.b[6];
#line 2956
              tmp___14 = jit->ip;
#line 2956
              (jit->ip) ++;
#line 2956
              *tmp___14 = imb.b[7];
#line 2956
              break;
            }
          } else {
#line 2956
            while (1) {
#line 2956
              imb___0.val = (int )((size_t )((jit_value )imm));
#line 2956
              tmp___15 = jit->ip;
#line 2956
              (jit->ip) ++;
#line 2956
              *tmp___15 = imb___0.b[0];
#line 2956
              tmp___16 = jit->ip;
#line 2956
              (jit->ip) ++;
#line 2956
              *tmp___16 = imb___0.b[1];
#line 2956
              tmp___17 = jit->ip;
#line 2956
              (jit->ip) ++;
#line 2956
              *tmp___17 = imb___0.b[2];
#line 2956
              tmp___18 = jit->ip;
#line 2956
              (jit->ip) ++;
#line 2956
              *tmp___18 = imb___0.b[3];
#line 2956
              break;
            }
          }
#line 2956
          break;
        }
#line 2956
        break;
      }
#line 2957
      while (1) {
#line 2957
        tmp___20 = jit->ip;
#line 2957
        (jit->ip) ++;
#line 2957
        *tmp___20 = (unsigned char)102;
#line 2957
        while (1) {
#line 2957
          if (reg > 7) {
#line 2957
            tmp___21 = 4;
          } else {
#line 2957
            tmp___21 = 0;
          }
#line 2957
          if (r->id == 16) {
#line 2957
            tmp___24 = 0;
          } else {
#line 2957
            tmp___24 = r->id;
          }
#line 2957
          if (tmp___24 > 7) {
#line 2957
            tmp___23 = 1;
          } else {
#line 2957
            tmp___23 = 0;
          }
#line 2957
          _amd64_rex_bits___0 = (unsigned char )(tmp___21 | tmp___23);
#line 2957
          if ((int )_amd64_rex_bits___0 != 0) {
#line 2957
            tmp___25 = jit->ip;
#line 2957
            (jit->ip) ++;
#line 2957
            *tmp___25 = (unsigned char )(0x40 | (int )_amd64_rex_bits___0);
          }
#line 2957
          break;
        }
#line 2957
        tmp___26 = jit->ip;
#line 2957
        (jit->ip) ++;
#line 2957
        *tmp___26 = (unsigned char)15;
#line 2957
        tmp___27 = jit->ip;
#line 2957
        (jit->ip) ++;
#line 2957
        *tmp___27 = (unsigned char )op_id;
#line 2957
        while (1) {
#line 2957
          if (r->id == 16) {
#line 2957
            while (1) {
#line 2957
              tmp___28 = jit->ip;
#line 2957
              (jit->ip) ++;
#line 2957
              *tmp___28 = (unsigned char )((((reg & 0x7) & 0x07) << 3) | 5);
#line 2957
              break;
            }
#line 2957
            while (1) {
#line 2957
              imb___1.val = 0;
#line 2957
              tmp___29 = jit->ip;
#line 2957
              (jit->ip) ++;
#line 2957
              *tmp___29 = imb___1.b[0];
#line 2957
              tmp___30 = jit->ip;
#line 2957
              (jit->ip) ++;
#line 2957
              *tmp___30 = imb___1.b[1];
#line 2957
              tmp___31 = jit->ip;
#line 2957
              (jit->ip) ++;
#line 2957
              *tmp___31 = imb___1.b[2];
#line 2957
              tmp___32 = jit->ip;
#line 2957
              (jit->ip) ++;
#line 2957
              *tmp___32 = imb___1.b[3];
#line 2957
              break;
            }
          } else {
#line 2957
            while (1) {
#line 2957
              if ((r->id & 0x7) == 4) {
#line 2957
                while (1) {
#line 2957
                  tmp___33 = jit->ip;
#line 2957
                  (jit->ip) ++;
#line 2957
                  *tmp___33 = (unsigned char )((((reg & 0x7) & 0x07) << 3) | 4);
#line 2957
                  break;
                }
#line 2957
                while (1) {
#line 2957
                  tmp___34 = jit->ip;
#line 2957
                  (jit->ip) ++;
#line 2957
                  *tmp___34 = (unsigned char )((4 << 3) | 4);
#line 2957
                  break;
                }
#line 2957
                break;
              }
#line 2957
              if ((r->id & 0x7) != 5) {
#line 2957
                while (1) {
#line 2957
                  tmp___43 = jit->ip;
#line 2957
                  (jit->ip) ++;
#line 2957
                  *tmp___43 = (unsigned char )((((reg & 0x7) & 0x07) << 3) | ((r->id & 0x7) & 0x07));
#line 2957
                  break;
                }
#line 2957
                break;
              }
#line 2957
              while (1) {
#line 2957
                tmp___44 = jit->ip;
#line 2957
                (jit->ip) ++;
#line 2957
                *tmp___44 = (unsigned char )(((1 << 6) | (((reg & 0x7) & 0x07) << 3)) | ((r->id & 0x7) & 0x07));
#line 2957
                break;
              }
#line 2957
              while (1) {
#line 2957
                *(jit->ip) = (unsigned char)0;
#line 2957
                (jit->ip) ++;
#line 2957
                break;
              }
#line 2957
              break;
            }
          }
#line 2957
          break;
        }
#line 2957
        break;
      }
    } else {
#line 2959
      while (1) {
#line 2959
        while (1) {
#line 2959
          _amd64_rex_bits___1 = (unsigned char)0;
#line 2959
          if ((int )_amd64_rex_bits___1 != 0) {
#line 2959
            tmp___50 = jit->ip;
#line 2959
            (jit->ip) ++;
#line 2959
            *tmp___50 = (unsigned char )(0x40 | (int )_amd64_rex_bits___1);
          }
#line 2959
          break;
        }
#line 2959
        tmp___51 = jit->ip;
#line 2959
        (jit->ip) ++;
#line 2959
        *tmp___51 = (unsigned char)80;
#line 2959
        break;
      }
#line 2960
      while (1) {
#line 2960
        _amd64_width_temp___0 = (size_t )((jit_value )imm) == (size_t )((int )((size_t )((jit_value )imm)));
#line 2960
        while (1) {
#line 2960
          while (1) {
#line 2960
            if (_amd64_width_temp___0) {
#line 2960
              tmp___54 = 4;
            } else {
#line 2960
              tmp___54 = 8;
            }
#line 2960
            if (tmp___54 > 4) {
#line 2960
              tmp___53 = 8;
            } else {
#line 2960
              tmp___53 = 0;
            }
#line 2960
            _amd64_rex_bits___2 = (unsigned char )tmp___53;
#line 2960
            if ((int )_amd64_rex_bits___2 != 0) {
#line 2960
              tmp___55 = jit->ip;
#line 2960
              (jit->ip) ++;
#line 2960
              *tmp___55 = (unsigned char )(0x40 | (int )_amd64_rex_bits___2);
            } else {
#line 2960
              if (_amd64_width_temp___0) {
#line 2960
                tmp___56 = 4;
              } else {
#line 2960
                tmp___56 = 8;
              }
#line 2960
              if (tmp___56 == 1) {
#line 2960
                tmp___55 = jit->ip;
#line 2960
                (jit->ip) ++;
#line 2960
                *tmp___55 = (unsigned char )(0x40 | (int )_amd64_rex_bits___2);
              }
            }
#line 2960
            break;
          }
#line 2960
          tmp___57 = jit->ip;
#line 2960
          (jit->ip) ++;
#line 2960
          *tmp___57 = (unsigned char)184;
#line 2960
          if (_amd64_width_temp___0) {
#line 2960
            tmp___70 = 4;
          } else {
#line 2960
            tmp___70 = 8;
          }
#line 2960
          if (tmp___70 == 8) {
#line 2960
            while (1) {
#line 2960
              imb___4.val = (size_t )((jit_value )imm);
#line 2960
              tmp___58 = jit->ip;
#line 2960
              (jit->ip) ++;
#line 2960
              *tmp___58 = imb___4.b[0];
#line 2960
              tmp___59 = jit->ip;
#line 2960
              (jit->ip) ++;
#line 2960
              *tmp___59 = imb___4.b[1];
#line 2960
              tmp___60 = jit->ip;
#line 2960
              (jit->ip) ++;
#line 2960
              *tmp___60 = imb___4.b[2];
#line 2960
              tmp___61 = jit->ip;
#line 2960
              (jit->ip) ++;
#line 2960
              *tmp___61 = imb___4.b[3];
#line 2960
              tmp___62 = jit->ip;
#line 2960
              (jit->ip) ++;
#line 2960
              *tmp___62 = imb___4.b[4];
#line 2960
              tmp___63 = jit->ip;
#line 2960
              (jit->ip) ++;
#line 2960
              *tmp___63 = imb___4.b[5];
#line 2960
              tmp___64 = jit->ip;
#line 2960
              (jit->ip) ++;
#line 2960
              *tmp___64 = imb___4.b[6];
#line 2960
              tmp___65 = jit->ip;
#line 2960
              (jit->ip) ++;
#line 2960
              *tmp___65 = imb___4.b[7];
#line 2960
              break;
            }
          } else {
#line 2960
            while (1) {
#line 2960
              imb___5.val = (int )((size_t )((jit_value )imm));
#line 2960
              tmp___66 = jit->ip;
#line 2960
              (jit->ip) ++;
#line 2960
              *tmp___66 = imb___5.b[0];
#line 2960
              tmp___67 = jit->ip;
#line 2960
              (jit->ip) ++;
#line 2960
              *tmp___67 = imb___5.b[1];
#line 2960
              tmp___68 = jit->ip;
#line 2960
              (jit->ip) ++;
#line 2960
              *tmp___68 = imb___5.b[2];
#line 2960
              tmp___69 = jit->ip;
#line 2960
              (jit->ip) ++;
#line 2960
              *tmp___69 = imb___5.b[3];
#line 2960
              break;
            }
          }
#line 2960
          break;
        }
#line 2960
        break;
      }
#line 2961
      while (1) {
#line 2961
        tmp___71 = jit->ip;
#line 2961
        (jit->ip) ++;
#line 2961
        *tmp___71 = (unsigned char)102;
#line 2961
        while (1) {
#line 2961
          if (reg > 7) {
#line 2961
            tmp___72 = 4;
          } else {
#line 2961
            tmp___72 = 0;
          }
#line 2961
          _amd64_rex_bits___3 = (unsigned char )tmp___72;
#line 2961
          if ((int )_amd64_rex_bits___3 != 0) {
#line 2961
            tmp___73 = jit->ip;
#line 2961
            (jit->ip) ++;
#line 2961
            *tmp___73 = (unsigned char )(0x40 | (int )_amd64_rex_bits___3);
          }
#line 2961
          break;
        }
#line 2961
        tmp___74 = jit->ip;
#line 2961
        (jit->ip) ++;
#line 2961
        *tmp___74 = (unsigned char)15;
#line 2961
        tmp___75 = jit->ip;
#line 2961
        (jit->ip) ++;
#line 2961
        *tmp___75 = (unsigned char )op_id;
#line 2961
        while (1) {
#line 2961
          while (1) {
#line 2961
            while (1) {
#line 2961
              tmp___91 = jit->ip;
#line 2961
              (jit->ip) ++;
#line 2961
              *tmp___91 = (unsigned char )(((reg & 0x7) & 0x07) << 3);
#line 2961
              break;
            }
#line 2961
            break;
#line 2961
            while (1) {
#line 2961
              tmp___92 = jit->ip;
#line 2961
              (jit->ip) ++;
#line 2961
              *tmp___92 = (unsigned char )((1 << 6) | (((reg & 0x7) & 0x07) << 3));
#line 2961
              break;
            }
#line 2961
            while (1) {
#line 2961
              *(jit->ip) = (unsigned char)0;
#line 2961
              (jit->ip) ++;
#line 2961
              break;
            }
#line 2961
            break;
          }
#line 2961
          break;
        }
#line 2961
        break;
      }
#line 2962
      while (1) {
#line 2962
        while (1) {
#line 2962
          _amd64_rex_bits___4 = (unsigned char)0;
#line 2962
          if ((int )_amd64_rex_bits___4 != 0) {
#line 2962
            tmp___98 = jit->ip;
#line 2962
            (jit->ip) ++;
#line 2962
            *tmp___98 = (unsigned char )(0x40 | (int )_amd64_rex_bits___4);
          }
#line 2962
          break;
        }
#line 2962
        tmp___99 = jit->ip;
#line 2962
        (jit->ip) ++;
#line 2962
        *tmp___99 = (unsigned char)88;
#line 2962
        break;
      }
    }
  } else {
#line 2965
    while (1) {
#line 2965 "<string>"
      tmp___100 = jit->ip;
#line 2965
      (jit->ip) ++;
#line 2965
      *tmp___100 = (unsigned char)102;
#line 2965
      while (1) {
#line 2965
        if (reg > 7) {
#line 2965
          tmp___101 = 4;
        } else {
#line 2965
          tmp___101 = 0;
        }
#line 2965
        _amd64_rex_bits___5 = (unsigned char )(8 | tmp___101);
#line 2965
        if ((int )_amd64_rex_bits___5 != 0) {
#line 2965
          tmp___102 = jit->ip;
#line 2965
          (jit->ip) ++;
#line 2965
          *tmp___102 = (unsigned char )(0x40 | (int )_amd64_rex_bits___5);
        }
#line 2965
        break;
      }
#line 2965
      tmp___103 = jit->ip;
#line 2965
      (jit->ip) ++;
#line 2965
      *tmp___103 = (unsigned char)15;
#line 2965
      tmp___104 = jit->ip;
#line 2965
      (jit->ip) ++;
#line 2965
      *tmp___104 = (unsigned char )op_id;
#line 2965
      while (1) {
#line 2965
        tmp___105 = jit->ip;
#line 2965
        (jit->ip) ++;
#line 2965
        *tmp___105 = (unsigned char )(((reg & 0x07) << 3) | 4);
#line 2965
        break;
      }
#line 2965
      while (1) {
#line 2965
        tmp___106 = jit->ip;
#line 2965
        (jit->ip) ++;
#line 2965
        *tmp___106 = (unsigned char )((4 << 3) | 5);
#line 2965
        break;
      }
#line 2965
      while (1) {
#line 2965
        imb___9.val = (int )((jit_value )imm);
#line 2965
        tmp___107 = jit->ip;
#line 2965
        (jit->ip) ++;
#line 2965
        *tmp___107 = imb___9.b[0];
#line 2965
        tmp___108 = jit->ip;
#line 2965
        (jit->ip) ++;
#line 2965
        *tmp___108 = imb___9.b[1];
#line 2965
        tmp___109 = jit->ip;
#line 2965
        (jit->ip) ++;
#line 2965
        *tmp___109 = imb___9.b[2];
#line 2965
        tmp___110 = jit->ip;
#line 2965
        (jit->ip) ++;
#line 2965
        *tmp___110 = imb___9.b[3];
#line 2965
        break;
      }
#line 2965
      break;
    }
  }
#line 2967
  return;
}
}
/* END FUNCTION-DEF sse_alu_pd_reg_safeimm LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF fixup LOC=UNKNOWN */
__inline static jit_tree *fixup(jit_tree *h ) 
{ 
  int tmp ;
  int tmp___0 ;
  int tmp___1 ;
  int tmp___2 ;
  int tmp___3 ;

  {
#line 2096
  tmp = is_red(h->right);
#line 2096
  if (tmp) {
#line 2096
    h = rotate_left(h);
  }
#line 2097
  tmp___0 = is_red(h->left);
#line 2097
  if (tmp___0) {
#line 2097
    tmp___1 = is_red((h->left)->left);
#line 2097
    if (tmp___1) {
#line 2098
      h = rotate_right(h);
#line 2099
      color_flip(h);
    }
  }
#line 2101
  tmp___2 = is_red(h->left);
#line 2101
  if (tmp___2) {
#line 2101
    tmp___3 = is_red(h->right);
#line 2101
    if (tmp___3) {
#line 2101
      color_flip(h);
    }
  }
#line 2102
  return (h);
}
}
/* END FUNCTION-DEF fixup LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF is_transfer_op LOC=UNKNOWN */
static int is_transfer_op(jit_op *op ) 
{ 
  jit_opcode code ;
  int tmp ;

  {
#line 6087
  code = (jit_opcode )((int )op->code & 0xfff8);
#line 6088
  if ((unsigned int )code == 552U) {
#line 6088
    tmp = 1;
  } else
#line 6088
  if ((unsigned int )code == 808U) {
#line 6088
    tmp = 1;
  } else
#line 6088
  if ((unsigned int )code == 560U) {
#line 6088
    tmp = 1;
  } else
#line 6088
  if ((unsigned int )code == 56U) {
#line 6088
    tmp = 1;
  } else
#line 6088
  if ((unsigned int )code == 728U) {
#line 6088
    tmp = 1;
  } else {
#line 6088
    tmp = 0;
  }
#line 6088
  return (tmp);
}
}
/* END FUNCTION-DEF is_transfer_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_get_unused_reg LOC=UNKNOWN */
jit_hw_reg *jit_get_unused_reg(struct jit_reg_allocator *al , jit_op *op , int fp ) 
{ 
  jit_hw_reg *tmp ;

  {
#line 6327
  tmp = jit_get_unused_reg_with_index(al, op, fp, 0);
#line 6327
  return (tmp);
}
}
/* END FUNCTION-DEF jit_get_unused_reg LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF emit_sse_alu_op LOC=UNKNOWN */
static void emit_sse_alu_op(struct jit *jit , jit_op *op , int sse_op ) 
{ 
  unsigned char *tmp ;
  unsigned char _amd64_rex_bits ;
  int tmp___0 ;
  int tmp___1 ;
  unsigned char *tmp___2 ;
  unsigned char *tmp___3 ;
  unsigned char *tmp___4 ;
  unsigned char *tmp___5 ;
  unsigned char *tmp___6 ;
  unsigned char _amd64_rex_bits___0 ;
  int tmp___7 ;
  int tmp___8 ;
  unsigned char *tmp___9 ;
  unsigned char *tmp___10 ;
  unsigned char *tmp___11 ;
  unsigned char *tmp___12 ;
  unsigned char *tmp___13 ;
  unsigned char _amd64_rex_bits___1 ;
  int tmp___14 ;
  int tmp___15 ;
  unsigned char *tmp___16 ;
  unsigned char *tmp___17 ;
  unsigned char *tmp___18 ;
  unsigned char *tmp___19 ;
  unsigned char *tmp___20 ;
  unsigned char _amd64_rex_bits___2 ;
  int tmp___21 ;
  int tmp___22 ;
  unsigned char *tmp___23 ;
  unsigned char *tmp___24 ;
  unsigned char *tmp___25 ;
  unsigned char *tmp___26 ;

  {
#line 2996
  if (op->r_arg[0] == op->r_arg[1]) {
#line 2997
    while (1) {
#line 2997
      tmp = jit->ip;
#line 2997
      (jit->ip) ++;
#line 2997
      *tmp = (unsigned char)242;
#line 2997
      while (1) {
#line 2997
        if (op->r_arg[0] > 7L) {
#line 2997
          tmp___0 = 4;
        } else {
#line 2997
          tmp___0 = 0;
        }
#line 2997
        if (op->r_arg[2] > 7L) {
#line 2997
          tmp___1 = 1;
        } else {
#line 2997
          tmp___1 = 0;
        }
#line 2997
        _amd64_rex_bits = (unsigned char )(tmp___0 | tmp___1);
#line 2997
        if ((int )_amd64_rex_bits != 0) {
#line 2997
          tmp___2 = jit->ip;
#line 2997
          (jit->ip) ++;
#line 2997
          *tmp___2 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
        }
#line 2997
        break;
      }
#line 2997
      tmp___3 = jit->ip;
#line 2997
      (jit->ip) ++;
#line 2997
      *tmp___3 = (unsigned char)15;
#line 2997
      tmp___4 = jit->ip;
#line 2997
      (jit->ip) ++;
#line 2997
      *tmp___4 = (unsigned char )sse_op;
#line 2997
      while (1) {
#line 2997
        while (1) {
#line 2997
          tmp___5 = jit->ip;
#line 2997
          (jit->ip) ++;
#line 2997
          *tmp___5 = (unsigned char )(((long )(3 << 6) | ((op->r_arg[0] & 7L) << 3)) | (op->r_arg[2] & 7L));
#line 2997
          break;
        }
#line 2997
        break;
      }
#line 2997
      break;
    }
  } else
#line 2998
  if (op->r_arg[0] == op->r_arg[2]) {
#line 2999
    while (1) {
#line 2999
      tmp___6 = jit->ip;
#line 2999
      (jit->ip) ++;
#line 2999
      *tmp___6 = (unsigned char)242;
#line 2999
      while (1) {
#line 2999
        if (op->r_arg[0] > 7L) {
#line 2999
          tmp___7 = 4;
        } else {
#line 2999
          tmp___7 = 0;
        }
#line 2999
        if (op->r_arg[1] > 7L) {
#line 2999
          tmp___8 = 1;
        } else {
#line 2999
          tmp___8 = 0;
        }
#line 2999
        _amd64_rex_bits___0 = (unsigned char )(tmp___7 | tmp___8);
#line 2999
        if ((int )_amd64_rex_bits___0 != 0) {
#line 2999
          tmp___9 = jit->ip;
#line 2999
          (jit->ip) ++;
#line 2999
          *tmp___9 = (unsigned char )(0x40 | (int )_amd64_rex_bits___0);
        }
#line 2999
        break;
      }
#line 2999
      tmp___10 = jit->ip;
#line 2999
      (jit->ip) ++;
#line 2999
      *tmp___10 = (unsigned char)15;
#line 2999
      tmp___11 = jit->ip;
#line 2999
      (jit->ip) ++;
#line 2999
      *tmp___11 = (unsigned char )sse_op;
#line 2999
      while (1) {
#line 2999
        while (1) {
#line 2999
          tmp___12 = jit->ip;
#line 2999
          (jit->ip) ++;
#line 2999
          *tmp___12 = (unsigned char )(((long )(3 << 6) | ((op->r_arg[0] & 7L) << 3)) | (op->r_arg[1] & 7L));
#line 2999
          break;
        }
#line 2999
        break;
      }
#line 2999
      break;
    }
  } else {
#line 3001
    while (1) {
#line 3001
      tmp___13 = jit->ip;
#line 3001
      (jit->ip) ++;
#line 3001
      *tmp___13 = (unsigned char)242;
#line 3001
      while (1) {
#line 3001
        if (op->r_arg[0] > 7L) {
#line 3001
          tmp___14 = 4;
        } else {
#line 3001
          tmp___14 = 0;
        }
#line 3001
        if (op->r_arg[1] > 7L) {
#line 3001
          tmp___15 = 1;
        } else {
#line 3001
          tmp___15 = 0;
        }
#line 3001
        _amd64_rex_bits___1 = (unsigned char )(tmp___14 | tmp___15);
#line 3001
        if ((int )_amd64_rex_bits___1 != 0) {
#line 3001
          tmp___16 = jit->ip;
#line 3001
          (jit->ip) ++;
#line 3001
          *tmp___16 = (unsigned char )(0x40 | (int )_amd64_rex_bits___1);
        }
#line 3001
        break;
      }
#line 3001
      tmp___17 = jit->ip;
#line 3001
      (jit->ip) ++;
#line 3001
      *tmp___17 = (unsigned char)15;
#line 3001
      tmp___18 = jit->ip;
#line 3001
      (jit->ip) ++;
#line 3001
      *tmp___18 = (unsigned char)16;
#line 3001
      while (1) {
#line 3001
        while (1) {
#line 3001
          tmp___19 = jit->ip;
#line 3001
          (jit->ip) ++;
#line 3001
          *tmp___19 = (unsigned char )(((long )(3 << 6) | ((op->r_arg[0] & 7L) << 3)) | (op->r_arg[1] & 7L));
#line 3001
          break;
        }
#line 3001
        break;
      }
#line 3001
      break;
    }
#line 3002
    while (1) {
#line 3002
      tmp___20 = jit->ip;
#line 3002
      (jit->ip) ++;
#line 3002
      *tmp___20 = (unsigned char)242;
#line 3002
      while (1) {
#line 3002
        if (op->r_arg[0] > 7L) {
#line 3002
          tmp___21 = 4;
        } else {
#line 3002
          tmp___21 = 0;
        }
#line 3002
        if (op->r_arg[2] > 7L) {
#line 3002
          tmp___22 = 1;
        } else {
#line 3002
          tmp___22 = 0;
        }
#line 3002
        _amd64_rex_bits___2 = (unsigned char )(tmp___21 | tmp___22);
#line 3002
        if ((int )_amd64_rex_bits___2 != 0) {
#line 3002
          tmp___23 = jit->ip;
#line 3002
          (jit->ip) ++;
#line 3002
          *tmp___23 = (unsigned char )(0x40 | (int )_amd64_rex_bits___2);
        }
#line 3002
        break;
      }
#line 3002
      tmp___24 = jit->ip;
#line 3002
      (jit->ip) ++;
#line 3002
      *tmp___24 = (unsigned char)15;
#line 3002
      tmp___25 = jit->ip;
#line 3002
      (jit->ip) ++;
#line 3002
      *tmp___25 = (unsigned char )sse_op;
#line 3002
      while (1) {
#line 3002
        while (1) {
#line 3002
          tmp___26 = jit->ip;
#line 3002
          (jit->ip) ++;
#line 3002
          *tmp___26 = (unsigned char )(((long )(3 << 6) | ((op->r_arg[0] & 7L) << 3)) | (op->r_arg[2] & 7L));
#line 3002
          break;
        }
#line 3002
        break;
      }
#line 3002
      break;
    }
  }
#line 3004
  return;
}
}
/* END FUNCTION-DEF emit_sse_alu_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF force_assoc LOC=UNKNOWN */
static int force_assoc(jit_op *op , struct jit_reg_allocator *al ) 
{ 
  jit_hw_reg *hreg ;
  jit_hw_reg *tmp ;

  {
#line 6074
  if (op->arg[1] == 0L) {
#line 6074
    tmp = al->gp_regs + op->arg[2];
  } else {
#line 6074
    tmp = al->fp_regs + op->arg[2];
  }
#line 6074
  hreg = tmp;
#line 6075
  rmap_assoc(op->regmap, op->arg[0], hreg);
#line 6076
  load_reg(op, hreg, op->arg[0]);
#line 6077
  return (1);
}
}
/* END FUNCTION-DEF force_assoc LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF emit_subx_op LOC=UNKNOWN */
static void emit_subx_op(struct jit *jit , struct jit_op *op , int x86_op , int imm ) 
{ 
  unsigned char *tmp ;
  unsigned char _amd64_rex_bits ;
  int tmp___0 ;
  int tmp___1 ;
  int tmp___2 ;
  unsigned char *tmp___3 ;
  unsigned char *tmp___4 ;
  unsigned char *tmp___5 ;
  long tmp___6 ;
  unsigned char *tmp___7 ;
  unsigned char _amd64_rex_bits___0 ;
  int tmp___8 ;
  unsigned char *tmp___9 ;
  unsigned char *tmp___10 ;
  unsigned char *tmp___11 ;
  unsigned char _amd64_rex_bits___1 ;
  unsigned char *tmp___12 ;
  unsigned char *tmp___13 ;
  x86_imm_buf imb ;
  unsigned char *tmp___14 ;
  unsigned char *tmp___15 ;
  unsigned char *tmp___16 ;
  unsigned char *tmp___17 ;
  unsigned char _amd64_rex_bits___2 ;
  int tmp___18 ;
  unsigned char *tmp___19 ;
  unsigned char *tmp___20 ;
  unsigned char *tmp___21 ;
  x86_imm_buf imb___0 ;
  unsigned char *tmp___22 ;
  unsigned char *tmp___23 ;
  unsigned char *tmp___24 ;
  unsigned char *tmp___25 ;
  unsigned char _amd64_rex_bits___3 ;
  int tmp___26 ;
  int tmp___27 ;
  unsigned char *tmp___28 ;
  unsigned char *tmp___29 ;
  unsigned char *tmp___30 ;
  unsigned char *tmp___31 ;
  unsigned char _amd64_rex_bits___4 ;
  int tmp___32 ;
  int tmp___33 ;
  unsigned char *tmp___34 ;
  unsigned char *tmp___35 ;
  unsigned char *tmp___36 ;
  long tmp___37 ;
  unsigned char *tmp___38 ;
  unsigned char *tmp___39 ;
  unsigned char *tmp___40 ;
  unsigned char *tmp___41 ;
  unsigned char *tmp___42 ;
  unsigned char *tmp___43 ;
  x86_imm_buf imb___1 ;
  unsigned char *tmp___44 ;
  unsigned char *tmp___45 ;
  unsigned char *tmp___46 ;
  unsigned char *tmp___47 ;
  unsigned char *tmp___48 ;
  unsigned char *tmp___49 ;
  unsigned char *tmp___50 ;
  x86_imm_buf imb___2 ;
  unsigned char *tmp___51 ;
  unsigned char *tmp___52 ;
  unsigned char *tmp___53 ;
  unsigned char *tmp___54 ;
  unsigned char *tmp___55 ;
  unsigned char _amd64_rex_bits___5 ;
  int tmp___56 ;
  int tmp___57 ;
  int tmp___58 ;
  unsigned char *tmp___59 ;
  unsigned char *tmp___60 ;
  unsigned char *tmp___61 ;
  long tmp___62 ;
  unsigned char *tmp___63 ;
  unsigned char _amd64_rex_bits___6 ;
  int tmp___64 ;
  unsigned char *tmp___65 ;
  unsigned char *tmp___66 ;
  unsigned char *tmp___67 ;
  unsigned char *tmp___68 ;
  unsigned char *tmp___69 ;
  unsigned char *tmp___70 ;
  unsigned char *tmp___71 ;
  unsigned char *tmp___72 ;
  x86_imm_buf imb___3 ;
  unsigned char *tmp___73 ;
  unsigned char *tmp___74 ;
  unsigned char *tmp___75 ;
  unsigned char *tmp___76 ;
  unsigned char *tmp___77 ;
  unsigned char *tmp___78 ;
  unsigned char *tmp___79 ;
  x86_imm_buf imb___4 ;
  unsigned char *tmp___80 ;
  unsigned char *tmp___81 ;
  unsigned char *tmp___82 ;
  unsigned char *tmp___83 ;
  unsigned char *tmp___84 ;
  unsigned char _amd64_rex_bits___7 ;
  int tmp___85 ;
  int tmp___86 ;
  int tmp___87 ;
  unsigned char *tmp___88 ;
  unsigned char *tmp___89 ;
  unsigned char *tmp___90 ;
  long tmp___91 ;
  unsigned char *tmp___92 ;
  unsigned char _amd64_rex_bits___8 ;
  int tmp___93 ;
  int tmp___94 ;
  unsigned char *tmp___95 ;
  unsigned char *tmp___96 ;
  unsigned char *tmp___97 ;

  {
#line 4162
  if (imm) {
#line 4163
    if (op->r_arg[0] != op->r_arg[1]) {
#line 4163
      while (1) {
#line 4163
        if ((int )sizeof(void *) == 2) {
#line 4163
          tmp = jit->ip;
#line 4163
          (jit->ip) ++;
#line 4163
          *tmp = (unsigned char)102;
        }
#line 4163
        while (1) {
#line 4163
          if ((int )sizeof(void *) > 4) {
#line 4163
            tmp___0 = 8;
          } else {
#line 4163
            tmp___0 = 0;
          }
#line 4163
          if (op->r_arg[0] > 7L) {
#line 4163
            tmp___1 = 4;
          } else {
#line 4163
            tmp___1 = 0;
          }
#line 4163
          if (op->r_arg[1] > 7L) {
#line 4163
            tmp___2 = 1;
          } else {
#line 4163
            tmp___2 = 0;
          }
#line 4163
          _amd64_rex_bits = (unsigned char )((tmp___0 | tmp___1) | tmp___2);
#line 4163
          if ((int )_amd64_rex_bits != 0) {
#line 4163
            tmp___3 = jit->ip;
#line 4163
            (jit->ip) ++;
#line 4163
            *tmp___3 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
          } else
#line 4163
          if ((int )sizeof(void *) == 1) {
#line 4163
            tmp___3 = jit->ip;
#line 4163
            (jit->ip) ++;
#line 4163
            *tmp___3 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
          }
#line 4163
          break;
        }
#line 4163
        switch ((int )sizeof(void *)) {
        case 1: 
#line 4163
        tmp___4 = jit->ip;
#line 4163
        (jit->ip) ++;
#line 4163
        *tmp___4 = (unsigned char)138;
#line 4163
        break;
        case 8: 
        case 4: 
        case 2: 
#line 4163
        tmp___5 = jit->ip;
#line 4163
        (jit->ip) ++;
#line 4163
        *tmp___5 = (unsigned char)139;
#line 4163
        break;
        default: 
#line 4163
        tmp___6 = __builtin_expect(1L, 0L);
#line 4163
        if (tmp___6) {
#line 4163
          __assert_rtn((char const   *)"emit_subx_op", (char const   *)"tmp/src.c",
                       3131, (char const   *)"0");
        }
        }
#line 4163
        while (1) {
#line 4163
          while (1) {
#line 4163
            tmp___7 = jit->ip;
#line 4163
            (jit->ip) ++;
#line 4163
            *tmp___7 = (unsigned char )(((long )(3 << 6) | ((op->r_arg[0] & 7L) << 3)) | (op->r_arg[1] & 7L));
#line 4163
            break;
          }
#line 4163
          break;
        }
#line 4163
        break;
      }
    }
#line 4164
    while (1) {
#line 4164
      if (op->r_arg[2] >= -128L) {
#line 4164
        if (op->r_arg[2] <= 127L) {
#line 4164
          while (1) {
#line 4164
            if (op->r_arg[0] > 7L) {
#line 4164
              tmp___8 = 1;
            } else {
#line 4164
              tmp___8 = 0;
            }
#line 4164
            _amd64_rex_bits___0 = (unsigned char )(8 | tmp___8);
#line 4164
            if ((int )_amd64_rex_bits___0 != 0) {
#line 4164
              tmp___9 = jit->ip;
#line 4164
              (jit->ip) ++;
#line 4164
              *tmp___9 = (unsigned char )(0x40 | (int )_amd64_rex_bits___0);
            }
#line 4164
            break;
          }
#line 4164
          tmp___10 = jit->ip;
#line 4164
          (jit->ip) ++;
#line 4164
          *tmp___10 = (unsigned char)131;
#line 4164
          while (1) {
#line 4164
            while (1) {
#line 4164
              tmp___11 = jit->ip;
#line 4164
              (jit->ip) ++;
#line 4164
              *tmp___11 = (unsigned char )((long )((3 << 6) | ((x86_op & 0x07) << 3)) | (op->r_arg[0] & 7L));
#line 4164
              break;
            }
#line 4164
            break;
          }
#line 4164
          while (1) {
#line 4164
            *(jit->ip) = (unsigned char )(op->r_arg[2] & 255L);
#line 4164
            (jit->ip) ++;
#line 4164
            break;
          }
        } else {
#line 4164
          goto _L;
        }
      } else
      _L: /* CIL Label */ 
#line 4164
      if (op->r_arg[0] == 0L) {
#line 4164
        while (1) {
#line 4164
          _amd64_rex_bits___1 = (unsigned char)8;
#line 4164
          if ((int )_amd64_rex_bits___1 != 0) {
#line 4164
            tmp___12 = jit->ip;
#line 4164
            (jit->ip) ++;
#line 4164
            *tmp___12 = (unsigned char )(0x40 | (int )_amd64_rex_bits___1);
          }
#line 4164
          break;
        }
#line 4164
        tmp___13 = jit->ip;
#line 4164
        (jit->ip) ++;
#line 4164
        *tmp___13 = (unsigned char )(((int )((unsigned char )x86_op) << 3) + 5);
#line 4164
        while (1) {
#line 4164
          imb.val = (int )op->r_arg[2];
#line 4164
          tmp___14 = jit->ip;
#line 4164
          (jit->ip) ++;
#line 4164
          *tmp___14 = imb.b[0];
#line 4164
          tmp___15 = jit->ip;
#line 4164
          (jit->ip) ++;
#line 4164
          *tmp___15 = imb.b[1];
#line 4164
          tmp___16 = jit->ip;
#line 4164
          (jit->ip) ++;
#line 4164
          *tmp___16 = imb.b[2];
#line 4164
          tmp___17 = jit->ip;
#line 4164
          (jit->ip) ++;
#line 4164
          *tmp___17 = imb.b[3];
#line 4164
          break;
        }
      } else {
#line 4164
        while (1) {
#line 4164
          if (op->r_arg[0] > 7L) {
#line 4164
            tmp___18 = 1;
          } else {
#line 4164
            tmp___18 = 0;
          }
#line 4164
          _amd64_rex_bits___2 = (unsigned char )(8 | tmp___18);
#line 4164
          if ((int )_amd64_rex_bits___2 != 0) {
#line 4164
            tmp___19 = jit->ip;
#line 4164
            (jit->ip) ++;
#line 4164
            *tmp___19 = (unsigned char )(0x40 | (int )_amd64_rex_bits___2);
          }
#line 4164
          break;
        }
#line 4164
        tmp___20 = jit->ip;
#line 4164
        (jit->ip) ++;
#line 4164
        *tmp___20 = (unsigned char)129;
#line 4164
        while (1) {
#line 4164
          while (1) {
#line 4164
            tmp___21 = jit->ip;
#line 4164
            (jit->ip) ++;
#line 4164
            *tmp___21 = (unsigned char )((long )((3 << 6) | ((x86_op & 0x07) << 3)) | (op->r_arg[0] & 7L));
#line 4164
            break;
          }
#line 4164
          break;
        }
#line 4164
        while (1) {
#line 4164
          imb___0.val = (int )op->r_arg[2];
#line 4164
          tmp___22 = jit->ip;
#line 4164
          (jit->ip) ++;
#line 4164
          *tmp___22 = imb___0.b[0];
#line 4164
          tmp___23 = jit->ip;
#line 4164
          (jit->ip) ++;
#line 4164
          *tmp___23 = imb___0.b[1];
#line 4164
          tmp___24 = jit->ip;
#line 4164
          (jit->ip) ++;
#line 4164
          *tmp___24 = imb___0.b[2];
#line 4164
          tmp___25 = jit->ip;
#line 4164
          (jit->ip) ++;
#line 4164
          *tmp___25 = imb___0.b[3];
#line 4164
          break;
        }
      }
#line 4164
      break;
    }
#line 4165
    return;
  }
#line 4167
  if (op->r_arg[0] == op->r_arg[1]) {
#line 4168
    while (1) {
#line 4168
      while (1) {
#line 4168
        if (op->r_arg[0] > 7L) {
#line 4168
          tmp___26 = 4;
        } else {
#line 4168
          tmp___26 = 0;
        }
#line 4168
        if (op->r_arg[2] > 7L) {
#line 4168
          tmp___27 = 1;
        } else {
#line 4168
          tmp___27 = 0;
        }
#line 4168
        _amd64_rex_bits___3 = (unsigned char )((8 | tmp___26) | tmp___27);
#line 4168
        if ((int )_amd64_rex_bits___3 != 0) {
#line 4168
          tmp___28 = jit->ip;
#line 4168
          (jit->ip) ++;
#line 4168
          *tmp___28 = (unsigned char )(0x40 | (int )_amd64_rex_bits___3);
        }
#line 4168
        break;
      }
#line 4168
      tmp___29 = jit->ip;
#line 4168
      (jit->ip) ++;
#line 4168
      *tmp___29 = (unsigned char )(((int )((unsigned char )x86_op) << 3) + 3);
#line 4168
      while (1) {
#line 4168
        while (1) {
#line 4168
          tmp___30 = jit->ip;
#line 4168
          (jit->ip) ++;
#line 4168
          *tmp___30 = (unsigned char )(((long )(3 << 6) | ((op->r_arg[0] & 7L) << 3)) | (op->r_arg[2] & 7L));
#line 4168
          break;
        }
#line 4168
        break;
      }
#line 4168
      break;
    }
  } else
#line 4169
  if (op->r_arg[0] == op->r_arg[2]) {
#line 4170
    while (1) {
#line 4170
      if ((int )sizeof(void *) == 2) {
#line 4170
        tmp___31 = jit->ip;
#line 4170
        (jit->ip) ++;
#line 4170
        *tmp___31 = (unsigned char)102;
      }
#line 4170
      while (1) {
#line 4170
        if ((int )sizeof(void *) > 4) {
#line 4170
          tmp___32 = 8;
        } else {
#line 4170
          tmp___32 = 0;
        }
#line 4170
        if (op->r_arg[2] > 7L) {
#line 4170
          tmp___33 = 4;
        } else {
#line 4170
          tmp___33 = 0;
        }
#line 4170
        _amd64_rex_bits___4 = (unsigned char )(tmp___32 | tmp___33);
#line 4170
        if ((int )_amd64_rex_bits___4 != 0) {
#line 4170
          tmp___34 = jit->ip;
#line 4170
          (jit->ip) ++;
#line 4170
          *tmp___34 = (unsigned char )(0x40 | (int )_amd64_rex_bits___4);
        } else
#line 4170
        if ((int )sizeof(void *) == 1) {
#line 4170
          tmp___34 = jit->ip;
#line 4170
          (jit->ip) ++;
#line 4170
          *tmp___34 = (unsigned char )(0x40 | (int )_amd64_rex_bits___4);
        }
#line 4170
        break;
      }
#line 4170
      switch ((int )sizeof(void *)) {
      case 1: 
#line 4170
      tmp___35 = jit->ip;
#line 4170
      (jit->ip) ++;
#line 4170
      *tmp___35 = (unsigned char)136;
#line 4170
      break;
      case 8: 
      case 4: 
      case 2: 
#line 4170
      tmp___36 = jit->ip;
#line 4170
      (jit->ip) ++;
#line 4170
      *tmp___36 = (unsigned char)137;
#line 4170
      break;
      default: 
#line 4170
      tmp___37 = __builtin_expect(1L, 0L);
#line 4170
      if (tmp___37) {
#line 4170
        __assert_rtn((char const   *)"emit_subx_op", (char const   *)"tmp/src.c",
                     3139, (char const   *)"0");
      }
      }
#line 4170
      while (1) {
#line 4170
        if (- ((int )sizeof(void *)) == 0) {
#line 4170
          while (1) {
#line 4170
            tmp___38 = jit->ip;
#line 4170
            (jit->ip) ++;
#line 4170
            *tmp___38 = (unsigned char )((((op->r_arg[2] & 7L) & 7L) << 3) | 4L);
#line 4170
            break;
          }
#line 4170
          while (1) {
#line 4170
            tmp___39 = jit->ip;
#line 4170
            (jit->ip) ++;
#line 4170
            *tmp___39 = (unsigned char )((4 << 3) | 4);
#line 4170
            break;
          }
        } else
#line 4170
        if ((jit_value )(- ((int )sizeof(void *))) >= -128L) {
#line 4170
          if ((jit_value )(- ((int )sizeof(void *))) <= 127L) {
#line 4170
            while (1) {
#line 4170
              tmp___40 = jit->ip;
#line 4170
              (jit->ip) ++;
#line 4170
              *tmp___40 = (unsigned char )(((long )(1 << 6) | (((op->r_arg[2] & 7L) & 7L) << 3)) | 4L);
#line 4170
              break;
            }
#line 4170
            while (1) {
#line 4170
              tmp___41 = jit->ip;
#line 4170
              (jit->ip) ++;
#line 4170
              *tmp___41 = (unsigned char )((4 << 3) | 4);
#line 4170
              break;
            }
#line 4170
            while (1) {
#line 4170
              *(jit->ip) = (unsigned char )(- ((int )sizeof(void *)) & 0xff);
#line 4170
              (jit->ip) ++;
#line 4170
              break;
            }
          } else {
#line 4170
            goto _L___0;
          }
        } else {
          _L___0: /* CIL Label */ 
#line 4170
          while (1) {
#line 4170
            tmp___42 = jit->ip;
#line 4170
            (jit->ip) ++;
#line 4170
            *tmp___42 = (unsigned char )(((long )(2 << 6) | (((op->r_arg[2] & 7L) & 7L) << 3)) | 4L);
#line 4170
            break;
          }
#line 4170
          while (1) {
#line 4170
            tmp___43 = jit->ip;
#line 4170
            (jit->ip) ++;
#line 4170
            *tmp___43 = (unsigned char )((4 << 3) | 4);
#line 4170
            break;
          }
#line 4170
          while (1) {
#line 4170
            imb___1.val = - ((int )sizeof(void *));
#line 4170
            tmp___44 = jit->ip;
#line 4170
            (jit->ip) ++;
#line 4170
            *tmp___44 = imb___1.b[0];
#line 4170
            tmp___45 = jit->ip;
#line 4170
            (jit->ip) ++;
#line 4170
            *tmp___45 = imb___1.b[1];
#line 4170
            tmp___46 = jit->ip;
#line 4170
            (jit->ip) ++;
#line 4170
            *tmp___46 = imb___1.b[2];
#line 4170
            tmp___47 = jit->ip;
#line 4170
            (jit->ip) ++;
#line 4170
            *tmp___47 = imb___1.b[3];
#line 4170
            break;
          }
        }
#line 4170
        break;
#line 4170
        if (- ((int )sizeof(void *)) == 0) {
#line 4170
          while (1) {
#line 4170
            tmp___48 = jit->ip;
#line 4170
            (jit->ip) ++;
#line 4170
            *tmp___48 = (unsigned char )((((op->r_arg[2] & 7L) & 7L) << 3) | 4L);
#line 4170
            break;
          }
#line 4170
          break;
        }
#line 4170
        if ((jit_value )(- ((int )sizeof(void *))) >= -128L) {
#line 4170
          if ((jit_value )(- ((int )sizeof(void *))) <= 127L) {
#line 4170
            while (1) {
#line 4170
              tmp___49 = jit->ip;
#line 4170
              (jit->ip) ++;
#line 4170
              *tmp___49 = (unsigned char )(((long )(1 << 6) | (((op->r_arg[2] & 7L) & 7L) << 3)) | 4L);
#line 4170
              break;
            }
#line 4170
            while (1) {
#line 4170
              *(jit->ip) = (unsigned char )(- ((int )sizeof(void *)) & 0xff);
#line 4170
              (jit->ip) ++;
#line 4170
              break;
            }
          } else {
#line 4170
            goto _L___1;
          }
        } else {
          _L___1: /* CIL Label */ 
#line 4170
          while (1) {
#line 4170
            tmp___50 = jit->ip;
#line 4170
            (jit->ip) ++;
#line 4170
            *tmp___50 = (unsigned char )(((long )(2 << 6) | (((op->r_arg[2] & 7L) & 7L) << 3)) | 4L);
#line 4170
            break;
          }
#line 4170
          while (1) {
#line 4170
            imb___2.val = - ((int )sizeof(void *));
#line 4170
            tmp___51 = jit->ip;
#line 4170
            (jit->ip) ++;
#line 4170
            *tmp___51 = imb___2.b[0];
#line 4170
            tmp___52 = jit->ip;
#line 4170
            (jit->ip) ++;
#line 4170
            *tmp___52 = imb___2.b[1];
#line 4170
            tmp___53 = jit->ip;
#line 4170
            (jit->ip) ++;
#line 4170
            *tmp___53 = imb___2.b[2];
#line 4170
            tmp___54 = jit->ip;
#line 4170
            (jit->ip) ++;
#line 4170
            *tmp___54 = imb___2.b[3];
#line 4170
            break;
          }
        }
#line 4170
        break;
      }
#line 4170
      break;
    }
#line 4171
    while (1) {
#line 4171
      if ((int )sizeof(void *) == 2) {
#line 4171
        tmp___55 = jit->ip;
#line 4171
        (jit->ip) ++;
#line 4171
        *tmp___55 = (unsigned char)102;
      }
#line 4171
      while (1) {
#line 4171
        if ((int )sizeof(void *) > 4) {
#line 4171
          tmp___56 = 8;
        } else {
#line 4171
          tmp___56 = 0;
        }
#line 4171
        if (op->r_arg[0] > 7L) {
#line 4171
          tmp___57 = 4;
        } else {
#line 4171
          tmp___57 = 0;
        }
#line 4171
        if (op->r_arg[1] > 7L) {
#line 4171
          tmp___58 = 1;
        } else {
#line 4171
          tmp___58 = 0;
        }
#line 4171
        _amd64_rex_bits___5 = (unsigned char )((tmp___56 | tmp___57) | tmp___58);
#line 4171
        if ((int )_amd64_rex_bits___5 != 0) {
#line 4171
          tmp___59 = jit->ip;
#line 4171
          (jit->ip) ++;
#line 4171
          *tmp___59 = (unsigned char )(0x40 | (int )_amd64_rex_bits___5);
        } else
#line 4171
        if ((int )sizeof(void *) == 1) {
#line 4171
          tmp___59 = jit->ip;
#line 4171
          (jit->ip) ++;
#line 4171
          *tmp___59 = (unsigned char )(0x40 | (int )_amd64_rex_bits___5);
        }
#line 4171
        break;
      }
#line 4171
      switch ((int )sizeof(void *)) {
      case 1: 
#line 4171
      tmp___60 = jit->ip;
#line 4171
      (jit->ip) ++;
#line 4171
      *tmp___60 = (unsigned char)138;
#line 4171
      break;
      case 8: 
      case 4: 
      case 2: 
#line 4171
      tmp___61 = jit->ip;
#line 4171
      (jit->ip) ++;
#line 4171
      *tmp___61 = (unsigned char)139;
#line 4171
      break;
      default: 
#line 4171
      tmp___62 = __builtin_expect(1L, 0L);
#line 4171
      if (tmp___62) {
#line 4171
        __assert_rtn((char const   *)"emit_subx_op", (char const   *)"tmp/src.c",
                     3140, (char const   *)"0");
      }
      }
#line 4171
      while (1) {
#line 4171
        while (1) {
#line 4171
          tmp___63 = jit->ip;
#line 4171
          (jit->ip) ++;
#line 4171
          *tmp___63 = (unsigned char )(((long )(3 << 6) | ((op->r_arg[0] & 7L) << 3)) | (op->r_arg[1] & 7L));
#line 4171
          break;
        }
#line 4171
        break;
      }
#line 4171
      break;
    }
#line 4172
    while (1) {
#line 4172
      while (1) {
#line 4172
        if (op->r_arg[0] > 7L) {
#line 4172
          tmp___64 = 4;
        } else {
#line 4172
          tmp___64 = 0;
        }
#line 4172
        _amd64_rex_bits___6 = (unsigned char )(8 | tmp___64);
#line 4172
        if ((int )_amd64_rex_bits___6 != 0) {
#line 4172
          tmp___65 = jit->ip;
#line 4172
          (jit->ip) ++;
#line 4172
          *tmp___65 = (unsigned char )(0x40 | (int )_amd64_rex_bits___6);
        }
#line 4172
        break;
      }
#line 4172
      while (1) {
#line 4172
        tmp___66 = jit->ip;
#line 4172
        (jit->ip) ++;
#line 4172
        *tmp___66 = (unsigned char )(((int )((unsigned char )x86_op) << 3) + 3);
#line 4172
        while (1) {
#line 4172
          if (- ((int )sizeof(void *)) == 0) {
#line 4172
            while (1) {
#line 4172
              tmp___67 = jit->ip;
#line 4172
              (jit->ip) ++;
#line 4172
              *tmp___67 = (unsigned char )((((op->r_arg[0] & 7L) & 7L) << 3) | 4L);
#line 4172
              break;
            }
#line 4172
            while (1) {
#line 4172
              tmp___68 = jit->ip;
#line 4172
              (jit->ip) ++;
#line 4172
              *tmp___68 = (unsigned char )((4 << 3) | 4);
#line 4172
              break;
            }
          } else
#line 4172
          if ((jit_value )(- ((int )sizeof(void *))) >= -128L) {
#line 4172
            if ((jit_value )(- ((int )sizeof(void *))) <= 127L) {
#line 4172
              while (1) {
#line 4172
                tmp___69 = jit->ip;
#line 4172
                (jit->ip) ++;
#line 4172
                *tmp___69 = (unsigned char )(((long )(1 << 6) | (((op->r_arg[0] & 7L) & 7L) << 3)) | 4L);
#line 4172
                break;
              }
#line 4172
              while (1) {
#line 4172
                tmp___70 = jit->ip;
#line 4172
                (jit->ip) ++;
#line 4172
                *tmp___70 = (unsigned char )((4 << 3) | 4);
#line 4172
                break;
              }
#line 4172
              while (1) {
#line 4172
                *(jit->ip) = (unsigned char )(- ((int )sizeof(void *)) & 0xff);
#line 4172
                (jit->ip) ++;
#line 4172
                break;
              }
            } else {
#line 4172
              goto _L___2;
            }
          } else {
            _L___2: /* CIL Label */ 
#line 4172
            while (1) {
#line 4172
              tmp___71 = jit->ip;
#line 4172
              (jit->ip) ++;
#line 4172
              *tmp___71 = (unsigned char )(((long )(2 << 6) | (((op->r_arg[0] & 7L) & 7L) << 3)) | 4L);
#line 4172
              break;
            }
#line 4172
            while (1) {
#line 4172
              tmp___72 = jit->ip;
#line 4172
              (jit->ip) ++;
#line 4172
              *tmp___72 = (unsigned char )((4 << 3) | 4);
#line 4172
              break;
            }
#line 4172
            while (1) {
#line 4172
              imb___3.val = - ((int )sizeof(void *));
#line 4172
              tmp___73 = jit->ip;
#line 4172
              (jit->ip) ++;
#line 4172
              *tmp___73 = imb___3.b[0];
#line 4172
              tmp___74 = jit->ip;
#line 4172
              (jit->ip) ++;
#line 4172
              *tmp___74 = imb___3.b[1];
#line 4172
              tmp___75 = jit->ip;
#line 4172
              (jit->ip) ++;
#line 4172
              *tmp___75 = imb___3.b[2];
#line 4172
              tmp___76 = jit->ip;
#line 4172
              (jit->ip) ++;
#line 4172
              *tmp___76 = imb___3.b[3];
#line 4172
              break;
            }
          }
#line 4172
          break;
#line 4172
          if (- ((int )sizeof(void *)) == 0) {
#line 4172
            while (1) {
#line 4172
              tmp___77 = jit->ip;
#line 4172
              (jit->ip) ++;
#line 4172
              *tmp___77 = (unsigned char )((((op->r_arg[0] & 7L) & 7L) << 3) | 4L);
#line 4172
              break;
            }
#line 4172
            break;
          }
#line 4172
          if ((jit_value )(- ((int )sizeof(void *))) >= -128L) {
#line 4172
            if ((jit_value )(- ((int )sizeof(void *))) <= 127L) {
#line 4172
              while (1) {
#line 4172
                tmp___78 = jit->ip;
#line 4172
                (jit->ip) ++;
#line 4172
                *tmp___78 = (unsigned char )(((long )(1 << 6) | (((op->r_arg[0] & 7L) & 7L) << 3)) | 4L);
#line 4172
                break;
              }
#line 4172
              while (1) {
#line 4172
                *(jit->ip) = (unsigned char )(- ((int )sizeof(void *)) & 0xff);
#line 4172
                (jit->ip) ++;
#line 4172
                break;
              }
            } else {
#line 4172
              goto _L___3;
            }
          } else {
            _L___3: /* CIL Label */ 
#line 4172
            while (1) {
#line 4172
              tmp___79 = jit->ip;
#line 4172
              (jit->ip) ++;
#line 4172
              *tmp___79 = (unsigned char )(((long )(2 << 6) | (((op->r_arg[0] & 7L) & 7L) << 3)) | 4L);
#line 4172
              break;
            }
#line 4172
            while (1) {
#line 4172
              imb___4.val = - ((int )sizeof(void *));
#line 4172
              tmp___80 = jit->ip;
#line 4172
              (jit->ip) ++;
#line 4172
              *tmp___80 = imb___4.b[0];
#line 4172
              tmp___81 = jit->ip;
#line 4172
              (jit->ip) ++;
#line 4172
              *tmp___81 = imb___4.b[1];
#line 4172
              tmp___82 = jit->ip;
#line 4172
              (jit->ip) ++;
#line 4172
              *tmp___82 = imb___4.b[2];
#line 4172
              tmp___83 = jit->ip;
#line 4172
              (jit->ip) ++;
#line 4172
              *tmp___83 = imb___4.b[3];
#line 4172
              break;
            }
          }
#line 4172
          break;
        }
#line 4172
        break;
      }
#line 4172
      break;
    }
  } else {
#line 4174
    while (1) {
#line 4174
      if ((int )sizeof(void *) == 2) {
#line 4174
        tmp___84 = jit->ip;
#line 4174
        (jit->ip) ++;
#line 4174
        *tmp___84 = (unsigned char)102;
      }
#line 4174
      while (1) {
#line 4174
        if ((int )sizeof(void *) > 4) {
#line 4174
          tmp___85 = 8;
        } else {
#line 4174
          tmp___85 = 0;
        }
#line 4174
        if (op->r_arg[0] > 7L) {
#line 4174
          tmp___86 = 4;
        } else {
#line 4174
          tmp___86 = 0;
        }
#line 4174
        if (op->r_arg[1] > 7L) {
#line 4174
          tmp___87 = 1;
        } else {
#line 4174
          tmp___87 = 0;
        }
#line 4174
        _amd64_rex_bits___7 = (unsigned char )((tmp___85 | tmp___86) | tmp___87);
#line 4174
        if ((int )_amd64_rex_bits___7 != 0) {
#line 4174
          tmp___88 = jit->ip;
#line 4174
          (jit->ip) ++;
#line 4174
          *tmp___88 = (unsigned char )(0x40 | (int )_amd64_rex_bits___7);
        } else
#line 4174
        if ((int )sizeof(void *) == 1) {
#line 4174
          tmp___88 = jit->ip;
#line 4174
          (jit->ip) ++;
#line 4174
          *tmp___88 = (unsigned char )(0x40 | (int )_amd64_rex_bits___7);
        }
#line 4174
        break;
      }
#line 4174
      switch ((int )sizeof(void *)) {
      case 1: 
#line 4174
      tmp___89 = jit->ip;
#line 4174
      (jit->ip) ++;
#line 4174
      *tmp___89 = (unsigned char)138;
#line 4174
      break;
      case 8: 
      case 4: 
      case 2: 
#line 4174
      tmp___90 = jit->ip;
#line 4174
      (jit->ip) ++;
#line 4174
      *tmp___90 = (unsigned char)139;
#line 4174
      break;
      default: 
#line 4174
      tmp___91 = __builtin_expect(1L, 0L);
#line 4174
      if (tmp___91) {
#line 4174
        __assert_rtn((char const   *)"emit_subx_op", (char const   *)"tmp/src.c",
                     3143, (char const   *)"0");
      }
      }
#line 4174
      while (1) {
#line 4174
        while (1) {
#line 4174
          tmp___92 = jit->ip;
#line 4174
          (jit->ip) ++;
#line 4174
          *tmp___92 = (unsigned char )(((long )(3 << 6) | ((op->r_arg[0] & 7L) << 3)) | (op->r_arg[1] & 7L));
#line 4174
          break;
        }
#line 4174
        break;
      }
#line 4174
      break;
    }
#line 4175
    while (1) {
#line 4175
      while (1) {
#line 4175
        if (op->r_arg[0] > 7L) {
#line 4175
          tmp___93 = 4;
        } else {
#line 4175
          tmp___93 = 0;
        }
#line 4175
        if (op->r_arg[2] > 7L) {
#line 4175
          tmp___94 = 1;
        } else {
#line 4175
          tmp___94 = 0;
        }
#line 4175
        _amd64_rex_bits___8 = (unsigned char )((8 | tmp___93) | tmp___94);
#line 4175
        if ((int )_amd64_rex_bits___8 != 0) {
#line 4175
          tmp___95 = jit->ip;
#line 4175
          (jit->ip) ++;
#line 4175
          *tmp___95 = (unsigned char )(0x40 | (int )_amd64_rex_bits___8);
        }
#line 4175
        break;
      }
#line 4175
      tmp___96 = jit->ip;
#line 4175
      (jit->ip) ++;
#line 4175
      *tmp___96 = (unsigned char )(((int )((unsigned char )x86_op) << 3) + 3);
#line 4175
      while (1) {
#line 4175
        while (1) {
#line 4175
          tmp___97 = jit->ip;
#line 4175
          (jit->ip) ++;
#line 4175
          *tmp___97 = (unsigned char )(((long )(3 << 6) | ((op->r_arg[0] & 7L) << 3)) | (op->r_arg[2] & 7L));
#line 4175
          break;
        }
#line 4175
        break;
      }
#line 4175
      break;
    }
  }
#line 4177
  return;
}
}
/* END FUNCTION-DEF emit_subx_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF join_addr_addi LOC=UNKNOWN */
static int join_addr_addi(jit_op *op , jit_op *nextop ) 
{ 
  unsigned long long tmp ;

  {
#line 3567
  if (nextop->arg[2] >= (-0x7FFFFFFF-1)) {
#line 3567
    if (! (nextop->arg[2] <= 2147483647L)) {
#line 3567
      return (0);
    }
  } else {
#line 3567
    return (0);
  }
#line 3568
  make_nop(op);
#line 3569
  nextop->code = (unsigned short)664;
#line 3570
  nextop->spec = (unsigned char )(((0x01 << 4) | (0x01 << 2)) | 0x03);
#line 3571
  nextop->arg[2] = nextop->arg[2];
#line 3572
  tmp = __builtin_object_size((void *)(& nextop->flt_imm), 0);
#line 3572
  __builtin___memcpy_chk((void *)(& nextop->flt_imm), (void const   *)(& nextop->arg[2]),
                         sizeof(jit_value ), tmp);
#line 3573
  nextop->arg[1] = op->arg[1];
#line 3574
  nextop->arg[2] = op->arg[2];
#line 3575
  return (1);
}
}
/* END FUNCTION-DEF join_addr_addi LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF rmap_sync LOC=UNKNOWN */
static void rmap_sync(jit_op *op , jit_rmap *current , jit_rmap *target , int mode ) 
{ 


  {
#line 3318
  rmap_sync_aux(current->map, target->map, op, mode);
#line 3319
  return;
}
}
/* END FUNCTION-DEF rmap_sync LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF funcall_fput_arg LOC=UNKNOWN */
__inline static void funcall_fput_arg(struct jit *jit , jit_op *op ) 
{ 
  int pos ;
  struct jit_out_arg *arg ;
  int tmp ;

  {
#line 2558
  pos = jit->prepared_args.ready;
#line 2559
  arg = jit->prepared_args.args + pos;
#line 2560
  arg->isreg = (char )(! ((int )op->code & 0x02));
#line 2561
  arg->isfp = (char)1;
#line 2562
  arg->isref = (char )((int )op->spec == ((0x02 << 2) | 0x02));
#line 2563
  arg->size = (char )op->arg_size;
#line 2564
  arg->isoptional = (char )jit->prepared_args.variadic;
#line 2565
  tmp = jit->prepared_args.fp_args;
#line 2565
  (jit->prepared_args.fp_args) ++;
#line 2565
  arg->argpos = tmp;
#line 2566
  if (arg->isref) {
#line 2566
    arg->value.label = (jit_label *)op->arg[1];
  } else
#line 2567
  if ((int )op->code & 0x02) {
#line 2567
    arg->value.fp = op->flt_imm;
  } else {
#line 2568
    arg->value.generic = op->arg[0];
  }
#line 2569
  (jit->prepared_args.ready) ++;
#line 2570
  if (jit->prepared_args.fp_args > (jit->reg_al)->fp_arg_reg_cnt) {
#line 2571
    jit->prepared_args.stack_size += (int )sizeof(void *);
  }
#line 2573
  return;
}
}
/* END FUNCTION-DEF funcall_fput_arg LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_tree_delete LOC=UNKNOWN */
__inline static jit_tree *jit_tree_delete(jit_tree *root , jit_tree_key key , int *found ) 
{ 


  {
#line 2203
  root = delete_node(root, key, found);
#line 2204
  if (root) {
#line 2204
    root->color = 0;
  }
#line 2205
  return (root);
}
}
/* END FUNCTION-DEF jit_tree_delete LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF emit_get_arg_from_stack LOC=UNKNOWN */
static void emit_get_arg_from_stack(struct jit *jit , int type , int size , int dreg ,
                                    int stack_reg , int stack_pos ) 
{ 
  unsigned char *tmp ;
  unsigned char _amd64_rex_bits ;
  int tmp___0 ;
  int tmp___1 ;
  int tmp___2 ;
  unsigned char *tmp___3 ;
  unsigned char *tmp___4 ;
  unsigned char *tmp___5 ;
  long tmp___6 ;
  unsigned char *tmp___7 ;
  x86_imm_buf imb ;
  unsigned char *tmp___8 ;
  unsigned char *tmp___9 ;
  unsigned char *tmp___10 ;
  unsigned char *tmp___11 ;
  unsigned char *tmp___12 ;
  unsigned char *tmp___13 ;
  unsigned char *tmp___14 ;
  unsigned char *tmp___15 ;
  unsigned char *tmp___16 ;
  unsigned char *tmp___17 ;
  x86_imm_buf imb___0 ;
  unsigned char *tmp___18 ;
  unsigned char *tmp___19 ;
  unsigned char *tmp___20 ;
  unsigned char *tmp___21 ;
  unsigned char *tmp___22 ;
  unsigned char *tmp___23 ;
  unsigned char *tmp___24 ;
  x86_imm_buf imb___1 ;
  unsigned char *tmp___25 ;
  unsigned char *tmp___26 ;
  unsigned char *tmp___27 ;
  unsigned char *tmp___28 ;
  unsigned char _amd64_rex_bits___0 ;
  int tmp___29 ;
  int tmp___30 ;
  unsigned char *tmp___31 ;
  unsigned char *tmp___32 ;
  unsigned char *tmp___33 ;
  unsigned char *tmp___34 ;
  unsigned char *tmp___35 ;
  unsigned char *tmp___36 ;
  unsigned char *tmp___37 ;
  unsigned char *tmp___38 ;
  x86_imm_buf imb___2 ;
  unsigned char *tmp___39 ;
  unsigned char *tmp___40 ;
  unsigned char *tmp___41 ;
  unsigned char *tmp___42 ;
  unsigned char *tmp___43 ;
  unsigned char *tmp___44 ;
  unsigned char *tmp___45 ;
  x86_imm_buf imb___3 ;
  unsigned char *tmp___46 ;
  unsigned char *tmp___47 ;
  unsigned char *tmp___48 ;
  unsigned char *tmp___49 ;
  unsigned char _amd64_rex_bits___1 ;
  int tmp___50 ;
  int tmp___51 ;
  unsigned char *tmp___52 ;
  unsigned char *tmp___53 ;
  unsigned char *tmp___54 ;
  unsigned char *tmp___55 ;
  long tmp___56 ;
  unsigned char *tmp___57 ;
  unsigned char *tmp___58 ;
  unsigned char *tmp___59 ;
  unsigned char *tmp___60 ;
  unsigned char *tmp___61 ;
  unsigned char *tmp___62 ;
  x86_imm_buf imb___4 ;
  unsigned char *tmp___63 ;
  unsigned char *tmp___64 ;
  unsigned char *tmp___65 ;
  unsigned char *tmp___66 ;
  unsigned char *tmp___67 ;
  unsigned char *tmp___68 ;
  unsigned char *tmp___69 ;
  x86_imm_buf imb___5 ;
  unsigned char *tmp___70 ;
  unsigned char *tmp___71 ;
  unsigned char *tmp___72 ;
  unsigned char *tmp___73 ;
  unsigned char *tmp___74 ;
  unsigned char _amd64_rex_bits___2 ;
  int tmp___75 ;
  int tmp___76 ;
  int tmp___77 ;
  unsigned char *tmp___78 ;
  unsigned char *tmp___79 ;
  unsigned char *tmp___80 ;
  long tmp___81 ;
  unsigned char *tmp___82 ;
  x86_imm_buf imb___6 ;
  unsigned char *tmp___83 ;
  unsigned char *tmp___84 ;
  unsigned char *tmp___85 ;
  unsigned char *tmp___86 ;
  unsigned char *tmp___87 ;
  unsigned char *tmp___88 ;
  unsigned char *tmp___89 ;
  unsigned char *tmp___90 ;
  unsigned char *tmp___91 ;
  unsigned char *tmp___92 ;
  x86_imm_buf imb___7 ;
  unsigned char *tmp___93 ;
  unsigned char *tmp___94 ;
  unsigned char *tmp___95 ;
  unsigned char *tmp___96 ;
  unsigned char *tmp___97 ;
  unsigned char *tmp___98 ;
  unsigned char *tmp___99 ;
  x86_imm_buf imb___8 ;
  unsigned char *tmp___100 ;
  unsigned char *tmp___101 ;
  unsigned char *tmp___102 ;
  unsigned char *tmp___103 ;
  unsigned char _amd64_rex_bits___3 ;
  int tmp___104 ;
  int tmp___105 ;
  unsigned char *tmp___106 ;
  unsigned char *tmp___107 ;
  unsigned char *tmp___108 ;
  unsigned char *tmp___109 ;
  long tmp___110 ;
  unsigned char *tmp___111 ;
  unsigned char *tmp___112 ;
  unsigned char *tmp___113 ;
  unsigned char *tmp___114 ;
  unsigned char *tmp___115 ;
  unsigned char *tmp___116 ;
  x86_imm_buf imb___9 ;
  unsigned char *tmp___117 ;
  unsigned char *tmp___118 ;
  unsigned char *tmp___119 ;
  unsigned char *tmp___120 ;
  unsigned char *tmp___121 ;
  unsigned char *tmp___122 ;
  unsigned char *tmp___123 ;
  x86_imm_buf imb___10 ;
  unsigned char *tmp___124 ;
  unsigned char *tmp___125 ;
  unsigned char *tmp___126 ;
  unsigned char *tmp___127 ;
  unsigned char *tmp___128 ;
  unsigned char _amd64_rex_bits___4 ;
  int tmp___129 ;
  int tmp___130 ;
  unsigned char *tmp___131 ;
  unsigned char *tmp___132 ;
  unsigned char *tmp___133 ;
  unsigned char *tmp___134 ;
  x86_imm_buf imb___11 ;
  unsigned char *tmp___135 ;
  unsigned char *tmp___136 ;
  unsigned char *tmp___137 ;
  unsigned char *tmp___138 ;
  unsigned char *tmp___139 ;
  unsigned char *tmp___140 ;
  unsigned char *tmp___141 ;
  unsigned char *tmp___142 ;
  unsigned char *tmp___143 ;
  unsigned char *tmp___144 ;
  x86_imm_buf imb___12 ;
  unsigned char *tmp___145 ;
  unsigned char *tmp___146 ;
  unsigned char *tmp___147 ;
  unsigned char *tmp___148 ;
  unsigned char *tmp___149 ;
  unsigned char *tmp___150 ;
  unsigned char *tmp___151 ;
  x86_imm_buf imb___13 ;
  unsigned char *tmp___152 ;
  unsigned char *tmp___153 ;
  unsigned char *tmp___154 ;
  unsigned char *tmp___155 ;

  {
#line 4079
  if (type != 2) {
#line 4080
    if (size == (int )sizeof(void *)) {
#line 4080
      while (1) {
#line 4080
        if ((int )sizeof(void *) == 2) {
#line 4080
          tmp = jit->ip;
#line 4080
          (jit->ip) ++;
#line 4080
          *tmp = (unsigned char)102;
        }
#line 4080
        while (1) {
#line 4080
          if ((int )sizeof(void *) > 4) {
#line 4080
            tmp___0 = 8;
          } else {
#line 4080
            tmp___0 = 0;
          }
#line 4080
          if (dreg > 7) {
#line 4080
            tmp___1 = 4;
          } else {
#line 4080
            tmp___1 = 0;
          }
#line 4080
          if (stack_reg > 7) {
#line 4080
            tmp___2 = 1;
          } else {
#line 4080
            tmp___2 = 0;
          }
#line 4080
          _amd64_rex_bits = (unsigned char )((tmp___0 | tmp___1) | tmp___2);
#line 4080
          if ((int )_amd64_rex_bits != 0) {
#line 4080
            tmp___3 = jit->ip;
#line 4080
            (jit->ip) ++;
#line 4080
            *tmp___3 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
          } else
#line 4080
          if ((int )sizeof(void *) == 1) {
#line 4080
            tmp___3 = jit->ip;
#line 4080
            (jit->ip) ++;
#line 4080
            *tmp___3 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
          }
#line 4080
          break;
        }
#line 4080
        switch ((int )sizeof(void *)) {
        case 1: 
#line 4080
        tmp___4 = jit->ip;
#line 4080
        (jit->ip) ++;
#line 4080
        *tmp___4 = (unsigned char)138;
#line 4080
        break;
        case 8: 
        case 4: 
        case 2: 
#line 4080
        tmp___5 = jit->ip;
#line 4080
        (jit->ip) ++;
#line 4080
        *tmp___5 = (unsigned char)139;
#line 4080
        break;
        default: 
#line 4080
        tmp___6 = __builtin_expect(1L, 0L);
#line 4080
        if (tmp___6) {
#line 4080
          __assert_rtn((char const   *)"emit_get_arg_from_stack", (char const   *)"tmp/src.c",
                       3025, (char const   *)"0");
        }
        }
#line 4080
        while (1) {
#line 4080
          if (stack_reg == 16) {
#line 4080
            while (1) {
#line 4080
              tmp___7 = jit->ip;
#line 4080
              (jit->ip) ++;
#line 4080
              *tmp___7 = (unsigned char )((((dreg & 0x7) & 0x07) << 3) | 5);
#line 4080
              break;
            }
#line 4080
            while (1) {
#line 4080
              imb.val = stack_pos;
#line 4080
              tmp___8 = jit->ip;
#line 4080
              (jit->ip) ++;
#line 4080
              *tmp___8 = imb.b[0];
#line 4080
              tmp___9 = jit->ip;
#line 4080
              (jit->ip) ++;
#line 4080
              *tmp___9 = imb.b[1];
#line 4080
              tmp___10 = jit->ip;
#line 4080
              (jit->ip) ++;
#line 4080
              *tmp___10 = imb.b[2];
#line 4080
              tmp___11 = jit->ip;
#line 4080
              (jit->ip) ++;
#line 4080
              *tmp___11 = imb.b[3];
#line 4080
              break;
            }
          } else {
#line 4080
            while (1) {
#line 4080
              if ((stack_reg & 0x7) == 4) {
#line 4080
                if (stack_pos == 0) {
#line 4080
                  while (1) {
#line 4080
                    tmp___12 = jit->ip;
#line 4080
                    (jit->ip) ++;
#line 4080
                    *tmp___12 = (unsigned char )((((dreg & 0x7) & 0x07) << 3) | 4);
#line 4080
                    break;
                  }
#line 4080
                  while (1) {
#line 4080
                    tmp___13 = jit->ip;
#line 4080
                    (jit->ip) ++;
#line 4080
                    *tmp___13 = (unsigned char )((4 << 3) | 4);
#line 4080
                    break;
                  }
                } else
#line 4080
                if ((jit_value )stack_pos >= -128L) {
#line 4080
                  if ((jit_value )stack_pos <= 127L) {
#line 4080
                    while (1) {
#line 4080
                      tmp___14 = jit->ip;
#line 4080
                      (jit->ip) ++;
#line 4080
                      *tmp___14 = (unsigned char )(((1 << 6) | (((dreg & 0x7) & 0x07) << 3)) | 4);
#line 4080
                      break;
                    }
#line 4080
                    while (1) {
#line 4080
                      tmp___15 = jit->ip;
#line 4080
                      (jit->ip) ++;
#line 4080
                      *tmp___15 = (unsigned char )((4 << 3) | 4);
#line 4080
                      break;
                    }
#line 4080
                    while (1) {
#line 4080
                      *(jit->ip) = (unsigned char )(stack_pos & 0xff);
#line 4080
                      (jit->ip) ++;
#line 4080
                      break;
                    }
                  } else {
#line 4080
                    goto _L;
                  }
                } else {
                  _L: /* CIL Label */ 
#line 4080
                  while (1) {
#line 4080
                    tmp___16 = jit->ip;
#line 4080
                    (jit->ip) ++;
#line 4080
                    *tmp___16 = (unsigned char )(((2 << 6) | (((dreg & 0x7) & 0x07) << 3)) | 4);
#line 4080
                    break;
                  }
#line 4080
                  while (1) {
#line 4080
                    tmp___17 = jit->ip;
#line 4080
                    (jit->ip) ++;
#line 4080
                    *tmp___17 = (unsigned char )((4 << 3) | 4);
#line 4080
                    break;
                  }
#line 4080
                  while (1) {
#line 4080
                    imb___0.val = stack_pos;
#line 4080
                    tmp___18 = jit->ip;
#line 4080
                    (jit->ip) ++;
#line 4080
                    *tmp___18 = imb___0.b[0];
#line 4080
                    tmp___19 = jit->ip;
#line 4080
                    (jit->ip) ++;
#line 4080
                    *tmp___19 = imb___0.b[1];
#line 4080
                    tmp___20 = jit->ip;
#line 4080
                    (jit->ip) ++;
#line 4080
                    *tmp___20 = imb___0.b[2];
#line 4080
                    tmp___21 = jit->ip;
#line 4080
                    (jit->ip) ++;
#line 4080
                    *tmp___21 = imb___0.b[3];
#line 4080
                    break;
                  }
                }
#line 4080
                break;
              }
#line 4080
              if (stack_pos == 0) {
#line 4080
                if ((stack_reg & 0x7) != 5) {
#line 4080
                  while (1) {
#line 4080
                    tmp___22 = jit->ip;
#line 4080
                    (jit->ip) ++;
#line 4080
                    *tmp___22 = (unsigned char )((((dreg & 0x7) & 0x07) << 3) | ((stack_reg & 0x7) & 0x07));
#line 4080
                    break;
                  }
#line 4080
                  break;
                }
              }
#line 4080
              if ((jit_value )stack_pos >= -128L) {
#line 4080
                if ((jit_value )stack_pos <= 127L) {
#line 4080
                  while (1) {
#line 4080
                    tmp___23 = jit->ip;
#line 4080
                    (jit->ip) ++;
#line 4080
                    *tmp___23 = (unsigned char )(((1 << 6) | (((dreg & 0x7) & 0x07) << 3)) | ((stack_reg & 0x7) & 0x07));
#line 4080
                    break;
                  }
#line 4080
                  while (1) {
#line 4080
                    *(jit->ip) = (unsigned char )(stack_pos & 0xff);
#line 4080
                    (jit->ip) ++;
#line 4080
                    break;
                  }
                } else {
#line 4080
                  goto _L___0;
                }
              } else {
                _L___0: /* CIL Label */ 
#line 4080
                while (1) {
#line 4080
                  tmp___24 = jit->ip;
#line 4080
                  (jit->ip) ++;
#line 4080
                  *tmp___24 = (unsigned char )(((2 << 6) | (((dreg & 0x7) & 0x07) << 3)) | ((stack_reg & 0x7) & 0x07));
#line 4080
                  break;
                }
#line 4080
                while (1) {
#line 4080
                  imb___1.val = stack_pos;
#line 4080
                  tmp___25 = jit->ip;
#line 4080
                  (jit->ip) ++;
#line 4080
                  *tmp___25 = imb___1.b[0];
#line 4080
                  tmp___26 = jit->ip;
#line 4080
                  (jit->ip) ++;
#line 4080
                  *tmp___26 = imb___1.b[1];
#line 4080
                  tmp___27 = jit->ip;
#line 4080
                  (jit->ip) ++;
#line 4080
                  *tmp___27 = imb___1.b[2];
#line 4080
                  tmp___28 = jit->ip;
#line 4080
                  (jit->ip) ++;
#line 4080
                  *tmp___28 = imb___1.b[3];
#line 4080
                  break;
                }
              }
#line 4080
              break;
            }
          }
#line 4080
          break;
        }
#line 4080
        break;
      }
    } else
#line 4081
    if (type == 0) {
#line 4082
      while (1) {
#line 4082
        if (size == 4) {
#line 4082
          while (1) {
#line 4082
            while (1) {
#line 4082
              if (dreg > 7) {
#line 4082
                tmp___29 = 4;
              } else {
#line 4082
                tmp___29 = 0;
              }
#line 4082
              if (stack_reg > 7) {
#line 4082
                tmp___30 = 1;
              } else {
#line 4082
                tmp___30 = 0;
              }
#line 4082
              _amd64_rex_bits___0 = (unsigned char )((8 | tmp___29) | tmp___30);
#line 4082
              if ((int )_amd64_rex_bits___0 != 0) {
#line 4082
                tmp___31 = jit->ip;
#line 4082
                (jit->ip) ++;
#line 4082
                *tmp___31 = (unsigned char )(0x40 | (int )_amd64_rex_bits___0);
              }
#line 4082
              break;
            }
#line 4082
            tmp___32 = jit->ip;
#line 4082
            (jit->ip) ++;
#line 4082
            *tmp___32 = (unsigned char)99;
#line 4082
            while (1) {
#line 4082
              if ((stack_reg & 0x7) == 4) {
#line 4082
                if (stack_pos == 0) {
#line 4082
                  while (1) {
#line 4082
                    tmp___33 = jit->ip;
#line 4082
                    (jit->ip) ++;
#line 4082
                    *tmp___33 = (unsigned char )((((dreg & 0x7) & 0x07) << 3) | 4);
#line 4082
                    break;
                  }
#line 4082
                  while (1) {
#line 4082
                    tmp___34 = jit->ip;
#line 4082
                    (jit->ip) ++;
#line 4082
                    *tmp___34 = (unsigned char )((4 << 3) | 4);
#line 4082
                    break;
                  }
                } else
#line 4082
                if ((jit_value )stack_pos >= -128L) {
#line 4082
                  if ((jit_value )stack_pos <= 127L) {
#line 4082
                    while (1) {
#line 4082
                      tmp___35 = jit->ip;
#line 4082
                      (jit->ip) ++;
#line 4082
                      *tmp___35 = (unsigned char )(((1 << 6) | (((dreg & 0x7) & 0x07) << 3)) | 4);
#line 4082
                      break;
                    }
#line 4082
                    while (1) {
#line 4082
                      tmp___36 = jit->ip;
#line 4082
                      (jit->ip) ++;
#line 4082
                      *tmp___36 = (unsigned char )((4 << 3) | 4);
#line 4082
                      break;
                    }
#line 4082
                    while (1) {
#line 4082
                      *(jit->ip) = (unsigned char )(stack_pos & 0xff);
#line 4082
                      (jit->ip) ++;
#line 4082
                      break;
                    }
                  } else {
#line 4082
                    goto _L___1;
                  }
                } else {
                  _L___1: /* CIL Label */ 
#line 4082
                  while (1) {
#line 4082
                    tmp___37 = jit->ip;
#line 4082
                    (jit->ip) ++;
#line 4082
                    *tmp___37 = (unsigned char )(((2 << 6) | (((dreg & 0x7) & 0x07) << 3)) | 4);
#line 4082
                    break;
                  }
#line 4082
                  while (1) {
#line 4082
                    tmp___38 = jit->ip;
#line 4082
                    (jit->ip) ++;
#line 4082
                    *tmp___38 = (unsigned char )((4 << 3) | 4);
#line 4082
                    break;
                  }
#line 4082
                  while (1) {
#line 4082
                    imb___2.val = stack_pos;
#line 4082
                    tmp___39 = jit->ip;
#line 4082
                    (jit->ip) ++;
#line 4082
                    *tmp___39 = imb___2.b[0];
#line 4082
                    tmp___40 = jit->ip;
#line 4082
                    (jit->ip) ++;
#line 4082
                    *tmp___40 = imb___2.b[1];
#line 4082
                    tmp___41 = jit->ip;
#line 4082
                    (jit->ip) ++;
#line 4082
                    *tmp___41 = imb___2.b[2];
#line 4082
                    tmp___42 = jit->ip;
#line 4082
                    (jit->ip) ++;
#line 4082
                    *tmp___42 = imb___2.b[3];
#line 4082
                    break;
                  }
                }
#line 4082
                break;
              }
#line 4082
              if (stack_pos == 0) {
#line 4082
                if ((stack_reg & 0x7) != 5) {
#line 4082
                  while (1) {
#line 4082
                    tmp___43 = jit->ip;
#line 4082
                    (jit->ip) ++;
#line 4082
                    *tmp___43 = (unsigned char )((((dreg & 0x7) & 0x07) << 3) | ((stack_reg & 0x7) & 0x07));
#line 4082
                    break;
                  }
#line 4082
                  break;
                }
              }
#line 4082
              if ((jit_value )stack_pos >= -128L) {
#line 4082
                if ((jit_value )stack_pos <= 127L) {
#line 4082
                  while (1) {
#line 4082
                    tmp___44 = jit->ip;
#line 4082
                    (jit->ip) ++;
#line 4082
                    *tmp___44 = (unsigned char )(((1 << 6) | (((dreg & 0x7) & 0x07) << 3)) | ((stack_reg & 0x7) & 0x07));
#line 4082
                    break;
                  }
#line 4082
                  while (1) {
#line 4082
                    *(jit->ip) = (unsigned char )(stack_pos & 0xff);
#line 4082
                    (jit->ip) ++;
#line 4082
                    break;
                  }
                } else {
#line 4082
                  goto _L___2;
                }
              } else {
                _L___2: /* CIL Label */ 
#line 4082
                while (1) {
#line 4082
                  tmp___45 = jit->ip;
#line 4082
                  (jit->ip) ++;
#line 4082
                  *tmp___45 = (unsigned char )(((2 << 6) | (((dreg & 0x7) & 0x07) << 3)) | ((stack_reg & 0x7) & 0x07));
#line 4082
                  break;
                }
#line 4082
                while (1) {
#line 4082
                  imb___3.val = stack_pos;
#line 4082
                  tmp___46 = jit->ip;
#line 4082
                  (jit->ip) ++;
#line 4082
                  *tmp___46 = imb___3.b[0];
#line 4082
                  tmp___47 = jit->ip;
#line 4082
                  (jit->ip) ++;
#line 4082
                  *tmp___47 = imb___3.b[1];
#line 4082
                  tmp___48 = jit->ip;
#line 4082
                  (jit->ip) ++;
#line 4082
                  *tmp___48 = imb___3.b[2];
#line 4082
                  tmp___49 = jit->ip;
#line 4082
                  (jit->ip) ++;
#line 4082
                  *tmp___49 = imb___3.b[3];
#line 4082
                  break;
                }
              }
#line 4082
              break;
            }
#line 4082
            break;
          }
#line 4082
          break;
        }
#line 4082
        while (1) {
#line 4082
          if (dreg > 7) {
#line 4082
            tmp___50 = 4;
          } else {
#line 4082
            tmp___50 = 0;
          }
#line 4082
          if (stack_reg > 7) {
#line 4082
            tmp___51 = 1;
          } else {
#line 4082
            tmp___51 = 0;
          }
#line 4082
          _amd64_rex_bits___1 = (unsigned char )((8 | tmp___50) | tmp___51);
#line 4082
          if ((int )_amd64_rex_bits___1 != 0) {
#line 4082
            tmp___52 = jit->ip;
#line 4082
            (jit->ip) ++;
#line 4082
            *tmp___52 = (unsigned char )(0x40 | (int )_amd64_rex_bits___1);
          }
#line 4082
          break;
        }
#line 4082
        tmp___53 = jit->ip;
#line 4082
        (jit->ip) ++;
#line 4082
        *tmp___53 = (unsigned char)15;
#line 4082
        switch (size) {
        case 1: 
#line 4082
        tmp___54 = jit->ip;
#line 4082
        (jit->ip) ++;
#line 4082
        *tmp___54 = (unsigned char)190;
#line 4082
        break;
        case 2: 
#line 4082
        tmp___55 = jit->ip;
#line 4082
        (jit->ip) ++;
#line 4082
        *tmp___55 = (unsigned char)191;
#line 4082
        break;
        default: 
#line 4082
        tmp___56 = __builtin_expect(1L, 0L);
#line 4082
        if (tmp___56) {
#line 4082
          __assert_rtn((char const   *)"emit_get_arg_from_stack", (char const   *)"tmp/src.c",
                       3027, (char const   *)"0");
        }
        }
#line 4082
        while (1) {
#line 4082
          if ((stack_reg & 0x7) == 4) {
#line 4082
            if (stack_pos == 0) {
#line 4082
              while (1) {
#line 4082
                tmp___57 = jit->ip;
#line 4082
                (jit->ip) ++;
#line 4082
                *tmp___57 = (unsigned char )((((dreg & 0x7) & 0x07) << 3) | 4);
#line 4082
                break;
              }
#line 4082
              while (1) {
#line 4082
                tmp___58 = jit->ip;
#line 4082
                (jit->ip) ++;
#line 4082
                *tmp___58 = (unsigned char )((4 << 3) | 4);
#line 4082
                break;
              }
            } else
#line 4082
            if ((jit_value )stack_pos >= -128L) {
#line 4082
              if ((jit_value )stack_pos <= 127L) {
#line 4082
                while (1) {
#line 4082
                  tmp___59 = jit->ip;
#line 4082
                  (jit->ip) ++;
#line 4082
                  *tmp___59 = (unsigned char )(((1 << 6) | (((dreg & 0x7) & 0x07) << 3)) | 4);
#line 4082
                  break;
                }
#line 4082
                while (1) {
#line 4082
                  tmp___60 = jit->ip;
#line 4082
                  (jit->ip) ++;
#line 4082
                  *tmp___60 = (unsigned char )((4 << 3) | 4);
#line 4082
                  break;
                }
#line 4082
                while (1) {
#line 4082
                  *(jit->ip) = (unsigned char )(stack_pos & 0xff);
#line 4082
                  (jit->ip) ++;
#line 4082
                  break;
                }
              } else {
#line 4082
                goto _L___3;
              }
            } else {
              _L___3: /* CIL Label */ 
#line 4082
              while (1) {
#line 4082
                tmp___61 = jit->ip;
#line 4082
                (jit->ip) ++;
#line 4082
                *tmp___61 = (unsigned char )(((2 << 6) | (((dreg & 0x7) & 0x07) << 3)) | 4);
#line 4082
                break;
              }
#line 4082
              while (1) {
#line 4082
                tmp___62 = jit->ip;
#line 4082
                (jit->ip) ++;
#line 4082
                *tmp___62 = (unsigned char )((4 << 3) | 4);
#line 4082
                break;
              }
#line 4082
              while (1) {
#line 4082
                imb___4.val = stack_pos;
#line 4082
                tmp___63 = jit->ip;
#line 4082
                (jit->ip) ++;
#line 4082
                *tmp___63 = imb___4.b[0];
#line 4082
                tmp___64 = jit->ip;
#line 4082
                (jit->ip) ++;
#line 4082
                *tmp___64 = imb___4.b[1];
#line 4082
                tmp___65 = jit->ip;
#line 4082
                (jit->ip) ++;
#line 4082
                *tmp___65 = imb___4.b[2];
#line 4082
                tmp___66 = jit->ip;
#line 4082
                (jit->ip) ++;
#line 4082
                *tmp___66 = imb___4.b[3];
#line 4082
                break;
              }
            }
#line 4082
            break;
          }
#line 4082
          if (stack_pos == 0) {
#line 4082
            if ((stack_reg & 0x7) != 5) {
#line 4082
              while (1) {
#line 4082
                tmp___67 = jit->ip;
#line 4082
                (jit->ip) ++;
#line 4082
                *tmp___67 = (unsigned char )((((dreg & 0x7) & 0x07) << 3) | ((stack_reg & 0x7) & 0x07));
#line 4082
                break;
              }
#line 4082
              break;
            }
          }
#line 4082
          if ((jit_value )stack_pos >= -128L) {
#line 4082
            if ((jit_value )stack_pos <= 127L) {
#line 4082
              while (1) {
#line 4082
                tmp___68 = jit->ip;
#line 4082
                (jit->ip) ++;
#line 4082
                *tmp___68 = (unsigned char )(((1 << 6) | (((dreg & 0x7) & 0x07) << 3)) | ((stack_reg & 0x7) & 0x07));
#line 4082
                break;
              }
#line 4082
              while (1) {
#line 4082
                *(jit->ip) = (unsigned char )(stack_pos & 0xff);
#line 4082
                (jit->ip) ++;
#line 4082
                break;
              }
            } else {
#line 4082
              goto _L___4;
            }
          } else {
            _L___4: /* CIL Label */ 
#line 4082
            while (1) {
#line 4082
              tmp___69 = jit->ip;
#line 4082
              (jit->ip) ++;
#line 4082
              *tmp___69 = (unsigned char )(((2 << 6) | (((dreg & 0x7) & 0x07) << 3)) | ((stack_reg & 0x7) & 0x07));
#line 4082
              break;
            }
#line 4082
            while (1) {
#line 4082
              imb___5.val = stack_pos;
#line 4082
              tmp___70 = jit->ip;
#line 4082
              (jit->ip) ++;
#line 4082
              *tmp___70 = imb___5.b[0];
#line 4082
              tmp___71 = jit->ip;
#line 4082
              (jit->ip) ++;
#line 4082
              *tmp___71 = imb___5.b[1];
#line 4082
              tmp___72 = jit->ip;
#line 4082
              (jit->ip) ++;
#line 4082
              *tmp___72 = imb___5.b[2];
#line 4082
              tmp___73 = jit->ip;
#line 4082
              (jit->ip) ++;
#line 4082
              *tmp___73 = imb___5.b[3];
#line 4082
              break;
            }
          }
#line 4082
          break;
        }
#line 4082
        break;
      }
    } else {
#line 4083
      while (1) {
#line 4083
        if (size == 8) {
#line 4083
          goto _L___7;
        } else
#line 4083
        if (size == 4) {
          _L___7: /* CIL Label */ 
#line 4083
          while (1) {
#line 4083
            if (size == 2) {
#line 4083
              tmp___74 = jit->ip;
#line 4083
              (jit->ip) ++;
#line 4083
              *tmp___74 = (unsigned char)102;
            }
#line 4083
            while (1) {
#line 4083
              if (size > 4) {
#line 4083
                tmp___75 = 8;
              } else {
#line 4083
                tmp___75 = 0;
              }
#line 4083
              if (dreg > 7) {
#line 4083
                tmp___76 = 4;
              } else {
#line 4083
                tmp___76 = 0;
              }
#line 4083
              if (stack_reg > 7) {
#line 4083
                tmp___77 = 1;
              } else {
#line 4083
                tmp___77 = 0;
              }
#line 4083
              _amd64_rex_bits___2 = (unsigned char )((tmp___75 | tmp___76) | tmp___77);
#line 4083
              if ((int )_amd64_rex_bits___2 != 0) {
#line 4083
                tmp___78 = jit->ip;
#line 4083
                (jit->ip) ++;
#line 4083
                *tmp___78 = (unsigned char )(0x40 | (int )_amd64_rex_bits___2);
              } else
#line 4083
              if (size == 1) {
#line 4083
                tmp___78 = jit->ip;
#line 4083
                (jit->ip) ++;
#line 4083
                *tmp___78 = (unsigned char )(0x40 | (int )_amd64_rex_bits___2);
              }
#line 4083
              break;
            }
#line 4083
            switch (size) {
            case 1: 
#line 4083
            tmp___79 = jit->ip;
#line 4083
            (jit->ip) ++;
#line 4083
            *tmp___79 = (unsigned char)138;
#line 4083
            break;
            case 8: 
            case 4: 
            case 2: 
#line 4083
            tmp___80 = jit->ip;
#line 4083
            (jit->ip) ++;
#line 4083
            *tmp___80 = (unsigned char)139;
#line 4083
            break;
            default: 
#line 4083
            tmp___81 = __builtin_expect(1L, 0L);
#line 4083
            if (tmp___81) {
#line 4083
              __assert_rtn((char const   *)"emit_get_arg_from_stack", (char const   *)"tmp/src.c",
                           3028, (char const   *)"0");
            }
            }
#line 4083
            while (1) {
#line 4083
              if (stack_reg == 16) {
#line 4083
                while (1) {
#line 4083
                  tmp___82 = jit->ip;
#line 4083
                  (jit->ip) ++;
#line 4083
                  *tmp___82 = (unsigned char )((((dreg & 0x7) & 0x07) << 3) | 5);
#line 4083
                  break;
                }
#line 4083
                while (1) {
#line 4083
                  imb___6.val = stack_pos;
#line 4083
                  tmp___83 = jit->ip;
#line 4083
                  (jit->ip) ++;
#line 4083
                  *tmp___83 = imb___6.b[0];
#line 4083
                  tmp___84 = jit->ip;
#line 4083
                  (jit->ip) ++;
#line 4083
                  *tmp___84 = imb___6.b[1];
#line 4083
                  tmp___85 = jit->ip;
#line 4083
                  (jit->ip) ++;
#line 4083
                  *tmp___85 = imb___6.b[2];
#line 4083
                  tmp___86 = jit->ip;
#line 4083
                  (jit->ip) ++;
#line 4083
                  *tmp___86 = imb___6.b[3];
#line 4083
                  break;
                }
              } else {
#line 4083
                while (1) {
#line 4083
                  if ((stack_reg & 0x7) == 4) {
#line 4083
                    if (stack_pos == 0) {
#line 4083
                      while (1) {
#line 4083
                        tmp___87 = jit->ip;
#line 4083
                        (jit->ip) ++;
#line 4083
                        *tmp___87 = (unsigned char )((((dreg & 0x7) & 0x07) << 3) | 4);
#line 4083
                        break;
                      }
#line 4083
                      while (1) {
#line 4083
                        tmp___88 = jit->ip;
#line 4083
                        (jit->ip) ++;
#line 4083
                        *tmp___88 = (unsigned char )((4 << 3) | 4);
#line 4083
                        break;
                      }
                    } else
#line 4083
                    if ((jit_value )stack_pos >= -128L) {
#line 4083
                      if ((jit_value )stack_pos <= 127L) {
#line 4083
                        while (1) {
#line 4083
                          tmp___89 = jit->ip;
#line 4083
                          (jit->ip) ++;
#line 4083
                          *tmp___89 = (unsigned char )(((1 << 6) | (((dreg & 0x7) & 0x07) << 3)) | 4);
#line 4083
                          break;
                        }
#line 4083
                        while (1) {
#line 4083
                          tmp___90 = jit->ip;
#line 4083
                          (jit->ip) ++;
#line 4083
                          *tmp___90 = (unsigned char )((4 << 3) | 4);
#line 4083
                          break;
                        }
#line 4083
                        while (1) {
#line 4083
                          *(jit->ip) = (unsigned char )(stack_pos & 0xff);
#line 4083
                          (jit->ip) ++;
#line 4083
                          break;
                        }
                      } else {
#line 4083
                        goto _L___5;
                      }
                    } else {
                      _L___5: /* CIL Label */ 
#line 4083
                      while (1) {
#line 4083
                        tmp___91 = jit->ip;
#line 4083
                        (jit->ip) ++;
#line 4083
                        *tmp___91 = (unsigned char )(((2 << 6) | (((dreg & 0x7) & 0x07) << 3)) | 4);
#line 4083
                        break;
                      }
#line 4083
                      while (1) {
#line 4083
                        tmp___92 = jit->ip;
#line 4083
                        (jit->ip) ++;
#line 4083
                        *tmp___92 = (unsigned char )((4 << 3) | 4);
#line 4083
                        break;
                      }
#line 4083
                      while (1) {
#line 4083
                        imb___7.val = stack_pos;
#line 4083
                        tmp___93 = jit->ip;
#line 4083
                        (jit->ip) ++;
#line 4083
                        *tmp___93 = imb___7.b[0];
#line 4083
                        tmp___94 = jit->ip;
#line 4083
                        (jit->ip) ++;
#line 4083
                        *tmp___94 = imb___7.b[1];
#line 4083
                        tmp___95 = jit->ip;
#line 4083
                        (jit->ip) ++;
#line 4083
                        *tmp___95 = imb___7.b[2];
#line 4083
                        tmp___96 = jit->ip;
#line 4083
                        (jit->ip) ++;
#line 4083
                        *tmp___96 = imb___7.b[3];
#line 4083
                        break;
                      }
                    }
#line 4083
                    break;
                  }
#line 4083
                  if (stack_pos == 0) {
#line 4083
                    if ((stack_reg & 0x7) != 5) {
#line 4083
                      while (1) {
#line 4083
                        tmp___97 = jit->ip;
#line 4083
                        (jit->ip) ++;
#line 4083
                        *tmp___97 = (unsigned char )((((dreg & 0x7) & 0x07) << 3) | ((stack_reg & 0x7) & 0x07));
#line 4083
                        break;
                      }
#line 4083
                      break;
                    }
                  }
#line 4083
                  if ((jit_value )stack_pos >= -128L) {
#line 4083
                    if ((jit_value )stack_pos <= 127L) {
#line 4083
                      while (1) {
#line 4083
                        tmp___98 = jit->ip;
#line 4083
                        (jit->ip) ++;
#line 4083
                        *tmp___98 = (unsigned char )(((1 << 6) | (((dreg & 0x7) & 0x07) << 3)) | ((stack_reg & 0x7) & 0x07));
#line 4083
                        break;
                      }
#line 4083
                      while (1) {
#line 4083
                        *(jit->ip) = (unsigned char )(stack_pos & 0xff);
#line 4083
                        (jit->ip) ++;
#line 4083
                        break;
                      }
                    } else {
#line 4083
                      goto _L___6;
                    }
                  } else {
                    _L___6: /* CIL Label */ 
#line 4083
                    while (1) {
#line 4083
                      tmp___99 = jit->ip;
#line 4083
                      (jit->ip) ++;
#line 4083
                      *tmp___99 = (unsigned char )(((2 << 6) | (((dreg & 0x7) & 0x07) << 3)) | ((stack_reg & 0x7) & 0x07));
#line 4083
                      break;
                    }
#line 4083
                    while (1) {
#line 4083
                      imb___8.val = stack_pos;
#line 4083
                      tmp___100 = jit->ip;
#line 4083
                      (jit->ip) ++;
#line 4083
                      *tmp___100 = imb___8.b[0];
#line 4083
                      tmp___101 = jit->ip;
#line 4083
                      (jit->ip) ++;
#line 4083
                      *tmp___101 = imb___8.b[1];
#line 4083
                      tmp___102 = jit->ip;
#line 4083
                      (jit->ip) ++;
#line 4083
                      *tmp___102 = imb___8.b[2];
#line 4083
                      tmp___103 = jit->ip;
#line 4083
                      (jit->ip) ++;
#line 4083
                      *tmp___103 = imb___8.b[3];
#line 4083
                      break;
                    }
                  }
#line 4083
                  break;
                }
              }
#line 4083
              break;
            }
#line 4083
            break;
          }
#line 4083
          break;
        }
#line 4083
        while (1) {
#line 4083
          if (dreg > 7) {
#line 4083
            tmp___104 = 4;
          } else {
#line 4083
            tmp___104 = 0;
          }
#line 4083
          if (stack_reg > 7) {
#line 4083
            tmp___105 = 1;
          } else {
#line 4083
            tmp___105 = 0;
          }
#line 4083
          _amd64_rex_bits___3 = (unsigned char )((8 | tmp___104) | tmp___105);
#line 4083
          if ((int )_amd64_rex_bits___3 != 0) {
#line 4083
            tmp___106 = jit->ip;
#line 4083
            (jit->ip) ++;
#line 4083
            *tmp___106 = (unsigned char )(0x40 | (int )_amd64_rex_bits___3);
          }
#line 4083
          break;
        }
#line 4083
        tmp___107 = jit->ip;
#line 4083
        (jit->ip) ++;
#line 4083
        *tmp___107 = (unsigned char)15;
#line 4083
        switch (size) {
        case 1: 
#line 4083
        tmp___108 = jit->ip;
#line 4083
        (jit->ip) ++;
#line 4083
        *tmp___108 = (unsigned char)182;
#line 4083
        break;
        case 2: 
#line 4083
        tmp___109 = jit->ip;
#line 4083
        (jit->ip) ++;
#line 4083
        *tmp___109 = (unsigned char)183;
#line 4083
        break;
        default: 
#line 4083
        tmp___110 = __builtin_expect(1L, 0L);
#line 4083
        if (tmp___110) {
#line 4083
          __assert_rtn((char const   *)"emit_get_arg_from_stack", (char const   *)"tmp/src.c",
                       3028, (char const   *)"0");
        }
        }
#line 4083
        while (1) {
#line 4083
          if ((stack_reg & 0x7) == 4) {
#line 4083
            if (stack_pos == 0) {
#line 4083
              while (1) {
#line 4083
                tmp___111 = jit->ip;
#line 4083
                (jit->ip) ++;
#line 4083
                *tmp___111 = (unsigned char )((((dreg & 0x7) & 0x07) << 3) | 4);
#line 4083
                break;
              }
#line 4083
              while (1) {
#line 4083
                tmp___112 = jit->ip;
#line 4083
                (jit->ip) ++;
#line 4083
                *tmp___112 = (unsigned char )((4 << 3) | 4);
#line 4083
                break;
              }
            } else
#line 4083
            if ((jit_value )stack_pos >= -128L) {
#line 4083
              if ((jit_value )stack_pos <= 127L) {
#line 4083
                while (1) {
#line 4083
                  tmp___113 = jit->ip;
#line 4083
                  (jit->ip) ++;
#line 4083
                  *tmp___113 = (unsigned char )(((1 << 6) | (((dreg & 0x7) & 0x07) << 3)) | 4);
#line 4083
                  break;
                }
#line 4083
                while (1) {
#line 4083
                  tmp___114 = jit->ip;
#line 4083
                  (jit->ip) ++;
#line 4083
                  *tmp___114 = (unsigned char )((4 << 3) | 4);
#line 4083
                  break;
                }
#line 4083
                while (1) {
#line 4083
                  *(jit->ip) = (unsigned char )(stack_pos & 0xff);
#line 4083
                  (jit->ip) ++;
#line 4083
                  break;
                }
              } else {
#line 4083
                goto _L___8;
              }
            } else {
              _L___8: /* CIL Label */ 
#line 4083
              while (1) {
#line 4083
                tmp___115 = jit->ip;
#line 4083
                (jit->ip) ++;
#line 4083
                *tmp___115 = (unsigned char )(((2 << 6) | (((dreg & 0x7) & 0x07) << 3)) | 4);
#line 4083
                break;
              }
#line 4083
              while (1) {
#line 4083
                tmp___116 = jit->ip;
#line 4083
                (jit->ip) ++;
#line 4083
                *tmp___116 = (unsigned char )((4 << 3) | 4);
#line 4083
                break;
              }
#line 4083
              while (1) {
#line 4083
                imb___9.val = stack_pos;
#line 4083
                tmp___117 = jit->ip;
#line 4083
                (jit->ip) ++;
#line 4083
                *tmp___117 = imb___9.b[0];
#line 4083
                tmp___118 = jit->ip;
#line 4083
                (jit->ip) ++;
#line 4083
                *tmp___118 = imb___9.b[1];
#line 4083
                tmp___119 = jit->ip;
#line 4083
                (jit->ip) ++;
#line 4083
                *tmp___119 = imb___9.b[2];
#line 4083
                tmp___120 = jit->ip;
#line 4083
                (jit->ip) ++;
#line 4083
                *tmp___120 = imb___9.b[3];
#line 4083
                break;
              }
            }
#line 4083
            break;
          }
#line 4083
          if (stack_pos == 0) {
#line 4083
            if ((stack_reg & 0x7) != 5) {
#line 4083
              while (1) {
#line 4083
                tmp___121 = jit->ip;
#line 4083
                (jit->ip) ++;
#line 4083
                *tmp___121 = (unsigned char )((((dreg & 0x7) & 0x07) << 3) | ((stack_reg & 0x7) & 0x07));
#line 4083
                break;
              }
#line 4083
              break;
            }
          }
#line 4083
          if ((jit_value )stack_pos >= -128L) {
#line 4083
            if ((jit_value )stack_pos <= 127L) {
#line 4083
              while (1) {
#line 4083
                tmp___122 = jit->ip;
#line 4083
                (jit->ip) ++;
#line 4083
                *tmp___122 = (unsigned char )(((1 << 6) | (((dreg & 0x7) & 0x07) << 3)) | ((stack_reg & 0x7) & 0x07));
#line 4083
                break;
              }
#line 4083
              while (1) {
#line 4083
                *(jit->ip) = (unsigned char )(stack_pos & 0xff);
#line 4083
                (jit->ip) ++;
#line 4083
                break;
              }
            } else {
#line 4083
              goto _L___9;
            }
          } else {
            _L___9: /* CIL Label */ 
#line 4083
            while (1) {
#line 4083
              tmp___123 = jit->ip;
#line 4083
              (jit->ip) ++;
#line 4083
              *tmp___123 = (unsigned char )(((2 << 6) | (((dreg & 0x7) & 0x07) << 3)) | ((stack_reg & 0x7) & 0x07));
#line 4083
              break;
            }
#line 4083
            while (1) {
#line 4083
              imb___10.val = stack_pos;
#line 4083
              tmp___124 = jit->ip;
#line 4083
              (jit->ip) ++;
#line 4083
              *tmp___124 = imb___10.b[0];
#line 4083
              tmp___125 = jit->ip;
#line 4083
              (jit->ip) ++;
#line 4083
              *tmp___125 = imb___10.b[1];
#line 4083
              tmp___126 = jit->ip;
#line 4083
              (jit->ip) ++;
#line 4083
              *tmp___126 = imb___10.b[2];
#line 4083
              tmp___127 = jit->ip;
#line 4083
              (jit->ip) ++;
#line 4083
              *tmp___127 = imb___10.b[3];
#line 4083
              break;
            }
          }
#line 4083
          break;
        }
#line 4083
        break;
      }
    }
  } else {
#line 4085
    while (1) {
#line 4085
      tmp___128 = jit->ip;
#line 4085
      (jit->ip) ++;
#line 4085
      *tmp___128 = (unsigned char)102;
#line 4085
      while (1) {
#line 4085
        if (dreg > 7) {
#line 4085
          tmp___129 = 4;
        } else {
#line 4085
          tmp___129 = 0;
        }
#line 4085
        if (stack_reg > 7) {
#line 4085
          tmp___130 = 1;
        } else {
#line 4085
          tmp___130 = 0;
        }
#line 4085
        _amd64_rex_bits___4 = (unsigned char )(tmp___129 | tmp___130);
#line 4085
        if ((int )_amd64_rex_bits___4 != 0) {
#line 4085
          tmp___131 = jit->ip;
#line 4085
          (jit->ip) ++;
#line 4085
          *tmp___131 = (unsigned char )(0x40 | (int )_amd64_rex_bits___4);
        }
#line 4085
        break;
      }
#line 4085
      tmp___132 = jit->ip;
#line 4085
      (jit->ip) ++;
#line 4085
      *tmp___132 = (unsigned char)15;
#line 4085
      tmp___133 = jit->ip;
#line 4085
      (jit->ip) ++;
#line 4085
      *tmp___133 = (unsigned char)18;
#line 4085
      while (1) {
#line 4085
        if (stack_reg == 16) {
#line 4085
          while (1) {
#line 4085
            tmp___134 = jit->ip;
#line 4085
            (jit->ip) ++;
#line 4085
            *tmp___134 = (unsigned char )((((dreg & 0x7) & 0x07) << 3) | 5);
#line 4085
            break;
          }
#line 4085
          while (1) {
#line 4085
            imb___11.val = stack_pos;
#line 4085
            tmp___135 = jit->ip;
#line 4085
            (jit->ip) ++;
#line 4085
            *tmp___135 = imb___11.b[0];
#line 4085
            tmp___136 = jit->ip;
#line 4085
            (jit->ip) ++;
#line 4085
            *tmp___136 = imb___11.b[1];
#line 4085
            tmp___137 = jit->ip;
#line 4085
            (jit->ip) ++;
#line 4085
            *tmp___137 = imb___11.b[2];
#line 4085
            tmp___138 = jit->ip;
#line 4085
            (jit->ip) ++;
#line 4085
            *tmp___138 = imb___11.b[3];
#line 4085
            break;
          }
        } else {
#line 4085
          while (1) {
#line 4085
            if ((stack_reg & 0x7) == 4) {
#line 4085
              if (stack_pos == 0) {
#line 4085
                while (1) {
#line 4085
                  tmp___139 = jit->ip;
#line 4085
                  (jit->ip) ++;
#line 4085
                  *tmp___139 = (unsigned char )((((dreg & 0x7) & 0x07) << 3) | 4);
#line 4085
                  break;
                }
#line 4085
                while (1) {
#line 4085
                  tmp___140 = jit->ip;
#line 4085
                  (jit->ip) ++;
#line 4085
                  *tmp___140 = (unsigned char )((4 << 3) | 4);
#line 4085
                  break;
                }
              } else
#line 4085
              if ((jit_value )stack_pos >= -128L) {
#line 4085
                if ((jit_value )stack_pos <= 127L) {
#line 4085
                  while (1) {
#line 4085
                    tmp___141 = jit->ip;
#line 4085
                    (jit->ip) ++;
#line 4085
                    *tmp___141 = (unsigned char )(((1 << 6) | (((dreg & 0x7) & 0x07) << 3)) | 4);
#line 4085
                    break;
                  }
#line 4085
                  while (1) {
#line 4085
                    tmp___142 = jit->ip;
#line 4085
                    (jit->ip) ++;
#line 4085
                    *tmp___142 = (unsigned char )((4 << 3) | 4);
#line 4085
                    break;
                  }
#line 4085
                  while (1) {
#line 4085
                    *(jit->ip) = (unsigned char )(stack_pos & 0xff);
#line 4085
                    (jit->ip) ++;
#line 4085
                    break;
                  }
                } else {
#line 4085
                  goto _L___10;
                }
              } else {
                _L___10: /* CIL Label */ 
#line 4085
                while (1) {
#line 4085
                  tmp___143 = jit->ip;
#line 4085
                  (jit->ip) ++;
#line 4085
                  *tmp___143 = (unsigned char )(((2 << 6) | (((dreg & 0x7) & 0x07) << 3)) | 4);
#line 4085
                  break;
                }
#line 4085
                while (1) {
#line 4085
                  tmp___144 = jit->ip;
#line 4085
                  (jit->ip) ++;
#line 4085
                  *tmp___144 = (unsigned char )((4 << 3) | 4);
#line 4085
                  break;
                }
#line 4085
                while (1) {
#line 4085
                  imb___12.val = stack_pos;
#line 4085
                  tmp___145 = jit->ip;
#line 4085
                  (jit->ip) ++;
#line 4085
                  *tmp___145 = imb___12.b[0];
#line 4085
                  tmp___146 = jit->ip;
#line 4085
                  (jit->ip) ++;
#line 4085
                  *tmp___146 = imb___12.b[1];
#line 4085
                  tmp___147 = jit->ip;
#line 4085
                  (jit->ip) ++;
#line 4085
                  *tmp___147 = imb___12.b[2];
#line 4085
                  tmp___148 = jit->ip;
#line 4085
                  (jit->ip) ++;
#line 4085
                  *tmp___148 = imb___12.b[3];
#line 4085
                  break;
                }
              }
#line 4085
              break;
            }
#line 4085
            if (stack_pos == 0) {
#line 4085
              if ((stack_reg & 0x7) != 5) {
#line 4085
                while (1) {
#line 4085
                  tmp___149 = jit->ip;
#line 4085
                  (jit->ip) ++;
#line 4085
                  *tmp___149 = (unsigned char )((((dreg & 0x7) & 0x07) << 3) | ((stack_reg & 0x7) & 0x07));
#line 4085
                  break;
                }
#line 4085
                break;
              }
            }
#line 4085
            if ((jit_value )stack_pos >= -128L) {
#line 4085
              if ((jit_value )stack_pos <= 127L) {
#line 4085
                while (1) {
#line 4085
                  tmp___150 = jit->ip;
#line 4085
                  (jit->ip) ++;
#line 4085
                  *tmp___150 = (unsigned char )(((1 << 6) | (((dreg & 0x7) & 0x07) << 3)) | ((stack_reg & 0x7) & 0x07));
#line 4085
                  break;
                }
#line 4085
                while (1) {
#line 4085
                  *(jit->ip) = (unsigned char )(stack_pos & 0xff);
#line 4085
                  (jit->ip) ++;
#line 4085
                  break;
                }
              } else {
#line 4085
                goto _L___11;
              }
            } else {
              _L___11: /* CIL Label */ 
#line 4085
              while (1) {
#line 4085
                tmp___151 = jit->ip;
#line 4085
                (jit->ip) ++;
#line 4085
                *tmp___151 = (unsigned char )(((2 << 6) | (((dreg & 0x7) & 0x07) << 3)) | ((stack_reg & 0x7) & 0x07));
#line 4085
                break;
              }
#line 4085
              while (1) {
#line 4085
                imb___13.val = stack_pos;
#line 4085
                tmp___152 = jit->ip;
#line 4085
                (jit->ip) ++;
#line 4085
                *tmp___152 = imb___13.b[0];
#line 4085
                tmp___153 = jit->ip;
#line 4085
                (jit->ip) ++;
#line 4085
                *tmp___153 = imb___13.b[1];
#line 4085
                tmp___154 = jit->ip;
#line 4085
                (jit->ip) ++;
#line 4085
                *tmp___154 = imb___13.b[2];
#line 4085
                tmp___155 = jit->ip;
#line 4085
                (jit->ip) ++;
#line 4085
                *tmp___155 = imb___13.b[3];
#line 4085
                break;
              }
            }
#line 4085
            break;
          }
        }
#line 4085
        break;
      }
#line 4085
      break;
    }
  }
#line 4087
  return;
}
}
/* END FUNCTION-DEF emit_get_arg_from_stack LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_dump_ops LOC=UNKNOWN */
void jit_dump_ops(struct jit *jit , int verbosity ) 
{ 
  jit_tree *labels ;
  jit_tree *tmp ;

  {
#line 5622
  if (! (verbosity & 14)) {
#line 5623
    verbosity |= 0x01;
  }
#line 5624
  tmp = prepare_labels(jit);
#line 5624
  labels = tmp;
#line 5625
  if (verbosity & 0x01) {
#line 5625
    jit_dump_ops_general(jit, labels, verbosity);
  }
#line 5626
  if (verbosity & 0x02) {
#line 5626
    compiler_based_debugger(jit);
  }
#line 5627
  if (verbosity & 0x08) {
#line 5627
    jit_dump_ops_compilable(jit, labels);
  }
#line 5628
  if (verbosity & 0x04) {
#line 5628
    jit_dump_ops_combined(jit, labels);
  }
#line 5629
  jit_tree_free(labels);
#line 5630
  return;
}
}
/* END FUNCTION-DEF jit_dump_ops LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF emit_prolog_op LOC=UNKNOWN */
static void emit_prolog_op(struct jit *jit , jit_op *op ) 
{ 
  struct jit_func_info *info ;
  struct jit_func_info *tmp ;
  int prolog ;
  struct jit_func_info *tmp___0 ;
  unsigned char *tmp___1 ;
  unsigned char _amd64_rex_bits ;
  unsigned char *tmp___2 ;
  unsigned char *tmp___3 ;
  unsigned char *tmp___4 ;
  unsigned char _amd64_rex_bits___0 ;
  unsigned char *tmp___5 ;
  unsigned char *tmp___6 ;
  unsigned char *tmp___7 ;
  long tmp___8 ;
  unsigned char *tmp___9 ;
  int stack_mem ;
  int tmp___10 ;
  unsigned char _amd64_rex_bits___1 ;
  unsigned char *tmp___11 ;
  unsigned char *tmp___12 ;
  unsigned char *tmp___13 ;
  unsigned char _amd64_rex_bits___2 ;
  unsigned char *tmp___14 ;
  unsigned char *tmp___15 ;
  x86_imm_buf imb ;
  unsigned char *tmp___16 ;
  unsigned char *tmp___17 ;
  unsigned char *tmp___18 ;
  unsigned char *tmp___19 ;
  unsigned char _amd64_rex_bits___3 ;
  unsigned char *tmp___20 ;
  unsigned char *tmp___21 ;
  unsigned char *tmp___22 ;
  x86_imm_buf imb___0 ;
  unsigned char *tmp___23 ;
  unsigned char *tmp___24 ;
  unsigned char *tmp___25 ;
  unsigned char *tmp___26 ;
  int i ;
  struct jit_inp_arg a ;
  unsigned char *tmp___27 ;
  unsigned char _amd64_rex_bits___4 ;
  int tmp___28 ;
  int tmp___29 ;
  unsigned char *tmp___30 ;
  unsigned char *tmp___31 ;
  unsigned char *tmp___32 ;
  unsigned char *tmp___33 ;
  unsigned char *tmp___34 ;
  unsigned char _amd64_rex_bits___5 ;
  unsigned char *tmp___35 ;
  unsigned char *tmp___36 ;
  unsigned char *tmp___37 ;
  unsigned char *tmp___38 ;
  x86_imm_buf imb___1 ;
  unsigned char *tmp___39 ;
  unsigned char *tmp___40 ;
  unsigned char *tmp___41 ;
  unsigned char *tmp___42 ;
  unsigned char *tmp___43 ;
  unsigned char *tmp___44 ;
  unsigned char *tmp___45 ;
  unsigned char *tmp___46 ;
  unsigned char *tmp___47 ;
  unsigned char *tmp___48 ;
  x86_imm_buf imb___2 ;
  unsigned char *tmp___49 ;
  unsigned char *tmp___50 ;
  unsigned char *tmp___51 ;
  unsigned char *tmp___52 ;
  unsigned char *tmp___53 ;
  unsigned char *tmp___54 ;
  unsigned char *tmp___55 ;
  x86_imm_buf imb___3 ;
  unsigned char *tmp___56 ;
  unsigned char *tmp___57 ;
  unsigned char *tmp___58 ;
  unsigned char *tmp___59 ;
  unsigned char *tmp___60 ;
  unsigned char _amd64_rex_bits___6 ;
  unsigned char *tmp___61 ;
  unsigned char *tmp___62 ;
  unsigned char *tmp___63 ;
  unsigned char *tmp___64 ;
  x86_imm_buf imb___4 ;
  unsigned char *tmp___65 ;
  unsigned char *tmp___66 ;
  unsigned char *tmp___67 ;
  unsigned char *tmp___68 ;
  unsigned char *tmp___69 ;
  unsigned char *tmp___70 ;
  unsigned char *tmp___71 ;
  unsigned char *tmp___72 ;
  unsigned char *tmp___73 ;
  unsigned char *tmp___74 ;
  x86_imm_buf imb___5 ;
  unsigned char *tmp___75 ;
  unsigned char *tmp___76 ;
  unsigned char *tmp___77 ;
  unsigned char *tmp___78 ;
  unsigned char *tmp___79 ;
  unsigned char *tmp___80 ;
  unsigned char *tmp___81 ;
  x86_imm_buf imb___6 ;
  unsigned char *tmp___82 ;
  unsigned char *tmp___83 ;
  unsigned char *tmp___84 ;
  unsigned char *tmp___85 ;

  {
#line 3748
  jit->current_func = op;
#line 3749
  tmp = jit_current_func_info(jit);
#line 3749
  info = tmp;
#line 3750
  tmp___0 = jit_current_func_info(jit);
#line 3750
  prolog = tmp___0->has_prolog;
#line 3751
  while ((jit_value )jit->ip % 16L) {
#line 3752
    while (1) {
#line 3752
      while (1) {
#line 3752
        tmp___1 = jit->ip;
#line 3752
        (jit->ip) ++;
#line 3752
        *tmp___1 = (unsigned char)144;
#line 3752
        break;
      }
#line 3752
      break;
    }
  }
#line 3753
  op->patch_addr = (jit_value )jit->ip - (jit_value )jit->buf;
#line 3754
  if (prolog) {
#line 3755
    while (1) {
#line 3755
      while (1) {
#line 3755
        _amd64_rex_bits = (unsigned char)0;
#line 3755
        if ((int )_amd64_rex_bits != 0) {
#line 3755
          tmp___2 = jit->ip;
#line 3755
          (jit->ip) ++;
#line 3755
          *tmp___2 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
        }
#line 3755
        break;
      }
#line 3755
      tmp___3 = jit->ip;
#line 3755
      (jit->ip) ++;
#line 3755
      *tmp___3 = (unsigned char)85;
#line 3755
      break;
    }
#line 3756
    while (1) {
#line 3756
      while (1) {
#line 3756
        _amd64_rex_bits___0 = (unsigned char)8;
#line 3756
        if ((int )_amd64_rex_bits___0 != 0) {
#line 3756
          tmp___5 = jit->ip;
#line 3756
          (jit->ip) ++;
#line 3756
          *tmp___5 = (unsigned char )(0x40 | (int )_amd64_rex_bits___0);
        }
#line 3756
        break;
      }
#line 3756
      switch (8) {
      case 1: 
#line 3756
      tmp___6 = jit->ip;
#line 3756
      (jit->ip) ++;
#line 3756
      *tmp___6 = (unsigned char)138;
#line 3756
      break;
      case 8: 
      case 4: 
      case 2: 
#line 3756
      tmp___7 = jit->ip;
#line 3756
      (jit->ip) ++;
#line 3756
      *tmp___7 = (unsigned char)139;
#line 3756
      break;
      default: 
#line 3756
      tmp___8 = __builtin_expect(1L, 0L);
#line 3756
      if (tmp___8) {
#line 3756
        __assert_rtn((char const   *)"emit_prolog_op", (char const   *)"tmp/src.c",
                     2589, (char const   *)"0");
      }
      }
#line 3756
      while (1) {
#line 3756
        while (1) {
#line 3756
          tmp___9 = jit->ip;
#line 3756
          (jit->ip) ++;
#line 3756
          *tmp___9 = (unsigned char )(((3 << 6) | (5 << 3)) | 4);
#line 3756
          break;
        }
#line 3756
        break;
      }
#line 3756
      break;
    }
  }
#line 3758
  tmp___10 = get_frame_size(jit, info);
#line 3758
  stack_mem = tmp___10;
#line 3759
  if (prolog) {
#line 3759
    while (1) {
#line 3759
      if ((jit_value )stack_mem >= -128L) {
#line 3759
        if ((jit_value )stack_mem <= 127L) {
#line 3759
          while (1) {
#line 3759
            _amd64_rex_bits___1 = (unsigned char)8;
#line 3759
            if ((int )_amd64_rex_bits___1 != 0) {
#line 3759
              tmp___11 = jit->ip;
#line 3759
              (jit->ip) ++;
#line 3759
              *tmp___11 = (unsigned char )(0x40 | (int )_amd64_rex_bits___1);
            }
#line 3759
            break;
          }
#line 3759
          tmp___12 = jit->ip;
#line 3759
          (jit->ip) ++;
#line 3759
          *tmp___12 = (unsigned char)131;
#line 3759
          while (1) {
#line 3759
            while (1) {
#line 3759
              tmp___13 = jit->ip;
#line 3759
              (jit->ip) ++;
#line 3759
              *tmp___13 = (unsigned char )(((3 << 6) | (5 << 3)) | 4);
#line 3759
              break;
            }
#line 3759
            break;
          }
#line 3759
          while (1) {
#line 3759
            *(jit->ip) = (unsigned char )(stack_mem & 0xff);
#line 3759
            (jit->ip) ++;
#line 3759
            break;
          }
        } else {
#line 3759
          goto _L;
        }
      } else {
        _L: /* CIL Label */ 
#line 3759
        while (1) {
#line 3759
          _amd64_rex_bits___3 = (unsigned char)8;
#line 3759
          if ((int )_amd64_rex_bits___3 != 0) {
#line 3759
            tmp___20 = jit->ip;
#line 3759
            (jit->ip) ++;
#line 3759
            *tmp___20 = (unsigned char )(0x40 | (int )_amd64_rex_bits___3);
          }
#line 3759
          break;
        }
#line 3759
        tmp___21 = jit->ip;
#line 3759
        (jit->ip) ++;
#line 3759
        *tmp___21 = (unsigned char)129;
#line 3759
        while (1) {
#line 3759
          while (1) {
#line 3759
            tmp___22 = jit->ip;
#line 3759
            (jit->ip) ++;
#line 3759
            *tmp___22 = (unsigned char )(((3 << 6) | (5 << 3)) | 4);
#line 3759
            break;
          }
#line 3759
          break;
        }
#line 3759
        while (1) {
#line 3759
          imb___0.val = stack_mem;
#line 3759
          tmp___23 = jit->ip;
#line 3759
          (jit->ip) ++;
#line 3759
          *tmp___23 = imb___0.b[0];
#line 3759
          tmp___24 = jit->ip;
#line 3759
          (jit->ip) ++;
#line 3759
          *tmp___24 = imb___0.b[1];
#line 3759
          tmp___25 = jit->ip;
#line 3759
          (jit->ip) ++;
#line 3759
          *tmp___25 = imb___0.b[2];
#line 3759
          tmp___26 = jit->ip;
#line 3759
          (jit->ip) ++;
#line 3759
          *tmp___26 = imb___0.b[3];
#line 3759
          break;
        }
      }
#line 3759
      break;
    }
  }
#line 3760
  jit->push_count = emit_push_callee_saved_regs(jit, op);
#line 3761
  i = 0;
#line 3761
  while (i < info->general_arg_cnt + info->float_arg_cnt) {
#line 3762
    a = *(info->args + i);
#line 3763
    if ((unsigned int )a.type == 2U) {
#line 3763
      if ((unsigned long long )a.size == sizeof(float )) {
#line 3764
        if (a.passed_by_reg) {
#line 3765
          while (1) {
#line 3765
            tmp___27 = jit->ip;
#line 3765
            (jit->ip) ++;
#line 3765
            *tmp___27 = (unsigned char)243;
#line 3765
            while (1) {
#line 3765
              if (a.location.reg > 7) {
#line 3765
                tmp___28 = 4;
              } else {
#line 3765
                tmp___28 = 0;
              }
#line 3765
              if (a.location.reg > 7) {
#line 3765
                tmp___29 = 1;
              } else {
#line 3765
                tmp___29 = 0;
              }
#line 3765
              _amd64_rex_bits___4 = (unsigned char )(tmp___28 | tmp___29);
#line 3765
              if ((int )_amd64_rex_bits___4 != 0) {
#line 3765
                tmp___30 = jit->ip;
#line 3765
                (jit->ip) ++;
#line 3765
                *tmp___30 = (unsigned char )(0x40 | (int )_amd64_rex_bits___4);
              }
#line 3765
              break;
            }
#line 3765
            tmp___31 = jit->ip;
#line 3765
            (jit->ip) ++;
#line 3765
            *tmp___31 = (unsigned char)15;
#line 3765
            tmp___32 = jit->ip;
#line 3765
            (jit->ip) ++;
#line 3765
            *tmp___32 = (unsigned char)90;
#line 3765
            while (1) {
#line 3765
              while (1) {
#line 3765
                tmp___33 = jit->ip;
#line 3765
                (jit->ip) ++;
#line 3765
                *tmp___33 = (unsigned char )(((3 << 6) | ((a.location.reg & 0x07) << 3)) | (a.location.reg & 0x07));
#line 3765
                break;
              }
#line 3765
              break;
            }
#line 3765
            break;
          }
        } else {
#line 3767
          while (1) {
#line 3767
            tmp___34 = jit->ip;
#line 3767
            (jit->ip) ++;
#line 3767
            *tmp___34 = (unsigned char)243;
#line 3767
            while (1) {
#line 3767
              _amd64_rex_bits___5 = (unsigned char)4;
#line 3767
              if ((int )_amd64_rex_bits___5 != 0) {
#line 3767
                tmp___35 = jit->ip;
#line 3767
                (jit->ip) ++;
#line 3767
                *tmp___35 = (unsigned char )(0x40 | (int )_amd64_rex_bits___5);
              }
#line 3767
              break;
            }
#line 3767
            tmp___36 = jit->ip;
#line 3767
            (jit->ip) ++;
#line 3767
            *tmp___36 = (unsigned char)15;
#line 3767
            tmp___37 = jit->ip;
#line 3767
            (jit->ip) ++;
#line 3767
            *tmp___37 = (unsigned char)90;
#line 3767
            while (1) {
#line 3767
              while (1) {
#line 3767
                if (0) {
#line 3767
                  if (a.spill_pos == 0) {
#line 3767
                    while (1) {
#line 3767
                      tmp___43 = jit->ip;
#line 3767
                      (jit->ip) ++;
#line 3767
                      *tmp___43 = (unsigned char )((7 << 3) | 4);
#line 3767
                      break;
                    }
#line 3767
                    while (1) {
#line 3767
                      tmp___44 = jit->ip;
#line 3767
                      (jit->ip) ++;
#line 3767
                      *tmp___44 = (unsigned char )((4 << 3) | 4);
#line 3767
                      break;
                    }
                  } else
#line 3767
                  if ((jit_value )a.spill_pos >= -128L) {
#line 3767
                    if ((jit_value )a.spill_pos <= 127L) {
#line 3767
                      while (1) {
#line 3767
                        tmp___45 = jit->ip;
#line 3767
                        (jit->ip) ++;
#line 3767
                        *tmp___45 = (unsigned char )(((1 << 6) | (7 << 3)) | 4);
#line 3767
                        break;
                      }
#line 3767
                      while (1) {
#line 3767
                        tmp___46 = jit->ip;
#line 3767
                        (jit->ip) ++;
#line 3767
                        *tmp___46 = (unsigned char )((4 << 3) | 4);
#line 3767
                        break;
                      }
#line 3767
                      while (1) {
#line 3767
                        *(jit->ip) = (unsigned char )(a.spill_pos & 0xff);
#line 3767
                        (jit->ip) ++;
#line 3767
                        break;
                      }
                    } else {
#line 3767
                      goto _L___0;
                    }
                  } else {
                    _L___0: /* CIL Label */ 
#line 3767
                    while (1) {
#line 3767
                      tmp___47 = jit->ip;
#line 3767
                      (jit->ip) ++;
#line 3767
                      *tmp___47 = (unsigned char )(((2 << 6) | (7 << 3)) | 4);
#line 3767
                      break;
                    }
#line 3767
                    while (1) {
#line 3767
                      tmp___48 = jit->ip;
#line 3767
                      (jit->ip) ++;
#line 3767
                      *tmp___48 = (unsigned char )((4 << 3) | 4);
#line 3767
                      break;
                    }
#line 3767
                    while (1) {
#line 3767
                      imb___2.val = a.spill_pos;
#line 3767
                      tmp___49 = jit->ip;
#line 3767
                      (jit->ip) ++;
#line 3767
                      *tmp___49 = imb___2.b[0];
#line 3767
                      tmp___50 = jit->ip;
#line 3767
                      (jit->ip) ++;
#line 3767
                      *tmp___50 = imb___2.b[1];
#line 3767
                      tmp___51 = jit->ip;
#line 3767
                      (jit->ip) ++;
#line 3767
                      *tmp___51 = imb___2.b[2];
#line 3767
                      tmp___52 = jit->ip;
#line 3767
                      (jit->ip) ++;
#line 3767
                      *tmp___52 = imb___2.b[3];
#line 3767
                      break;
                    }
                  }
#line 3767
                  break;
                }
#line 3767
                if (a.spill_pos == 0) {

                }
#line 3767
                if ((jit_value )a.spill_pos >= -128L) {
#line 3767
                  if ((jit_value )a.spill_pos <= 127L) {
#line 3767
                    while (1) {
#line 3767
                      tmp___54 = jit->ip;
#line 3767
                      (jit->ip) ++;
#line 3767
                      *tmp___54 = (unsigned char )(((1 << 6) | (7 << 3)) | 5);
#line 3767
                      break;
                    }
#line 3767
                    while (1) {
#line 3767
                      *(jit->ip) = (unsigned char )(a.spill_pos & 0xff);
#line 3767
                      (jit->ip) ++;
#line 3767
                      break;
                    }
                  } else {
#line 3767
                    goto _L___1;
                  }
                } else {
                  _L___1: /* CIL Label */ 
#line 3767
                  while (1) {
#line 3767
                    tmp___55 = jit->ip;
#line 3767
                    (jit->ip) ++;
#line 3767
                    *tmp___55 = (unsigned char )(((2 << 6) | (7 << 3)) | 5);
#line 3767
                    break;
                  }
#line 3767
                  while (1) {
#line 3767
                    imb___3.val = a.spill_pos;
#line 3767
                    tmp___56 = jit->ip;
#line 3767
                    (jit->ip) ++;
#line 3767
                    *tmp___56 = imb___3.b[0];
#line 3767
                    tmp___57 = jit->ip;
#line 3767
                    (jit->ip) ++;
#line 3767
                    *tmp___57 = imb___3.b[1];
#line 3767
                    tmp___58 = jit->ip;
#line 3767
                    (jit->ip) ++;
#line 3767
                    *tmp___58 = imb___3.b[2];
#line 3767
                    tmp___59 = jit->ip;
#line 3767
                    (jit->ip) ++;
#line 3767
                    *tmp___59 = imb___3.b[3];
#line 3767
                    break;
                  }
                }
#line 3767
                break;
              }
#line 3767
              break;
            }
#line 3767
            break;
          }
#line 3768
          while (1) {
#line 3768
            tmp___60 = jit->ip;
#line 3768
            (jit->ip) ++;
#line 3768
            *tmp___60 = (unsigned char)102;
#line 3768
            while (1) {
#line 3768
              _amd64_rex_bits___6 = (unsigned char)4;
#line 3768
              if ((int )_amd64_rex_bits___6 != 0) {
#line 3768
                tmp___61 = jit->ip;
#line 3768
                (jit->ip) ++;
#line 3768
                *tmp___61 = (unsigned char )(0x40 | (int )_amd64_rex_bits___6);
              }
#line 3768
              break;
            }
#line 3768
            tmp___62 = jit->ip;
#line 3768
            (jit->ip) ++;
#line 3768
            *tmp___62 = (unsigned char)15;
#line 3768
            tmp___63 = jit->ip;
#line 3768
            (jit->ip) ++;
#line 3768
            *tmp___63 = (unsigned char)19;
#line 3768
            while (1) {
#line 3768
              while (1) {
#line 3768
                if (0) {
#line 3768
                  if (a.spill_pos == 0) {
#line 3768
                    while (1) {
#line 3768
                      tmp___69 = jit->ip;
#line 3768
                      (jit->ip) ++;
#line 3768
                      *tmp___69 = (unsigned char )((7 << 3) | 4);
#line 3768
                      break;
                    }
#line 3768
                    while (1) {
#line 3768
                      tmp___70 = jit->ip;
#line 3768
                      (jit->ip) ++;
#line 3768
                      *tmp___70 = (unsigned char )((4 << 3) | 4);
#line 3768
                      break;
                    }
                  } else
#line 3768
                  if ((jit_value )a.spill_pos >= -128L) {
#line 3768
                    if ((jit_value )a.spill_pos <= 127L) {
#line 3768
                      while (1) {
#line 3768
                        tmp___71 = jit->ip;
#line 3768
                        (jit->ip) ++;
#line 3768
                        *tmp___71 = (unsigned char )(((1 << 6) | (7 << 3)) | 4);
#line 3768
                        break;
                      }
#line 3768
                      while (1) {
#line 3768
                        tmp___72 = jit->ip;
#line 3768
                        (jit->ip) ++;
#line 3768
                        *tmp___72 = (unsigned char )((4 << 3) | 4);
#line 3768
                        break;
                      }
#line 3768
                      while (1) {
#line 3768
                        *(jit->ip) = (unsigned char )(a.spill_pos & 0xff);
#line 3768
                        (jit->ip) ++;
#line 3768
                        break;
                      }
                    } else {
#line 3768
                      goto _L___2;
                    }
                  } else {
                    _L___2: /* CIL Label */ 
#line 3768
                    while (1) {
#line 3768
                      tmp___73 = jit->ip;
#line 3768
                      (jit->ip) ++;
#line 3768
                      *tmp___73 = (unsigned char )(((2 << 6) | (7 << 3)) | 4);
#line 3768
                      break;
                    }
#line 3768
                    while (1) {
#line 3768
                      tmp___74 = jit->ip;
#line 3768
                      (jit->ip) ++;
#line 3768
                      *tmp___74 = (unsigned char )((4 << 3) | 4);
#line 3768
                      break;
                    }
#line 3768
                    while (1) {
#line 3768
                      imb___5.val = a.spill_pos;
#line 3768
                      tmp___75 = jit->ip;
#line 3768
                      (jit->ip) ++;
#line 3768
                      *tmp___75 = imb___5.b[0];
#line 3768
                      tmp___76 = jit->ip;
#line 3768
                      (jit->ip) ++;
#line 3768
                      *tmp___76 = imb___5.b[1];
#line 3768
                      tmp___77 = jit->ip;
#line 3768
                      (jit->ip) ++;
#line 3768
                      *tmp___77 = imb___5.b[2];
#line 3768
                      tmp___78 = jit->ip;
#line 3768
                      (jit->ip) ++;
#line 3768
                      *tmp___78 = imb___5.b[3];
#line 3768
                      break;
                    }
                  }
#line 3768
                  break;
                }
#line 3768
                if (a.spill_pos == 0) {

                }
#line 3768
                if ((jit_value )a.spill_pos >= -128L) {
#line 3768
                  if ((jit_value )a.spill_pos <= 127L) {
#line 3768
                    while (1) {
#line 3768
                      tmp___80 = jit->ip;
#line 3768
                      (jit->ip) ++;
#line 3768
                      *tmp___80 = (unsigned char )(((1 << 6) | (7 << 3)) | 5);
#line 3768
                      break;
                    }
#line 3768
                    while (1) {
#line 3768
                      *(jit->ip) = (unsigned char )(a.spill_pos & 0xff);
#line 3768
                      (jit->ip) ++;
#line 3768
                      break;
                    }
                  } else {
#line 3768
                    goto _L___3;
                  }
                } else {
                  _L___3: /* CIL Label */ 
#line 3768
                  while (1) {
#line 3768
                    tmp___81 = jit->ip;
#line 3768
                    (jit->ip) ++;
#line 3768
                    *tmp___81 = (unsigned char )(((2 << 6) | (7 << 3)) | 5);
#line 3768
                    break;
                  }
#line 3768
                  while (1) {
#line 3768
                    imb___6.val = a.spill_pos;
#line 3768
                    tmp___82 = jit->ip;
#line 3768
                    (jit->ip) ++;
#line 3768
                    *tmp___82 = imb___6.b[0];
#line 3768
                    tmp___83 = jit->ip;
#line 3768
                    (jit->ip) ++;
#line 3768
                    *tmp___83 = imb___6.b[1];
#line 3768
                    tmp___84 = jit->ip;
#line 3768
                    (jit->ip) ++;
#line 3768
                    *tmp___84 = imb___6.b[2];
#line 3768
                    tmp___85 = jit->ip;
#line 3768
                    (jit->ip) ++;
#line 3768
                    *tmp___85 = imb___6.b[3];
#line 3768
                    break;
                  }
                }
#line 3768
                break;
              }
#line 3768
              break;
            }
#line 3768
            break;
          }
        }
      }
    }
#line 3761
    i ++;
  }
#line 3772
  return;
}
}
/* END FUNCTION-DEF emit_prolog_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF rmap_unassoc LOC=UNKNOWN */
static void rmap_unassoc(jit_rmap *rmap , jit_value reg ) 
{ 


  {
#line 3275
  rmap->map = jit_tree_delete(rmap->map, reg, (int *)((void *)0));
#line 3276
  return;
}
}
/* END FUNCTION-DEF rmap_unassoc LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF rmap_subset LOC=UNKNOWN */
static int rmap_subset(jit_op *op , jit_tree *current , jit_tree *target ) 
{ 
  jit_set *tgt_livein ;
  int tmp ;
  jit_tree *found ;
  jit_tree *tmp___0 ;
  int tmp___1 ;
  int tmp___2 ;
  int tmp___3 ;

  {
#line 3285
  if ((unsigned long )current == (unsigned long )((void *)0)) {
#line 3285
    return (1);
  }
#line 3286
  tgt_livein = (op->jmp_addr)->live_in;
#line 3287
  tmp = jit_set_get(tgt_livein, (int )current->key);
#line 3287
  if (! tmp) {
#line 3287
    goto skip;
  }
#line 3288
  tmp___0 = jit_tree_search(target, current->key);
#line 3288
  found = tmp___0;
#line 3289
  if (! found) {
#line 3289
    return (0);
  } else
#line 3289
  if ((unsigned long )current->value != (unsigned long )found->value) {
#line 3289
    return (0);
  }
  skip: 
#line 3291
  tmp___1 = rmap_subset(op, current->left, target);
#line 3291
  if (tmp___1) {
#line 3291
    tmp___2 = rmap_subset(op, current->right, target);
#line 3291
    if (tmp___2) {
#line 3291
      tmp___3 = 1;
    } else {
#line 3291
      tmp___3 = 0;
    }
  } else {
#line 3291
    tmp___3 = 0;
  }
#line 3291
  return (tmp___3);
}
}
/* END FUNCTION-DEF rmap_subset LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_imm_overflow LOC=UNKNOWN */
static int jit_imm_overflow(struct jit *jit , jit_op *op , jit_value value ) 
{ 
  jit_unsigned_value mask ;
  jit_unsigned_value high_bits ;

  {
#line 6389
  mask = ~ ((1UL << 31) - 1UL);
#line 6390
  high_bits = (unsigned long )value & mask;
#line 6391
  if (! ((int )op->code & 0x04)) {
#line 6392
    if (high_bits != 0UL) {
#line 6392
      if (high_bits != mask) {
#line 6392
        return (1);
      }
    }
  } else
#line 6394
  if (high_bits != 0UL) {
#line 6394
    return (1);
  }
#line 6396
  return (0);
}
}
/* END FUNCTION-DEF jit_imm_overflow LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF emit_set_arg LOC=UNKNOWN */
__inline static void emit_set_arg(struct jit *jit , struct jit_out_arg *arg ) 
{ 
  int sreg ;
  int reg ;
  jit_value value ;
  unsigned char *tmp ;
  unsigned char _amd64_rex_bits ;
  int tmp___0 ;
  int tmp___1 ;
  unsigned char *tmp___2 ;
  unsigned char *tmp___3 ;
  unsigned char *tmp___4 ;
  long tmp___5 ;
  unsigned char *tmp___6 ;
  x86_imm_buf imb ;
  int tmp___7 ;
  unsigned char *tmp___8 ;
  unsigned char *tmp___9 ;
  unsigned char *tmp___10 ;
  unsigned char *tmp___11 ;
  unsigned char *tmp___12 ;
  unsigned char *tmp___13 ;
  unsigned char *tmp___14 ;
  unsigned char *tmp___15 ;
  int tmp___16 ;
  unsigned char *tmp___17 ;
  unsigned char *tmp___18 ;
  x86_imm_buf imb___0 ;
  int tmp___19 ;
  unsigned char *tmp___20 ;
  unsigned char *tmp___21 ;
  unsigned char *tmp___22 ;
  unsigned char *tmp___23 ;
  int tmp___24 ;
  int tmp___25 ;
  int tmp___26 ;
  unsigned char *tmp___27 ;
  int tmp___28 ;
  unsigned char *tmp___29 ;
  int tmp___30 ;
  unsigned char *tmp___31 ;
  x86_imm_buf imb___1 ;
  int tmp___32 ;
  unsigned char *tmp___33 ;
  unsigned char *tmp___34 ;
  unsigned char *tmp___35 ;
  unsigned char *tmp___36 ;
  int tmp___37 ;
  int tmp___38 ;
  unsigned char *tmp___39 ;
  unsigned char _amd64_rex_bits___0 ;
  int tmp___40 ;
  int tmp___41 ;
  int tmp___42 ;
  unsigned char *tmp___43 ;
  unsigned char *tmp___44 ;
  unsigned char *tmp___45 ;
  long tmp___46 ;
  unsigned char *tmp___47 ;
  int tmp___48 ;
  unsigned char _amd64_rex_bits___1 ;
  int tmp___49 ;
  unsigned char *tmp___50 ;
  unsigned char *tmp___51 ;
  amd64_imm_buf imb___2 ;
  unsigned char *tmp___52 ;
  unsigned char *tmp___53 ;
  unsigned char *tmp___54 ;
  unsigned char *tmp___55 ;
  unsigned char *tmp___56 ;
  unsigned char *tmp___57 ;
  unsigned char *tmp___58 ;
  unsigned char *tmp___59 ;
  x86_imm_buf imb___3 ;
  unsigned char *tmp___60 ;
  unsigned char *tmp___61 ;
  unsigned char *tmp___62 ;
  unsigned char *tmp___63 ;

  {
#line 3604
  reg = (*((jit->reg_al)->gp_arg_regs + arg->argpos))->id;
#line 3605
  value = arg->value.generic;
#line 3606
  if (arg->isreg) {
#line 3607
    tmp___48 = is_spilled(value, jit->prepared_args.op, & sreg);
#line 3607
    if (tmp___48) {
#line 3608
      while (1) {
#line 3608
        if ((int )sizeof(void *) == 2) {
#line 3608
          tmp = jit->ip;
#line 3608
          (jit->ip) ++;
#line 3608
          *tmp = (unsigned char)102;
        }
#line 3608
        while (1) {
#line 3608
          if ((int )sizeof(void *) > 4) {
#line 3608
            tmp___0 = 8;
          } else {
#line 3608
            tmp___0 = 0;
          }
#line 3608
          if (reg > 7) {
#line 3608
            tmp___1 = 4;
          } else {
#line 3608
            tmp___1 = 0;
          }
#line 3608
          _amd64_rex_bits = (unsigned char )(tmp___0 | tmp___1);
#line 3608
          if ((int )_amd64_rex_bits != 0) {
#line 3608
            tmp___2 = jit->ip;
#line 3608
            (jit->ip) ++;
#line 3608
            *tmp___2 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
          } else
#line 3608
          if ((int )sizeof(void *) == 1) {
#line 3608
            tmp___2 = jit->ip;
#line 3608
            (jit->ip) ++;
#line 3608
            *tmp___2 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
          }
#line 3608
          break;
        }
#line 3608
        switch ((int )sizeof(void *)) {
        case 1: 
#line 3608
        tmp___3 = jit->ip;
#line 3608
        (jit->ip) ++;
#line 3608
        *tmp___3 = (unsigned char)138;
#line 3608
        break;
        case 8: 
        case 4: 
        case 2: 
#line 3608
        tmp___4 = jit->ip;
#line 3608
        (jit->ip) ++;
#line 3608
        *tmp___4 = (unsigned char)139;
#line 3608
        break;
        default: 
#line 3608
        tmp___5 = __builtin_expect(1L, 0L);
#line 3608
        if (tmp___5) {
#line 3608
          __assert_rtn((char const   *)"emit_set_arg", (char const   *)"tmp/src.c",
                       2408, (char const   *)"0");
        }
        }
#line 3608
        while (1) {
#line 3608
          while (1) {
#line 3608
            if (0) {
#line 3608
              tmp___26 = stack_reg_pos(jit, (int )value);
#line 3608
              if (tmp___26 == 0) {
#line 3608
                while (1) {
#line 3608
                  tmp___12 = jit->ip;
#line 3608
                  (jit->ip) ++;
#line 3608
                  *tmp___12 = (unsigned char )((((reg & 0x7) & 0x07) << 3) | 4);
#line 3608
                  break;
                }
#line 3608
                while (1) {
#line 3608
                  tmp___13 = jit->ip;
#line 3608
                  (jit->ip) ++;
#line 3608
                  *tmp___13 = (unsigned char )((4 << 3) | 4);
#line 3608
                  break;
                }
              } else {
#line 3608
                tmp___24 = stack_reg_pos(jit, (int )value);
#line 3608
                if ((jit_value )tmp___24 >= -128L) {
#line 3608
                  tmp___25 = stack_reg_pos(jit, (int )value);
#line 3608
                  if ((jit_value )tmp___25 <= 127L) {
#line 3608
                    while (1) {
#line 3608
                      tmp___14 = jit->ip;
#line 3608
                      (jit->ip) ++;
#line 3608
                      *tmp___14 = (unsigned char )(((1 << 6) | (((reg & 0x7) & 0x07) << 3)) | 4);
#line 3608
                      break;
                    }
#line 3608
                    while (1) {
#line 3608
                      tmp___15 = jit->ip;
#line 3608
                      (jit->ip) ++;
#line 3608
                      *tmp___15 = (unsigned char )((4 << 3) | 4);
#line 3608
                      break;
                    }
#line 3608
                    while (1) {
#line 3608
                      tmp___16 = stack_reg_pos(jit, (int )value);
#line 3608
                      *(jit->ip) = (unsigned char )(tmp___16 & 0xff);
#line 3608
                      (jit->ip) ++;
#line 3608
                      break;
                    }
                  } else {
#line 3608
                    goto _L;
                  }
                } else {
                  _L: /* CIL Label */ 
#line 3608
                  while (1) {
#line 3608
                    tmp___17 = jit->ip;
#line 3608
                    (jit->ip) ++;
#line 3608
                    *tmp___17 = (unsigned char )(((2 << 6) | (((reg & 0x7) & 0x07) << 3)) | 4);
#line 3608
                    break;
                  }
#line 3608
                  while (1) {
#line 3608
                    tmp___18 = jit->ip;
#line 3608
                    (jit->ip) ++;
#line 3608
                    *tmp___18 = (unsigned char )((4 << 3) | 4);
#line 3608
                    break;
                  }
#line 3608
                  while (1) {
#line 3608
                    tmp___19 = stack_reg_pos(jit, (int )value);
#line 3608
                    imb___0.val = tmp___19;
#line 3608
                    tmp___20 = jit->ip;
#line 3608
                    (jit->ip) ++;
#line 3608
                    *tmp___20 = imb___0.b[0];
#line 3608
                    tmp___21 = jit->ip;
#line 3608
                    (jit->ip) ++;
#line 3608
                    *tmp___21 = imb___0.b[1];
#line 3608
                    tmp___22 = jit->ip;
#line 3608
                    (jit->ip) ++;
#line 3608
                    *tmp___22 = imb___0.b[2];
#line 3608
                    tmp___23 = jit->ip;
#line 3608
                    (jit->ip) ++;
#line 3608
                    *tmp___23 = imb___0.b[3];
#line 3608
                    break;
                  }
                }
              }
#line 3608
              break;
            }
#line 3608
            tmp___28 = stack_reg_pos(jit, (int )value);
#line 3608
            if (tmp___28 == 0) {

            }
#line 3608
            tmp___37 = stack_reg_pos(jit, (int )value);
#line 3608
            if ((jit_value )tmp___37 >= -128L) {
#line 3608
              tmp___38 = stack_reg_pos(jit, (int )value);
#line 3608
              if ((jit_value )tmp___38 <= 127L) {
#line 3608
                while (1) {
#line 3608
                  tmp___29 = jit->ip;
#line 3608
                  (jit->ip) ++;
#line 3608
                  *tmp___29 = (unsigned char )(((1 << 6) | (((reg & 0x7) & 0x07) << 3)) | 5);
#line 3608
                  break;
                }
#line 3608
                while (1) {
#line 3608
                  tmp___30 = stack_reg_pos(jit, (int )value);
#line 3608
                  *(jit->ip) = (unsigned char )(tmp___30 & 0xff);
#line 3608
                  (jit->ip) ++;
#line 3608
                  break;
                }
              } else {
#line 3608
                goto _L___0;
              }
            } else {
              _L___0: /* CIL Label */ 
#line 3608
              while (1) {
#line 3608
                tmp___31 = jit->ip;
#line 3608
                (jit->ip) ++;
#line 3608
                *tmp___31 = (unsigned char )(((2 << 6) | (((reg & 0x7) & 0x07) << 3)) | 5);
#line 3608
                break;
              }
#line 3608
              while (1) {
#line 3608
                tmp___32 = stack_reg_pos(jit, (int )value);
#line 3608
                imb___1.val = tmp___32;
#line 3608
                tmp___33 = jit->ip;
#line 3608
                (jit->ip) ++;
#line 3608
                *tmp___33 = imb___1.b[0];
#line 3608
                tmp___34 = jit->ip;
#line 3608
                (jit->ip) ++;
#line 3608
                *tmp___34 = imb___1.b[1];
#line 3608
                tmp___35 = jit->ip;
#line 3608
                (jit->ip) ++;
#line 3608
                *tmp___35 = imb___1.b[2];
#line 3608
                tmp___36 = jit->ip;
#line 3608
                (jit->ip) ++;
#line 3608
                *tmp___36 = imb___1.b[3];
#line 3608
                break;
              }
            }
#line 3608
            break;
          }
#line 3608
          break;
        }
#line 3608
        break;
      }
    } else
#line 3610
    if (reg != sreg) {
#line 3610
      while (1) {
#line 3610
        if ((int )sizeof(void *) == 2) {
#line 3610
          tmp___39 = jit->ip;
#line 3610
          (jit->ip) ++;
#line 3610
          *tmp___39 = (unsigned char)102;
        }
#line 3610
        while (1) {
#line 3610
          if ((int )sizeof(void *) > 4) {
#line 3610
            tmp___40 = 8;
          } else {
#line 3610
            tmp___40 = 0;
          }
#line 3610
          if (reg > 7) {
#line 3610
            tmp___41 = 4;
          } else {
#line 3610
            tmp___41 = 0;
          }
#line 3610
          if (sreg > 7) {
#line 3610
            tmp___42 = 1;
          } else {
#line 3610
            tmp___42 = 0;
          }
#line 3610
          _amd64_rex_bits___0 = (unsigned char )((tmp___40 | tmp___41) | tmp___42);
#line 3610
          if ((int )_amd64_rex_bits___0 != 0) {
#line 3610
            tmp___43 = jit->ip;
#line 3610
            (jit->ip) ++;
#line 3610
            *tmp___43 = (unsigned char )(0x40 | (int )_amd64_rex_bits___0);
          } else
#line 3610
          if ((int )sizeof(void *) == 1) {
#line 3610
            tmp___43 = jit->ip;
#line 3610
            (jit->ip) ++;
#line 3610
            *tmp___43 = (unsigned char )(0x40 | (int )_amd64_rex_bits___0);
          }
#line 3610
          break;
        }
#line 3610
        switch ((int )sizeof(void *)) {
        case 1: 
#line 3610
        tmp___44 = jit->ip;
#line 3610
        (jit->ip) ++;
#line 3610
        *tmp___44 = (unsigned char)138;
#line 3610
        break;
        case 8: 
        case 4: 
        case 2: 
#line 3610
        tmp___45 = jit->ip;
#line 3610
        (jit->ip) ++;
#line 3610
        *tmp___45 = (unsigned char)139;
#line 3610
        break;
        default: 
#line 3610
        tmp___46 = __builtin_expect(1L, 0L);
#line 3610
        if (tmp___46) {
#line 3610
          __assert_rtn((char const   *)"emit_set_arg", (char const   *)"tmp/src.c",
                       2410, (char const   *)"0");
        }
        }
#line 3610
        while (1) {
#line 3610
          while (1) {
#line 3610
            tmp___47 = jit->ip;
#line 3610
            (jit->ip) ++;
#line 3610
            *tmp___47 = (unsigned char )(((3 << 6) | ((reg & 0x07) << 3)) | (sreg & 0x07));
#line 3610
            break;
          }
#line 3610
          break;
        }
#line 3610
        break;
      }
    }
  } else {
#line 3612
    while (1) {
#line 3612
      while (1) {
#line 3612
        if (reg > 7) {
#line 3612
          tmp___49 = 1;
        } else {
#line 3612
          tmp___49 = 0;
        }
#line 3612
        _amd64_rex_bits___1 = (unsigned char )(8 | tmp___49);
#line 3612
        if ((int )_amd64_rex_bits___1 != 0) {
#line 3612
          tmp___50 = jit->ip;
#line 3612
          (jit->ip) ++;
#line 3612
          *tmp___50 = (unsigned char )(0x40 | (int )_amd64_rex_bits___1);
        }
#line 3612
        break;
      }
#line 3612
      tmp___51 = jit->ip;
#line 3612
      (jit->ip) ++;
#line 3612
      *tmp___51 = (unsigned char )(184 + (reg & 0x7));
#line 3612
      while (1) {
#line 3612
        imb___2.val = (size_t )value;
#line 3612
        tmp___52 = jit->ip;
#line 3612
        (jit->ip) ++;
#line 3612
        *tmp___52 = imb___2.b[0];
#line 3612
        tmp___53 = jit->ip;
#line 3612
        (jit->ip) ++;
#line 3612
        *tmp___53 = imb___2.b[1];
#line 3612
        tmp___54 = jit->ip;
#line 3612
        (jit->ip) ++;
#line 3612
        *tmp___54 = imb___2.b[2];
#line 3612
        tmp___55 = jit->ip;
#line 3612
        (jit->ip) ++;
#line 3612
        *tmp___55 = imb___2.b[3];
#line 3612
        tmp___56 = jit->ip;
#line 3612
        (jit->ip) ++;
#line 3612
        *tmp___56 = imb___2.b[4];
#line 3612
        tmp___57 = jit->ip;
#line 3612
        (jit->ip) ++;
#line 3612
        *tmp___57 = imb___2.b[5];
#line 3612
        tmp___58 = jit->ip;
#line 3612
        (jit->ip) ++;
#line 3612
        *tmp___58 = imb___2.b[6];
#line 3612
        tmp___59 = jit->ip;
#line 3612
        (jit->ip) ++;
#line 3612
        *tmp___59 = imb___2.b[7];
#line 3612
        break;
      }
#line 3612
      break;
    }
  }
#line 3613
  return;
}
}
/* END FUNCTION-DEF emit_set_arg LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_set_size LOC=UNKNOWN */
__inline static int jit_set_size(jit_set *s ) 
{ 
  int tmp ;

  {
#line 2298
  tmp = jit_tree_size(s->root);
#line 2298
  return (tmp);
}
}
/* END FUNCTION-DEF jit_set_size LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF print_args LOC=UNKNOWN */
static void print_args(struct jit_disasm *disasm , struct output_buf *linebuf , jit_op *op ,
                       jit_tree *labels ) 
{ 
  int i ;
  char *tmp ;
  int tmp___0 ;

  {
#line 5246
  i = 1;
#line 5246
  while (i <= 3) {
#line 5247
    if ((((int )op->spec >> (i - 1) * 2) & 0x03) == 0x00) {
#line 5247
      goto __Cont;
    }
#line 5248
    if (i == 1) {
#line 5248
      tmp = " ";
    } else {
#line 5248
      tmp = ", ";
    }
#line 5248
    ob_append(linebuf, tmp);
#line 5249
    if (i == 1) {
#line 5249
      tmp___0 = jit_op_is_cflow(op);
#line 5249
      if (tmp___0) {
#line 5249
        print_addr(disasm, linebuf, labels, op, 0);
      } else {
#line 5250
        print_arg(disasm, linebuf, op, i);
      }
    } else {
#line 5250
      print_arg(disasm, linebuf, op, i);
    }
    __Cont: /* CIL Label */ 
#line 5246
    i ++;
  }
#line 5252
  return;
}
}
/* END FUNCTION-DEF print_args LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF init_tigress LOC=UNKNOWN */
void init_tigress(void) 
{ 
  struct _TIG_iO_tgVA_2_init_tigress_1_opaqueNodeStruct *p1 ;
  int i2 ;
  struct _TIG_iO_tgVA_2_init_tigress_1_opaqueNodeStruct *p3 ;

  {
  while (1) {
    __asm__ volatile ("##_ANNOTATION_INITIALREGION_-TIG-iO-tgVA-2-init-tigress--2":);
    {
    {
    while (1) {
      __asm__ volatile ("##_ANNOTATION_ATOMICREGION_-TIG-iO-tgVA-2-init-tigress--1":);
      p1 = (struct _TIG_iO_tgVA_2_init_tigress_1_opaqueNodeStruct *)malloc(sizeof(struct _TIG_iO_tgVA_2_init_tigress_1_opaqueNodeStruct ));
      p1->next = p1;
      p1->prev = p1;
      _TIG_iO_tgVA_2_init_tigress_1_opaque_list_1 = p1;
      i2 = 0;
      while (i2 < 2) {
        p3 = (struct _TIG_iO_tgVA_2_init_tigress_1_opaqueNodeStruct *)malloc(sizeof(struct _TIG_iO_tgVA_2_init_tigress_1_opaqueNodeStruct ));
        p3->data = i2 * (_TIG_iE_tgVA_1_entropy | 10);
        p3->next = _TIG_iO_tgVA_2_init_tigress_1_opaque_list_1->next;
        p3->prev = _TIG_iO_tgVA_2_init_tigress_1_opaque_list_1;
        (_TIG_iO_tgVA_2_init_tigress_1_opaque_list_1->next)->prev = p3;
        _TIG_iO_tgVA_2_init_tigress_1_opaque_list_1->next = p3;
        i2 ++;
      }
      _TIG_iO_tgVA_2_init_tigress_1_opaque_ptr_1 = _TIG_iO_tgVA_2_init_tigress_1_opaque_list_1->next;
      _TIG_iO_tgVA_2_init_tigress_1_opaque_ptr_2 = _TIG_iO_tgVA_2_init_tigress_1_opaque_ptr_1;
      _TIG_iO_tgVA_2_init_tigress_1_opaque_ptr_2 = _TIG_iO_tgVA_2_init_tigress_1_opaque_ptr_2->next;
      break;
    }
    }
    }
    break;
  }
#line 23 "test-jit.c"
  return;
}
}
/* END FUNCTION-DEF init_tigress LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF spill_ret_retreg LOC=UNKNOWN */
static void spill_ret_retreg(jit_op *op , jit_hw_reg *ret_reg ) 
{ 
  jit_value r ;
  jit_hw_reg *hreg ;
  jit_hw_reg *tmp ;

  {
#line 6018
  if (ret_reg) {
#line 6019 "<string>"
    tmp = rmap_is_associated(op->regmap, ret_reg->id, (int )ret_reg->fp, & r);
#line 6019
    hreg = tmp;
#line 6020
    if (hreg) {
#line 6020
      rmap_unassoc(op->regmap, r);
    }
  }
#line 6022
  return;
}
}
/* END FUNCTION-DEF spill_ret_retreg LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF emit_div_op LOC=UNKNOWN */
static void emit_div_op(struct jit *jit , struct jit_op *op , int imm , int sign ,
                        int modulo ) 
{ 
  jit_value dest ;
  jit_value dividend ;
  jit_value divisor ;
  unsigned char *tmp ;
  unsigned char _amd64_rex_bits ;
  int tmp___0 ;
  int tmp___1 ;
  int tmp___2 ;
  unsigned char *tmp___3 ;
  unsigned char *tmp___4 ;
  unsigned char *tmp___5 ;
  long tmp___6 ;
  unsigned char *tmp___7 ;
  unsigned char _amd64_rex_bits___0 ;
  int tmp___8 ;
  unsigned char *tmp___9 ;
  unsigned char *tmp___10 ;
  unsigned char *tmp___11 ;
  int tmp___12 ;
  unsigned char *tmp___13 ;
  unsigned char *tmp___14 ;
  int tmp___15 ;
  unsigned char _amd64_rex_bits___1 ;
  int tmp___16 ;
  unsigned char *tmp___17 ;
  unsigned char *tmp___18 ;
  unsigned char *tmp___19 ;
  int tmp___20 ;
  unsigned char *tmp___21 ;
  unsigned char *tmp___22 ;
  int tmp___23 ;
  unsigned char _amd64_rex_bits___2 ;
  int tmp___24 ;
  unsigned char *tmp___25 ;
  unsigned char *tmp___26 ;
  unsigned char *tmp___27 ;
  int tmp___28 ;
  unsigned char *tmp___29 ;
  unsigned char *tmp___30 ;
  int tmp___31 ;
  unsigned char _amd64_rex_bits___3 ;
  int tmp___32 ;
  unsigned char *tmp___33 ;
  unsigned char *tmp___34 ;
  unsigned char *tmp___35 ;
  unsigned char _amd64_rex_bits___4 ;
  unsigned char *tmp___36 ;
  unsigned char *tmp___37 ;
  x86_imm_buf imb ;
  unsigned char *tmp___38 ;
  unsigned char *tmp___39 ;
  unsigned char *tmp___40 ;
  unsigned char *tmp___41 ;
  unsigned char _amd64_rex_bits___5 ;
  int tmp___42 ;
  unsigned char *tmp___43 ;
  unsigned char *tmp___44 ;
  unsigned char *tmp___45 ;
  x86_imm_buf imb___0 ;
  unsigned char *tmp___46 ;
  unsigned char *tmp___47 ;
  unsigned char *tmp___48 ;
  unsigned char *tmp___49 ;
  unsigned char _amd64_rex_bits___6 ;
  int tmp___50 ;
  unsigned char *tmp___51 ;
  unsigned char *tmp___52 ;
  unsigned char *tmp___53 ;
  unsigned char _amd64_rex_bits___7 ;
  unsigned char *tmp___54 ;
  unsigned char *tmp___55 ;
  x86_imm_buf imb___1 ;
  unsigned char *tmp___56 ;
  unsigned char *tmp___57 ;
  unsigned char *tmp___58 ;
  unsigned char *tmp___59 ;
  unsigned char _amd64_rex_bits___8 ;
  int tmp___60 ;
  unsigned char *tmp___61 ;
  unsigned char *tmp___62 ;
  unsigned char *tmp___63 ;
  x86_imm_buf imb___2 ;
  unsigned char *tmp___64 ;
  unsigned char *tmp___65 ;
  unsigned char *tmp___66 ;
  unsigned char *tmp___67 ;
  unsigned char _amd64_rex_bits___9 ;
  int tmp___68 ;
  unsigned char *tmp___69 ;
  unsigned char *tmp___70 ;
  unsigned char *tmp___71 ;
  unsigned char _amd64_rex_bits___10 ;
  unsigned char *tmp___72 ;
  unsigned char *tmp___73 ;
  x86_imm_buf imb___3 ;
  unsigned char *tmp___74 ;
  unsigned char *tmp___75 ;
  unsigned char *tmp___76 ;
  unsigned char *tmp___77 ;
  unsigned char _amd64_rex_bits___11 ;
  int tmp___78 ;
  unsigned char *tmp___79 ;
  unsigned char *tmp___80 ;
  unsigned char *tmp___81 ;
  x86_imm_buf imb___4 ;
  unsigned char *tmp___82 ;
  unsigned char *tmp___83 ;
  unsigned char *tmp___84 ;
  unsigned char *tmp___85 ;
  int ax_in_use ;
  int tmp___86 ;
  int dx_in_use ;
  int tmp___87 ;
  unsigned char _amd64_rex_bits___12 ;
  unsigned char *tmp___88 ;
  unsigned char *tmp___89 ;
  unsigned char _amd64_rex_bits___13 ;
  unsigned char *tmp___90 ;
  unsigned char *tmp___91 ;
  unsigned char *tmp___92 ;
  unsigned char _amd64_rex_bits___14 ;
  int tmp___93 ;
  int tmp___94 ;
  unsigned char *tmp___95 ;
  unsigned char *tmp___96 ;
  unsigned char *tmp___97 ;
  long tmp___98 ;
  unsigned char *tmp___99 ;
  unsigned char _amd64_rex_bits___15 ;
  unsigned char *tmp___100 ;
  unsigned char *tmp___101 ;
  unsigned char _amd64_rex_bits___16 ;
  unsigned char *tmp___102 ;
  unsigned char *tmp___103 ;
  unsigned char *tmp___104 ;
  unsigned char _amd64_rex_bits___17 ;
  unsigned char *tmp___105 ;
  unsigned char *tmp___106 ;
  unsigned char _amd64_rex_bits___18 ;
  int tmp___107 ;
  unsigned char *tmp___108 ;
  unsigned char *tmp___109 ;
  amd64_imm_buf imb___5 ;
  unsigned char *tmp___110 ;
  unsigned char *tmp___111 ;
  unsigned char *tmp___112 ;
  unsigned char *tmp___113 ;
  unsigned char *tmp___114 ;
  unsigned char *tmp___115 ;
  unsigned char *tmp___116 ;
  unsigned char *tmp___117 ;
  x86_imm_buf imb___6 ;
  unsigned char *tmp___118 ;
  unsigned char *tmp___119 ;
  unsigned char *tmp___120 ;
  unsigned char *tmp___121 ;
  unsigned char _amd64_rex_bits___19 ;
  unsigned char *tmp___122 ;
  unsigned char *tmp___123 ;
  unsigned char *tmp___124 ;
  int tmp___125 ;
  unsigned char _amd64_rex_bits___20 ;
  unsigned char *tmp___126 ;
  unsigned char *tmp___127 ;
  unsigned char _amd64_rex_bits___21 ;
  int tmp___128 ;
  unsigned char *tmp___129 ;
  unsigned char *tmp___130 ;
  unsigned char *tmp___131 ;
  unsigned char _amd64_rex_bits___22 ;
  int tmp___132 ;
  int tmp___133 ;
  unsigned char *tmp___134 ;
  unsigned char *tmp___135 ;
  unsigned char *tmp___136 ;
  long tmp___137 ;
  unsigned char *tmp___138 ;
  unsigned char _amd64_rex_bits___23 ;
  unsigned char *tmp___139 ;
  unsigned char *tmp___140 ;
  unsigned char _amd64_rex_bits___24 ;
  unsigned char *tmp___141 ;
  unsigned char *tmp___142 ;
  unsigned char *tmp___143 ;
  unsigned char _amd64_rex_bits___25 ;
  unsigned char *tmp___144 ;
  unsigned char *tmp___145 ;
  unsigned char *tmp___146 ;
  int tmp___147 ;
  unsigned char *tmp___148 ;
  unsigned char *tmp___149 ;
  int tmp___150 ;
  unsigned char *tmp___151 ;
  unsigned char *tmp___152 ;
  int tmp___153 ;
  unsigned char *tmp___154 ;
  x86_imm_buf imb___7 ;
  unsigned char *tmp___155 ;
  unsigned char *tmp___156 ;
  unsigned char *tmp___157 ;
  unsigned char *tmp___158 ;
  unsigned char *tmp___159 ;
  int tmp___160 ;
  unsigned char *tmp___161 ;
  int tmp___162 ;
  unsigned char *tmp___163 ;
  int tmp___164 ;
  x86_imm_buf imb___8 ;
  unsigned char *tmp___165 ;
  unsigned char *tmp___166 ;
  unsigned char *tmp___167 ;
  unsigned char *tmp___168 ;
  unsigned char _amd64_rex_bits___26 ;
  unsigned char *tmp___169 ;
  unsigned char *tmp___170 ;
  unsigned char *tmp___171 ;
  unsigned char _amd64_rex_bits___27 ;
  unsigned char *tmp___172 ;
  unsigned char *tmp___173 ;
  x86_imm_buf imb___9 ;
  unsigned char *tmp___174 ;
  unsigned char *tmp___175 ;
  unsigned char *tmp___176 ;
  unsigned char *tmp___177 ;
  unsigned char _amd64_rex_bits___28 ;
  unsigned char *tmp___178 ;
  unsigned char *tmp___179 ;
  unsigned char *tmp___180 ;
  x86_imm_buf imb___10 ;
  unsigned char *tmp___181 ;
  unsigned char *tmp___182 ;
  unsigned char *tmp___183 ;
  unsigned char *tmp___184 ;
  unsigned char _amd64_rex_bits___29 ;
  int tmp___185 ;
  unsigned char *tmp___186 ;
  unsigned char *tmp___187 ;
  unsigned char *tmp___188 ;
  int tmp___189 ;
  unsigned char *tmp___190 ;
  unsigned char _amd64_rex_bits___30 ;
  int tmp___191 ;
  int tmp___192 ;
  unsigned char *tmp___193 ;
  unsigned char *tmp___194 ;
  unsigned char *tmp___195 ;
  long tmp___196 ;
  unsigned char *tmp___197 ;
  unsigned char *tmp___198 ;
  unsigned char _amd64_rex_bits___31 ;
  int tmp___199 ;
  int tmp___200 ;
  unsigned char *tmp___201 ;
  unsigned char *tmp___202 ;
  unsigned char *tmp___203 ;
  long tmp___204 ;
  unsigned char *tmp___205 ;
  unsigned char _amd64_rex_bits___32 ;
  unsigned char *tmp___206 ;
  unsigned char *tmp___207 ;
  unsigned char _amd64_rex_bits___33 ;
  unsigned char *tmp___208 ;
  unsigned char *tmp___209 ;

  {
#line 4245
  dest = op->r_arg[0];
#line 4246
  dividend = op->r_arg[1];
#line 4247
  divisor = op->r_arg[2];
#line 4248
  if (imm) {
#line 4248
    if (divisor == 2L) {
#line 4248
      goto _L;
    } else
#line 4248
    if (divisor == 4L) {
#line 4248
      goto _L;
    } else
#line 4248
    if (divisor == 8L) {
      _L: /* CIL Label */ 
#line 4249
      if (dest != dividend) {
#line 4249
        while (1) {
#line 4249
          if ((int )sizeof(void *) == 2) {
#line 4249
            tmp = jit->ip;
#line 4249
            (jit->ip) ++;
#line 4249
            *tmp = (unsigned char)102;
          }
#line 4249
          while (1) {
#line 4249
            if ((int )sizeof(void *) > 4) {
#line 4249
              tmp___0 = 8;
            } else {
#line 4249
              tmp___0 = 0;
            }
#line 4249
            if (dest > 7L) {
#line 4249
              tmp___1 = 4;
            } else {
#line 4249
              tmp___1 = 0;
            }
#line 4249
            if (dividend > 7L) {
#line 4249
              tmp___2 = 1;
            } else {
#line 4249
              tmp___2 = 0;
            }
#line 4249
            _amd64_rex_bits = (unsigned char )((tmp___0 | tmp___1) | tmp___2);
#line 4249
            if ((int )_amd64_rex_bits != 0) {
#line 4249
              tmp___3 = jit->ip;
#line 4249
              (jit->ip) ++;
#line 4249
              *tmp___3 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
            } else
#line 4249
            if ((int )sizeof(void *) == 1) {
#line 4249
              tmp___3 = jit->ip;
#line 4249
              (jit->ip) ++;
#line 4249
              *tmp___3 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
            }
#line 4249
            break;
          }
#line 4249
          switch ((int )sizeof(void *)) {
          case 1: 
#line 4249
          tmp___4 = jit->ip;
#line 4249
          (jit->ip) ++;
#line 4249
          *tmp___4 = (unsigned char)138;
#line 4249
          break;
          case 8: 
          case 4: 
          case 2: 
#line 4249
          tmp___5 = jit->ip;
#line 4249
          (jit->ip) ++;
#line 4249
          *tmp___5 = (unsigned char)139;
#line 4249
          break;
          default: 
#line 4249
          tmp___6 = __builtin_expect(1L, 0L);
#line 4249
          if (tmp___6) {
#line 4249
            __assert_rtn((char const   *)"emit_div_op", (char const   *)"tmp/src.c",
                         3235, (char const   *)"0");
          }
          }
#line 4249
          while (1) {
#line 4249
            while (1) {
#line 4249
              tmp___7 = jit->ip;
#line 4249
              (jit->ip) ++;
#line 4249
              *tmp___7 = (unsigned char )(((long )(3 << 6) | ((dest & 7L) << 3)) | (dividend & 7L));
#line 4249
              break;
            }
#line 4249
            break;
          }
#line 4249
          break;
        }
      }
#line 4250
      if (! modulo) {
#line 4251
        switch (divisor) {
        case 2L: 
#line 4252
        while (1) {
#line 4252
          while (1) {
#line 4252
            if (dest > 7L) {
#line 4252
              tmp___8 = 1;
            } else {
#line 4252
              tmp___8 = 0;
            }
#line 4252
            _amd64_rex_bits___0 = (unsigned char )(8 | tmp___8);
#line 4252
            if ((int )_amd64_rex_bits___0 != 0) {
#line 4252
              tmp___9 = jit->ip;
#line 4252
              (jit->ip) ++;
#line 4252
              *tmp___9 = (unsigned char )(0x40 | (int )_amd64_rex_bits___0);
            }
#line 4252
            break;
          }
#line 4252
          while (1) {
#line 4252
            tmp___10 = jit->ip;
#line 4252
            (jit->ip) ++;
#line 4252
            *tmp___10 = (unsigned char)209;
#line 4252
            while (1) {
#line 4252
              while (1) {
#line 4252
                tmp___11 = jit->ip;
#line 4252
                (jit->ip) ++;
#line 4252
                if (sign) {
#line 4252
                  tmp___12 = 7;
                } else {
#line 4252
                  tmp___12 = 5;
                }
#line 4252
                *tmp___11 = (unsigned char )((long )((3 << 6) | ((tmp___12 & 0x07) << 3)) | ((dest & 7L) & 7L));
#line 4252
                break;
              }
#line 4252
              break;
            }
#line 4252
            break;
          }
#line 4252
          break;
        }
#line 4252
        break;
        case 4L: 
#line 4253
        while (1) {
#line 4253
          while (1) {
#line 4253
            if (dest > 7L) {
#line 4253
              tmp___16 = 1;
            } else {
#line 4253
              tmp___16 = 0;
            }
#line 4253
            _amd64_rex_bits___1 = (unsigned char )(8 | tmp___16);
#line 4253
            if ((int )_amd64_rex_bits___1 != 0) {
#line 4253
              tmp___17 = jit->ip;
#line 4253
              (jit->ip) ++;
#line 4253
              *tmp___17 = (unsigned char )(0x40 | (int )_amd64_rex_bits___1);
            }
#line 4253
            break;
          }
#line 4253
          while (1) {
#line 4253
            tmp___21 = jit->ip;
#line 4253
            (jit->ip) ++;
#line 4253
            *tmp___21 = (unsigned char)193;
#line 4253
            while (1) {
#line 4253
              while (1) {
#line 4253
                tmp___22 = jit->ip;
#line 4253
                (jit->ip) ++;
#line 4253
                if (sign) {
#line 4253
                  tmp___23 = 7;
                } else {
#line 4253
                  tmp___23 = 5;
                }
#line 4253
                *tmp___22 = (unsigned char )((long )((3 << 6) | ((tmp___23 & 0x07) << 3)) | ((dest & 7L) & 7L));
#line 4253
                break;
              }
#line 4253
              break;
            }
#line 4253
            while (1) {
#line 4253
              *(jit->ip) = (unsigned char)2;
#line 4253
              (jit->ip) ++;
#line 4253
              break;
            }
#line 4253
            break;
          }
#line 4253
          break;
        }
#line 4253
        break;
        case 8L: 
#line 4254
        while (1) {
#line 4254
          while (1) {
#line 4254
            if (dest > 7L) {
#line 4254
              tmp___24 = 1;
            } else {
#line 4254
              tmp___24 = 0;
            }
#line 4254
            _amd64_rex_bits___2 = (unsigned char )(8 | tmp___24);
#line 4254
            if ((int )_amd64_rex_bits___2 != 0) {
#line 4254
              tmp___25 = jit->ip;
#line 4254
              (jit->ip) ++;
#line 4254
              *tmp___25 = (unsigned char )(0x40 | (int )_amd64_rex_bits___2);
            }
#line 4254
            break;
          }
#line 4254
          while (1) {
#line 4254
            tmp___29 = jit->ip;
#line 4254
            (jit->ip) ++;
#line 4254
            *tmp___29 = (unsigned char)193;
#line 4254
            while (1) {
#line 4254
              while (1) {
#line 4254
                tmp___30 = jit->ip;
#line 4254
                (jit->ip) ++;
#line 4254
                if (sign) {
#line 4254
                  tmp___31 = 7;
                } else {
#line 4254
                  tmp___31 = 5;
                }
#line 4254
                *tmp___30 = (unsigned char )((long )((3 << 6) | ((tmp___31 & 0x07) << 3)) | ((dest & 7L) & 7L));
#line 4254
                break;
              }
#line 4254
              break;
            }
#line 4254
            while (1) {
#line 4254
              *(jit->ip) = (unsigned char)3;
#line 4254
              (jit->ip) ++;
#line 4254
              break;
            }
#line 4254
            break;
          }
#line 4254
          break;
        }
#line 4254
        break;
        }
#line 4256
        return;
      }
#line 4258
      if (modulo) {
#line 4258
        if (! sign) {
#line 4259
          switch (divisor) {
          case 2L: 
#line 4260
          while (1) {
#line 4260
            while (1) {
#line 4260
              if (dest > 7L) {
#line 4260
                tmp___32 = 1;
              } else {
#line 4260
                tmp___32 = 0;
              }
#line 4260
              _amd64_rex_bits___3 = (unsigned char )(8 | tmp___32);
#line 4260
              if ((int )_amd64_rex_bits___3 != 0) {
#line 4260
                tmp___33 = jit->ip;
#line 4260
                (jit->ip) ++;
#line 4260
                *tmp___33 = (unsigned char )(0x40 | (int )_amd64_rex_bits___3);
              }
#line 4260
              break;
            }
#line 4260
            tmp___34 = jit->ip;
#line 4260
            (jit->ip) ++;
#line 4260
            *tmp___34 = (unsigned char)131;
#line 4260
            while (1) {
#line 4260
              while (1) {
#line 4260
                tmp___35 = jit->ip;
#line 4260
                (jit->ip) ++;
#line 4260
                *tmp___35 = (unsigned char )((long )((3 << 6) | (4 << 3)) | (dest & 7L));
#line 4260
                break;
              }
#line 4260
              break;
            }
#line 4260
            while (1) {
#line 4260
              *(jit->ip) = (unsigned char)1;
#line 4260
              (jit->ip) ++;
#line 4260
              break;
            }
#line 4260
            break;
          }
#line 4260
          break;
          case 4L: 
#line 4261
          while (1) {
#line 4261
            while (1) {
#line 4261
              if (dest > 7L) {
#line 4261
                tmp___50 = 1;
              } else {
#line 4261
                tmp___50 = 0;
              }
#line 4261
              _amd64_rex_bits___6 = (unsigned char )(8 | tmp___50);
#line 4261
              if ((int )_amd64_rex_bits___6 != 0) {
#line 4261
                tmp___51 = jit->ip;
#line 4261
                (jit->ip) ++;
#line 4261
                *tmp___51 = (unsigned char )(0x40 | (int )_amd64_rex_bits___6);
              }
#line 4261
              break;
            }
#line 4261
            tmp___52 = jit->ip;
#line 4261
            (jit->ip) ++;
#line 4261
            *tmp___52 = (unsigned char)131;
#line 4261
            while (1) {
#line 4261
              while (1) {
#line 4261
                tmp___53 = jit->ip;
#line 4261
                (jit->ip) ++;
#line 4261
                *tmp___53 = (unsigned char )((long )((3 << 6) | (4 << 3)) | (dest & 7L));
#line 4261
                break;
              }
#line 4261
              break;
            }
#line 4261
            while (1) {
#line 4261
              *(jit->ip) = (unsigned char)3;
#line 4261
              (jit->ip) ++;
#line 4261
              break;
            }
#line 4261
            break;
          }
#line 4261
          break;
          case 8L: 
#line 4262
          while (1) {
#line 4262
            while (1) {
#line 4262
              if (dest > 7L) {
#line 4262
                tmp___68 = 1;
              } else {
#line 4262
                tmp___68 = 0;
              }
#line 4262
              _amd64_rex_bits___9 = (unsigned char )(8 | tmp___68);
#line 4262
              if ((int )_amd64_rex_bits___9 != 0) {
#line 4262
                tmp___69 = jit->ip;
#line 4262
                (jit->ip) ++;
#line 4262
                *tmp___69 = (unsigned char )(0x40 | (int )_amd64_rex_bits___9);
              }
#line 4262
              break;
            }
#line 4262
            tmp___70 = jit->ip;
#line 4262
            (jit->ip) ++;
#line 4262
            *tmp___70 = (unsigned char)131;
#line 4262
            while (1) {
#line 4262
              while (1) {
#line 4262
                tmp___71 = jit->ip;
#line 4262
                (jit->ip) ++;
#line 4262
                *tmp___71 = (unsigned char )((long )((3 << 6) | (4 << 3)) | (dest & 7L));
#line 4262
                break;
              }
#line 4262
              break;
            }
#line 4262
            while (1) {
#line 4262
              *(jit->ip) = (unsigned char)7;
#line 4262
              (jit->ip) ++;
#line 4262
              break;
            }
#line 4262
            break;
          }
#line 4262
          break;
          }
#line 4264
          return;
        }
      }
    }
  }
#line 4267
  tmp___86 = jit_reg_in_use(op, 0, 0);
#line 4267
  ax_in_use = tmp___86;
#line 4268
  tmp___87 = jit_reg_in_use(op, 2, 0);
#line 4268
  dx_in_use = tmp___87;
#line 4269
  if (dest != 0L) {
#line 4269
    if (ax_in_use) {
#line 4269
      while (1) {
#line 4269
        while (1) {
#line 4269
          _amd64_rex_bits___12 = (unsigned char)0;
#line 4269
          if ((int )_amd64_rex_bits___12 != 0) {
#line 4269
            tmp___88 = jit->ip;
#line 4269
            (jit->ip) ++;
#line 4269
            *tmp___88 = (unsigned char )(0x40 | (int )_amd64_rex_bits___12);
          }
#line 4269
          break;
        }
#line 4269
        tmp___89 = jit->ip;
#line 4269
        (jit->ip) ++;
#line 4269
        *tmp___89 = (unsigned char)80;
#line 4269
        break;
      }
    }
  }
#line 4270
  if (dest != 2L) {
#line 4270
    if (dx_in_use) {
#line 4270
      while (1) {
#line 4270
        while (1) {
#line 4270
          _amd64_rex_bits___13 = (unsigned char)0;
#line 4270
          if ((int )_amd64_rex_bits___13 != 0) {
#line 4270
            tmp___90 = jit->ip;
#line 4270
            (jit->ip) ++;
#line 4270
            *tmp___90 = (unsigned char )(0x40 | (int )_amd64_rex_bits___13);
          }
#line 4270
          break;
        }
#line 4270
        tmp___91 = jit->ip;
#line 4270
        (jit->ip) ++;
#line 4270
        *tmp___91 = (unsigned char)82;
#line 4270
        break;
      }
    }
  }
#line 4271
  if (imm) {
#line 4272
    if (dividend != 0L) {
#line 4272
      while (1) {
#line 4272
        if ((int )sizeof(void *) == 2) {
#line 4272
          tmp___92 = jit->ip;
#line 4272
          (jit->ip) ++;
#line 4272
          *tmp___92 = (unsigned char)102;
        }
#line 4272
        while (1) {
#line 4272
          if ((int )sizeof(void *) > 4) {
#line 4272
            tmp___93 = 8;
          } else {
#line 4272
            tmp___93 = 0;
          }
#line 4272
          if (dividend > 7L) {
#line 4272
            tmp___94 = 1;
          } else {
#line 4272
            tmp___94 = 0;
          }
#line 4272
          _amd64_rex_bits___14 = (unsigned char )(tmp___93 | tmp___94);
#line 4272
          if ((int )_amd64_rex_bits___14 != 0) {
#line 4272
            tmp___95 = jit->ip;
#line 4272
            (jit->ip) ++;
#line 4272
            *tmp___95 = (unsigned char )(0x40 | (int )_amd64_rex_bits___14);
          } else
#line 4272
          if ((int )sizeof(void *) == 1) {
#line 4272
            tmp___95 = jit->ip;
#line 4272
            (jit->ip) ++;
#line 4272
            *tmp___95 = (unsigned char )(0x40 | (int )_amd64_rex_bits___14);
          }
#line 4272
          break;
        }
#line 4272
        switch ((int )sizeof(void *)) {
        case 1: 
#line 4272
        tmp___96 = jit->ip;
#line 4272
        (jit->ip) ++;
#line 4272
        *tmp___96 = (unsigned char)138;
#line 4272
        break;
        case 8: 
        case 4: 
        case 2: 
#line 4272
        tmp___97 = jit->ip;
#line 4272
        (jit->ip) ++;
#line 4272
        *tmp___97 = (unsigned char)139;
#line 4272
        break;
        default: 
#line 4272
        tmp___98 = __builtin_expect(1L, 0L);
#line 4272
        if (tmp___98) {
#line 4272
          __assert_rtn((char const   *)"emit_div_op", (char const   *)"tmp/src.c",
                       3261, (char const   *)"0");
        }
        }
#line 4272
        while (1) {
#line 4272
          while (1) {
#line 4272
            tmp___99 = jit->ip;
#line 4272
            (jit->ip) ++;
#line 4272
            *tmp___99 = (unsigned char )((long )(3 << 6) | (dividend & 7L));
#line 4272
            break;
          }
#line 4272
          break;
        }
#line 4272
        break;
      }
    }
#line 4273
    if (sign) {
#line 4273
      while (1) {
#line 4273
        while (1) {
#line 4273
          _amd64_rex_bits___15 = (unsigned char)8;
#line 4273
          if ((int )_amd64_rex_bits___15 != 0) {
#line 4273
            tmp___100 = jit->ip;
#line 4273
            (jit->ip) ++;
#line 4273
            *tmp___100 = (unsigned char )(0x40 | (int )_amd64_rex_bits___15);
          }
#line 4273
          break;
        }
#line 4273
        while (1) {
#line 4273
          tmp___101 = jit->ip;
#line 4273
          (jit->ip) ++;
#line 4273
          *tmp___101 = (unsigned char)153;
#line 4273
          break;
        }
#line 4273
        break;
      }
    } else {
#line 4274
      while (1) {
#line 4274
        while (1) {
#line 4274
          _amd64_rex_bits___16 = (unsigned char)8;
#line 4274
          if ((int )_amd64_rex_bits___16 != 0) {
#line 4274
            tmp___102 = jit->ip;
#line 4274
            (jit->ip) ++;
#line 4274
            *tmp___102 = (unsigned char )(0x40 | (int )_amd64_rex_bits___16);
          }
#line 4274
          break;
        }
#line 4274
        tmp___103 = jit->ip;
#line 4274
        (jit->ip) ++;
#line 4274
        *tmp___103 = (unsigned char )((6 << 3) + 3);
#line 4274
        while (1) {
#line 4274
          while (1) {
#line 4274
            tmp___104 = jit->ip;
#line 4274
            (jit->ip) ++;
#line 4274
            *tmp___104 = (unsigned char )(((3 << 6) | (2 << 3)) | 2);
#line 4274
            break;
          }
#line 4274
          break;
        }
#line 4274
        break;
      }
    }
#line 4275
    if (dest != 3L) {
#line 4275
      while (1) {
#line 4275
        while (1) {
#line 4275
          _amd64_rex_bits___17 = (unsigned char)0;
#line 4275
          if ((int )_amd64_rex_bits___17 != 0) {
#line 4275
            tmp___105 = jit->ip;
#line 4275
            (jit->ip) ++;
#line 4275
            *tmp___105 = (unsigned char )(0x40 | (int )_amd64_rex_bits___17);
          }
#line 4275
          break;
        }
#line 4275
        tmp___106 = jit->ip;
#line 4275
        (jit->ip) ++;
#line 4275
        *tmp___106 = (unsigned char)83;
#line 4275
        break;
      }
    }
#line 4276
    while (1) {
#line 4276
      while (1) {
#line 4276
        if ((int )sizeof(void *) > 4) {
#line 4276
          tmp___107 = 8;
        } else {
#line 4276
          tmp___107 = 0;
        }
#line 4276
        _amd64_rex_bits___18 = (unsigned char )tmp___107;
#line 4276
        if ((int )_amd64_rex_bits___18 != 0) {
#line 4276
          tmp___108 = jit->ip;
#line 4276
          (jit->ip) ++;
#line 4276
          *tmp___108 = (unsigned char )(0x40 | (int )_amd64_rex_bits___18);
        } else
#line 4276
        if ((int )sizeof(void *) == 1) {
#line 4276
          tmp___108 = jit->ip;
#line 4276
          (jit->ip) ++;
#line 4276
          *tmp___108 = (unsigned char )(0x40 | (int )_amd64_rex_bits___18);
        }
#line 4276
        break;
      }
#line 4276
      tmp___109 = jit->ip;
#line 4276
      (jit->ip) ++;
#line 4276
      *tmp___109 = (unsigned char)187;
#line 4276
      if ((int )sizeof(void *) == 8) {
#line 4276
        while (1) {
#line 4276
          imb___5.val = (size_t )divisor;
#line 4276
          tmp___110 = jit->ip;
#line 4276
          (jit->ip) ++;
#line 4276
          *tmp___110 = imb___5.b[0];
#line 4276
          tmp___111 = jit->ip;
#line 4276
          (jit->ip) ++;
#line 4276
          *tmp___111 = imb___5.b[1];
#line 4276
          tmp___112 = jit->ip;
#line 4276
          (jit->ip) ++;
#line 4276
          *tmp___112 = imb___5.b[2];
#line 4276
          tmp___113 = jit->ip;
#line 4276
          (jit->ip) ++;
#line 4276
          *tmp___113 = imb___5.b[3];
#line 4276
          tmp___114 = jit->ip;
#line 4276
          (jit->ip) ++;
#line 4276
          *tmp___114 = imb___5.b[4];
#line 4276
          tmp___115 = jit->ip;
#line 4276
          (jit->ip) ++;
#line 4276
          *tmp___115 = imb___5.b[5];
#line 4276
          tmp___116 = jit->ip;
#line 4276
          (jit->ip) ++;
#line 4276
          *tmp___116 = imb___5.b[6];
#line 4276
          tmp___117 = jit->ip;
#line 4276
          (jit->ip) ++;
#line 4276
          *tmp___117 = imb___5.b[7];
#line 4276
          break;
        }
      } else {
#line 4276
        while (1) {
#line 4276
          imb___6.val = (int )((size_t )divisor);
#line 4276
          tmp___118 = jit->ip;
#line 4276
          (jit->ip) ++;
#line 4276
          *tmp___118 = imb___6.b[0];
#line 4276
          tmp___119 = jit->ip;
#line 4276
          (jit->ip) ++;
#line 4276
          *tmp___119 = imb___6.b[1];
#line 4276
          tmp___120 = jit->ip;
#line 4276
          (jit->ip) ++;
#line 4276
          *tmp___120 = imb___6.b[2];
#line 4276
          tmp___121 = jit->ip;
#line 4276
          (jit->ip) ++;
#line 4276
          *tmp___121 = imb___6.b[3];
#line 4276
          break;
        }
      }
#line 4276
      break;
    }
#line 4277
    while (1) {
#line 4277
      while (1) {
#line 4277
        _amd64_rex_bits___19 = (unsigned char)8;
#line 4277
        if ((int )_amd64_rex_bits___19 != 0) {
#line 4277
          tmp___122 = jit->ip;
#line 4277
          (jit->ip) ++;
#line 4277
          *tmp___122 = (unsigned char )(0x40 | (int )_amd64_rex_bits___19);
        }
#line 4277
        break;
      }
#line 4277
      while (1) {
#line 4277
        tmp___123 = jit->ip;
#line 4277
        (jit->ip) ++;
#line 4277
        *tmp___123 = (unsigned char)247;
#line 4277
        while (1) {
#line 4277
          while (1) {
#line 4277
            tmp___124 = jit->ip;
#line 4277
            (jit->ip) ++;
#line 4277
            if (sign) {
#line 4277
              tmp___125 = 1;
            } else {
#line 4277
              tmp___125 = 0;
            }
#line 4277
            *tmp___124 = (unsigned char )(((3 << 6) | (((6 + tmp___125) & 0x07) << 3)) | 3);
#line 4277
            break;
          }
#line 4277
          break;
        }
#line 4277
        break;
      }
#line 4277
      break;
    }
#line 4278
    if (dest != 3L) {
#line 4278
      while (1) {
#line 4278
        while (1) {
#line 4278
          _amd64_rex_bits___20 = (unsigned char)0;
#line 4278
          if ((int )_amd64_rex_bits___20 != 0) {
#line 4278
            tmp___126 = jit->ip;
#line 4278
            (jit->ip) ++;
#line 4278
            *tmp___126 = (unsigned char )(0x40 | (int )_amd64_rex_bits___20);
          }
#line 4278
          break;
        }
#line 4278
        tmp___127 = jit->ip;
#line 4278
        (jit->ip) ++;
#line 4278
        *tmp___127 = (unsigned char)91;
#line 4278
        break;
      }
    }
  } else {
#line 4280
    if (divisor == 0L) {
#line 4280
      goto _L___0;
    } else
#line 4280
    if (divisor == 2L) {
      _L___0: /* CIL Label */ 
#line 4281
      while (1) {
#line 4281
        while (1) {
#line 4281
          if (divisor > 7L) {
#line 4281
            tmp___128 = 1;
          } else {
#line 4281
            tmp___128 = 0;
          }
#line 4281
          _amd64_rex_bits___21 = (unsigned char )tmp___128;
#line 4281
          if ((int )_amd64_rex_bits___21 != 0) {
#line 4281
            tmp___129 = jit->ip;
#line 4281
            (jit->ip) ++;
#line 4281
            *tmp___129 = (unsigned char )(0x40 | (int )_amd64_rex_bits___21);
          }
#line 4281
          break;
        }
#line 4281
        tmp___130 = jit->ip;
#line 4281
        (jit->ip) ++;
#line 4281
        *tmp___130 = (unsigned char )(80L + (divisor & 7L));
#line 4281
        break;
      }
    }
#line 4283
    if (dividend != 0L) {
#line 4283
      while (1) {
#line 4283
        if ((int )sizeof(void *) == 2) {
#line 4283
          tmp___131 = jit->ip;
#line 4283
          (jit->ip) ++;
#line 4283
          *tmp___131 = (unsigned char)102;
        }
#line 4283
        while (1) {
#line 4283
          if ((int )sizeof(void *) > 4) {
#line 4283
            tmp___132 = 8;
          } else {
#line 4283
            tmp___132 = 0;
          }
#line 4283
          if (dividend > 7L) {
#line 4283
            tmp___133 = 1;
          } else {
#line 4283
            tmp___133 = 0;
          }
#line 4283
          _amd64_rex_bits___22 = (unsigned char )(tmp___132 | tmp___133);
#line 4283
          if ((int )_amd64_rex_bits___22 != 0) {
#line 4283
            tmp___134 = jit->ip;
#line 4283
            (jit->ip) ++;
#line 4283
            *tmp___134 = (unsigned char )(0x40 | (int )_amd64_rex_bits___22);
          } else
#line 4283
          if ((int )sizeof(void *) == 1) {
#line 4283
            tmp___134 = jit->ip;
#line 4283
            (jit->ip) ++;
#line 4283
            *tmp___134 = (unsigned char )(0x40 | (int )_amd64_rex_bits___22);
          }
#line 4283
          break;
        }
#line 4283
        switch ((int )sizeof(void *)) {
        case 1: 
#line 4283
        tmp___135 = jit->ip;
#line 4283
        (jit->ip) ++;
#line 4283
        *tmp___135 = (unsigned char)138;
#line 4283
        break;
        case 8: 
        case 4: 
        case 2: 
#line 4283
        tmp___136 = jit->ip;
#line 4283
        (jit->ip) ++;
#line 4283
        *tmp___136 = (unsigned char)139;
#line 4283
        break;
        default: 
#line 4283
        tmp___137 = __builtin_expect(1L, 0L);
#line 4283
        if (tmp___137) {
#line 4283
          __assert_rtn((char const   *)"emit_div_op", (char const   *)"tmp/src.c",
                       3273, (char const   *)"0");
        }
        }
#line 4283
        while (1) {
#line 4283
          while (1) {
#line 4283
            tmp___138 = jit->ip;
#line 4283
            (jit->ip) ++;
#line 4283
            *tmp___138 = (unsigned char )((long )(3 << 6) | (dividend & 7L));
#line 4283
            break;
          }
#line 4283
          break;
        }
#line 4283
        break;
      }
    }
#line 4284
    if (sign) {
#line 4284
      while (1) {
#line 4284
        while (1) {
#line 4284
          _amd64_rex_bits___23 = (unsigned char)8;
#line 4284
          if ((int )_amd64_rex_bits___23 != 0) {
#line 4284
            tmp___139 = jit->ip;
#line 4284
            (jit->ip) ++;
#line 4284
            *tmp___139 = (unsigned char )(0x40 | (int )_amd64_rex_bits___23);
          }
#line 4284
          break;
        }
#line 4284
        while (1) {
#line 4284
          tmp___140 = jit->ip;
#line 4284
          (jit->ip) ++;
#line 4284
          *tmp___140 = (unsigned char)153;
#line 4284
          break;
        }
#line 4284
        break;
      }
    } else {
#line 4285
      while (1) {
#line 4285
        while (1) {
#line 4285
          _amd64_rex_bits___24 = (unsigned char)8;
#line 4285
          if ((int )_amd64_rex_bits___24 != 0) {
#line 4285
            tmp___141 = jit->ip;
#line 4285
            (jit->ip) ++;
#line 4285
            *tmp___141 = (unsigned char )(0x40 | (int )_amd64_rex_bits___24);
          }
#line 4285
          break;
        }
#line 4285
        tmp___142 = jit->ip;
#line 4285
        (jit->ip) ++;
#line 4285
        *tmp___142 = (unsigned char )((6 << 3) + 3);
#line 4285
        while (1) {
#line 4285
          while (1) {
#line 4285
            tmp___143 = jit->ip;
#line 4285
            (jit->ip) ++;
#line 4285
            *tmp___143 = (unsigned char )(((3 << 6) | (2 << 3)) | 2);
#line 4285
            break;
          }
#line 4285
          break;
        }
#line 4285
        break;
      }
    }
#line 4286
    if (divisor == 0L) {
#line 4286
      goto _L___2;
    } else
#line 4286
    if (divisor == 2L) {
      _L___2: /* CIL Label */ 
#line 4287
      while (1) {
#line 4287
        while (1) {
#line 4287
          _amd64_rex_bits___25 = (unsigned char)8;
#line 4287
          if ((int )_amd64_rex_bits___25 != 0) {
#line 4287
            tmp___144 = jit->ip;
#line 4287
            (jit->ip) ++;
#line 4287
            *tmp___144 = (unsigned char )(0x40 | (int )_amd64_rex_bits___25);
          }
#line 4287
          break;
        }
#line 4287
        while (1) {
#line 4287
          tmp___145 = jit->ip;
#line 4287
          (jit->ip) ++;
#line 4287
          *tmp___145 = (unsigned char)247;
#line 4287
          while (1) {
#line 4287
            while (1) {
#line 4287
              tmp___146 = jit->ip;
#line 4287
              (jit->ip) ++;
#line 4287
              if (sign) {
#line 4287
                tmp___147 = 1;
              } else {
#line 4287
                tmp___147 = 0;
              }
#line 4287
              *tmp___146 = (unsigned char )((((6 + tmp___147) & 0x07) << 3) | 4);
#line 4287
              break;
            }
#line 4287
            while (1) {
#line 4287
              tmp___148 = jit->ip;
#line 4287
              (jit->ip) ++;
#line 4287
              *tmp___148 = (unsigned char )((4 << 3) | 4);
#line 4287
              break;
            }
#line 4287
            break;
#line 4287
            while (1) {
#line 4287
              tmp___159 = jit->ip;
#line 4287
              (jit->ip) ++;
#line 4287
              if (sign) {
#line 4287
                tmp___160 = 1;
              } else {
#line 4287
                tmp___160 = 0;
              }
#line 4287
              *tmp___159 = (unsigned char )((((6 + tmp___160) & 0x07) << 3) | 4);
#line 4287
              break;
            }
#line 4287
            break;
#line 4287
            while (1) {
#line 4287
              tmp___161 = jit->ip;
#line 4287
              (jit->ip) ++;
#line 4287
              if (sign) {
#line 4287
                tmp___162 = 1;
              } else {
#line 4287
                tmp___162 = 0;
              }
#line 4287
              *tmp___161 = (unsigned char )(((1 << 6) | (((6 + tmp___162) & 0x07) << 3)) | 4);
#line 4287
              break;
            }
#line 4287
            while (1) {
#line 4287
              *(jit->ip) = (unsigned char)0;
#line 4287
              (jit->ip) ++;
#line 4287
              break;
            }
#line 4287
            break;
          }
#line 4287
          break;
        }
#line 4287
        break;
      }
#line 4288
      while (1) {
#line 4288
        if ((jit_value )((int )sizeof(void *)) >= -128L) {
#line 4288
          if ((jit_value )((int )sizeof(void *)) <= 127L) {
#line 4288
            while (1) {
#line 4288
              _amd64_rex_bits___26 = (unsigned char)8;
#line 4288
              if ((int )_amd64_rex_bits___26 != 0) {
#line 4288
                tmp___169 = jit->ip;
#line 4288
                (jit->ip) ++;
#line 4288
                *tmp___169 = (unsigned char )(0x40 | (int )_amd64_rex_bits___26);
              }
#line 4288
              break;
            }
#line 4288
            tmp___170 = jit->ip;
#line 4288
            (jit->ip) ++;
#line 4288
            *tmp___170 = (unsigned char)131;
#line 4288
            while (1) {
#line 4288
              while (1) {
#line 4288
                tmp___171 = jit->ip;
#line 4288
                (jit->ip) ++;
#line 4288
                *tmp___171 = (unsigned char )((3 << 6) | 4);
#line 4288
                break;
              }
#line 4288
              break;
            }
#line 4288
            while (1) {
#line 4288
              *(jit->ip) = (unsigned char )((int )sizeof(void *) & 0xff);
#line 4288
              (jit->ip) ++;
#line 4288
              break;
            }
          } else {
#line 4288
            goto _L___1;
          }
        } else {
          _L___1: /* CIL Label */ 
#line 4288
          while (1) {
#line 4288
            _amd64_rex_bits___28 = (unsigned char)8;
#line 4288
            if ((int )_amd64_rex_bits___28 != 0) {
#line 4288
              tmp___178 = jit->ip;
#line 4288
              (jit->ip) ++;
#line 4288
              *tmp___178 = (unsigned char )(0x40 | (int )_amd64_rex_bits___28);
            }
#line 4288
            break;
          }
#line 4288
          tmp___179 = jit->ip;
#line 4288
          (jit->ip) ++;
#line 4288
          *tmp___179 = (unsigned char)129;
#line 4288
          while (1) {
#line 4288
            while (1) {
#line 4288
              tmp___180 = jit->ip;
#line 4288
              (jit->ip) ++;
#line 4288
              *tmp___180 = (unsigned char )((3 << 6) | 4);
#line 4288
              break;
            }
#line 4288
            break;
          }
#line 4288
          while (1) {
#line 4288
            imb___10.val = (int )sizeof(void *);
#line 4288
            tmp___181 = jit->ip;
#line 4288
            (jit->ip) ++;
#line 4288
            *tmp___181 = imb___10.b[0];
#line 4288
            tmp___182 = jit->ip;
#line 4288
            (jit->ip) ++;
#line 4288
            *tmp___182 = imb___10.b[1];
#line 4288
            tmp___183 = jit->ip;
#line 4288
            (jit->ip) ++;
#line 4288
            *tmp___183 = imb___10.b[2];
#line 4288
            tmp___184 = jit->ip;
#line 4288
            (jit->ip) ++;
#line 4288
            *tmp___184 = imb___10.b[3];
#line 4288
            break;
          }
        }
#line 4288
        break;
      }
    } else {
#line 4290
      while (1) {
#line 4290
        while (1) {
#line 4290
          if (divisor > 7L) {
#line 4290
            tmp___185 = 1;
          } else {
#line 4290
            tmp___185 = 0;
          }
#line 4290
          _amd64_rex_bits___29 = (unsigned char )(8 | tmp___185);
#line 4290
          if ((int )_amd64_rex_bits___29 != 0) {
#line 4290
            tmp___186 = jit->ip;
#line 4290
            (jit->ip) ++;
#line 4290
            *tmp___186 = (unsigned char )(0x40 | (int )_amd64_rex_bits___29);
          }
#line 4290
          break;
        }
#line 4290
        while (1) {
#line 4290
          tmp___187 = jit->ip;
#line 4290
          (jit->ip) ++;
#line 4290
          *tmp___187 = (unsigned char)247;
#line 4290
          while (1) {
#line 4290
            while (1) {
#line 4290
              tmp___188 = jit->ip;
#line 4290
              (jit->ip) ++;
#line 4290
              if (sign) {
#line 4290
                tmp___189 = 1;
              } else {
#line 4290
                tmp___189 = 0;
              }
#line 4290
              *tmp___188 = (unsigned char )((long )((3 << 6) | (((6 + tmp___189) & 0x07) << 3)) | ((divisor & 7L) & 7L));
#line 4290
              break;
            }
#line 4290
            break;
          }
#line 4290
          break;
        }
#line 4290
        break;
      }
    }
  }
#line 4293
  if (! modulo) {
#line 4294
    if (dest != 0L) {
#line 4294
      while (1) {
#line 4294
        if ((int )sizeof(void *) == 2) {
#line 4294
          tmp___190 = jit->ip;
#line 4294
          (jit->ip) ++;
#line 4294
          *tmp___190 = (unsigned char)102;
        }
#line 4294
        while (1) {
#line 4294
          if ((int )sizeof(void *) > 4) {
#line 4294
            tmp___191 = 8;
          } else {
#line 4294
            tmp___191 = 0;
          }
#line 4294
          if (dest > 7L) {
#line 4294
            tmp___192 = 4;
          } else {
#line 4294
            tmp___192 = 0;
          }
#line 4294
          _amd64_rex_bits___30 = (unsigned char )(tmp___191 | tmp___192);
#line 4294
          if ((int )_amd64_rex_bits___30 != 0) {
#line 4294
            tmp___193 = jit->ip;
#line 4294
            (jit->ip) ++;
#line 4294
            *tmp___193 = (unsigned char )(0x40 | (int )_amd64_rex_bits___30);
          } else
#line 4294
          if ((int )sizeof(void *) == 1) {
#line 4294
            tmp___193 = jit->ip;
#line 4294
            (jit->ip) ++;
#line 4294
            *tmp___193 = (unsigned char )(0x40 | (int )_amd64_rex_bits___30);
          }
#line 4294
          break;
        }
#line 4294
        switch ((int )sizeof(void *)) {
        case 1: 
#line 4294
        tmp___194 = jit->ip;
#line 4294
        (jit->ip) ++;
#line 4294
        *tmp___194 = (unsigned char)138;
#line 4294
        break;
        case 8: 
        case 4: 
        case 2: 
#line 4294
        tmp___195 = jit->ip;
#line 4294
        (jit->ip) ++;
#line 4294
        *tmp___195 = (unsigned char)139;
#line 4294
        break;
        default: 
#line 4294
        tmp___196 = __builtin_expect(1L, 0L);
#line 4294
        if (tmp___196) {
#line 4294
          __assert_rtn((char const   *)"emit_div_op", (char const   *)"tmp/src.c",
                       3287, (char const   *)"0");
        }
        }
#line 4294
        while (1) {
#line 4294
          while (1) {
#line 4294
            tmp___197 = jit->ip;
#line 4294
            (jit->ip) ++;
#line 4294
            *tmp___197 = (unsigned char )((long )(3 << 6) | ((dest & 7L) << 3));
#line 4294
            break;
          }
#line 4294
          break;
        }
#line 4294
        break;
      }
    }
  } else
#line 4296
  if (dest != 2L) {
#line 4296
    while (1) {
#line 4296
      if ((int )sizeof(void *) == 2) {
#line 4296
        tmp___198 = jit->ip;
#line 4296
        (jit->ip) ++;
#line 4296
        *tmp___198 = (unsigned char)102;
      }
#line 4296
      while (1) {
#line 4296
        if ((int )sizeof(void *) > 4) {
#line 4296
          tmp___199 = 8;
        } else {
#line 4296
          tmp___199 = 0;
        }
#line 4296
        if (dest > 7L) {
#line 4296
          tmp___200 = 4;
        } else {
#line 4296
          tmp___200 = 0;
        }
#line 4296
        _amd64_rex_bits___31 = (unsigned char )(tmp___199 | tmp___200);
#line 4296
        if ((int )_amd64_rex_bits___31 != 0) {
#line 4296
          tmp___201 = jit->ip;
#line 4296
          (jit->ip) ++;
#line 4296
          *tmp___201 = (unsigned char )(0x40 | (int )_amd64_rex_bits___31);
        } else
#line 4296
        if ((int )sizeof(void *) == 1) {
#line 4296
          tmp___201 = jit->ip;
#line 4296
          (jit->ip) ++;
#line 4296
          *tmp___201 = (unsigned char )(0x40 | (int )_amd64_rex_bits___31);
        }
#line 4296
        break;
      }
#line 4296
      switch ((int )sizeof(void *)) {
      case 1: 
#line 4296
      tmp___202 = jit->ip;
#line 4296
      (jit->ip) ++;
#line 4296
      *tmp___202 = (unsigned char)138;
#line 4296
      break;
      case 8: 
      case 4: 
      case 2: 
#line 4296
      tmp___203 = jit->ip;
#line 4296
      (jit->ip) ++;
#line 4296
      *tmp___203 = (unsigned char)139;
#line 4296
      break;
      default: 
#line 4296
      tmp___204 = __builtin_expect(1L, 0L);
#line 4296
      if (tmp___204) {
#line 4296
        __assert_rtn((char const   *)"emit_div_op", (char const   *)"tmp/src.c", 3289,
                     (char const   *)"0");
      }
      }
#line 4296
      while (1) {
#line 4296
        while (1) {
#line 4296
          tmp___205 = jit->ip;
#line 4296
          (jit->ip) ++;
#line 4296
          *tmp___205 = (unsigned char )(((long )(3 << 6) | ((dest & 7L) << 3)) | 2L);
#line 4296
          break;
        }
#line 4296
        break;
      }
#line 4296
      break;
    }
  }
#line 4298
  if (dest != 2L) {
#line 4298
    if (dx_in_use) {
#line 4298
      while (1) {
#line 4298
        while (1) {
#line 4298
          _amd64_rex_bits___32 = (unsigned char)0;
#line 4298
          if ((int )_amd64_rex_bits___32 != 0) {
#line 4298
            tmp___206 = jit->ip;
#line 4298
            (jit->ip) ++;
#line 4298
            *tmp___206 = (unsigned char )(0x40 | (int )_amd64_rex_bits___32);
          }
#line 4298
          break;
        }
#line 4298
        tmp___207 = jit->ip;
#line 4298
        (jit->ip) ++;
#line 4298
        *tmp___207 = (unsigned char)90;
#line 4298
        break;
      }
    }
  }
#line 4299
  if (dest != 0L) {
#line 4299
    if (ax_in_use) {
#line 4299
      while (1) {
#line 4299
        while (1) {
#line 4299
          _amd64_rex_bits___33 = (unsigned char)0;
#line 4299
          if ((int )_amd64_rex_bits___33 != 0) {
#line 4299
            tmp___208 = jit->ip;
#line 4299
            (jit->ip) ++;
#line 4299
            *tmp___208 = (unsigned char )(0x40 | (int )_amd64_rex_bits___33);
          }
#line 4299
          break;
        }
#line 4299
        tmp___209 = jit->ip;
#line 4299
        (jit->ip) ++;
#line 4299
        *tmp___209 = (unsigned char)88;
#line 4299
        break;
      }
    }
  }
#line 4300
  return;
}
}
/* END FUNCTION-DEF emit_div_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF emit_lreg LOC=UNKNOWN */
static void emit_lreg(struct jit *jit , int hreg_id , jit_value vreg ) 
{ 
  int stack_pos ;
  int tmp ;
  unsigned char *tmp___0 ;
  unsigned char _amd64_rex_bits ;
  int tmp___1 ;
  unsigned char *tmp___2 ;
  unsigned char *tmp___3 ;
  unsigned char *tmp___4 ;
  unsigned char *tmp___5 ;
  x86_imm_buf imb ;
  unsigned char *tmp___6 ;
  unsigned char *tmp___7 ;
  unsigned char *tmp___8 ;
  unsigned char *tmp___9 ;
  unsigned char *tmp___10 ;
  unsigned char *tmp___11 ;
  unsigned char *tmp___12 ;
  unsigned char *tmp___13 ;
  unsigned char *tmp___14 ;
  unsigned char *tmp___15 ;
  x86_imm_buf imb___0 ;
  unsigned char *tmp___16 ;
  unsigned char *tmp___17 ;
  unsigned char *tmp___18 ;
  unsigned char *tmp___19 ;
  unsigned char *tmp___20 ;
  unsigned char *tmp___21 ;
  unsigned char *tmp___22 ;
  x86_imm_buf imb___1 ;
  unsigned char *tmp___23 ;
  unsigned char *tmp___24 ;
  unsigned char *tmp___25 ;
  unsigned char *tmp___26 ;
  unsigned char *tmp___27 ;
  unsigned char _amd64_rex_bits___0 ;
  int tmp___28 ;
  int tmp___29 ;
  unsigned char *tmp___30 ;
  unsigned char *tmp___31 ;
  unsigned char *tmp___32 ;
  long tmp___33 ;
  unsigned char *tmp___34 ;
  x86_imm_buf imb___2 ;
  unsigned char *tmp___35 ;
  unsigned char *tmp___36 ;
  unsigned char *tmp___37 ;
  unsigned char *tmp___38 ;
  unsigned char *tmp___39 ;
  unsigned char *tmp___40 ;
  unsigned char *tmp___41 ;
  unsigned char *tmp___42 ;
  unsigned char *tmp___43 ;
  unsigned char *tmp___44 ;
  x86_imm_buf imb___3 ;
  unsigned char *tmp___45 ;
  unsigned char *tmp___46 ;
  unsigned char *tmp___47 ;
  unsigned char *tmp___48 ;
  unsigned char *tmp___49 ;
  unsigned char *tmp___50 ;
  unsigned char *tmp___51 ;
  x86_imm_buf imb___4 ;
  unsigned char *tmp___52 ;
  unsigned char *tmp___53 ;
  unsigned char *tmp___54 ;
  unsigned char *tmp___55 ;

  {
#line 4067
  tmp = stack_reg_pos(jit, (int )vreg);
#line 4067
  stack_pos = tmp;
#line 4068
  if ((vreg & 1L) == 1L) {
#line 4068
    while (1) {
#line 4068
      tmp___0 = jit->ip;
#line 4068
      (jit->ip) ++;
#line 4068
      *tmp___0 = (unsigned char)102;
#line 4068
      while (1) {
#line 4068
        if (hreg_id > 7) {
#line 4068
          tmp___1 = 4;
        } else {
#line 4068
          tmp___1 = 0;
        }
#line 4068
        _amd64_rex_bits = (unsigned char )tmp___1;
#line 4068
        if ((int )_amd64_rex_bits != 0) {
#line 4068
          tmp___2 = jit->ip;
#line 4068
          (jit->ip) ++;
#line 4068
          *tmp___2 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
        }
#line 4068
        break;
      }
#line 4068
      tmp___3 = jit->ip;
#line 4068
      (jit->ip) ++;
#line 4068
      *tmp___3 = (unsigned char)15;
#line 4068
      tmp___4 = jit->ip;
#line 4068
      (jit->ip) ++;
#line 4068
      *tmp___4 = (unsigned char)18;
#line 4068
      while (1) {
#line 4068
        while (1) {
#line 4068
          if (0) {
#line 4068
            if (stack_pos == 0) {
#line 4068
              while (1) {
#line 4068
                tmp___10 = jit->ip;
#line 4068
                (jit->ip) ++;
#line 4068
                *tmp___10 = (unsigned char )((((hreg_id & 0x7) & 0x07) << 3) | 4);
#line 4068
                break;
              }
#line 4068
              while (1) {
#line 4068
                tmp___11 = jit->ip;
#line 4068
                (jit->ip) ++;
#line 4068
                *tmp___11 = (unsigned char )((4 << 3) | 4);
#line 4068
                break;
              }
            } else
#line 4068
            if ((jit_value )stack_pos >= -128L) {
#line 4068
              if ((jit_value )stack_pos <= 127L) {
#line 4068
                while (1) {
#line 4068
                  tmp___12 = jit->ip;
#line 4068
                  (jit->ip) ++;
#line 4068
                  *tmp___12 = (unsigned char )(((1 << 6) | (((hreg_id & 0x7) & 0x07) << 3)) | 4);
#line 4068
                  break;
                }
#line 4068
                while (1) {
#line 4068
                  tmp___13 = jit->ip;
#line 4068
                  (jit->ip) ++;
#line 4068
                  *tmp___13 = (unsigned char )((4 << 3) | 4);
#line 4068
                  break;
                }
#line 4068
                while (1) {
#line 4068
                  *(jit->ip) = (unsigned char )(stack_pos & 0xff);
#line 4068
                  (jit->ip) ++;
#line 4068
                  break;
                }
              } else {
#line 4068
                goto _L;
              }
            } else {
              _L: /* CIL Label */ 
#line 4068
              while (1) {
#line 4068
                tmp___14 = jit->ip;
#line 4068
                (jit->ip) ++;
#line 4068
                *tmp___14 = (unsigned char )(((2 << 6) | (((hreg_id & 0x7) & 0x07) << 3)) | 4);
#line 4068
                break;
              }
#line 4068
              while (1) {
#line 4068
                tmp___15 = jit->ip;
#line 4068
                (jit->ip) ++;
#line 4068
                *tmp___15 = (unsigned char )((4 << 3) | 4);
#line 4068
                break;
              }
#line 4068
              while (1) {
#line 4068
                imb___0.val = stack_pos;
#line 4068
                tmp___16 = jit->ip;
#line 4068
                (jit->ip) ++;
#line 4068
                *tmp___16 = imb___0.b[0];
#line 4068
                tmp___17 = jit->ip;
#line 4068
                (jit->ip) ++;
#line 4068
                *tmp___17 = imb___0.b[1];
#line 4068
                tmp___18 = jit->ip;
#line 4068
                (jit->ip) ++;
#line 4068
                *tmp___18 = imb___0.b[2];
#line 4068
                tmp___19 = jit->ip;
#line 4068
                (jit->ip) ++;
#line 4068
                *tmp___19 = imb___0.b[3];
#line 4068
                break;
              }
            }
#line 4068
            break;
          }
#line 4068
          if (stack_pos == 0) {

          }
#line 4068
          if ((jit_value )stack_pos >= -128L) {
#line 4068
            if ((jit_value )stack_pos <= 127L) {
#line 4068
              while (1) {
#line 4068
                tmp___21 = jit->ip;
#line 4068
                (jit->ip) ++;
#line 4068
                *tmp___21 = (unsigned char )(((1 << 6) | (((hreg_id & 0x7) & 0x07) << 3)) | 5);
#line 4068
                break;
              }
#line 4068
              while (1) {
#line 4068
                *(jit->ip) = (unsigned char )(stack_pos & 0xff);
#line 4068
                (jit->ip) ++;
#line 4068
                break;
              }
            } else {
#line 4068
              goto _L___0;
            }
          } else {
            _L___0: /* CIL Label */ 
#line 4068
            while (1) {
#line 4068
              tmp___22 = jit->ip;
#line 4068
              (jit->ip) ++;
#line 4068
              *tmp___22 = (unsigned char )(((2 << 6) | (((hreg_id & 0x7) & 0x07) << 3)) | 5);
#line 4068
              break;
            }
#line 4068
            while (1) {
#line 4068
              imb___1.val = stack_pos;
#line 4068
              tmp___23 = jit->ip;
#line 4068
              (jit->ip) ++;
#line 4068
              *tmp___23 = imb___1.b[0];
#line 4068
              tmp___24 = jit->ip;
#line 4068
              (jit->ip) ++;
#line 4068
              *tmp___24 = imb___1.b[1];
#line 4068
              tmp___25 = jit->ip;
#line 4068
              (jit->ip) ++;
#line 4068
              *tmp___25 = imb___1.b[2];
#line 4068
              tmp___26 = jit->ip;
#line 4068
              (jit->ip) ++;
#line 4068
              *tmp___26 = imb___1.b[3];
#line 4068
              break;
            }
          }
#line 4068
          break;
        }
#line 4068
        break;
      }
#line 4068
      break;
    }
  } else {
#line 4069
    while (1) {
#line 4069
      if ((int )sizeof(void *) == 2) {
#line 4069
        tmp___27 = jit->ip;
#line 4069
        (jit->ip) ++;
#line 4069
        *tmp___27 = (unsigned char)102;
      }
#line 4069
      while (1) {
#line 4069
        if ((int )sizeof(void *) > 4) {
#line 4069
          tmp___28 = 8;
        } else {
#line 4069
          tmp___28 = 0;
        }
#line 4069
        if (hreg_id > 7) {
#line 4069
          tmp___29 = 4;
        } else {
#line 4069
          tmp___29 = 0;
        }
#line 4069
        _amd64_rex_bits___0 = (unsigned char )(tmp___28 | tmp___29);
#line 4069
        if ((int )_amd64_rex_bits___0 != 0) {
#line 4069
          tmp___30 = jit->ip;
#line 4069
          (jit->ip) ++;
#line 4069
          *tmp___30 = (unsigned char )(0x40 | (int )_amd64_rex_bits___0);
        } else
#line 4069
        if ((int )sizeof(void *) == 1) {
#line 4069
          tmp___30 = jit->ip;
#line 4069
          (jit->ip) ++;
#line 4069
          *tmp___30 = (unsigned char )(0x40 | (int )_amd64_rex_bits___0);
        }
#line 4069
        break;
      }
#line 4069
      switch ((int )sizeof(void *)) {
      case 1: 
#line 4069
      tmp___31 = jit->ip;
#line 4069
      (jit->ip) ++;
#line 4069
      *tmp___31 = (unsigned char)138;
#line 4069
      break;
      case 8: 
      case 4: 
      case 2: 
#line 4069
      tmp___32 = jit->ip;
#line 4069
      (jit->ip) ++;
#line 4069
      *tmp___32 = (unsigned char)139;
#line 4069
      break;
      default: 
#line 4069
      tmp___33 = __builtin_expect(1L, 0L);
#line 4069
      if (tmp___33) {
#line 4069
        __assert_rtn((char const   *)"emit_lreg", (char const   *)"tmp/src.c", 3005,
                     (char const   *)"0");
      }
      }
#line 4069
      while (1) {
#line 4069
        while (1) {
#line 4069
          if (0) {
#line 4069
            if (stack_pos == 0) {
#line 4069
              while (1) {
#line 4069
                tmp___39 = jit->ip;
#line 4069
                (jit->ip) ++;
#line 4069
                *tmp___39 = (unsigned char )((((hreg_id & 0x7) & 0x07) << 3) | 4);
#line 4069
                break;
              }
#line 4069
              while (1) {
#line 4069
                tmp___40 = jit->ip;
#line 4069
                (jit->ip) ++;
#line 4069
                *tmp___40 = (unsigned char )((4 << 3) | 4);
#line 4069
                break;
              }
            } else
#line 4069
            if ((jit_value )stack_pos >= -128L) {
#line 4069
              if ((jit_value )stack_pos <= 127L) {
#line 4069
                while (1) {
#line 4069
                  tmp___41 = jit->ip;
#line 4069
                  (jit->ip) ++;
#line 4069
                  *tmp___41 = (unsigned char )(((1 << 6) | (((hreg_id & 0x7) & 0x07) << 3)) | 4);
#line 4069
                  break;
                }
#line 4069
                while (1) {
#line 4069
                  tmp___42 = jit->ip;
#line 4069
                  (jit->ip) ++;
#line 4069
                  *tmp___42 = (unsigned char )((4 << 3) | 4);
#line 4069
                  break;
                }
#line 4069
                while (1) {
#line 4069
                  *(jit->ip) = (unsigned char )(stack_pos & 0xff);
#line 4069
                  (jit->ip) ++;
#line 4069
                  break;
                }
              } else {
#line 4069
                goto _L___1;
              }
            } else {
              _L___1: /* CIL Label */ 
#line 4069
              while (1) {
#line 4069
                tmp___43 = jit->ip;
#line 4069
                (jit->ip) ++;
#line 4069
                *tmp___43 = (unsigned char )(((2 << 6) | (((hreg_id & 0x7) & 0x07) << 3)) | 4);
#line 4069
                break;
              }
#line 4069
              while (1) {
#line 4069
                tmp___44 = jit->ip;
#line 4069
                (jit->ip) ++;
#line 4069
                *tmp___44 = (unsigned char )((4 << 3) | 4);
#line 4069
                break;
              }
#line 4069
              while (1) {
#line 4069
                imb___3.val = stack_pos;
#line 4069
                tmp___45 = jit->ip;
#line 4069
                (jit->ip) ++;
#line 4069
                *tmp___45 = imb___3.b[0];
#line 4069
                tmp___46 = jit->ip;
#line 4069
                (jit->ip) ++;
#line 4069
                *tmp___46 = imb___3.b[1];
#line 4069
                tmp___47 = jit->ip;
#line 4069
                (jit->ip) ++;
#line 4069
                *tmp___47 = imb___3.b[2];
#line 4069
                tmp___48 = jit->ip;
#line 4069
                (jit->ip) ++;
#line 4069
                *tmp___48 = imb___3.b[3];
#line 4069
                break;
              }
            }
#line 4069
            break;
          }
#line 4069
          if (stack_pos == 0) {

          }
#line 4069
          if ((jit_value )stack_pos >= -128L) {
#line 4069
            if ((jit_value )stack_pos <= 127L) {
#line 4069
              while (1) {
#line 4069
                tmp___50 = jit->ip;
#line 4069
                (jit->ip) ++;
#line 4069
                *tmp___50 = (unsigned char )(((1 << 6) | (((hreg_id & 0x7) & 0x07) << 3)) | 5);
#line 4069
                break;
              }
#line 4069
              while (1) {
#line 4069
                *(jit->ip) = (unsigned char )(stack_pos & 0xff);
#line 4069
                (jit->ip) ++;
#line 4069
                break;
              }
            } else {
#line 4069
              goto _L___2;
            }
          } else {
            _L___2: /* CIL Label */ 
#line 4069
            while (1) {
#line 4069
              tmp___51 = jit->ip;
#line 4069
              (jit->ip) ++;
#line 4069
              *tmp___51 = (unsigned char )(((2 << 6) | (((hreg_id & 0x7) & 0x07) << 3)) | 5);
#line 4069
              break;
            }
#line 4069
            while (1) {
#line 4069
              imb___4.val = stack_pos;
#line 4069
              tmp___52 = jit->ip;
#line 4069
              (jit->ip) ++;
#line 4069
              *tmp___52 = imb___4.b[0];
#line 4069
              tmp___53 = jit->ip;
#line 4069
              (jit->ip) ++;
#line 4069
              *tmp___53 = imb___4.b[1];
#line 4069
              tmp___54 = jit->ip;
#line 4069
              (jit->ip) ++;
#line 4069
              *tmp___54 = imb___4.b[2];
#line 4069
              tmp___55 = jit->ip;
#line 4069
              (jit->ip) ++;
#line 4069
              *tmp___55 = imb___4.b[3];
#line 4069
              break;
            }
          }
#line 4069
          break;
        }
#line 4069
        break;
      }
#line 4069
      break;
    }
  }
#line 4070
  return;
}
}
/* END FUNCTION-DEF emit_lreg LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF associate_register_alias LOC=UNKNOWN */
static void associate_register_alias(struct jit_reg_allocator *al , jit_op *op , int i ) 
{ 
  long tmp ;

  {
#line 6081
  if ((int )op->arg[i] == ((2 << 1) | (1 << 4))) {
#line 6081
    op->r_arg[i] = (jit_value )(al->ret_reg)->id;
  } else
#line 6082
  if ((int )op->arg[i] == 2 << 1) {
#line 6082
    op->r_arg[i] = (jit_value )al->fp_reg;
  } else {
#line 6083
    tmp = __builtin_expect(1L, 0L);
#line 6083
    if (tmp) {
#line 6083
      __assert_rtn((char const   *)"associate_register_alias", (char const   *)"tmp/src.c",
                   5487, (char const   *)"0");
    }
  }
#line 6084
  return;
}
}
/* END FUNCTION-DEF associate_register_alias LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF prepare_labels LOC=UNKNOWN */
static jit_tree *prepare_labels(struct jit *jit ) 
{ 
  long x ;
  jit_tree *n ;
  jit_op *op ;
  jit_op *tmp ;

  {
#line 5189
  x = 1L;
#line 5190
  n = (jit_tree *)((void *)0);
#line 5191
  tmp = jit_op_first(jit->ops);
#line 5191
  op = tmp;
#line 5191
  while ((unsigned long )op != (unsigned long )((void *)0)) {
#line 5192
    if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 616U) {
#line 5193
      n = jit_tree_insert(n, (long )op, (void *)x, (int *)((void *)0));
#line 5194
      n = jit_tree_insert(n, op->arg[0], (void *)(- x), (int *)((void *)0));
#line 5195
      x ++;
    }
#line 5197
    if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 136U) {
#line 5198
      n = jit_tree_insert(n, op->arg[0], (void *)x, (int *)((void *)0));
#line 5199
      x ++;
    }
#line 5191
    op = op->next;
  }
#line 5202
  return (n);
}
}
/* END FUNCTION-DEF prepare_labels LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_op_last LOC=UNKNOWN */
__inline static jit_op *jit_op_last(jit_op *op ) 
{ 


  {
#line 2484
  while ((unsigned long )op->next != (unsigned long )((void *)0)) {
#line 2484
    op = op->next;
  }
#line 2485
  return (op);
}
}
/* END FUNCTION-DEF jit_op_last LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF assign_call LOC=UNKNOWN */
static int assign_call(jit_op *op , struct jit_reg_allocator *al ) 
{ 


  {
#line 6039
  spill_ret_retreg(op, al->ret_reg);
#line 6040
  spill_ret_retreg(op, al->fpret_reg);
#line 6041
  return (1);
}
}
/* END FUNCTION-DEF assign_call LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_data_bytes LOC=UNKNOWN */
jit_op *jit_data_bytes(struct jit *jit , jit_value count , unsigned char *data ) 
{ 
  jit_op *op ;
  struct jit_op *tmp ;
  unsigned long long tmp___0 ;

  {
#line 2023
  tmp = jit_add_op(jit, (unsigned short)162, (unsigned char)2, count, (jit_value )0,
                   (jit_value )0, (unsigned char)0, (struct jit_debug_info *)((void *)0));
#line 2023
  op = tmp;
#line 2024
  op->addendum = malloc((size_t )count);
#line 2025
  tmp___0 = __builtin_object_size(op->addendum, 0);
#line 2025
  __builtin___memcpy_chk(op->addendum, (void const   *)data, (unsigned long long )count,
                         tmp___0);
#line 2026
  return (op);
}
}
/* END FUNCTION-DEF jit_data_bytes LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF emit_sse_round LOC=UNKNOWN */
static void emit_sse_round(struct jit *jit , jit_op *op , jit_value a1 , jit_value a2 ) 
{ 
  static double const   x0  = (double const   )0.0;
  static double const   x05  = (double const   )0.5;
  unsigned char *tmp ;
  unsigned char _amd64_rex_bits ;
  int tmp___0 ;
  int tmp___1 ;
  unsigned char *tmp___2 ;
  unsigned char *tmp___3 ;
  unsigned char *tmp___4 ;
  unsigned char *tmp___5 ;
  unsigned char *branch1 ;
  unsigned char _amd64_rex_bits___0 ;
  unsigned char *tmp___6 ;
  int offset ;
  unsigned char *tmp___7 ;
  unsigned char *tmp___8 ;
  unsigned char *tmp___9 ;
  unsigned char *tmp___10 ;
  unsigned char *tmp___11 ;
  x86_imm_buf imb ;
  unsigned char *tmp___12 ;
  unsigned char *tmp___13 ;
  unsigned char *tmp___14 ;
  unsigned char *tmp___15 ;
  unsigned char *branch2 ;
  unsigned char _amd64_rex_bits___1 ;
  unsigned char *tmp___16 ;
  int t ;
  unsigned char *tmp___17 ;
  unsigned char *tmp___18 ;
  x86_imm_buf imb___0 ;
  unsigned char *tmp___19 ;
  unsigned char *tmp___20 ;
  unsigned char *tmp___21 ;
  unsigned char *tmp___22 ;
  unsigned char rex_correction ;
  unsigned char *pos ;
  int disp ;
  int size ;
  long tmp___23 ;
  long tmp___24 ;
  x86_imm_buf imb___1 ;
  unsigned char *tmp___25 ;
  unsigned char *tmp___26 ;
  unsigned char *tmp___27 ;
  unsigned char *tmp___28 ;
  long tmp___29 ;
  unsigned char rex_correction___0 ;
  unsigned char *pos___0 ;
  int disp___0 ;
  int size___0 ;
  long tmp___30 ;
  long tmp___31 ;
  x86_imm_buf imb___2 ;
  unsigned char *tmp___32 ;
  unsigned char *tmp___33 ;
  unsigned char *tmp___34 ;
  unsigned char *tmp___35 ;
  long tmp___36 ;
  unsigned char *tmp___37 ;
  unsigned char _amd64_rex_bits___2 ;
  int tmp___38 ;
  int tmp___39 ;
  unsigned char *tmp___40 ;
  unsigned char *tmp___41 ;
  unsigned char *tmp___42 ;
  unsigned char *tmp___43 ;
  unsigned char *tmp___44 ;
  unsigned char _amd64_rex_bits___3 ;
  int tmp___45 ;
  int tmp___46 ;
  unsigned char *tmp___47 ;
  unsigned char *tmp___48 ;
  unsigned char *tmp___49 ;
  unsigned char *tmp___50 ;

  {
#line 3050
  while (1) {
#line 3050
    while (1) {
#line 3050
      tmp = jit->ip;
#line 3050
      (jit->ip) ++;
#line 3050
      *tmp = (unsigned char)102;
#line 3050
      while (1) {
#line 3050
        if (a2 > 7L) {
#line 3050
          tmp___0 = 4;
        } else {
#line 3050
          tmp___0 = 0;
        }
#line 3050
        if (a2 > 7L) {
#line 3050
          tmp___1 = 1;
        } else {
#line 3050
          tmp___1 = 0;
        }
#line 3050
        _amd64_rex_bits = (unsigned char )(tmp___0 | tmp___1);
#line 3050
        if ((int )_amd64_rex_bits != 0) {
#line 3050
          tmp___2 = jit->ip;
#line 3050
          (jit->ip) ++;
#line 3050
          *tmp___2 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
        }
#line 3050
        break;
      }
#line 3050
      tmp___3 = jit->ip;
#line 3050
      (jit->ip) ++;
#line 3050
      *tmp___3 = (unsigned char)15;
#line 3050
      tmp___4 = jit->ip;
#line 3050
      (jit->ip) ++;
#line 3050
      *tmp___4 = (unsigned char)198;
#line 3050
      while (1) {
#line 3050
        while (1) {
#line 3050
          tmp___5 = jit->ip;
#line 3050
          (jit->ip) ++;
#line 3050
          *tmp___5 = (unsigned char )(((long )(3 << 6) | ((a2 & 7L) << 3)) | (a2 & 7L));
#line 3050
          break;
        }
#line 3050
        break;
      }
#line 3050
      break;
    }
#line 3050
    while (1) {
#line 3050
      *(jit->ip) = (unsigned char)0;
#line 3050
      (jit->ip) ++;
#line 3050
      break;
    }
#line 3050
    break;
  }
#line 3051
  sse_alu_pd_reg_safeimm(jit, op, 47, (int )a2, (double *)(& x0));
#line 3052
  branch1 = jit->ip;
#line 3053
  while (1) {
#line 3053
    while (1) {
#line 3053
      _amd64_rex_bits___0 = (unsigned char)8;
#line 3053
      if ((int )_amd64_rex_bits___0 != 0) {
#line 3053
        tmp___6 = jit->ip;
#line 3053
        (jit->ip) ++;
#line 3053
        *tmp___6 = (unsigned char )(0x40 | (int )_amd64_rex_bits___0);
      }
#line 3053
      break;
    }
#line 3053
    while (1) {
#line 3053
      offset = -2;
#line 3053
      if ((jit_value )offset >= -128L) {
#line 3053
        if ((jit_value )offset <= 127L) {
#line 3053
          while (1) {
#line 3053
            tmp___8 = jit->ip;
#line 3053
            (jit->ip) ++;
#line 3053
            *tmp___8 = (unsigned char )x86_cc_unsigned_map[2];
#line 3053
            while (1) {
#line 3053
              *(jit->ip) = (unsigned char )(offset & 0xff);
#line 3053
              (jit->ip) ++;
#line 3053
              break;
            }
#line 3053
            break;
          }
        } else {
#line 3053
          goto _L;
        }
      } else {
        _L: /* CIL Label */ 
#line 3053
        offset -= 4;
#line 3053
        while (1) {
#line 3053
          tmp___9 = jit->ip;
#line 3053
          (jit->ip) ++;
#line 3053
          *tmp___9 = (unsigned char)15;
#line 3053
          tmp___11 = jit->ip;
#line 3053
          (jit->ip) ++;
#line 3053
          *tmp___11 = (unsigned char )((int const   )x86_cc_unsigned_map[2] + 16);
#line 3053
          while (1) {
#line 3053
            imb.val = offset;
#line 3053
            tmp___12 = jit->ip;
#line 3053
            (jit->ip) ++;
#line 3053
            *tmp___12 = imb.b[0];
#line 3053
            tmp___13 = jit->ip;
#line 3053
            (jit->ip) ++;
#line 3053
            *tmp___13 = imb.b[1];
#line 3053
            tmp___14 = jit->ip;
#line 3053
            (jit->ip) ++;
#line 3053
            *tmp___14 = imb.b[2];
#line 3053
            tmp___15 = jit->ip;
#line 3053
            (jit->ip) ++;
#line 3053
            *tmp___15 = imb.b[3];
#line 3053
            break;
          }
#line 3053
          break;
        }
      }
#line 3053
      break;
    }
#line 3053
    break;
  }
#line 3054
  sse_alu_sd_reg_safeimm(jit, op, 88, (int )a2, (double *)(& x05));
#line 3055
  branch2 = jit->ip;
#line 3056
  while (1) {
#line 3056
    while (1) {
#line 3056
      _amd64_rex_bits___1 = (unsigned char)0;
#line 3056
      if ((int )_amd64_rex_bits___1 != 0) {
#line 3056
        tmp___16 = jit->ip;
#line 3056
        (jit->ip) ++;
#line 3056
        *tmp___16 = (unsigned char )(0x40 | (int )_amd64_rex_bits___1);
      }
#line 3056
      break;
    }
#line 3056
    while (1) {
#line 3056
      t = -2;
#line 3056
      if ((jit_value )t >= -128L) {
#line 3056
        if ((jit_value )t <= 127L) {
#line 3056
          while (1) {
#line 3056
            tmp___17 = jit->ip;
#line 3056
            (jit->ip) ++;
#line 3056
            *tmp___17 = (unsigned char)235;
#line 3056
            while (1) {
#line 3056
              *(jit->ip) = (unsigned char )(t & 0xff);
#line 3056
              (jit->ip) ++;
#line 3056
              break;
            }
#line 3056
            break;
          }
        } else {
#line 3056
          goto _L___0;
        }
      } else {
        _L___0: /* CIL Label */ 
#line 3056
        t -= 3;
#line 3056
        while (1) {
#line 3056
          tmp___18 = jit->ip;
#line 3056
          (jit->ip) ++;
#line 3056
          *tmp___18 = (unsigned char)233;
#line 3056
          while (1) {
#line 3056
            imb___0.val = t;
#line 3056
            tmp___19 = jit->ip;
#line 3056
            (jit->ip) ++;
#line 3056
            *tmp___19 = imb___0.b[0];
#line 3056
            tmp___20 = jit->ip;
#line 3056
            (jit->ip) ++;
#line 3056
            *tmp___20 = imb___0.b[1];
#line 3056
            tmp___21 = jit->ip;
#line 3056
            (jit->ip) ++;
#line 3056
            *tmp___21 = imb___0.b[2];
#line 3056
            tmp___22 = jit->ip;
#line 3056
            (jit->ip) ++;
#line 3056
            *tmp___22 = imb___0.b[3];
#line 3056
            break;
          }
#line 3056
          break;
        }
      }
#line 3056
      break;
    }
#line 3056
    break;
  }
#line 3057
  while (1) {
#line 3057
    rex_correction = (unsigned char)0;
#line 3057
    if (((int )*branch1 & 0xf0) == 0x40) {
#line 3057
      rex_correction = (unsigned char )((int )rex_correction + 1);
    }
#line 3057
    pos = (branch1 + 1) + (int )rex_correction;
#line 3057
    size = 0;
#line 3057
    switch ((int )*(branch1 + (int )rex_correction)) {
    case 0xe9: 
    case 0xe8: 
#line 3057
    size ++;
#line 3057
    break;
    case 0x0f: 
#line 3057
    if ((int )*pos >= 0x70) {
#line 3057
      if (! ((int )*pos <= 0x8f)) {
#line 3057
        goto _L___1;
      }
    } else {
      _L___1: /* CIL Label */ 
#line 3057
      tmp___23 = __builtin_expect(1L, 0L);
#line 3057
      if (tmp___23) {
#line 3057
        __assert_rtn((char const   *)"emit_sse_round", (char const   *)"tmp/src.c",
                     1635, (char const   *)"0");
      }
    }
#line 3057
    size ++;
#line 3057
    pos ++;
#line 3057
    break;
    case 0x7f: 
    case 0x7e: 
    case 0x7d: 
    case 0x7c: 
    case 0x7b: 
    case 0x7a: 
    case 0x79: 
    case 0x78: 
    case 0x77: 
    case 0x76: 
    case 0x75: 
    case 0x74: 
    case 0x73: 
    case 0x72: 
    case 0x71: 
    case 0x70: 
    case 0xeb: 
    case 0xe2: 
    case 0xe1: 
    case 0xe0: 
#line 3057
    break;
    default: 
#line 3057
    tmp___24 = __builtin_expect(1L, 0L);
#line 3057
    if (tmp___24) {
#line 3057
      __assert_rtn((char const   *)"emit_sse_round", (char const   *)"tmp/src.c",
                   1635, (char const   *)"0");
    }
    }
#line 3057
    disp = (int )(jit->ip - pos);
#line 3057
    if (size) {
#line 3057
      while (1) {
#line 3057
        imb___1.val = disp - 4;
#line 3057
        tmp___25 = pos;
#line 3057
        pos ++;
#line 3057
        *tmp___25 = imb___1.b[0];
#line 3057
        tmp___26 = pos;
#line 3057
        pos ++;
#line 3057
        *tmp___26 = imb___1.b[1];
#line 3057
        tmp___27 = pos;
#line 3057
        pos ++;
#line 3057
        *tmp___27 = imb___1.b[2];
#line 3057
        tmp___28 = pos;
#line 3057
        pos ++;
#line 3057
        *tmp___28 = imb___1.b[3];
#line 3057
        break;
      }
    } else
#line 3057
    if ((jit_value )(disp - 1) >= -128L) {
#line 3057
      if ((jit_value )(disp - 1) <= 127L) {
#line 3057
        while (1) {
#line 3057
          *pos = (unsigned char )((disp - 1) & 0xff);
#line 3057
          pos ++;
#line 3057
          break;
        }
      } else {
#line 3057
        goto _L___2;
      }
    } else {
      _L___2: /* CIL Label */ 
#line 3057
      tmp___29 = __builtin_expect(1L, 0L);
#line 3057
      if (tmp___29) {
#line 3057
        __assert_rtn((char const   *)"emit_sse_round", (char const   *)"tmp/src.c",
                     1635, (char const   *)"0");
      }
    }
#line 3057
    break;
  }
#line 3058
  sse_alu_sd_reg_safeimm(jit, op, 92, (int )a2, (double *)(& x05));
#line 3059
  while (1) {
#line 3059
    rex_correction___0 = (unsigned char)0;
#line 3059
    if (((int )*branch2 & 0xf0) == 0x40) {
#line 3059
      rex_correction___0 = (unsigned char )((int )rex_correction___0 + 1);
    }
#line 3059
    pos___0 = (branch2 + 1) + (int )rex_correction___0;
#line 3059
    size___0 = 0;
#line 3059
    switch ((int )*(branch2 + (int )rex_correction___0)) {
    case 0xe9: 
    case 0xe8: 
#line 3059
    size___0 ++;
#line 3059
    break;
    case 0x0f: 
#line 3059
    if ((int )*pos___0 >= 0x70) {
#line 3059
      if (! ((int )*pos___0 <= 0x8f)) {
#line 3059
        goto _L___3;
      }
    } else {
      _L___3: /* CIL Label */ 
#line 3059
      tmp___30 = __builtin_expect(1L, 0L);
#line 3059
      if (tmp___30) {
#line 3059
        __assert_rtn((char const   *)"emit_sse_round", (char const   *)"tmp/src.c",
                     1638, (char const   *)"0");
      }
    }
#line 3059
    size___0 ++;
#line 3059
    pos___0 ++;
#line 3059
    break;
    case 0x7f: 
    case 0x7e: 
    case 0x7d: 
    case 0x7c: 
    case 0x7b: 
    case 0x7a: 
    case 0x79: 
    case 0x78: 
    case 0x77: 
    case 0x76: 
    case 0x75: 
    case 0x74: 
    case 0x73: 
    case 0x72: 
    case 0x71: 
    case 0x70: 
    case 0xeb: 
    case 0xe2: 
    case 0xe1: 
    case 0xe0: 
#line 3059
    break;
    default: 
#line 3059
    tmp___31 = __builtin_expect(1L, 0L);
#line 3059
    if (tmp___31) {
#line 3059
      __assert_rtn((char const   *)"emit_sse_round", (char const   *)"tmp/src.c",
                   1638, (char const   *)"0");
    }
    }
#line 3059
    disp___0 = (int )(jit->ip - pos___0);
#line 3059
    if (size___0) {
#line 3059
      while (1) {
#line 3059
        imb___2.val = disp___0 - 4;
#line 3059
        tmp___32 = pos___0;
#line 3059
        pos___0 ++;
#line 3059
        *tmp___32 = imb___2.b[0];
#line 3059
        tmp___33 = pos___0;
#line 3059
        pos___0 ++;
#line 3059
        *tmp___33 = imb___2.b[1];
#line 3059
        tmp___34 = pos___0;
#line 3059
        pos___0 ++;
#line 3059
        *tmp___34 = imb___2.b[2];
#line 3059
        tmp___35 = pos___0;
#line 3059
        pos___0 ++;
#line 3059
        *tmp___35 = imb___2.b[3];
#line 3059
        break;
      }
    } else
#line 3059
    if ((jit_value )(disp___0 - 1) >= -128L) {
#line 3059
      if ((jit_value )(disp___0 - 1) <= 127L) {
#line 3059
        while (1) {
#line 3059
          *pos___0 = (unsigned char )((disp___0 - 1) & 0xff);
#line 3059
          pos___0 ++;
#line 3059
          break;
        }
      } else {
#line 3059
        goto _L___4;
      }
    } else {
      _L___4: /* CIL Label */ 
#line 3059
      tmp___36 = __builtin_expect(1L, 0L);
#line 3059
      if (tmp___36) {
#line 3059
        __assert_rtn((char const   *)"emit_sse_round", (char const   *)"tmp/src.c",
                     1638, (char const   *)"0");
      }
    }
#line 3059
    break;
  }
#line 3060
  while (1) {
#line 3060
    tmp___37 = jit->ip;
#line 3060
    (jit->ip) ++;
#line 3060
    *tmp___37 = (unsigned char)242;
#line 3060
    while (1) {
#line 3060
      if (a1 > 7L) {
#line 3060
        tmp___38 = 4;
      } else {
#line 3060
        tmp___38 = 0;
      }
#line 3060
      if (a2 > 7L) {
#line 3060
        tmp___39 = 1;
      } else {
#line 3060
        tmp___39 = 0;
      }
#line 3060
      _amd64_rex_bits___2 = (unsigned char )((8 | tmp___38) | tmp___39);
#line 3060
      if ((int )_amd64_rex_bits___2 != 0) {
#line 3060
        tmp___40 = jit->ip;
#line 3060
        (jit->ip) ++;
#line 3060
        *tmp___40 = (unsigned char )(0x40 | (int )_amd64_rex_bits___2);
      }
#line 3060
      break;
    }
#line 3060
    tmp___41 = jit->ip;
#line 3060
    (jit->ip) ++;
#line 3060
    *tmp___41 = (unsigned char)15;
#line 3060
    tmp___42 = jit->ip;
#line 3060
    (jit->ip) ++;
#line 3060
    *tmp___42 = (unsigned char)44;
#line 3060
    while (1) {
#line 3060
      while (1) {
#line 3060
        tmp___43 = jit->ip;
#line 3060
        (jit->ip) ++;
#line 3060
        *tmp___43 = (unsigned char )(((long )(3 << 6) | ((a1 & 7L) << 3)) | (a2 & 7L));
#line 3060
        break;
      }
#line 3060
      break;
    }
#line 3060
    break;
  }
#line 3061
  while (1) {
#line 3061
    while (1) {
#line 3061
      tmp___44 = jit->ip;
#line 3061
      (jit->ip) ++;
#line 3061
      *tmp___44 = (unsigned char)102;
#line 3061
      while (1) {
#line 3061
        if (a2 > 7L) {
#line 3061
          tmp___45 = 4;
        } else {
#line 3061
          tmp___45 = 0;
        }
#line 3061
        if (a2 > 7L) {
#line 3061
          tmp___46 = 1;
        } else {
#line 3061
          tmp___46 = 0;
        }
#line 3061
        _amd64_rex_bits___3 = (unsigned char )(tmp___45 | tmp___46);
#line 3061
        if ((int )_amd64_rex_bits___3 != 0) {
#line 3061
          tmp___47 = jit->ip;
#line 3061
          (jit->ip) ++;
#line 3061
          *tmp___47 = (unsigned char )(0x40 | (int )_amd64_rex_bits___3);
        }
#line 3061
        break;
      }
#line 3061
      tmp___48 = jit->ip;
#line 3061
      (jit->ip) ++;
#line 3061
      *tmp___48 = (unsigned char)15;
#line 3061
      tmp___49 = jit->ip;
#line 3061
      (jit->ip) ++;
#line 3061
      *tmp___49 = (unsigned char)198;
#line 3061
      while (1) {
#line 3061
        while (1) {
#line 3061
          tmp___50 = jit->ip;
#line 3061
          (jit->ip) ++;
#line 3061
          *tmp___50 = (unsigned char )(((long )(3 << 6) | ((a2 & 7L) << 3)) | (a2 & 7L));
#line 3061
          break;
        }
#line 3061
        break;
      }
#line 3061
      break;
    }
#line 3061
    while (1) {
#line 3061
      *(jit->ip) = (unsigned char)1;
#line 3061
      (jit->ip) ++;
#line 3061
      break;
    }
#line 3061
    break;
  }
#line 3062
  return;
}
}
/* END FUNCTION-DEF emit_sse_round LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF funcall_prepare_optional LOC=UNKNOWN */
__inline static void funcall_prepare_optional(struct jit *jit ) 
{ 


  {
#line 2538
  jit->prepared_args.variadic = 1;
#line 2539
  return;
}
}
/* END FUNCTION-DEF funcall_prepare_optional LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF funcall_prepare LOC=UNKNOWN */
__inline static void funcall_prepare(struct jit *jit , jit_op *op , int count ) 
{ 
  void *tmp ;

  {
#line 2527
  tmp = malloc((size_t )(sizeof(struct jit_out_arg ) * (unsigned long long )count));
#line 2527
  jit->prepared_args.args = (struct jit_out_arg *)tmp;
#line 2528
  jit->prepared_args.count = count;
#line 2529
  jit->prepared_args.ready = 0;
#line 2530
  jit->prepared_args.stack_size = 0;
#line 2531
  jit->prepared_args.op = op;
#line 2532
  jit->prepared_args.gp_args = 0;
#line 2533
  jit->prepared_args.fp_args = 0;
#line 2534
  jit->prepared_args.variadic = 0;
#line 2535
  return;
}
}
/* END FUNCTION-DEF funcall_prepare LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF sse_mov_reg_safeimm LOC=UNKNOWN */
static void sse_mov_reg_safeimm(struct jit *jit , jit_op *op , jit_value reg , double *imm ) 
{ 
  jit_hw_reg *r ;
  jit_hw_reg *tmp ;
  int _amd64_width_temp ;
  unsigned char _amd64_rex_bits ;
  int tmp___0 ;
  int tmp___1 ;
  int tmp___2 ;
  int tmp___3 ;
  unsigned char *tmp___4 ;
  int tmp___5 ;
  unsigned char *tmp___6 ;
  amd64_imm_buf imb ;
  unsigned char *tmp___7 ;
  unsigned char *tmp___8 ;
  unsigned char *tmp___9 ;
  unsigned char *tmp___10 ;
  unsigned char *tmp___11 ;
  unsigned char *tmp___12 ;
  unsigned char *tmp___13 ;
  unsigned char *tmp___14 ;
  x86_imm_buf imb___0 ;
  unsigned char *tmp___15 ;
  unsigned char *tmp___16 ;
  unsigned char *tmp___17 ;
  unsigned char *tmp___18 ;
  int tmp___19 ;
  unsigned char *tmp___20 ;
  unsigned char _amd64_rex_bits___0 ;
  int tmp___21 ;
  int tmp___22 ;
  unsigned char *tmp___23 ;
  unsigned char *tmp___24 ;
  unsigned char *tmp___25 ;
  unsigned char *tmp___26 ;
  unsigned char *tmp___27 ;
  unsigned char *tmp___28 ;
  unsigned char *tmp___29 ;
  unsigned char *tmp___30 ;
  unsigned char *tmp___31 ;
  x86_imm_buf imb___1 ;
  unsigned char *tmp___32 ;
  unsigned char *tmp___33 ;
  unsigned char *tmp___34 ;
  unsigned char *tmp___35 ;
  unsigned char *tmp___36 ;
  unsigned char *tmp___37 ;
  unsigned char *tmp___38 ;
  x86_imm_buf imb___2 ;
  unsigned char *tmp___39 ;
  unsigned char *tmp___40 ;
  unsigned char *tmp___41 ;
  unsigned char *tmp___42 ;
  unsigned char _amd64_rex_bits___1 ;
  unsigned char *tmp___43 ;
  unsigned char *tmp___44 ;
  int _amd64_width_temp___0 ;
  unsigned char _amd64_rex_bits___2 ;
  int tmp___45 ;
  int tmp___46 ;
  int tmp___47 ;
  unsigned char *tmp___48 ;
  int tmp___49 ;
  unsigned char *tmp___50 ;
  amd64_imm_buf imb___3 ;
  unsigned char *tmp___51 ;
  unsigned char *tmp___52 ;
  unsigned char *tmp___53 ;
  unsigned char *tmp___54 ;
  unsigned char *tmp___55 ;
  unsigned char *tmp___56 ;
  unsigned char *tmp___57 ;
  unsigned char *tmp___58 ;
  x86_imm_buf imb___4 ;
  unsigned char *tmp___59 ;
  unsigned char *tmp___60 ;
  unsigned char *tmp___61 ;
  unsigned char *tmp___62 ;
  int tmp___63 ;
  unsigned char *tmp___64 ;
  unsigned char _amd64_rex_bits___3 ;
  int tmp___65 ;
  unsigned char *tmp___66 ;
  unsigned char *tmp___67 ;
  unsigned char *tmp___68 ;
  unsigned char *tmp___69 ;
  unsigned char *tmp___70 ;
  unsigned char *tmp___71 ;
  unsigned char *tmp___72 ;
  unsigned char *tmp___73 ;
  unsigned char *tmp___74 ;
  x86_imm_buf imb___5 ;
  unsigned char *tmp___75 ;
  unsigned char *tmp___76 ;
  unsigned char *tmp___77 ;
  unsigned char *tmp___78 ;
  unsigned char *tmp___79 ;
  unsigned char *tmp___80 ;
  unsigned char *tmp___81 ;
  x86_imm_buf imb___6 ;
  unsigned char *tmp___82 ;
  unsigned char *tmp___83 ;
  unsigned char *tmp___84 ;
  unsigned char *tmp___85 ;
  unsigned char _amd64_rex_bits___4 ;
  unsigned char *tmp___86 ;
  unsigned char *tmp___87 ;
  unsigned char *tmp___88 ;
  unsigned char _amd64_rex_bits___5 ;
  int tmp___89 ;
  unsigned char *tmp___90 ;
  unsigned char *tmp___91 ;
  unsigned char *tmp___92 ;
  unsigned char *tmp___93 ;
  unsigned char *tmp___94 ;
  x86_imm_buf imb___7 ;
  unsigned char *tmp___95 ;
  unsigned char *tmp___96 ;
  unsigned char *tmp___97 ;
  unsigned char *tmp___98 ;

  {
#line 2936
  if ((jit_unsigned_value )imm > 0xffffffffUL) {
#line 2937
    tmp = jit_get_unused_reg(jit->reg_al, op, 0);
#line 2937
    r = tmp;
#line 2938
    if (r) {
#line 2939
      while (1) {
#line 2939
        _amd64_width_temp = (size_t )((jit_value )imm) == (size_t )((int )((size_t )((jit_value )imm)));
#line 2939
        while (1) {
#line 2939
          while (1) {
#line 2939
            if (_amd64_width_temp) {
#line 2939
              tmp___2 = 4;
            } else {
#line 2939
              tmp___2 = 8;
            }
#line 2939
            if (tmp___2 > 4) {
#line 2939
              tmp___1 = 8;
            } else {
#line 2939
              tmp___1 = 0;
            }
#line 2939
            if (r->id > 7) {
#line 2939
              tmp___3 = 1;
            } else {
#line 2939
              tmp___3 = 0;
            }
#line 2939
            _amd64_rex_bits = (unsigned char )(tmp___1 | tmp___3);
#line 2939
            if ((int )_amd64_rex_bits != 0) {
#line 2939
              tmp___4 = jit->ip;
#line 2939
              (jit->ip) ++;
#line 2939
              *tmp___4 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
            } else {
#line 2939
              if (_amd64_width_temp) {
#line 2939
                tmp___5 = 4;
              } else {
#line 2939
                tmp___5 = 8;
              }
#line 2939
              if (tmp___5 == 1) {
#line 2939
                tmp___4 = jit->ip;
#line 2939
                (jit->ip) ++;
#line 2939
                *tmp___4 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
              }
            }
#line 2939
            break;
          }
#line 2939
          tmp___6 = jit->ip;
#line 2939
          (jit->ip) ++;
#line 2939
          *tmp___6 = (unsigned char )(184 + (r->id & 0x7));
#line 2939
          if (_amd64_width_temp) {
#line 2939
            tmp___19 = 4;
          } else {
#line 2939
            tmp___19 = 8;
          }
#line 2939
          if (tmp___19 == 8) {
#line 2939
            while (1) {
#line 2939
              imb.val = (size_t )((jit_value )imm);
#line 2939
              tmp___7 = jit->ip;
#line 2939
              (jit->ip) ++;
#line 2939
              *tmp___7 = imb.b[0];
#line 2939
              tmp___8 = jit->ip;
#line 2939
              (jit->ip) ++;
#line 2939
              *tmp___8 = imb.b[1];
#line 2939
              tmp___9 = jit->ip;
#line 2939
              (jit->ip) ++;
#line 2939
              *tmp___9 = imb.b[2];
#line 2939
              tmp___10 = jit->ip;
#line 2939
              (jit->ip) ++;
#line 2939
              *tmp___10 = imb.b[3];
#line 2939
              tmp___11 = jit->ip;
#line 2939
              (jit->ip) ++;
#line 2939
              *tmp___11 = imb.b[4];
#line 2939
              tmp___12 = jit->ip;
#line 2939
              (jit->ip) ++;
#line 2939
              *tmp___12 = imb.b[5];
#line 2939
              tmp___13 = jit->ip;
#line 2939
              (jit->ip) ++;
#line 2939
              *tmp___13 = imb.b[6];
#line 2939
              tmp___14 = jit->ip;
#line 2939
              (jit->ip) ++;
#line 2939
              *tmp___14 = imb.b[7];
#line 2939
              break;
            }
          } else {
#line 2939
            while (1) {
#line 2939
              imb___0.val = (int )((size_t )((jit_value )imm));
#line 2939
              tmp___15 = jit->ip;
#line 2939
              (jit->ip) ++;
#line 2939
              *tmp___15 = imb___0.b[0];
#line 2939
              tmp___16 = jit->ip;
#line 2939
              (jit->ip) ++;
#line 2939
              *tmp___16 = imb___0.b[1];
#line 2939
              tmp___17 = jit->ip;
#line 2939
              (jit->ip) ++;
#line 2939
              *tmp___17 = imb___0.b[2];
#line 2939
              tmp___18 = jit->ip;
#line 2939
              (jit->ip) ++;
#line 2939
              *tmp___18 = imb___0.b[3];
#line 2939
              break;
            }
          }
#line 2939
          break;
        }
#line 2939
        break;
      }
#line 2940
      while (1) {
#line 2940
        tmp___20 = jit->ip;
#line 2940
        (jit->ip) ++;
#line 2940
        *tmp___20 = (unsigned char)242;
#line 2940
        while (1) {
#line 2940
          if (reg > 7L) {
#line 2940
            tmp___21 = 4;
          } else {
#line 2940
            tmp___21 = 0;
          }
#line 2940
          if (r->id > 7) {
#line 2940
            tmp___22 = 1;
          } else {
#line 2940
            tmp___22 = 0;
          }
#line 2940
          _amd64_rex_bits___0 = (unsigned char )(tmp___21 | tmp___22);
#line 2940
          if ((int )_amd64_rex_bits___0 != 0) {
#line 2940
            tmp___23 = jit->ip;
#line 2940
            (jit->ip) ++;
#line 2940
            *tmp___23 = (unsigned char )(0x40 | (int )_amd64_rex_bits___0);
          }
#line 2940
          break;
        }
#line 2940
        tmp___24 = jit->ip;
#line 2940
        (jit->ip) ++;
#line 2940
        *tmp___24 = (unsigned char)15;
#line 2940
        tmp___25 = jit->ip;
#line 2940
        (jit->ip) ++;
#line 2940
        *tmp___25 = (unsigned char)16;
#line 2940
        while (1) {
#line 2940
          if ((r->id & 0x7) == 4) {
#line 2940
            while (1) {
#line 2940
              tmp___26 = jit->ip;
#line 2940
              (jit->ip) ++;
#line 2940
              *tmp___26 = (unsigned char )((((reg & 7L) & 7L) << 3) | 4L);
#line 2940
              break;
            }
#line 2940
            while (1) {
#line 2940
              tmp___27 = jit->ip;
#line 2940
              (jit->ip) ++;
#line 2940
              *tmp___27 = (unsigned char )((4 << 3) | 4);
#line 2940
              break;
            }
#line 2940
            break;
          }
#line 2940
          if ((r->id & 0x7) != 5) {
#line 2940
            while (1) {
#line 2940
              tmp___36 = jit->ip;
#line 2940
              (jit->ip) ++;
#line 2940
              *tmp___36 = (unsigned char )((((reg & 7L) & 7L) << 3) | (long )((r->id & 0x7) & 0x07));
#line 2940
              break;
            }
#line 2940
            break;
          }
#line 2940
          while (1) {
#line 2940
            tmp___37 = jit->ip;
#line 2940
            (jit->ip) ++;
#line 2940
            *tmp___37 = (unsigned char )(((long )(1 << 6) | (((reg & 7L) & 7L) << 3)) | (long )((r->id & 0x7) & 0x07));
#line 2940
            break;
          }
#line 2940
          while (1) {
#line 2940
            *(jit->ip) = (unsigned char)0;
#line 2940
            (jit->ip) ++;
#line 2940
            break;
          }
#line 2940
          break;
        }
#line 2940
        break;
      }
    } else {
#line 2942
      while (1) {
#line 2942
        while (1) {
#line 2942
          _amd64_rex_bits___1 = (unsigned char)0;
#line 2942
          if ((int )_amd64_rex_bits___1 != 0) {
#line 2942
            tmp___43 = jit->ip;
#line 2942
            (jit->ip) ++;
#line 2942
            *tmp___43 = (unsigned char )(0x40 | (int )_amd64_rex_bits___1);
          }
#line 2942
          break;
        }
#line 2942
        tmp___44 = jit->ip;
#line 2942
        (jit->ip) ++;
#line 2942
        *tmp___44 = (unsigned char)80;
#line 2942
        break;
      }
#line 2943
      while (1) {
#line 2943
        _amd64_width_temp___0 = (size_t )((jit_value )imm) == (size_t )((int )((size_t )((jit_value )imm)));
#line 2943
        while (1) {
#line 2943
          while (1) {
#line 2943
            if (_amd64_width_temp___0) {
#line 2943
              tmp___47 = 4;
            } else {
#line 2943
              tmp___47 = 8;
            }
#line 2943
            if (tmp___47 > 4) {
#line 2943
              tmp___46 = 8;
            } else {
#line 2943
              tmp___46 = 0;
            }
#line 2943
            _amd64_rex_bits___2 = (unsigned char )tmp___46;
#line 2943
            if ((int )_amd64_rex_bits___2 != 0) {
#line 2943
              tmp___48 = jit->ip;
#line 2943
              (jit->ip) ++;
#line 2943
              *tmp___48 = (unsigned char )(0x40 | (int )_amd64_rex_bits___2);
            } else {
#line 2943
              if (_amd64_width_temp___0) {
#line 2943
                tmp___49 = 4;
              } else {
#line 2943
                tmp___49 = 8;
              }
#line 2943
              if (tmp___49 == 1) {
#line 2943
                tmp___48 = jit->ip;
#line 2943
                (jit->ip) ++;
#line 2943
                *tmp___48 = (unsigned char )(0x40 | (int )_amd64_rex_bits___2);
              }
            }
#line 2943
            break;
          }
#line 2943
          tmp___50 = jit->ip;
#line 2943
          (jit->ip) ++;
#line 2943
          *tmp___50 = (unsigned char)184;
#line 2943
          if (_amd64_width_temp___0) {
#line 2943
            tmp___63 = 4;
          } else {
#line 2943
            tmp___63 = 8;
          }
#line 2943
          if (tmp___63 == 8) {
#line 2943
            while (1) {
#line 2943
              imb___3.val = (size_t )((jit_value )imm);
#line 2943
              tmp___51 = jit->ip;
#line 2943
              (jit->ip) ++;
#line 2943
              *tmp___51 = imb___3.b[0];
#line 2943
              tmp___52 = jit->ip;
#line 2943
              (jit->ip) ++;
#line 2943
              *tmp___52 = imb___3.b[1];
#line 2943
              tmp___53 = jit->ip;
#line 2943
              (jit->ip) ++;
#line 2943
              *tmp___53 = imb___3.b[2];
#line 2943
              tmp___54 = jit->ip;
#line 2943
              (jit->ip) ++;
#line 2943
              *tmp___54 = imb___3.b[3];
#line 2943
              tmp___55 = jit->ip;
#line 2943
              (jit->ip) ++;
#line 2943
              *tmp___55 = imb___3.b[4];
#line 2943
              tmp___56 = jit->ip;
#line 2943
              (jit->ip) ++;
#line 2943
              *tmp___56 = imb___3.b[5];
#line 2943
              tmp___57 = jit->ip;
#line 2943
              (jit->ip) ++;
#line 2943
              *tmp___57 = imb___3.b[6];
#line 2943
              tmp___58 = jit->ip;
#line 2943
              (jit->ip) ++;
#line 2943
              *tmp___58 = imb___3.b[7];
#line 2943
              break;
            }
          } else {
#line 2943
            while (1) {
#line 2943
              imb___4.val = (int )((size_t )((jit_value )imm));
#line 2943
              tmp___59 = jit->ip;
#line 2943
              (jit->ip) ++;
#line 2943
              *tmp___59 = imb___4.b[0];
#line 2943
              tmp___60 = jit->ip;
#line 2943
              (jit->ip) ++;
#line 2943
              *tmp___60 = imb___4.b[1];
#line 2943
              tmp___61 = jit->ip;
#line 2943
              (jit->ip) ++;
#line 2943
              *tmp___61 = imb___4.b[2];
#line 2943
              tmp___62 = jit->ip;
#line 2943
              (jit->ip) ++;
#line 2943
              *tmp___62 = imb___4.b[3];
#line 2943
              break;
            }
          }
#line 2943
          break;
        }
#line 2943
        break;
      }
#line 2944
      while (1) {
#line 2944
        tmp___64 = jit->ip;
#line 2944
        (jit->ip) ++;
#line 2944
        *tmp___64 = (unsigned char)242;
#line 2944
        while (1) {
#line 2944
          if (reg > 7L) {
#line 2944
            tmp___65 = 4;
          } else {
#line 2944
            tmp___65 = 0;
          }
#line 2944
          _amd64_rex_bits___3 = (unsigned char )tmp___65;
#line 2944
          if ((int )_amd64_rex_bits___3 != 0) {
#line 2944
            tmp___66 = jit->ip;
#line 2944
            (jit->ip) ++;
#line 2944
            *tmp___66 = (unsigned char )(0x40 | (int )_amd64_rex_bits___3);
          }
#line 2944
          break;
        }
#line 2944
        tmp___67 = jit->ip;
#line 2944
        (jit->ip) ++;
#line 2944
        *tmp___67 = (unsigned char)15;
#line 2944
        tmp___68 = jit->ip;
#line 2944
        (jit->ip) ++;
#line 2944
        *tmp___68 = (unsigned char)16;
#line 2944
        while (1) {
#line 2944
          while (1) {
#line 2944
            tmp___79 = jit->ip;
#line 2944
            (jit->ip) ++;
#line 2944
            *tmp___79 = (unsigned char )(((reg & 7L) & 7L) << 3);
#line 2944
            break;
          }
#line 2944
          break;
#line 2944
          while (1) {
#line 2944
            tmp___80 = jit->ip;
#line 2944
            (jit->ip) ++;
#line 2944
            *tmp___80 = (unsigned char )((long )(1 << 6) | (((reg & 7L) & 7L) << 3));
#line 2944
            break;
          }
#line 2944
          while (1) {
#line 2944
            *(jit->ip) = (unsigned char)0;
#line 2944
            (jit->ip) ++;
#line 2944
            break;
          }
#line 2944
          break;
        }
#line 2944
        break;
      }
#line 2945
      while (1) {
#line 2945
        while (1) {
#line 2945
          _amd64_rex_bits___4 = (unsigned char)0;
#line 2945
          if ((int )_amd64_rex_bits___4 != 0) {
#line 2945
            tmp___86 = jit->ip;
#line 2945
            (jit->ip) ++;
#line 2945
            *tmp___86 = (unsigned char )(0x40 | (int )_amd64_rex_bits___4);
          }
#line 2945
          break;
        }
#line 2945
        tmp___87 = jit->ip;
#line 2945
        (jit->ip) ++;
#line 2945
        *tmp___87 = (unsigned char)88;
#line 2945
        break;
      }
    }
  } else {
#line 2948
    while (1) {
#line 2948
      tmp___88 = jit->ip;
#line 2948
      (jit->ip) ++;
#line 2948
      *tmp___88 = (unsigned char)242;
#line 2948
      while (1) {
#line 2948
        if (reg > 7L) {
#line 2948
          tmp___89 = 4;
        } else {
#line 2948
          tmp___89 = 0;
        }
#line 2948
        _amd64_rex_bits___5 = (unsigned char )tmp___89;
#line 2948
        if ((int )_amd64_rex_bits___5 != 0) {
#line 2948
          tmp___90 = jit->ip;
#line 2948
          (jit->ip) ++;
#line 2948
          *tmp___90 = (unsigned char )(0x40 | (int )_amd64_rex_bits___5);
        }
#line 2948
        break;
      }
#line 2948
      tmp___91 = jit->ip;
#line 2948
      (jit->ip) ++;
#line 2948
      *tmp___91 = (unsigned char)15;
#line 2948
      tmp___92 = jit->ip;
#line 2948
      (jit->ip) ++;
#line 2948
      *tmp___92 = (unsigned char)16;
#line 2948
      while (1) {
#line 2948
        tmp___93 = jit->ip;
#line 2948
        (jit->ip) ++;
#line 2948
        *tmp___93 = (unsigned char )(((reg & 7L) << 3) | 4L);
#line 2948
        break;
      }
#line 2948
      while (1) {
#line 2948
        tmp___94 = jit->ip;
#line 2948
        (jit->ip) ++;
#line 2948
        *tmp___94 = (unsigned char )((4 << 3) | 5);
#line 2948
        break;
      }
#line 2948
      while (1) {
#line 2948
        imb___7.val = (int )((jit_value )imm);
#line 2948
        tmp___95 = jit->ip;
#line 2948
        (jit->ip) ++;
#line 2948
        *tmp___95 = imb___7.b[0];
#line 2948
        tmp___96 = jit->ip;
#line 2948
        (jit->ip) ++;
#line 2948
        *tmp___96 = imb___7.b[1];
#line 2948
        tmp___97 = jit->ip;
#line 2948
        (jit->ip) ++;
#line 2948
        *tmp___97 = imb___7.b[2];
#line 2948
        tmp___98 = jit->ip;
#line 2948
        (jit->ip) ++;
#line 2948
        *tmp___98 = imb___7.b[3];
#line 2948
        break;
      }
#line 2948
      break;
    }
  }
#line 2950
  return;
}
}
/* END FUNCTION-DEF sse_mov_reg_safeimm LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF print_comment LOC=UNKNOWN */
void print_comment(struct output_buf *linebuf , jit_op *op ) 
{ 
  char *str ;
  int i ;
  size_t tmp ;

  {
#line 5302
  str = (char *)op->arg[0];
#line 5303
  ob_append(linebuf, "// ");
#line 5304
  i = 0;
#line 5304
  while (1) {
#line 5304
    tmp = strlen((char const   *)str);
#line 5304
    if (! ((size_t )i < tmp)) {
#line 5304
      break;
    }
#line 5305
    if ((int )*(str + i) == 13) {
#line 5305
      ob_append(linebuf, "\n// ");
    } else
#line 5305
    if ((int )*(str + i) == 10) {
#line 5305
      ob_append(linebuf, "\n// ");
    } else {
#line 5306
      ob_printf(linebuf, (char const   *)"%c", (int )*(str + i));
    }
#line 5304
    i ++;
  }
#line 5308
  return;
}
}
/* END FUNCTION-DEF print_comment LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_get_unused_reg_with_index LOC=UNKNOWN */
jit_hw_reg *jit_get_unused_reg_with_index(struct jit_reg_allocator *al , jit_op *op ,
                                          int fp , int index___0 ) 
{ 
  jit_hw_reg *regs ;
  int reg_count ;
  int i ;
  int tmp ;

  {
#line 6309
  if (! fp) {
#line 6310
    regs = al->gp_regs;
#line 6311
    reg_count = al->gp_reg_cnt;
  } else {
#line 6313
    regs = al->fp_regs;
#line 6314
    reg_count = al->fp_reg_cnt;
  }
#line 6316
  i = 0;
#line 6316
  while (i < reg_count) {
#line 6317
    if ((regs + i)->callee_saved) {
#line 6317
      goto __Cont;
    }
#line 6318
    tmp = jit_reg_in_use(op, (regs + i)->id, fp);
#line 6318
    if (! tmp) {
#line 6319
      if (index___0 == 0) {
#line 6319
        return (regs + i);
      } else {
#line 6320
        index___0 --;
      }
    }
    __Cont: /* CIL Label */ 
#line 6316
    i ++;
  }
#line 6323
  return ((jit_hw_reg *)((void *)0));
}
}
/* END FUNCTION-DEF jit_get_unused_reg_with_index LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF emit_memcpy LOC=UNKNOWN */
static void emit_memcpy(struct jit *jit , jit_op *op , jit_value a1 , jit_value a2 ,
                        jit_value a3 ) 
{ 


  {
#line 4505
  emit_transfer_init(jit, op, a1, a2, a3, 1);
#line 4506
  emit_transfer_loop(jit, op);
#line 4507
  return;
}
}
/* END FUNCTION-DEF emit_memcpy LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF force_spill LOC=UNKNOWN */
static int force_spill(jit_op *op ) 
{ 
  jit_value reg ;
  jit_hw_reg *hreg ;
  jit_hw_reg *tmp ;

  {
#line 6064
  reg = op->arg[0];
#line 6065
  tmp = rmap_get(op->regmap, reg);
#line 6065
  hreg = tmp;
#line 6066
  if (hreg) {
#line 6067
    unload_reg(op, hreg, reg);
#line 6068
    rmap_unassoc(op->regmap, reg);
  }
#line 6070
  return (1);
}
}
/* END FUNCTION-DEF force_spill LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF pow2 LOC=UNKNOWN */
__inline static int pow2(int arg ) 
{ 
  int r ;
  int i ;

  {
#line 3507
  r = 1;
#line 3508
  i = 0;
#line 3508
  while (i < arg) {
#line 3509
    r *= 2;
#line 3508
    i ++;
  }
#line 3510
  return (r);
}
}
/* END FUNCTION-DEF pow2 LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_set_free LOC=UNKNOWN */
__inline static void jit_set_free(jit_set *s ) 
{ 


  {
#line 2273
  jit_tree_free(s->root);
#line 2274
  free((void *)s);
#line 2275
  return;
}
}
/* END FUNCTION-DEF jit_set_free LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF _cipher$_xtea_encipherBlock LOC=UNKNOWN */
void _cipher$_xtea_encipherBlock(unsigned int num_rounds , unsigned int *v , unsigned int *key ) 
{ 
  unsigned int v0 ;
  unsigned int v1 ;
  unsigned int delta ;
  unsigned int sum ;
  unsigned int i ;

  {
  v0 = v[0];
  v1 = v[1];
  delta = 2117564857;
  sum = 0;
  i = 0;
  while (i < num_rounds) {
    v0 += (((v1 << 4) ^ (v1 >> 5)) + v1) ^ (sum + key[sum & 3]);
    sum += delta;
    v1 += (((v0 << 4) ^ (v0 >> 5)) + v0) ^ (sum + key[(sum >> 11) & 3]);
    i ++;
  }
  v[0] = v0;
  v[1] = v1;
}
}
/* END FUNCTION-DEF _cipher$_xtea_encipherBlock LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_trace_op LOC=UNKNOWN */
void jit_trace_op(struct jit *jit , jit_op *op , int verbosity ) 
{ 
  jit_tree *labels ;
  jit_tree *tmp ;
  FILE *f ;
  FILE *tmp___0 ;

  {
#line 5633
  tmp = prepare_labels(jit);
#line 5633
  labels = tmp;
#line 5634
  if (verbosity & 0x01) {
#line 5635
    print_op(__stdoutp, & jit_disasm_general, op, labels, verbosity);
#line 5636
    printf((char const   */* __restrict  */)"\n");
  }
#line 5638
  if (verbosity & 0x04) {
#line 5639
    tmp___0 = open_disasm();
#line 5639
    f = tmp___0;
#line 5640
    fprintf((FILE */* __restrict  */)f, (char const   */* __restrict  */)"..addr=%lx\n",
            op->code_offset);
#line 5641
    print_combined_op(f, jit, op, labels);
#line 5642
    fclose(f);
#line 5643
    wait((int *)((void *)0));
  }
#line 5645
  jit_tree_free(labels);
#line 5646
  return;
}
}
/* END FUNCTION-DEF jit_trace_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_allocator_hints_free LOC=UNKNOWN */
void jit_allocator_hints_free(jit_tree *hints ) 
{ 
  int refs ;

  {
#line 6219
  if ((unsigned long )hints == (unsigned long )((void *)0)) {
#line 6219
    return;
  }
#line 6220
  jit_allocator_hints_free(hints->left);
#line 6221
  jit_allocator_hints_free(hints->right);
#line 6222
  (((struct jit_allocator_hint *)hints->value)->refs) --;
#line 6222
  refs = ((struct jit_allocator_hint *)hints->value)->refs;
#line 6223
  if (refs == 0) {
#line 6223
    free(hints->value);
  }
#line 6224
  free((void *)hints);
#line 6225
  return;
}
}
/* END FUNCTION-DEF jit_allocator_hints_free LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_dump_ops_combined LOC=UNKNOWN */
static void jit_dump_ops_combined(struct jit *jit , jit_tree *labels ) 
{ 
  FILE *f ;
  FILE *tmp ;
  jit_op *op ;
  jit_op *tmp___0 ;

  {
#line 5611
  tmp = open_disasm();
#line 5611
  f = tmp;
#line 5612
  fprintf((FILE */* __restrict  */)f, (char const   */* __restrict  */)".addr=%lx\n",
          (unsigned long )jit->buf);
#line 5613
  tmp___0 = jit_op_first(jit->ops);
#line 5613
  op = tmp___0;
#line 5613
  while ((unsigned long )op != (unsigned long )((void *)0)) {
#line 5614
    op = print_combined_op(f, jit, op, labels);
#line 5615
    if (! op) {
#line 5615
      break;
    }
#line 5613
    op = op->next;
  }
#line 5617
  fclose(f);
#line 5618
  wait((int *)((void *)0));
#line 5619
  return;
}
}
/* END FUNCTION-DEF jit_dump_ops_combined LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_add_prolog LOC=UNKNOWN */
jit_op *jit_add_prolog(struct jit *jit , void *func , struct jit_debug_info *debug_info ) 
{ 
  jit_op *op ;
  struct jit_op *tmp ;
  struct jit_func_info *info ;
  void *tmp___0 ;

  {
#line 6368
  tmp = jit_add_op(jit, (unsigned short)688, (unsigned char)2, (jit_value )func, (jit_value )0,
                   (jit_value )0, (unsigned char)0, (struct jit_debug_info *)((void *)0));
#line 6368
  op = tmp;
#line 6369
  tmp___0 = malloc((size_t )sizeof(struct jit_func_info ));
#line 6369
  info = (struct jit_func_info *)tmp___0;
#line 6370
  op->arg[1] = (jit_value )info;
#line 6371
  op->debug_info = debug_info;
#line 6372
  jit->current_func = op;
#line 6373
  info->first_op = op;
#line 6374
  info->allocai_mem = 0L;
#line 6375
  info->general_arg_cnt = 0;
#line 6376
  info->float_arg_cnt = 0;
#line 6377
  return (op);
}
}
/* END FUNCTION-DEF jit_add_prolog LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_regs_active LOC=UNKNOWN */
void jit_regs_active(jit_op *op , jit_value *dest ) 
{ 


  {
#line 6714
  jit_set_to_array(op->live_out, dest);
#line 6715
  return;
}
}
/* END FUNCTION-DEF jit_regs_active LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF rmap_spill_candidate LOC=UNKNOWN */
static jit_hw_reg *rmap_spill_candidate(struct jit_reg_allocator *al , jit_op *op ,
                                        jit_value virtreg , int *spill , jit_value *reg_to_spill ,
                                        int callee_saved ) 
{ 
  jit_reg r ;
  jit_hw_reg *regs ;
  int reg_count ;
  jit_hw_reg *result ;
  int best_score ;
  int sp ;
  int i ;
  jit_value assoc ;
  int score ;
  int tmp ;

  {
#line 3358
  r = virtreg;
#line 3361
  result = (jit_hw_reg *)((void *)0);
#line 3362
  best_score = (-0x7FFFFFFF-1);
#line 3363
  if ((r & 1L) == 0L) {
#line 3364
    regs = al->gp_regs;
#line 3365
    reg_count = al->gp_reg_cnt;
  } else {
#line 3367
    regs = al->fp_regs;
#line 3368
    reg_count = al->fp_reg_cnt;
  }
#line 3370
  sp = 0;
#line 3371
  i = 0;
#line 3371
  while (i < reg_count) {
#line 3372
    if (callee_saved) {
#line 3372
      if (! (regs + i)->callee_saved) {
#line 3372
        goto __Cont;
      }
    }
#line 3373
    assoc = (jit_value )0;
#line 3374
    tmp = candidate_score(op, virtreg, regs + i, & sp, & assoc);
#line 3374
    score = tmp;
#line 3375
    if (score > best_score) {
#line 3376
      if (sp) {
#line 3377
        *reg_to_spill = assoc;
#line 3378
        *spill = sp;
      } else {
#line 3380
        *reg_to_spill = (jit_value )-1;
#line 3381
        *spill = 0;
      }
#line 3383
      result = regs + i;
#line 3384
      best_score = score;
    }
    __Cont: /* CIL Label */ 
#line 3371
    i ++;
  }
#line 3387
  return (result);
}
}
/* END FUNCTION-DEF rmap_spill_candidate LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF emit_sse_sub_op LOC=UNKNOWN */
static void emit_sse_sub_op(struct jit *jit , jit_op *op , jit_value a1 , jit_value a2 ,
                            jit_value a3 ) 
{ 
  unsigned char *tmp ;
  unsigned char _amd64_rex_bits ;
  int tmp___0 ;
  int tmp___1 ;
  unsigned char *tmp___2 ;
  unsigned char *tmp___3 ;
  unsigned char *tmp___4 ;
  unsigned char *tmp___5 ;
  unsigned char *tmp___6 ;
  unsigned char _amd64_rex_bits___0 ;
  int tmp___7 ;
  int tmp___8 ;
  unsigned char *tmp___9 ;
  unsigned char *tmp___10 ;
  unsigned char *tmp___11 ;
  unsigned char *tmp___12 ;
  unsigned char *tmp___13 ;
  unsigned char _amd64_rex_bits___1 ;
  int tmp___14 ;
  int tmp___15 ;
  unsigned char *tmp___16 ;
  unsigned char *tmp___17 ;
  unsigned char *tmp___18 ;
  unsigned char *tmp___19 ;
  unsigned char *tmp___20 ;
  unsigned char _amd64_rex_bits___2 ;
  int tmp___21 ;
  int tmp___22 ;
  unsigned char *tmp___23 ;
  unsigned char *tmp___24 ;
  unsigned char *tmp___25 ;
  unsigned char *tmp___26 ;

  {
#line 3011
  if (a1 == a2) {
#line 3012
    while (1) {
#line 3012
      tmp = jit->ip;
#line 3012
      (jit->ip) ++;
#line 3012
      *tmp = (unsigned char)242;
#line 3012
      while (1) {
#line 3012
        if (a1 > 7L) {
#line 3012
          tmp___0 = 4;
        } else {
#line 3012
          tmp___0 = 0;
        }
#line 3012
        if (a3 > 7L) {
#line 3012
          tmp___1 = 1;
        } else {
#line 3012
          tmp___1 = 0;
        }
#line 3012
        _amd64_rex_bits = (unsigned char )(tmp___0 | tmp___1);
#line 3012
        if ((int )_amd64_rex_bits != 0) {
#line 3012
          tmp___2 = jit->ip;
#line 3012
          (jit->ip) ++;
#line 3012
          *tmp___2 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
        }
#line 3012
        break;
      }
#line 3012
      tmp___3 = jit->ip;
#line 3012
      (jit->ip) ++;
#line 3012
      *tmp___3 = (unsigned char)15;
#line 3012
      tmp___4 = jit->ip;
#line 3012
      (jit->ip) ++;
#line 3012
      *tmp___4 = (unsigned char)92;
#line 3012
      while (1) {
#line 3012
        while (1) {
#line 3012
          tmp___5 = jit->ip;
#line 3012
          (jit->ip) ++;
#line 3012
          *tmp___5 = (unsigned char )(((long )(3 << 6) | ((a1 & 7L) << 3)) | (a3 & 7L));
#line 3012
          break;
        }
#line 3012
        break;
      }
#line 3012
      break;
    }
  } else
#line 3013
  if (a1 == a3) {
#line 3014
    while (1) {
#line 3014
      tmp___6 = jit->ip;
#line 3014
      (jit->ip) ++;
#line 3014
      *tmp___6 = (unsigned char)242;
#line 3014
      while (1) {
#line 3014
        if (a1 > 7L) {
#line 3014
          tmp___7 = 4;
        } else {
#line 3014
          tmp___7 = 0;
        }
#line 3014
        if (a2 > 7L) {
#line 3014
          tmp___8 = 1;
        } else {
#line 3014
          tmp___8 = 0;
        }
#line 3014
        _amd64_rex_bits___0 = (unsigned char )(tmp___7 | tmp___8);
#line 3014
        if ((int )_amd64_rex_bits___0 != 0) {
#line 3014
          tmp___9 = jit->ip;
#line 3014
          (jit->ip) ++;
#line 3014
          *tmp___9 = (unsigned char )(0x40 | (int )_amd64_rex_bits___0);
        }
#line 3014
        break;
      }
#line 3014
      tmp___10 = jit->ip;
#line 3014
      (jit->ip) ++;
#line 3014
      *tmp___10 = (unsigned char)15;
#line 3014
      tmp___11 = jit->ip;
#line 3014
      (jit->ip) ++;
#line 3014
      *tmp___11 = (unsigned char)92;
#line 3014
      while (1) {
#line 3014
        while (1) {
#line 3014
          tmp___12 = jit->ip;
#line 3014
          (jit->ip) ++;
#line 3014
          *tmp___12 = (unsigned char )(((long )(3 << 6) | ((a1 & 7L) << 3)) | (a2 & 7L));
#line 3014
          break;
        }
#line 3014
        break;
      }
#line 3014
      break;
    }
#line 3015
    emit_sse_change_sign(jit, op, (int )a1);
  } else {
#line 3017
    while (1) {
#line 3017
      tmp___13 = jit->ip;
#line 3017
      (jit->ip) ++;
#line 3017
      *tmp___13 = (unsigned char)242;
#line 3017
      while (1) {
#line 3017
        if (a1 > 7L) {
#line 3017
          tmp___14 = 4;
        } else {
#line 3017
          tmp___14 = 0;
        }
#line 3017
        if (a2 > 7L) {
#line 3017
          tmp___15 = 1;
        } else {
#line 3017
          tmp___15 = 0;
        }
#line 3017
        _amd64_rex_bits___1 = (unsigned char )(tmp___14 | tmp___15);
#line 3017
        if ((int )_amd64_rex_bits___1 != 0) {
#line 3017
          tmp___16 = jit->ip;
#line 3017
          (jit->ip) ++;
#line 3017
          *tmp___16 = (unsigned char )(0x40 | (int )_amd64_rex_bits___1);
        }
#line 3017
        break;
      }
#line 3017
      tmp___17 = jit->ip;
#line 3017
      (jit->ip) ++;
#line 3017
      *tmp___17 = (unsigned char)15;
#line 3017
      tmp___18 = jit->ip;
#line 3017
      (jit->ip) ++;
#line 3017
      *tmp___18 = (unsigned char)16;
#line 3017
      while (1) {
#line 3017
        while (1) {
#line 3017
          tmp___19 = jit->ip;
#line 3017
          (jit->ip) ++;
#line 3017
          *tmp___19 = (unsigned char )(((long )(3 << 6) | ((a1 & 7L) << 3)) | (a2 & 7L));
#line 3017
          break;
        }
#line 3017
        break;
      }
#line 3017
      break;
    }
#line 3018
    while (1) {
#line 3018
      tmp___20 = jit->ip;
#line 3018
      (jit->ip) ++;
#line 3018
      *tmp___20 = (unsigned char)242;
#line 3018
      while (1) {
#line 3018
        if (a1 > 7L) {
#line 3018
          tmp___21 = 4;
        } else {
#line 3018
          tmp___21 = 0;
        }
#line 3018
        if (a3 > 7L) {
#line 3018
          tmp___22 = 1;
        } else {
#line 3018
          tmp___22 = 0;
        }
#line 3018
        _amd64_rex_bits___2 = (unsigned char )(tmp___21 | tmp___22);
#line 3018
        if ((int )_amd64_rex_bits___2 != 0) {
#line 3018
          tmp___23 = jit->ip;
#line 3018
          (jit->ip) ++;
#line 3018
          *tmp___23 = (unsigned char )(0x40 | (int )_amd64_rex_bits___2);
        }
#line 3018
        break;
      }
#line 3018
      tmp___24 = jit->ip;
#line 3018
      (jit->ip) ++;
#line 3018
      *tmp___24 = (unsigned char)15;
#line 3018
      tmp___25 = jit->ip;
#line 3018
      (jit->ip) ++;
#line 3018
      *tmp___25 = (unsigned char)92;
#line 3018
      while (1) {
#line 3018
        while (1) {
#line 3018
          tmp___26 = jit->ip;
#line 3018
          (jit->ip) ++;
#line 3018
          *tmp___26 = (unsigned char )(((long )(3 << 6) | ((a1 & 7L) << 3)) | (a3 & 7L));
#line 3018
          break;
        }
#line 3018
        break;
      }
#line 3018
      break;
    }
  }
#line 3020
  return;
}
}
/* END FUNCTION-DEF emit_sse_sub_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF make_addmuli LOC=UNKNOWN */
__inline static int make_addmuli(jit_op *op , jit_op *nextop ) 
{ 
  int tmp ;

  {
#line 3520
  nextop->code = (unsigned short)66;
#line 3521
  nextop->spec = (unsigned char )(((0x02 << 4) | (0x01 << 2)) | 0x03);
#line 3522
  nextop->arg[1] = op->arg[1];
#line 3523
  if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 528U) {
#line 3523
    tmp = shift_index((int )op->arg[2]);
#line 3523
    nextop->arg_size = (unsigned char )tmp;
  } else {
#line 3523
    nextop->arg_size = (unsigned char )op->arg[2];
  }
#line 3524
  make_nop(op);
#line 3525
  return (1);
}
}
/* END FUNCTION-DEF make_addmuli LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_buf_expand LOC=UNKNOWN */
__inline static void jit_buf_expand(struct jit *jit ) 
{ 
  long pos ;
  void *tmp ;

  {
#line 6585
  pos = jit->ip - jit->buf;
#line 6586
  jit->buf_capacity *= 2U;
#line 6587
  tmp = realloc((void *)jit->buf, (size_t )jit->buf_capacity);
#line 6587
  jit->buf = (unsigned char *)tmp;
#line 6588
  jit->ip = jit->buf + pos;
#line 6589
  return;
}
}
/* END FUNCTION-DEF jit_buf_expand LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF _cipher$_xtea_encipher LOC=UNKNOWN */
void _cipher$_xtea_encipher(unsigned int block_no , unsigned int num_rounds , unsigned int *v ,
                            unsigned int *key , unsigned int size ) 
{ 
  unsigned int i ;

  {
  i = 0;
  while (i < size / 8) {
    _cipher$_xtea_encipherBlock(num_rounds, v, key);
    v += 2;
    i ++;
  }
}
}
/* END FUNCTION-DEF _cipher$_xtea_encipher LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_prepare_reg_counts LOC=UNKNOWN */
void jit_prepare_reg_counts(struct jit *jit ) 
{ 
  int declared_args ;
  int last_gp ;
  int last_fp ;
  int gp_args ;
  int fp_args ;
  struct jit_func_info *info ;
  jit_op *op ;
  jit_op *tmp ;
  void *tmp___0 ;
  int i ;
  jit_reg r ;
  jit_op *xop ;
  jit_opcode next_code ;

  {
#line 6481
  declared_args = 0;
#line 6482
  last_gp = -1;
#line 6483
  last_fp = -1;
#line 6484
  gp_args = 0;
#line 6485
  fp_args = 0;
#line 6486
  info = (struct jit_func_info *)((void *)0);
#line 6487
  tmp = jit_op_first(jit->ops);
#line 6487
  op = tmp;
#line 6488
  while (1) {
#line 6489
    if (! op) {
#line 6489
      goto _L;
    } else
#line 6489
    if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 688U) {
      _L: /* CIL Label */ 
#line 6490
      if (info) {
#line 6491
        info->gp_reg_count = last_gp + 1;
#line 6492
        info->fp_reg_count = last_fp + 1;
#line 6493
        info->general_arg_cnt = gp_args;
#line 6494
        info->float_arg_cnt = fp_args;
#line 6495
        while ((info->gp_reg_count + info->fp_reg_count) % 2) {
#line 6495
          (info->gp_reg_count) ++;
        }
#line 6496
        tmp___0 = malloc((size_t )(sizeof(struct jit_inp_arg ) * (unsigned long long )declared_args));
#line 6496
        info->args = (struct jit_inp_arg *)tmp___0;
      }
#line 6498
      if (op) {
#line 6499
        declared_args = 0;
#line 6500
        last_gp = -1;
#line 6501
        last_fp = -1;
#line 6502
        gp_args = 0;
#line 6503
        fp_args = 0;
#line 6504
        info = (struct jit_func_info *)op->arg[1];
      }
#line 6506
      if (! op) {
#line 6506
        break;
      }
    }
#line 6508
    i = 0;
#line 6508
    while (i < 3) {
#line 6509
      if ((((int )op->spec >> ((i + 1) - 1) * 2) & 0x03) == 0x03) {
#line 6509
        goto _L___0;
      } else
#line 6509
      if ((((int )op->spec >> ((i + 1) - 1) * 2) & 0x03) == 0x01) {
        _L___0: /* CIL Label */ 
#line 6510
        r = op->arg[i];
#line 6511
        if ((r & 1L) == 0L) {
#line 6511
          if (((r >> 4) & 268435455L) > (long )last_gp) {
#line 6511
            last_gp = (int )((r >> 4) & 268435455L);
          }
        }
#line 6512
        if ((r & 1L) == 1L) {
#line 6512
          if (((r >> 4) & 268435455L) > (long )last_fp) {
#line 6512
            last_fp = (int )((r >> 4) & 268435455L);
          }
        }
      }
#line 6508
      i ++;
    }
#line 6514
    if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 520U) {
#line 6515
      declared_args ++;
#line 6516
      if (op->arg[0] == 2L) {
#line 6516
        fp_args ++;
      } else {
#line 6517
        gp_args ++;
      }
    }
#line 6519
    if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 784U) {
#line 6520
      xop = op;
#line 6521
      while (1) {
#line 6522
        if ((unsigned int )((jit_opcode )((int )(op->next)->code & 0xfff8)) == 216U) {
#line 6522
          (xop->arg[0]) ++;
        } else
#line 6523
        if ((unsigned int )((jit_opcode )((int )(op->next)->code & 0xfff8)) == 200U) {
#line 6523
          (xop->arg[1]) ++;
        } else {
#line 6525
          next_code = (jit_opcode )((int )(op->next)->code & 0xfff8);
#line 6526
          if ((unsigned int )next_code == 232U) {
#line 6526
            break;
          }
#line 6527
          if ((unsigned int )next_code != 264U) {
#line 6527
            if ((unsigned int )next_code != 872U) {
#line 6527
              if ((unsigned int )next_code != 464U) {
#line 6527
                if ((unsigned int )next_code != 512U) {
#line 6527
                  if ((unsigned int )next_code != 432U) {
#line 6527
                    if ((unsigned int )next_code != 592U) {
#line 6527
                      if ((unsigned int )next_code != 848U) {
#line 6532
                        printf((char const   */* __restrict  */)"Garbage in the prepare-call block. Opcode: %x\n",
                               (unsigned int )next_code >> 3);
#line 6533
                        abort();
                      }
                    }
                  }
                }
              }
            }
          }
        }
#line 6536
        op = op->next;
      }
    }
#line 6539
    op = op->next;
  }
#line 6541
  return;
}
}
/* END FUNCTION-DEF jit_prepare_reg_counts LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF emit_branch_mask_op LOC=UNKNOWN */
static void emit_branch_mask_op(struct jit *jit , struct jit_op *op , int cond , int imm ) 
{ 
  unsigned char _amd64_rex_bits ;
  int tmp ;
  unsigned char *tmp___0 ;
  unsigned char *tmp___1 ;
  unsigned char *tmp___2 ;
  unsigned char *tmp___3 ;
  x86_imm_buf imb ;
  unsigned char *tmp___4 ;
  unsigned char *tmp___5 ;
  unsigned char *tmp___6 ;
  unsigned char *tmp___7 ;
  unsigned char _amd64_rex_bits___0 ;
  int tmp___8 ;
  int tmp___9 ;
  unsigned char *tmp___10 ;
  unsigned char *tmp___11 ;
  unsigned char *tmp___12 ;
  unsigned char _amd64_rex_bits___1 ;
  unsigned char *tmp___13 ;
  int offset ;
  int tmp___14 ;
  size_t tmp___15 ;
  int tmp___16 ;
  unsigned char *tmp___17 ;
  unsigned char *tmp___18 ;
  unsigned char *tmp___19 ;
  x86_imm_buf imb___0 ;
  unsigned char *tmp___20 ;
  unsigned char *tmp___21 ;
  unsigned char *tmp___22 ;
  unsigned char *tmp___23 ;

  {
#line 4356
  if (imm) {
#line 4356
    while (1) {
#line 4356
      while (1) {
#line 4356
        if (op->r_arg[1] > 7L) {
#line 4356
          tmp = 1;
        } else {
#line 4356
          tmp = 0;
        }
#line 4356
        _amd64_rex_bits = (unsigned char )(8 | tmp);
#line 4356
        if ((int )_amd64_rex_bits != 0) {
#line 4356
          tmp___0 = jit->ip;
#line 4356
          (jit->ip) ++;
#line 4356
          *tmp___0 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
        }
#line 4356
        break;
      }
#line 4356
      while (1) {
#line 4356
        if ((op->r_arg[1] & 7L) == 0L) {
#line 4356
          tmp___1 = jit->ip;
#line 4356
          (jit->ip) ++;
#line 4356
          *tmp___1 = (unsigned char)169;
        } else {
#line 4356
          tmp___2 = jit->ip;
#line 4356
          (jit->ip) ++;
#line 4356
          *tmp___2 = (unsigned char)247;
#line 4356
          while (1) {
#line 4356
            while (1) {
#line 4356
              tmp___3 = jit->ip;
#line 4356
              (jit->ip) ++;
#line 4356
              *tmp___3 = (unsigned char )((long )(3 << 6) | ((op->r_arg[1] & 7L) & 7L));
#line 4356
              break;
            }
#line 4356
            break;
          }
        }
#line 4356
        while (1) {
#line 4356
          imb.val = (int )op->r_arg[2];
#line 4356
          tmp___4 = jit->ip;
#line 4356
          (jit->ip) ++;
#line 4356
          *tmp___4 = imb.b[0];
#line 4356
          tmp___5 = jit->ip;
#line 4356
          (jit->ip) ++;
#line 4356
          *tmp___5 = imb.b[1];
#line 4356
          tmp___6 = jit->ip;
#line 4356
          (jit->ip) ++;
#line 4356
          *tmp___6 = imb.b[2];
#line 4356
          tmp___7 = jit->ip;
#line 4356
          (jit->ip) ++;
#line 4356
          *tmp___7 = imb.b[3];
#line 4356
          break;
        }
#line 4356
        break;
      }
#line 4356
      break;
    }
  } else {
#line 4357
    while (1) {
#line 4357
      while (1) {
#line 4357
        if (op->r_arg[1] > 7L) {
#line 4357
          tmp___8 = 4;
        } else {
#line 4357
          tmp___8 = 0;
        }
#line 4357
        if (op->r_arg[2] > 7L) {
#line 4357
          tmp___9 = 1;
        } else {
#line 4357
          tmp___9 = 0;
        }
#line 4357
        _amd64_rex_bits___0 = (unsigned char )((8 | tmp___8) | tmp___9);
#line 4357
        if ((int )_amd64_rex_bits___0 != 0) {
#line 4357
          tmp___10 = jit->ip;
#line 4357
          (jit->ip) ++;
#line 4357
          *tmp___10 = (unsigned char )(0x40 | (int )_amd64_rex_bits___0);
        }
#line 4357
        break;
      }
#line 4357
      while (1) {
#line 4357
        tmp___11 = jit->ip;
#line 4357
        (jit->ip) ++;
#line 4357
        *tmp___11 = (unsigned char)133;
#line 4357
        while (1) {
#line 4357
          while (1) {
#line 4357
            tmp___12 = jit->ip;
#line 4357
            (jit->ip) ++;
#line 4357
            *tmp___12 = (unsigned char )(((long )(3 << 6) | (((op->r_arg[2] & 7L) & 7L) << 3)) | ((op->r_arg[1] & 7L) & 7L));
#line 4357
            break;
          }
#line 4357
          break;
        }
#line 4357
        break;
      }
#line 4357
      break;
    }
  }
#line 4358
  op->patch_addr = (jit_value )jit->ip - (jit_value )jit->buf;
#line 4359
  while (1) {
#line 4359
    while (1) {
#line 4359
      _amd64_rex_bits___1 = (unsigned char)8;
#line 4359
      if ((int )_amd64_rex_bits___1 != 0) {
#line 4359
        tmp___13 = jit->ip;
#line 4359
        (jit->ip) ++;
#line 4359
        *tmp___13 = (unsigned char )(0x40 | (int )_amd64_rex_bits___1);
      }
#line 4359
      break;
    }
#line 4359
    while (1) {
#line 4359
      tmp___16 = jit_is_label(jit, (void *)op->r_arg[0]);
#line 4359
      if (tmp___16) {
#line 4359
        tmp___15 = ((size_t )((jit_value )jit->buf) + ((jit_label *)op->r_arg[0])->pos) - (size_t )((jit_value )jit->ip);
      } else {
#line 4359
        tmp___15 = (size_t )op->r_arg[0];
      }
#line 4359
      offset = (int )(tmp___15 - 6UL);
#line 4359
      while (1) {
#line 4359
        tmp___17 = jit->ip;
#line 4359
        (jit->ip) ++;
#line 4359
        *tmp___17 = (unsigned char)15;
#line 4359
        tmp___19 = jit->ip;
#line 4359
        (jit->ip) ++;
#line 4359
        *tmp___19 = (unsigned char )((int const   )x86_cc_unsigned_map[cond] + 16);
#line 4359
        while (1) {
#line 4359
          imb___0.val = offset;
#line 4359
          tmp___20 = jit->ip;
#line 4359
          (jit->ip) ++;
#line 4359
          *tmp___20 = imb___0.b[0];
#line 4359
          tmp___21 = jit->ip;
#line 4359
          (jit->ip) ++;
#line 4359
          *tmp___21 = imb___0.b[1];
#line 4359
          tmp___22 = jit->ip;
#line 4359
          (jit->ip) ++;
#line 4359
          *tmp___22 = imb___0.b[2];
#line 4359
          tmp___23 = jit->ip;
#line 4359
          (jit->ip) ++;
#line 4359
          *tmp___23 = imb___0.b[3];
#line 4359
          break;
        }
#line 4359
        break;
      }
#line 4359
      break;
    }
#line 4359
    break;
  }
#line 4360
  return;
}
}
/* END FUNCTION-DEF emit_branch_mask_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF emit_rsb_op LOC=UNKNOWN */
static void emit_rsb_op(struct jit *jit , struct jit_op *op , int imm ) 
{ 
  unsigned char _amd64_rex_bits ;
  int tmp ;
  unsigned char *tmp___0 ;
  unsigned char *tmp___1 ;
  unsigned char *tmp___2 ;
  unsigned char _amd64_rex_bits___0 ;
  unsigned char *tmp___3 ;
  unsigned char *tmp___4 ;
  x86_imm_buf imb ;
  unsigned char *tmp___5 ;
  unsigned char *tmp___6 ;
  unsigned char *tmp___7 ;
  unsigned char *tmp___8 ;
  unsigned char _amd64_rex_bits___1 ;
  int tmp___9 ;
  unsigned char *tmp___10 ;
  unsigned char *tmp___11 ;
  unsigned char *tmp___12 ;
  x86_imm_buf imb___0 ;
  unsigned char *tmp___13 ;
  unsigned char *tmp___14 ;
  unsigned char *tmp___15 ;
  unsigned char *tmp___16 ;
  unsigned char _amd64_rex_bits___2 ;
  int tmp___17 ;
  int tmp___18 ;
  unsigned char *tmp___19 ;
  unsigned char *tmp___20 ;
  unsigned char *tmp___21 ;
  x86_imm_buf imb___1 ;
  unsigned char *tmp___22 ;
  unsigned char *tmp___23 ;
  unsigned char *tmp___24 ;
  unsigned char *tmp___25 ;
  unsigned char *tmp___26 ;
  unsigned char *tmp___27 ;
  unsigned char *tmp___28 ;
  unsigned char *tmp___29 ;
  unsigned char *tmp___30 ;
  unsigned char *tmp___31 ;
  x86_imm_buf imb___2 ;
  unsigned char *tmp___32 ;
  unsigned char *tmp___33 ;
  unsigned char *tmp___34 ;
  unsigned char *tmp___35 ;
  unsigned char *tmp___36 ;
  unsigned char *tmp___37 ;
  unsigned char *tmp___38 ;
  x86_imm_buf imb___3 ;
  unsigned char *tmp___39 ;
  unsigned char *tmp___40 ;
  unsigned char *tmp___41 ;
  unsigned char *tmp___42 ;
  unsigned char _amd64_rex_bits___3 ;
  int tmp___43 ;
  unsigned char *tmp___44 ;
  unsigned char *tmp___45 ;
  unsigned char *tmp___46 ;
  unsigned char _amd64_rex_bits___4 ;
  int tmp___47 ;
  int tmp___48 ;
  unsigned char *tmp___49 ;
  unsigned char *tmp___50 ;
  unsigned char *tmp___51 ;
  unsigned char _amd64_rex_bits___5 ;
  int tmp___52 ;
  unsigned char *tmp___53 ;
  unsigned char *tmp___54 ;
  unsigned char *tmp___55 ;
  unsigned char _amd64_rex_bits___6 ;
  int tmp___56 ;
  int tmp___57 ;
  unsigned char *tmp___58 ;
  unsigned char *tmp___59 ;
  unsigned char *tmp___60 ;
  unsigned char *tmp___61 ;
  unsigned char _amd64_rex_bits___7 ;
  int tmp___62 ;
  int tmp___63 ;
  int tmp___64 ;
  unsigned char *tmp___65 ;
  unsigned char *tmp___66 ;
  unsigned char *tmp___67 ;
  long tmp___68 ;
  unsigned char *tmp___69 ;
  unsigned char _amd64_rex_bits___8 ;
  int tmp___70 ;
  int tmp___71 ;
  unsigned char *tmp___72 ;
  unsigned char *tmp___73 ;
  unsigned char *tmp___74 ;

  {
#line 4180
  if (imm) {
#line 4181
    if (op->r_arg[0] == op->r_arg[1]) {
#line 4181
      while (1) {
#line 4181
        if (- op->r_arg[2] >= -128L) {
#line 4181
          if (- op->r_arg[2] <= 127L) {
#line 4181
            while (1) {
#line 4181
              if (op->r_arg[0] > 7L) {
#line 4181
                tmp = 1;
              } else {
#line 4181
                tmp = 0;
              }
#line 4181
              _amd64_rex_bits = (unsigned char )(8 | tmp);
#line 4181
              if ((int )_amd64_rex_bits != 0) {
#line 4181
                tmp___0 = jit->ip;
#line 4181
                (jit->ip) ++;
#line 4181
                *tmp___0 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
              }
#line 4181
              break;
            }
#line 4181
            tmp___1 = jit->ip;
#line 4181
            (jit->ip) ++;
#line 4181
            *tmp___1 = (unsigned char)131;
#line 4181
            while (1) {
#line 4181
              while (1) {
#line 4181
                tmp___2 = jit->ip;
#line 4181
                (jit->ip) ++;
#line 4181
                *tmp___2 = (unsigned char )((long )(3 << 6) | (op->r_arg[0] & 7L));
#line 4181
                break;
              }
#line 4181
              break;
            }
#line 4181
            while (1) {
#line 4181
              *(jit->ip) = (unsigned char )(- op->r_arg[2] & 255L);
#line 4181
              (jit->ip) ++;
#line 4181
              break;
            }
          } else {
#line 4181
            goto _L;
          }
        } else
        _L: /* CIL Label */ 
#line 4181
        if (op->r_arg[0] == 0L) {
#line 4181
          while (1) {
#line 4181
            _amd64_rex_bits___0 = (unsigned char)8;
#line 4181
            if ((int )_amd64_rex_bits___0 != 0) {
#line 4181
              tmp___3 = jit->ip;
#line 4181
              (jit->ip) ++;
#line 4181
              *tmp___3 = (unsigned char )(0x40 | (int )_amd64_rex_bits___0);
            }
#line 4181
            break;
          }
#line 4181
          tmp___4 = jit->ip;
#line 4181
          (jit->ip) ++;
#line 4181
          *tmp___4 = (unsigned char)5;
#line 4181
          while (1) {
#line 4181
            imb.val = (int )(- op->r_arg[2]);
#line 4181
            tmp___5 = jit->ip;
#line 4181
            (jit->ip) ++;
#line 4181
            *tmp___5 = imb.b[0];
#line 4181
            tmp___6 = jit->ip;
#line 4181
            (jit->ip) ++;
#line 4181
            *tmp___6 = imb.b[1];
#line 4181
            tmp___7 = jit->ip;
#line 4181
            (jit->ip) ++;
#line 4181
            *tmp___7 = imb.b[2];
#line 4181
            tmp___8 = jit->ip;
#line 4181
            (jit->ip) ++;
#line 4181
            *tmp___8 = imb.b[3];
#line 4181
            break;
          }
        } else {
#line 4181
          while (1) {
#line 4181
            if (op->r_arg[0] > 7L) {
#line 4181
              tmp___9 = 1;
            } else {
#line 4181
              tmp___9 = 0;
            }
#line 4181
            _amd64_rex_bits___1 = (unsigned char )(8 | tmp___9);
#line 4181
            if ((int )_amd64_rex_bits___1 != 0) {
#line 4181
              tmp___10 = jit->ip;
#line 4181
              (jit->ip) ++;
#line 4181
              *tmp___10 = (unsigned char )(0x40 | (int )_amd64_rex_bits___1);
            }
#line 4181
            break;
          }
#line 4181
          tmp___11 = jit->ip;
#line 4181
          (jit->ip) ++;
#line 4181
          *tmp___11 = (unsigned char)129;
#line 4181
          while (1) {
#line 4181
            while (1) {
#line 4181
              tmp___12 = jit->ip;
#line 4181
              (jit->ip) ++;
#line 4181
              *tmp___12 = (unsigned char )((long )(3 << 6) | (op->r_arg[0] & 7L));
#line 4181
              break;
            }
#line 4181
            break;
          }
#line 4181
          while (1) {
#line 4181
            imb___0.val = (int )(- op->r_arg[2]);
#line 4181
            tmp___13 = jit->ip;
#line 4181
            (jit->ip) ++;
#line 4181
            *tmp___13 = imb___0.b[0];
#line 4181
            tmp___14 = jit->ip;
#line 4181
            (jit->ip) ++;
#line 4181
            *tmp___14 = imb___0.b[1];
#line 4181
            tmp___15 = jit->ip;
#line 4181
            (jit->ip) ++;
#line 4181
            *tmp___15 = imb___0.b[2];
#line 4181
            tmp___16 = jit->ip;
#line 4181
            (jit->ip) ++;
#line 4181
            *tmp___16 = imb___0.b[3];
#line 4181
            break;
          }
        }
#line 4181
        break;
      }
    } else {
#line 4182
      while (1) {
#line 4182
        while (1) {
#line 4182
          if (op->r_arg[0] > 7L) {
#line 4182
            tmp___17 = 4;
          } else {
#line 4182
            tmp___17 = 0;
          }
#line 4182
          if (op->r_arg[1] > 7L) {
#line 4182
            tmp___18 = 1;
          } else {
#line 4182
            tmp___18 = 0;
          }
#line 4182
          _amd64_rex_bits___2 = (unsigned char )((8 | tmp___17) | tmp___18);
#line 4182
          if ((int )_amd64_rex_bits___2 != 0) {
#line 4182
            tmp___19 = jit->ip;
#line 4182
            (jit->ip) ++;
#line 4182
            *tmp___19 = (unsigned char )(0x40 | (int )_amd64_rex_bits___2);
          }
#line 4182
          break;
        }
#line 4182
        tmp___20 = jit->ip;
#line 4182
        (jit->ip) ++;
#line 4182
        *tmp___20 = (unsigned char)141;
#line 4182
        while (1) {
#line 4182
          if (op->r_arg[1] == 16L) {
#line 4182
            while (1) {
#line 4182
              tmp___21 = jit->ip;
#line 4182
              (jit->ip) ++;
#line 4182
              *tmp___21 = (unsigned char )((((op->r_arg[0] & 7L) & 7L) << 3) | 5L);
#line 4182
              break;
            }
#line 4182
            while (1) {
#line 4182
              imb___1.val = (int )(- op->r_arg[2]);
#line 4182
              tmp___22 = jit->ip;
#line 4182
              (jit->ip) ++;
#line 4182
              *tmp___22 = imb___1.b[0];
#line 4182
              tmp___23 = jit->ip;
#line 4182
              (jit->ip) ++;
#line 4182
              *tmp___23 = imb___1.b[1];
#line 4182
              tmp___24 = jit->ip;
#line 4182
              (jit->ip) ++;
#line 4182
              *tmp___24 = imb___1.b[2];
#line 4182
              tmp___25 = jit->ip;
#line 4182
              (jit->ip) ++;
#line 4182
              *tmp___25 = imb___1.b[3];
#line 4182
              break;
            }
          } else {
#line 4182
            while (1) {
#line 4182
              if ((op->r_arg[1] & 7L) == 4L) {
#line 4182
                if (- op->r_arg[2] == 0L) {
#line 4182
                  while (1) {
#line 4182
                    tmp___26 = jit->ip;
#line 4182
                    (jit->ip) ++;
#line 4182
                    *tmp___26 = (unsigned char )((((op->r_arg[0] & 7L) & 7L) << 3) | 4L);
#line 4182
                    break;
                  }
#line 4182
                  while (1) {
#line 4182
                    tmp___27 = jit->ip;
#line 4182
                    (jit->ip) ++;
#line 4182
                    *tmp___27 = (unsigned char )((4 << 3) | 4);
#line 4182
                    break;
                  }
                } else
#line 4182
                if (- op->r_arg[2] >= -128L) {
#line 4182
                  if (- op->r_arg[2] <= 127L) {
#line 4182
                    while (1) {
#line 4182
                      tmp___28 = jit->ip;
#line 4182
                      (jit->ip) ++;
#line 4182
                      *tmp___28 = (unsigned char )(((long )(1 << 6) | (((op->r_arg[0] & 7L) & 7L) << 3)) | 4L);
#line 4182
                      break;
                    }
#line 4182
                    while (1) {
#line 4182
                      tmp___29 = jit->ip;
#line 4182
                      (jit->ip) ++;
#line 4182
                      *tmp___29 = (unsigned char )((4 << 3) | 4);
#line 4182
                      break;
                    }
#line 4182
                    while (1) {
#line 4182
                      *(jit->ip) = (unsigned char )(- op->r_arg[2] & 255L);
#line 4182
                      (jit->ip) ++;
#line 4182
                      break;
                    }
                  } else {
#line 4182
                    goto _L___0;
                  }
                } else {
                  _L___0: /* CIL Label */ 
#line 4182
                  while (1) {
#line 4182
                    tmp___30 = jit->ip;
#line 4182
                    (jit->ip) ++;
#line 4182
                    *tmp___30 = (unsigned char )(((long )(2 << 6) | (((op->r_arg[0] & 7L) & 7L) << 3)) | 4L);
#line 4182
                    break;
                  }
#line 4182
                  while (1) {
#line 4182
                    tmp___31 = jit->ip;
#line 4182
                    (jit->ip) ++;
#line 4182
                    *tmp___31 = (unsigned char )((4 << 3) | 4);
#line 4182
                    break;
                  }
#line 4182
                  while (1) {
#line 4182
                    imb___2.val = (int )(- op->r_arg[2]);
#line 4182
                    tmp___32 = jit->ip;
#line 4182
                    (jit->ip) ++;
#line 4182
                    *tmp___32 = imb___2.b[0];
#line 4182
                    tmp___33 = jit->ip;
#line 4182
                    (jit->ip) ++;
#line 4182
                    *tmp___33 = imb___2.b[1];
#line 4182
                    tmp___34 = jit->ip;
#line 4182
                    (jit->ip) ++;
#line 4182
                    *tmp___34 = imb___2.b[2];
#line 4182
                    tmp___35 = jit->ip;
#line 4182
                    (jit->ip) ++;
#line 4182
                    *tmp___35 = imb___2.b[3];
#line 4182
                    break;
                  }
                }
#line 4182
                break;
              }
#line 4182
              if (- op->r_arg[2] == 0L) {
#line 4182
                if ((op->r_arg[1] & 7L) != 5L) {
#line 4182
                  while (1) {
#line 4182
                    tmp___36 = jit->ip;
#line 4182
                    (jit->ip) ++;
#line 4182
                    *tmp___36 = (unsigned char )((((op->r_arg[0] & 7L) & 7L) << 3) | ((op->r_arg[1] & 7L) & 7L));
#line 4182
                    break;
                  }
#line 4182
                  break;
                }
              }
#line 4182
              if (- op->r_arg[2] >= -128L) {
#line 4182
                if (- op->r_arg[2] <= 127L) {
#line 4182
                  while (1) {
#line 4182
                    tmp___37 = jit->ip;
#line 4182
                    (jit->ip) ++;
#line 4182
                    *tmp___37 = (unsigned char )(((long )(1 << 6) | (((op->r_arg[0] & 7L) & 7L) << 3)) | ((op->r_arg[1] & 7L) & 7L));
#line 4182
                    break;
                  }
#line 4182
                  while (1) {
#line 4182
                    *(jit->ip) = (unsigned char )(- op->r_arg[2] & 255L);
#line 4182
                    (jit->ip) ++;
#line 4182
                    break;
                  }
                } else {
#line 4182
                  goto _L___1;
                }
              } else {
                _L___1: /* CIL Label */ 
#line 4182
                while (1) {
#line 4182
                  tmp___38 = jit->ip;
#line 4182
                  (jit->ip) ++;
#line 4182
                  *tmp___38 = (unsigned char )(((long )(2 << 6) | (((op->r_arg[0] & 7L) & 7L) << 3)) | ((op->r_arg[1] & 7L) & 7L));
#line 4182
                  break;
                }
#line 4182
                while (1) {
#line 4182
                  imb___3.val = (int )(- op->r_arg[2]);
#line 4182
                  tmp___39 = jit->ip;
#line 4182
                  (jit->ip) ++;
#line 4182
                  *tmp___39 = imb___3.b[0];
#line 4182
                  tmp___40 = jit->ip;
#line 4182
                  (jit->ip) ++;
#line 4182
                  *tmp___40 = imb___3.b[1];
#line 4182
                  tmp___41 = jit->ip;
#line 4182
                  (jit->ip) ++;
#line 4182
                  *tmp___41 = imb___3.b[2];
#line 4182
                  tmp___42 = jit->ip;
#line 4182
                  (jit->ip) ++;
#line 4182
                  *tmp___42 = imb___3.b[3];
#line 4182
                  break;
                }
              }
#line 4182
              break;
            }
          }
#line 4182
          break;
        }
#line 4182
        break;
      }
    }
#line 4183
    while (1) {
#line 4183
      while (1) {
#line 4183
        if (op->r_arg[0] > 7L) {
#line 4183
          tmp___43 = 1;
        } else {
#line 4183
          tmp___43 = 0;
        }
#line 4183
        _amd64_rex_bits___3 = (unsigned char )(8 | tmp___43);
#line 4183
        if ((int )_amd64_rex_bits___3 != 0) {
#line 4183
          tmp___44 = jit->ip;
#line 4183
          (jit->ip) ++;
#line 4183
          *tmp___44 = (unsigned char )(0x40 | (int )_amd64_rex_bits___3);
        }
#line 4183
        break;
      }
#line 4183
      while (1) {
#line 4183
        tmp___45 = jit->ip;
#line 4183
        (jit->ip) ++;
#line 4183
        *tmp___45 = (unsigned char)247;
#line 4183
        while (1) {
#line 4183
          while (1) {
#line 4183
            tmp___46 = jit->ip;
#line 4183
            (jit->ip) ++;
#line 4183
            *tmp___46 = (unsigned char )((long )((3 << 6) | (3 << 3)) | ((op->r_arg[0] & 7L) & 7L));
#line 4183
            break;
          }
#line 4183
          break;
        }
#line 4183
        break;
      }
#line 4183
      break;
    }
#line 4184
    return;
  }
#line 4186
  if (op->r_arg[0] == op->r_arg[1]) {
#line 4187
    while (1) {
#line 4187
      while (1) {
#line 4187
        if (op->r_arg[0] > 7L) {
#line 4187
          tmp___47 = 4;
        } else {
#line 4187
          tmp___47 = 0;
        }
#line 4187
        if (op->r_arg[2] > 7L) {
#line 4187
          tmp___48 = 1;
        } else {
#line 4187
          tmp___48 = 0;
        }
#line 4187
        _amd64_rex_bits___4 = (unsigned char )((8 | tmp___47) | tmp___48);
#line 4187
        if ((int )_amd64_rex_bits___4 != 0) {
#line 4187
          tmp___49 = jit->ip;
#line 4187
          (jit->ip) ++;
#line 4187
          *tmp___49 = (unsigned char )(0x40 | (int )_amd64_rex_bits___4);
        }
#line 4187
        break;
      }
#line 4187
      tmp___50 = jit->ip;
#line 4187
      (jit->ip) ++;
#line 4187
      *tmp___50 = (unsigned char )((5 << 3) + 3);
#line 4187
      while (1) {
#line 4187
        while (1) {
#line 4187
          tmp___51 = jit->ip;
#line 4187
          (jit->ip) ++;
#line 4187
          *tmp___51 = (unsigned char )(((long )(3 << 6) | ((op->r_arg[0] & 7L) << 3)) | (op->r_arg[2] & 7L));
#line 4187
          break;
        }
#line 4187
        break;
      }
#line 4187
      break;
    }
#line 4188
    while (1) {
#line 4188
      while (1) {
#line 4188
        if (op->r_arg[0] > 7L) {
#line 4188
          tmp___52 = 1;
        } else {
#line 4188
          tmp___52 = 0;
        }
#line 4188
        _amd64_rex_bits___5 = (unsigned char )(8 | tmp___52);
#line 4188
        if ((int )_amd64_rex_bits___5 != 0) {
#line 4188
          tmp___53 = jit->ip;
#line 4188
          (jit->ip) ++;
#line 4188
          *tmp___53 = (unsigned char )(0x40 | (int )_amd64_rex_bits___5);
        }
#line 4188
        break;
      }
#line 4188
      while (1) {
#line 4188
        tmp___54 = jit->ip;
#line 4188
        (jit->ip) ++;
#line 4188
        *tmp___54 = (unsigned char)247;
#line 4188
        while (1) {
#line 4188
          while (1) {
#line 4188
            tmp___55 = jit->ip;
#line 4188
            (jit->ip) ++;
#line 4188
            *tmp___55 = (unsigned char )((long )((3 << 6) | (3 << 3)) | ((op->r_arg[0] & 7L) & 7L));
#line 4188
            break;
          }
#line 4188
          break;
        }
#line 4188
        break;
      }
#line 4188
      break;
    }
  } else
#line 4189
  if (op->r_arg[0] == op->r_arg[2]) {
#line 4190
    while (1) {
#line 4190
      while (1) {
#line 4190
        if (op->r_arg[0] > 7L) {
#line 4190
          tmp___56 = 4;
        } else {
#line 4190
          tmp___56 = 0;
        }
#line 4190
        if (op->r_arg[1] > 7L) {
#line 4190
          tmp___57 = 1;
        } else {
#line 4190
          tmp___57 = 0;
        }
#line 4190
        _amd64_rex_bits___6 = (unsigned char )((8 | tmp___56) | tmp___57);
#line 4190
        if ((int )_amd64_rex_bits___6 != 0) {
#line 4190
          tmp___58 = jit->ip;
#line 4190
          (jit->ip) ++;
#line 4190
          *tmp___58 = (unsigned char )(0x40 | (int )_amd64_rex_bits___6);
        }
#line 4190
        break;
      }
#line 4190
      tmp___59 = jit->ip;
#line 4190
      (jit->ip) ++;
#line 4190
      *tmp___59 = (unsigned char )((5 << 3) + 3);
#line 4190
      while (1) {
#line 4190
        while (1) {
#line 4190
          tmp___60 = jit->ip;
#line 4190
          (jit->ip) ++;
#line 4190
          *tmp___60 = (unsigned char )(((long )(3 << 6) | ((op->r_arg[0] & 7L) << 3)) | (op->r_arg[1] & 7L));
#line 4190
          break;
        }
#line 4190
        break;
      }
#line 4190
      break;
    }
  } else {
#line 4192
    while (1) {
#line 4192
      if ((int )sizeof(void *) == 2) {
#line 4192
        tmp___61 = jit->ip;
#line 4192
        (jit->ip) ++;
#line 4192
        *tmp___61 = (unsigned char)102;
      }
#line 4192
      while (1) {
#line 4192
        if ((int )sizeof(void *) > 4) {
#line 4192
          tmp___62 = 8;
        } else {
#line 4192
          tmp___62 = 0;
        }
#line 4192
        if (op->r_arg[0] > 7L) {
#line 4192
          tmp___63 = 4;
        } else {
#line 4192
          tmp___63 = 0;
        }
#line 4192
        if (op->r_arg[2] > 7L) {
#line 4192
          tmp___64 = 1;
        } else {
#line 4192
          tmp___64 = 0;
        }
#line 4192
        _amd64_rex_bits___7 = (unsigned char )((tmp___62 | tmp___63) | tmp___64);
#line 4192
        if ((int )_amd64_rex_bits___7 != 0) {
#line 4192
          tmp___65 = jit->ip;
#line 4192
          (jit->ip) ++;
#line 4192
          *tmp___65 = (unsigned char )(0x40 | (int )_amd64_rex_bits___7);
        } else
#line 4192
        if ((int )sizeof(void *) == 1) {
#line 4192
          tmp___65 = jit->ip;
#line 4192
          (jit->ip) ++;
#line 4192
          *tmp___65 = (unsigned char )(0x40 | (int )_amd64_rex_bits___7);
        }
#line 4192
        break;
      }
#line 4192
      switch ((int )sizeof(void *)) {
      case 1: 
#line 4192
      tmp___66 = jit->ip;
#line 4192
      (jit->ip) ++;
#line 4192
      *tmp___66 = (unsigned char)138;
#line 4192
      break;
      case 8: 
      case 4: 
      case 2: 
#line 4192
      tmp___67 = jit->ip;
#line 4192
      (jit->ip) ++;
#line 4192
      *tmp___67 = (unsigned char)139;
#line 4192
      break;
      default: 
#line 4192
      tmp___68 = __builtin_expect(1L, 0L);
#line 4192
      if (tmp___68) {
#line 4192
        __assert_rtn((char const   *)"emit_rsb_op", (char const   *)"tmp/src.c", 3166,
                     (char const   *)"0");
      }
      }
#line 4192
      while (1) {
#line 4192
        while (1) {
#line 4192
          tmp___69 = jit->ip;
#line 4192
          (jit->ip) ++;
#line 4192
          *tmp___69 = (unsigned char )(((long )(3 << 6) | ((op->r_arg[0] & 7L) << 3)) | (op->r_arg[2] & 7L));
#line 4192
          break;
        }
#line 4192
        break;
      }
#line 4192
      break;
    }
#line 4193
    while (1) {
#line 4193
      while (1) {
#line 4193
        if (op->r_arg[0] > 7L) {
#line 4193
          tmp___70 = 4;
        } else {
#line 4193
          tmp___70 = 0;
        }
#line 4193
        if (op->r_arg[1] > 7L) {
#line 4193
          tmp___71 = 1;
        } else {
#line 4193
          tmp___71 = 0;
        }
#line 4193
        _amd64_rex_bits___8 = (unsigned char )((8 | tmp___70) | tmp___71);
#line 4193
        if ((int )_amd64_rex_bits___8 != 0) {
#line 4193
          tmp___72 = jit->ip;
#line 4193
          (jit->ip) ++;
#line 4193
          *tmp___72 = (unsigned char )(0x40 | (int )_amd64_rex_bits___8);
        }
#line 4193
        break;
      }
#line 4193
      tmp___73 = jit->ip;
#line 4193
      (jit->ip) ++;
#line 4193
      *tmp___73 = (unsigned char )((5 << 3) + 3);
#line 4193
      while (1) {
#line 4193
        while (1) {
#line 4193
          tmp___74 = jit->ip;
#line 4193
          (jit->ip) ++;
#line 4193
          *tmp___74 = (unsigned char )(((long )(3 << 6) | ((op->r_arg[0] & 7L) << 3)) | (op->r_arg[1] & 7L));
#line 4193
          break;
        }
#line 4193
        break;
      }
#line 4193
      break;
    }
  }
#line 4195
  return;
}
}
/* END FUNCTION-DEF emit_rsb_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_op_prepend LOC=UNKNOWN */
__inline static void jit_op_prepend(jit_op *op , jit_op *prepended ) 
{ 


  {
#line 2472
  prepended->prev = op->prev;
#line 2473
  if ((unsigned long )op->prev != (unsigned long )((void *)0)) {
#line 2473
    (op->prev)->next = prepended;
  }
#line 2474
  prepended->next = op;
#line 2475
  op->prev = prepended;
#line 2476
  return;
}
}
/* END FUNCTION-DEF jit_op_prepend LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF join_2ops LOC=UNKNOWN */
static int join_2ops(jit_op *op , int opcode1 , int opcode2 , int (*joinfn)(jit_op * ,
                                                                            jit_op * ) ) 
{ 
  jit_value result_reg ;
  jit_op *nextop ;
  jit_op *tmp ;
  int tmp___0 ;

  {
#line 3491
  if ((int )op->code == opcode1) {
#line 3492
    result_reg = op->arg[0];
#line 3493
    tmp = get_related_op(op, (int )result_reg);
#line 3493
    nextop = tmp;
#line 3494
    if (nextop) {
#line 3494
      if ((int )nextop->code == opcode2) {
#line 3494
        tmp___0 = (*joinfn)(op, nextop);
#line 3494
        return (tmp___0);
      }
    }
  }
#line 3496
  return (0);
}
}
/* END FUNCTION-DEF join_2ops LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF emit_sse_fst_op LOC=UNKNOWN */
static void emit_sse_fst_op(struct jit *jit , jit_op *op , jit_value a1 , jit_value a2 ) 
{ 
  int live ;
  int tmp ;
  unsigned char *tmp___0 ;
  unsigned char _amd64_rex_bits ;
  int tmp___1 ;
  int tmp___2 ;
  unsigned char *tmp___3 ;
  unsigned char *tmp___4 ;
  unsigned char *tmp___5 ;
  unsigned char *tmp___6 ;
  unsigned char *tmp___7 ;
  unsigned char _amd64_rex_bits___0 ;
  int tmp___8 ;
  int tmp___9 ;
  unsigned char *tmp___10 ;
  unsigned char *tmp___11 ;
  unsigned char *tmp___12 ;
  unsigned char *tmp___13 ;
  unsigned char *tmp___14 ;
  unsigned char _amd64_rex_bits___1 ;
  int tmp___15 ;
  unsigned char *tmp___16 ;
  unsigned char *tmp___17 ;
  unsigned char *tmp___18 ;
  unsigned char *tmp___19 ;
  unsigned char *tmp___20 ;
  x86_imm_buf imb ;
  unsigned char *tmp___21 ;
  unsigned char *tmp___22 ;
  unsigned char *tmp___23 ;
  unsigned char *tmp___24 ;
  unsigned char *tmp___25 ;
  unsigned char _amd64_rex_bits___2 ;
  int tmp___26 ;
  int tmp___27 ;
  unsigned char *tmp___28 ;
  unsigned char *tmp___29 ;
  unsigned char *tmp___30 ;
  unsigned char *tmp___31 ;
  unsigned char *tmp___32 ;
  unsigned char *tmp___33 ;
  unsigned char *tmp___34 ;
  unsigned char *tmp___35 ;
  unsigned char *tmp___36 ;
  x86_imm_buf imb___0 ;
  unsigned char *tmp___37 ;
  unsigned char *tmp___38 ;
  unsigned char *tmp___39 ;
  unsigned char *tmp___40 ;
  unsigned char *tmp___41 ;
  unsigned char *tmp___42 ;
  unsigned char *tmp___43 ;
  x86_imm_buf imb___1 ;
  unsigned char *tmp___44 ;
  unsigned char *tmp___45 ;
  unsigned char *tmp___46 ;
  unsigned char *tmp___47 ;
  unsigned char *tmp___48 ;
  unsigned char _amd64_rex_bits___3 ;
  int tmp___49 ;
  int tmp___50 ;
  unsigned char *tmp___51 ;
  unsigned char *tmp___52 ;
  unsigned char *tmp___53 ;
  unsigned char *tmp___54 ;
  unsigned char *tmp___55 ;
  unsigned char _amd64_rex_bits___4 ;
  int tmp___56 ;
  unsigned char *tmp___57 ;
  unsigned char *tmp___58 ;
  unsigned char *tmp___59 ;
  unsigned char *tmp___60 ;
  unsigned char *tmp___61 ;
  x86_imm_buf imb___2 ;
  unsigned char *tmp___62 ;
  unsigned char *tmp___63 ;
  unsigned char *tmp___64 ;
  unsigned char *tmp___65 ;
  unsigned char *tmp___66 ;
  unsigned char _amd64_rex_bits___5 ;
  int tmp___67 ;
  jit_value tmp___68 ;
  int tmp___69 ;
  jit_value tmp___70 ;
  unsigned char *tmp___71 ;
  unsigned char *tmp___72 ;
  unsigned char *tmp___73 ;
  unsigned char *tmp___74 ;
  x86_imm_buf imb___3 ;
  unsigned char *tmp___75 ;
  unsigned char *tmp___76 ;
  unsigned char *tmp___77 ;
  unsigned char *tmp___78 ;
  unsigned char *tmp___79 ;
  unsigned char *tmp___80 ;
  unsigned char *tmp___81 ;
  unsigned char *tmp___82 ;
  unsigned char *tmp___83 ;
  unsigned char *tmp___84 ;
  x86_imm_buf imb___4 ;
  unsigned char *tmp___85 ;
  unsigned char *tmp___86 ;
  unsigned char *tmp___87 ;
  unsigned char *tmp___88 ;
  unsigned char *tmp___89 ;
  unsigned char *tmp___90 ;
  unsigned char *tmp___91 ;
  x86_imm_buf imb___5 ;
  unsigned char *tmp___92 ;
  unsigned char *tmp___93 ;
  unsigned char *tmp___94 ;
  unsigned char *tmp___95 ;

  {
#line 3082
  if ((unsigned long long )op->arg_size == sizeof(float )) {
#line 3083
    tmp = jit_set_get(op->live_out, (int )op->arg[1]);
#line 3083
    live = tmp;
#line 3084
    if (live) {
#line 3084
      while (1) {
#line 3084
        while (1) {
#line 3084
          tmp___0 = jit->ip;
#line 3084
          (jit->ip) ++;
#line 3084
          *tmp___0 = (unsigned char)102;
#line 3084
          while (1) {
#line 3084
            if (a2 > 7L) {
#line 3084
              tmp___1 = 4;
            } else {
#line 3084
              tmp___1 = 0;
            }
#line 3084
            if (a2 > 7L) {
#line 3084
              tmp___2 = 1;
            } else {
#line 3084
              tmp___2 = 0;
            }
#line 3084
            _amd64_rex_bits = (unsigned char )(tmp___1 | tmp___2);
#line 3084
            if ((int )_amd64_rex_bits != 0) {
#line 3084
              tmp___3 = jit->ip;
#line 3084
              (jit->ip) ++;
#line 3084
              *tmp___3 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
            }
#line 3084
            break;
          }
#line 3084
          tmp___4 = jit->ip;
#line 3084
          (jit->ip) ++;
#line 3084
          *tmp___4 = (unsigned char)15;
#line 3084
          tmp___5 = jit->ip;
#line 3084
          (jit->ip) ++;
#line 3084
          *tmp___5 = (unsigned char)198;
#line 3084
          while (1) {
#line 3084
            while (1) {
#line 3084
              tmp___6 = jit->ip;
#line 3084
              (jit->ip) ++;
#line 3084
              *tmp___6 = (unsigned char )(((long )(3 << 6) | ((a2 & 7L) << 3)) | (a2 & 7L));
#line 3084
              break;
            }
#line 3084
            break;
          }
#line 3084
          break;
        }
#line 3084
        while (1) {
#line 3084
          *(jit->ip) = (unsigned char)0;
#line 3084
          (jit->ip) ++;
#line 3084
          break;
        }
#line 3084
        break;
      }
    }
#line 3085
    while (1) {
#line 3085
      tmp___7 = jit->ip;
#line 3085
      (jit->ip) ++;
#line 3085
      *tmp___7 = (unsigned char)242;
#line 3085
      while (1) {
#line 3085
        if (a2 > 7L) {
#line 3085
          tmp___8 = 4;
        } else {
#line 3085
          tmp___8 = 0;
        }
#line 3085
        if (a2 > 7L) {
#line 3085
          tmp___9 = 1;
        } else {
#line 3085
          tmp___9 = 0;
        }
#line 3085
        _amd64_rex_bits___0 = (unsigned char )(tmp___8 | tmp___9);
#line 3085
        if ((int )_amd64_rex_bits___0 != 0) {
#line 3085
          tmp___10 = jit->ip;
#line 3085
          (jit->ip) ++;
#line 3085
          *tmp___10 = (unsigned char )(0x40 | (int )_amd64_rex_bits___0);
        }
#line 3085
        break;
      }
#line 3085
      tmp___11 = jit->ip;
#line 3085
      (jit->ip) ++;
#line 3085
      *tmp___11 = (unsigned char)15;
#line 3085
      tmp___12 = jit->ip;
#line 3085
      (jit->ip) ++;
#line 3085
      *tmp___12 = (unsigned char)90;
#line 3085
      while (1) {
#line 3085
        while (1) {
#line 3085
          tmp___13 = jit->ip;
#line 3085
          (jit->ip) ++;
#line 3085
          *tmp___13 = (unsigned char )(((long )(3 << 6) | ((a2 & 7L) << 3)) | (a2 & 7L));
#line 3085
          break;
        }
#line 3085
        break;
      }
#line 3085
      break;
    }
#line 3086
    if ((int )op->code & 0x02) {
#line 3086
      while (1) {
#line 3086
        tmp___14 = jit->ip;
#line 3086
        (jit->ip) ++;
#line 3086
        *tmp___14 = (unsigned char)243;
#line 3086
        while (1) {
#line 3086
          if (a2 > 7L) {
#line 3086
            tmp___15 = 4;
          } else {
#line 3086
            tmp___15 = 0;
          }
#line 3086
          _amd64_rex_bits___1 = (unsigned char )tmp___15;
#line 3086
          if ((int )_amd64_rex_bits___1 != 0) {
#line 3086
            tmp___16 = jit->ip;
#line 3086
            (jit->ip) ++;
#line 3086
            *tmp___16 = (unsigned char )(0x40 | (int )_amd64_rex_bits___1);
          }
#line 3086
          break;
        }
#line 3086
        tmp___17 = jit->ip;
#line 3086
        (jit->ip) ++;
#line 3086
        *tmp___17 = (unsigned char)15;
#line 3086
        tmp___18 = jit->ip;
#line 3086
        (jit->ip) ++;
#line 3086
        *tmp___18 = (unsigned char)17;
#line 3086
        while (1) {
#line 3086
          tmp___19 = jit->ip;
#line 3086
          (jit->ip) ++;
#line 3086
          *tmp___19 = (unsigned char )(((a2 & 7L) << 3) | 4L);
#line 3086
          break;
        }
#line 3086
        while (1) {
#line 3086
          tmp___20 = jit->ip;
#line 3086
          (jit->ip) ++;
#line 3086
          *tmp___20 = (unsigned char )((4 << 3) | 5);
#line 3086
          break;
        }
#line 3086
        while (1) {
#line 3086
          imb.val = (int )a1;
#line 3086
          tmp___21 = jit->ip;
#line 3086
          (jit->ip) ++;
#line 3086
          *tmp___21 = imb.b[0];
#line 3086
          tmp___22 = jit->ip;
#line 3086
          (jit->ip) ++;
#line 3086
          *tmp___22 = imb.b[1];
#line 3086
          tmp___23 = jit->ip;
#line 3086
          (jit->ip) ++;
#line 3086
          *tmp___23 = imb.b[2];
#line 3086
          tmp___24 = jit->ip;
#line 3086
          (jit->ip) ++;
#line 3086
          *tmp___24 = imb.b[3];
#line 3086
          break;
        }
#line 3086
        break;
      }
    } else {
#line 3087
      while (1) {
#line 3087
        tmp___25 = jit->ip;
#line 3087
        (jit->ip) ++;
#line 3087
        *tmp___25 = (unsigned char)243;
#line 3087
        while (1) {
#line 3087
          if (a2 > 7L) {
#line 3087
            tmp___26 = 4;
          } else {
#line 3087
            tmp___26 = 0;
          }
#line 3087
          if (a1 > 7L) {
#line 3087
            tmp___27 = 1;
          } else {
#line 3087
            tmp___27 = 0;
          }
#line 3087
          _amd64_rex_bits___2 = (unsigned char )(tmp___26 | tmp___27);
#line 3087
          if ((int )_amd64_rex_bits___2 != 0) {
#line 3087
            tmp___28 = jit->ip;
#line 3087
            (jit->ip) ++;
#line 3087
            *tmp___28 = (unsigned char )(0x40 | (int )_amd64_rex_bits___2);
          }
#line 3087
          break;
        }
#line 3087
        tmp___29 = jit->ip;
#line 3087
        (jit->ip) ++;
#line 3087
        *tmp___29 = (unsigned char)15;
#line 3087
        tmp___30 = jit->ip;
#line 3087
        (jit->ip) ++;
#line 3087
        *tmp___30 = (unsigned char)17;
#line 3087
        while (1) {
#line 3087
          if ((a1 & 7L) == 4L) {
#line 3087
            while (1) {
#line 3087
              tmp___31 = jit->ip;
#line 3087
              (jit->ip) ++;
#line 3087
              *tmp___31 = (unsigned char )((((a2 & 7L) & 7L) << 3) | 4L);
#line 3087
              break;
            }
#line 3087
            while (1) {
#line 3087
              tmp___32 = jit->ip;
#line 3087
              (jit->ip) ++;
#line 3087
              *tmp___32 = (unsigned char )((4 << 3) | 4);
#line 3087
              break;
            }
#line 3087
            break;
          }
#line 3087
          if ((a1 & 7L) != 5L) {
#line 3087
            while (1) {
#line 3087
              tmp___41 = jit->ip;
#line 3087
              (jit->ip) ++;
#line 3087
              *tmp___41 = (unsigned char )((((a2 & 7L) & 7L) << 3) | ((a1 & 7L) & 7L));
#line 3087
              break;
            }
#line 3087
            break;
          }
#line 3087
          while (1) {
#line 3087
            tmp___42 = jit->ip;
#line 3087
            (jit->ip) ++;
#line 3087
            *tmp___42 = (unsigned char )(((long )(1 << 6) | (((a2 & 7L) & 7L) << 3)) | ((a1 & 7L) & 7L));
#line 3087
            break;
          }
#line 3087
          while (1) {
#line 3087
            *(jit->ip) = (unsigned char)0;
#line 3087
            (jit->ip) ++;
#line 3087
            break;
          }
#line 3087
          break;
        }
#line 3087
        break;
      }
    }
#line 3088
    if (live) {
#line 3088
      while (1) {
#line 3088
        while (1) {
#line 3088
          tmp___48 = jit->ip;
#line 3088
          (jit->ip) ++;
#line 3088
          *tmp___48 = (unsigned char)102;
#line 3088
          while (1) {
#line 3088
            if (a2 > 7L) {
#line 3088
              tmp___49 = 4;
            } else {
#line 3088
              tmp___49 = 0;
            }
#line 3088
            if (a2 > 7L) {
#line 3088
              tmp___50 = 1;
            } else {
#line 3088
              tmp___50 = 0;
            }
#line 3088
            _amd64_rex_bits___3 = (unsigned char )(tmp___49 | tmp___50);
#line 3088
            if ((int )_amd64_rex_bits___3 != 0) {
#line 3088
              tmp___51 = jit->ip;
#line 3088
              (jit->ip) ++;
#line 3088
              *tmp___51 = (unsigned char )(0x40 | (int )_amd64_rex_bits___3);
            }
#line 3088
            break;
          }
#line 3088
          tmp___52 = jit->ip;
#line 3088
          (jit->ip) ++;
#line 3088
          *tmp___52 = (unsigned char)15;
#line 3088
          tmp___53 = jit->ip;
#line 3088
          (jit->ip) ++;
#line 3088
          *tmp___53 = (unsigned char)198;
#line 3088
          while (1) {
#line 3088
            while (1) {
#line 3088
              tmp___54 = jit->ip;
#line 3088
              (jit->ip) ++;
#line 3088
              *tmp___54 = (unsigned char )(((long )(3 << 6) | ((a2 & 7L) << 3)) | (a2 & 7L));
#line 3088
              break;
            }
#line 3088
            break;
          }
#line 3088
          break;
        }
#line 3088
        while (1) {
#line 3088
          *(jit->ip) = (unsigned char)1;
#line 3088
          (jit->ip) ++;
#line 3088
          break;
        }
#line 3088
        break;
      }
    }
  } else
#line 3090
  if ((int )op->code & 0x02) {
#line 3090
    while (1) {
#line 3090
      tmp___55 = jit->ip;
#line 3090
      (jit->ip) ++;
#line 3090
      *tmp___55 = (unsigned char)102;
#line 3090
      while (1) {
#line 3090
        if (a2 > 7L) {
#line 3090
          tmp___56 = 4;
        } else {
#line 3090
          tmp___56 = 0;
        }
#line 3090
        _amd64_rex_bits___4 = (unsigned char )tmp___56;
#line 3090
        if ((int )_amd64_rex_bits___4 != 0) {
#line 3090
          tmp___57 = jit->ip;
#line 3090
          (jit->ip) ++;
#line 3090
          *tmp___57 = (unsigned char )(0x40 | (int )_amd64_rex_bits___4);
        }
#line 3090
        break;
      }
#line 3090
      tmp___58 = jit->ip;
#line 3090
      (jit->ip) ++;
#line 3090
      *tmp___58 = (unsigned char)15;
#line 3090
      tmp___59 = jit->ip;
#line 3090
      (jit->ip) ++;
#line 3090
      *tmp___59 = (unsigned char)19;
#line 3090
      while (1) {
#line 3090
        tmp___60 = jit->ip;
#line 3090
        (jit->ip) ++;
#line 3090
        *tmp___60 = (unsigned char )(((a2 & 7L) << 3) | 4L);
#line 3090
        break;
      }
#line 3090
      while (1) {
#line 3090
        tmp___61 = jit->ip;
#line 3090
        (jit->ip) ++;
#line 3090
        *tmp___61 = (unsigned char )((4 << 3) | 5);
#line 3090
        break;
      }
#line 3090
      while (1) {
#line 3090
        imb___2.val = (int )a1;
#line 3090
        tmp___62 = jit->ip;
#line 3090
        (jit->ip) ++;
#line 3090
        *tmp___62 = imb___2.b[0];
#line 3090
        tmp___63 = jit->ip;
#line 3090
        (jit->ip) ++;
#line 3090
        *tmp___63 = imb___2.b[1];
#line 3090
        tmp___64 = jit->ip;
#line 3090
        (jit->ip) ++;
#line 3090
        *tmp___64 = imb___2.b[2];
#line 3090
        tmp___65 = jit->ip;
#line 3090
        (jit->ip) ++;
#line 3090
        *tmp___65 = imb___2.b[3];
#line 3090
        break;
      }
#line 3090
      break;
    }
  } else {
#line 3091
    while (1) {
#line 3091
      tmp___66 = jit->ip;
#line 3091
      (jit->ip) ++;
#line 3091
      *tmp___66 = (unsigned char)102;
#line 3091
      while (1) {
#line 3091
        if (a2 > 7L) {
#line 3091
          tmp___67 = 4;
        } else {
#line 3091
          tmp___67 = 0;
        }
#line 3091
        if (a1 == 16L) {
#line 3091
          tmp___70 = (jit_value )0;
        } else {
#line 3091
          tmp___70 = a1;
        }
#line 3091
        if (tmp___70 > 7L) {
#line 3091
          tmp___69 = 1;
        } else {
#line 3091
          tmp___69 = 0;
        }
#line 3091
        _amd64_rex_bits___5 = (unsigned char )(tmp___67 | tmp___69);
#line 3091
        if ((int )_amd64_rex_bits___5 != 0) {
#line 3091
          tmp___71 = jit->ip;
#line 3091
          (jit->ip) ++;
#line 3091
          *tmp___71 = (unsigned char )(0x40 | (int )_amd64_rex_bits___5);
        }
#line 3091
        break;
      }
#line 3091
      tmp___72 = jit->ip;
#line 3091
      (jit->ip) ++;
#line 3091
      *tmp___72 = (unsigned char)15;
#line 3091
      tmp___73 = jit->ip;
#line 3091
      (jit->ip) ++;
#line 3091
      *tmp___73 = (unsigned char)19;
#line 3091
      while (1) {
#line 3091
        if (a1 == 16L) {
#line 3091
          while (1) {
#line 3091
            tmp___74 = jit->ip;
#line 3091
            (jit->ip) ++;
#line 3091
            *tmp___74 = (unsigned char )((((a2 & 7L) & 7L) << 3) | 5L);
#line 3091
            break;
          }
#line 3091
          while (1) {
#line 3091
            imb___3.val = 0;
#line 3091
            tmp___75 = jit->ip;
#line 3091
            (jit->ip) ++;
#line 3091
            *tmp___75 = imb___3.b[0];
#line 3091
            tmp___76 = jit->ip;
#line 3091
            (jit->ip) ++;
#line 3091
            *tmp___76 = imb___3.b[1];
#line 3091
            tmp___77 = jit->ip;
#line 3091
            (jit->ip) ++;
#line 3091
            *tmp___77 = imb___3.b[2];
#line 3091
            tmp___78 = jit->ip;
#line 3091
            (jit->ip) ++;
#line 3091
            *tmp___78 = imb___3.b[3];
#line 3091
            break;
          }
        } else {
#line 3091
          while (1) {
#line 3091
            if ((a1 & 7L) == 4L) {
#line 3091
              while (1) {
#line 3091
                tmp___79 = jit->ip;
#line 3091
                (jit->ip) ++;
#line 3091
                *tmp___79 = (unsigned char )((((a2 & 7L) & 7L) << 3) | 4L);
#line 3091
                break;
              }
#line 3091
              while (1) {
#line 3091
                tmp___80 = jit->ip;
#line 3091
                (jit->ip) ++;
#line 3091
                *tmp___80 = (unsigned char )((4 << 3) | 4);
#line 3091
                break;
              }
#line 3091
              break;
            }
#line 3091
            if ((a1 & 7L) != 5L) {
#line 3091
              while (1) {
#line 3091
                tmp___89 = jit->ip;
#line 3091
                (jit->ip) ++;
#line 3091
                *tmp___89 = (unsigned char )((((a2 & 7L) & 7L) << 3) | ((a1 & 7L) & 7L));
#line 3091
                break;
              }
#line 3091
              break;
            }
#line 3091
            while (1) {
#line 3091
              tmp___90 = jit->ip;
#line 3091
              (jit->ip) ++;
#line 3091
              *tmp___90 = (unsigned char )(((long )(1 << 6) | (((a2 & 7L) & 7L) << 3)) | ((a1 & 7L) & 7L));
#line 3091
              break;
            }
#line 3091
            while (1) {
#line 3091
              *(jit->ip) = (unsigned char)0;
#line 3091
              (jit->ip) ++;
#line 3091
              break;
            }
#line 3091
            break;
          }
        }
#line 3091
        break;
      }
#line 3091
      break;
    }
  }
#line 3093
  return;
}
}
/* END FUNCTION-DEF emit_sse_fst_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF rmap_get LOC=UNKNOWN */
static jit_hw_reg *rmap_get(jit_rmap *rmap , jit_value reg ) 
{ 
  jit_tree *found ;
  jit_tree *tmp ;

  {
#line 3249
  tmp = jit_tree_search(rmap->map, reg);
#line 3249
  found = tmp;
#line 3250
  if (found) {
#line 3250
    return ((jit_hw_reg *)found->value);
  }
#line 3251
  return ((jit_hw_reg *)((void *)0));
}
}
/* END FUNCTION-DEF rmap_get LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF get_related_op LOC=UNKNOWN */
static jit_op *get_related_op(jit_op *op , int result_reg ) 
{ 
  jit_op *nextop ;
  int tmp ;
  int used ;
  int i ;

  {
#line 3478
  nextop = op->next;
#line 3479
  if (nextop->arg[0] != (jit_value )result_reg) {
#line 3479
    tmp = jit_set_get(nextop->live_out, result_reg);
#line 3479
    if (tmp) {
#line 3479
      return ((jit_op *)((void *)0));
    }
  }
#line 3480
  used = 0;
#line 3481
  i = 0;
#line 3481
  while (i < 3) {
#line 3482
    if ((((int )nextop->spec >> ((i + 1) - 1) * 2) & 0x03) == 0x01) {
#line 3482
      if (nextop->arg[i]) {
#line 3483
        used = 1;
#line 3484
        break;
      }
    }
#line 3481
    i ++;
  }
#line 3486
  if (used) {
#line 3486
    return (nextop);
  }
#line 3487
  return ((jit_op *)((void *)0));
}
}
/* END FUNCTION-DEF get_related_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF emit_sse_branch LOC=UNKNOWN */
static void emit_sse_branch(struct jit *jit , jit_op *op , jit_value a1 , jit_value a2 ,
                            jit_value a3 , int x86_cond ) 
{ 
  unsigned char *tmp ;
  unsigned char _amd64_rex_bits ;
  int tmp___0 ;
  int tmp___1 ;
  unsigned char *tmp___2 ;
  unsigned char *tmp___3 ;
  unsigned char *tmp___4 ;
  unsigned char *tmp___5 ;
  int offset ;
  int tmp___6 ;
  size_t tmp___7 ;
  int tmp___8 ;
  unsigned char *tmp___9 ;
  unsigned char *tmp___10 ;
  unsigned char *tmp___11 ;
  x86_imm_buf imb ;
  unsigned char *tmp___12 ;
  unsigned char *tmp___13 ;
  unsigned char *tmp___14 ;
  unsigned char *tmp___15 ;

  {
#line 3042
  while (1) {
#line 3042
    tmp = jit->ip;
#line 3042
    (jit->ip) ++;
#line 3042
    *tmp = (unsigned char)102;
#line 3042
    while (1) {
#line 3042
      if (a2 > 7L) {
#line 3042
        tmp___0 = 4;
      } else {
#line 3042
        tmp___0 = 0;
      }
#line 3042
      if (a3 > 7L) {
#line 3042
        tmp___1 = 1;
      } else {
#line 3042
        tmp___1 = 0;
      }
#line 3042
      _amd64_rex_bits = (unsigned char )(tmp___0 | tmp___1);
#line 3042
      if ((int )_amd64_rex_bits != 0) {
#line 3042
        tmp___2 = jit->ip;
#line 3042
        (jit->ip) ++;
#line 3042
        *tmp___2 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
      }
#line 3042
      break;
    }
#line 3042
    tmp___3 = jit->ip;
#line 3042
    (jit->ip) ++;
#line 3042
    *tmp___3 = (unsigned char)15;
#line 3042
    tmp___4 = jit->ip;
#line 3042
    (jit->ip) ++;
#line 3042
    *tmp___4 = (unsigned char)47;
#line 3042
    while (1) {
#line 3042
      while (1) {
#line 3042
        tmp___5 = jit->ip;
#line 3042
        (jit->ip) ++;
#line 3042
        *tmp___5 = (unsigned char )(((long )(3 << 6) | ((a2 & 7L) << 3)) | (a3 & 7L));
#line 3042
        break;
      }
#line 3042
      break;
    }
#line 3042
    break;
  }
#line 3043
  op->patch_addr = (jit_value )jit->ip - (jit_value )jit->buf;
#line 3044
  while (1) {
#line 3044
    tmp___8 = jit_is_label(jit, (void *)a1);
#line 3044
    if (tmp___8) {
#line 3044
      tmp___7 = ((size_t )((jit_value )jit->buf) + ((jit_label *)a1)->pos) - (size_t )((jit_value )jit->ip);
    } else {
#line 3044
      tmp___7 = (size_t )a1;
    }
#line 3044
    offset = (int )(tmp___7 - 6UL);
#line 3044
    while (1) {
#line 3044
      tmp___9 = jit->ip;
#line 3044
      (jit->ip) ++;
#line 3044
      *tmp___9 = (unsigned char)15;
#line 3044
      tmp___11 = jit->ip;
#line 3044
      (jit->ip) ++;
#line 3044
      *tmp___11 = (unsigned char )((int const   )x86_cc_unsigned_map[x86_cond] + 16);
#line 3044
      while (1) {
#line 3044
        imb.val = offset;
#line 3044
        tmp___12 = jit->ip;
#line 3044
        (jit->ip) ++;
#line 3044
        *tmp___12 = imb.b[0];
#line 3044
        tmp___13 = jit->ip;
#line 3044
        (jit->ip) ++;
#line 3044
        *tmp___13 = imb.b[1];
#line 3044
        tmp___14 = jit->ip;
#line 3044
        (jit->ip) ++;
#line 3044
        *tmp___14 = imb.b[2];
#line 3044
        tmp___15 = jit->ip;
#line 3044
        (jit->ip) ++;
#line 3044
        *tmp___15 = imb.b[3];
#line 3044
        break;
      }
#line 3044
      break;
    }
#line 3044
    break;
  }
#line 3045
  return;
}
}
/* END FUNCTION-DEF emit_sse_branch LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF emit_shift_op LOC=UNKNOWN */
static void emit_shift_op(struct jit *jit , struct jit_op *op , int shift_op , int imm ) 
{ 
  unsigned char *tmp ;
  unsigned char _amd64_rex_bits ;
  int tmp___0 ;
  int tmp___1 ;
  int tmp___2 ;
  unsigned char *tmp___3 ;
  unsigned char *tmp___4 ;
  unsigned char *tmp___5 ;
  long tmp___6 ;
  unsigned char *tmp___7 ;
  unsigned char _amd64_rex_bits___0 ;
  int tmp___8 ;
  unsigned char *tmp___9 ;
  unsigned char *tmp___10 ;
  unsigned char *tmp___11 ;
  unsigned char *tmp___12 ;
  unsigned char *tmp___13 ;
  int destreg ;
  int valreg ;
  int shiftreg ;
  int cx_in_use ;
  int tmp___14 ;
  unsigned char _amd64_rex_bits___1 ;
  unsigned char *tmp___15 ;
  unsigned char *tmp___16 ;
  unsigned char *tmp___17 ;
  unsigned char _amd64_rex_bits___2 ;
  int tmp___18 ;
  int tmp___19 ;
  unsigned char *tmp___20 ;
  unsigned char *tmp___21 ;
  unsigned char *tmp___22 ;
  long tmp___23 ;
  unsigned char *tmp___24 ;
  unsigned char *tmp___25 ;
  unsigned char _amd64_rex_bits___3 ;
  int tmp___26 ;
  int tmp___27 ;
  int tmp___28 ;
  unsigned char *tmp___29 ;
  unsigned char *tmp___30 ;
  unsigned char *tmp___31 ;
  long tmp___32 ;
  unsigned char *tmp___33 ;
  unsigned char *tmp___34 ;
  unsigned char _amd64_rex_bits___4 ;
  int tmp___35 ;
  int tmp___36 ;
  unsigned char *tmp___37 ;
  unsigned char *tmp___38 ;
  unsigned char *tmp___39 ;
  long tmp___40 ;
  unsigned char *tmp___41 ;
  x86_imm_buf imb ;
  unsigned char *tmp___42 ;
  unsigned char *tmp___43 ;
  unsigned char *tmp___44 ;
  unsigned char *tmp___45 ;
  unsigned char *tmp___46 ;
  unsigned char *tmp___47 ;
  unsigned char *tmp___48 ;
  unsigned char *tmp___49 ;
  unsigned char *tmp___50 ;
  unsigned char *tmp___51 ;
  x86_imm_buf imb___0 ;
  unsigned char *tmp___52 ;
  unsigned char *tmp___53 ;
  unsigned char *tmp___54 ;
  unsigned char *tmp___55 ;
  unsigned char *tmp___56 ;
  unsigned char *tmp___57 ;
  unsigned char *tmp___58 ;
  x86_imm_buf imb___1 ;
  unsigned char *tmp___59 ;
  unsigned char *tmp___60 ;
  unsigned char *tmp___61 ;
  unsigned char *tmp___62 ;
  unsigned char _amd64_rex_bits___5 ;
  int tmp___63 ;
  unsigned char *tmp___64 ;
  unsigned char *tmp___65 ;
  unsigned char *tmp___66 ;
  unsigned char _amd64_rex_bits___6 ;
  unsigned char *tmp___67 ;
  unsigned char *tmp___68 ;
  jit_hw_reg *tmp___69 ;
  jit_hw_reg *tmp___70 ;
  int tmpreg ;
  int tmp___71 ;
  int tmp_in_use ;
  int tmp___72 ;
  unsigned char _amd64_rex_bits___7 ;
  int tmp___73 ;
  unsigned char *tmp___74 ;
  unsigned char *tmp___75 ;
  unsigned char *tmp___76 ;
  unsigned char _amd64_rex_bits___8 ;
  int tmp___77 ;
  int tmp___78 ;
  int tmp___79 ;
  unsigned char *tmp___80 ;
  unsigned char *tmp___81 ;
  unsigned char *tmp___82 ;
  long tmp___83 ;
  unsigned char *tmp___84 ;
  unsigned char *tmp___85 ;
  unsigned char _amd64_rex_bits___9 ;
  int tmp___86 ;
  int tmp___87 ;
  unsigned char *tmp___88 ;
  unsigned char *tmp___89 ;
  unsigned char *tmp___90 ;
  long tmp___91 ;
  unsigned char *tmp___92 ;
  unsigned char _amd64_rex_bits___10 ;
  int tmp___93 ;
  unsigned char *tmp___94 ;
  unsigned char *tmp___95 ;
  unsigned char *tmp___96 ;
  unsigned char *tmp___97 ;
  unsigned char _amd64_rex_bits___11 ;
  int tmp___98 ;
  int tmp___99 ;
  int tmp___100 ;
  unsigned char *tmp___101 ;
  unsigned char *tmp___102 ;
  unsigned char *tmp___103 ;
  long tmp___104 ;
  unsigned char *tmp___105 ;
  unsigned char _amd64_rex_bits___12 ;
  int tmp___106 ;
  unsigned char *tmp___107 ;
  unsigned char *tmp___108 ;

  {
#line 4303
  if (imm) {
#line 4304
    if (op->r_arg[0] != op->r_arg[1]) {
#line 4304
      while (1) {
#line 4304
        if ((int )sizeof(void *) == 2) {
#line 4304
          tmp = jit->ip;
#line 4304
          (jit->ip) ++;
#line 4304
          *tmp = (unsigned char)102;
        }
#line 4304
        while (1) {
#line 4304
          if ((int )sizeof(void *) > 4) {
#line 4304
            tmp___0 = 8;
          } else {
#line 4304
            tmp___0 = 0;
          }
#line 4304
          if (op->r_arg[0] > 7L) {
#line 4304
            tmp___1 = 4;
          } else {
#line 4304
            tmp___1 = 0;
          }
#line 4304
          if (op->r_arg[1] > 7L) {
#line 4304
            tmp___2 = 1;
          } else {
#line 4304
            tmp___2 = 0;
          }
#line 4304
          _amd64_rex_bits = (unsigned char )((tmp___0 | tmp___1) | tmp___2);
#line 4304
          if ((int )_amd64_rex_bits != 0) {
#line 4304
            tmp___3 = jit->ip;
#line 4304
            (jit->ip) ++;
#line 4304
            *tmp___3 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
          } else
#line 4304
          if ((int )sizeof(void *) == 1) {
#line 4304
            tmp___3 = jit->ip;
#line 4304
            (jit->ip) ++;
#line 4304
            *tmp___3 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
          }
#line 4304
          break;
        }
#line 4304
        switch ((int )sizeof(void *)) {
        case 1: 
#line 4304
        tmp___4 = jit->ip;
#line 4304
        (jit->ip) ++;
#line 4304
        *tmp___4 = (unsigned char)138;
#line 4304
        break;
        case 8: 
        case 4: 
        case 2: 
#line 4304
        tmp___5 = jit->ip;
#line 4304
        (jit->ip) ++;
#line 4304
        *tmp___5 = (unsigned char)139;
#line 4304
        break;
        default: 
#line 4304
        tmp___6 = __builtin_expect(1L, 0L);
#line 4304
        if (tmp___6) {
#line 4304
          __assert_rtn((char const   *)"emit_shift_op", (char const   *)"tmp/src.c",
                       3304, (char const   *)"0");
        }
        }
#line 4304
        while (1) {
#line 4304
          while (1) {
#line 4304
            tmp___7 = jit->ip;
#line 4304
            (jit->ip) ++;
#line 4304
            *tmp___7 = (unsigned char )(((long )(3 << 6) | ((op->r_arg[0] & 7L) << 3)) | (op->r_arg[1] & 7L));
#line 4304
            break;
          }
#line 4304
          break;
        }
#line 4304
        break;
      }
    }
#line 4305
    while (1) {
#line 4305
      while (1) {
#line 4305
        if (op->r_arg[0] > 7L) {
#line 4305
          tmp___8 = 1;
        } else {
#line 4305
          tmp___8 = 0;
        }
#line 4305
        _amd64_rex_bits___0 = (unsigned char )(8 | tmp___8);
#line 4305
        if ((int )_amd64_rex_bits___0 != 0) {
#line 4305
          tmp___9 = jit->ip;
#line 4305
          (jit->ip) ++;
#line 4305
          *tmp___9 = (unsigned char )(0x40 | (int )_amd64_rex_bits___0);
        }
#line 4305
        break;
      }
#line 4305
      while (1) {
#line 4305
        if (op->r_arg[2] == 1L) {
#line 4305
          tmp___10 = jit->ip;
#line 4305
          (jit->ip) ++;
#line 4305
          *tmp___10 = (unsigned char)209;
#line 4305
          while (1) {
#line 4305
            while (1) {
#line 4305
              tmp___11 = jit->ip;
#line 4305
              (jit->ip) ++;
#line 4305
              *tmp___11 = (unsigned char )((long )((3 << 6) | ((shift_op & 0x07) << 3)) | ((op->r_arg[0] & 7L) & 7L));
#line 4305
              break;
            }
#line 4305
            break;
          }
        } else {
#line 4305
          tmp___12 = jit->ip;
#line 4305
          (jit->ip) ++;
#line 4305
          *tmp___12 = (unsigned char)193;
#line 4305
          while (1) {
#line 4305
            while (1) {
#line 4305
              tmp___13 = jit->ip;
#line 4305
              (jit->ip) ++;
#line 4305
              *tmp___13 = (unsigned char )((long )((3 << 6) | ((shift_op & 0x07) << 3)) | ((op->r_arg[0] & 7L) & 7L));
#line 4305
              break;
            }
#line 4305
            break;
          }
#line 4305
          while (1) {
#line 4305
            *(jit->ip) = (unsigned char )(op->r_arg[2] & 255L);
#line 4305
            (jit->ip) ++;
#line 4305
            break;
          }
        }
#line 4305
        break;
      }
#line 4305
      break;
    }
  } else {
#line 4307
    destreg = (int )op->r_arg[0];
#line 4308
    valreg = (int )op->r_arg[1];
#line 4309
    shiftreg = (int )op->r_arg[2];
#line 4310
    if (destreg != 1) {
#line 4311
      tmp___14 = jit_reg_in_use(op, 1, 0);
#line 4311
      cx_in_use = tmp___14;
#line 4312
      if (cx_in_use) {
#line 4312
        if (shiftreg != 1) {
#line 4312
          while (1) {
#line 4312
            while (1) {
#line 4312
              _amd64_rex_bits___1 = (unsigned char)0;
#line 4312
              if ((int )_amd64_rex_bits___1 != 0) {
#line 4312
                tmp___15 = jit->ip;
#line 4312
                (jit->ip) ++;
#line 4312
                *tmp___15 = (unsigned char )(0x40 | (int )_amd64_rex_bits___1);
              }
#line 4312
              break;
            }
#line 4312
            tmp___16 = jit->ip;
#line 4312
            (jit->ip) ++;
#line 4312
            *tmp___16 = (unsigned char)81;
#line 4312
            break;
          }
        }
      }
#line 4313
      if (shiftreg != 1) {
#line 4313
        while (1) {
#line 4313
          if ((int )sizeof(void *) == 2) {
#line 4313
            tmp___17 = jit->ip;
#line 4313
            (jit->ip) ++;
#line 4313
            *tmp___17 = (unsigned char)102;
          }
#line 4313
          while (1) {
#line 4313
            if ((int )sizeof(void *) > 4) {
#line 4313
              tmp___18 = 8;
            } else {
#line 4313
              tmp___18 = 0;
            }
#line 4313
            if (shiftreg > 7) {
#line 4313
              tmp___19 = 1;
            } else {
#line 4313
              tmp___19 = 0;
            }
#line 4313
            _amd64_rex_bits___2 = (unsigned char )(tmp___18 | tmp___19);
#line 4313
            if ((int )_amd64_rex_bits___2 != 0) {
#line 4313
              tmp___20 = jit->ip;
#line 4313
              (jit->ip) ++;
#line 4313
              *tmp___20 = (unsigned char )(0x40 | (int )_amd64_rex_bits___2);
            } else
#line 4313
            if ((int )sizeof(void *) == 1) {
#line 4313
              tmp___20 = jit->ip;
#line 4313
              (jit->ip) ++;
#line 4313
              *tmp___20 = (unsigned char )(0x40 | (int )_amd64_rex_bits___2);
            }
#line 4313
            break;
          }
#line 4313
          switch ((int )sizeof(void *)) {
          case 1: 
#line 4313
          tmp___21 = jit->ip;
#line 4313
          (jit->ip) ++;
#line 4313
          *tmp___21 = (unsigned char)138;
#line 4313
          break;
          case 8: 
          case 4: 
          case 2: 
#line 4313
          tmp___22 = jit->ip;
#line 4313
          (jit->ip) ++;
#line 4313
          *tmp___22 = (unsigned char)139;
#line 4313
          break;
          default: 
#line 4313
          tmp___23 = __builtin_expect(1L, 0L);
#line 4313
          if (tmp___23) {
#line 4313
            __assert_rtn((char const   *)"emit_shift_op", (char const   *)"tmp/src.c",
                         3316, (char const   *)"0");
          }
          }
#line 4313
          while (1) {
#line 4313
            while (1) {
#line 4313
              tmp___24 = jit->ip;
#line 4313
              (jit->ip) ++;
#line 4313
              *tmp___24 = (unsigned char )(((3 << 6) | (1 << 3)) | (shiftreg & 0x07));
#line 4313
              break;
            }
#line 4313
            break;
          }
#line 4313
          break;
        }
      }
#line 4314
      if (destreg != valreg) {
#line 4315
        if (valreg != 1) {
#line 4315
          while (1) {
#line 4315
            if ((int )sizeof(void *) == 2) {
#line 4315
              tmp___25 = jit->ip;
#line 4315
              (jit->ip) ++;
#line 4315
              *tmp___25 = (unsigned char)102;
            }
#line 4315
            while (1) {
#line 4315
              if ((int )sizeof(void *) > 4) {
#line 4315
                tmp___26 = 8;
              } else {
#line 4315
                tmp___26 = 0;
              }
#line 4315
              if (destreg > 7) {
#line 4315
                tmp___27 = 4;
              } else {
#line 4315
                tmp___27 = 0;
              }
#line 4315
              if (valreg > 7) {
#line 4315
                tmp___28 = 1;
              } else {
#line 4315
                tmp___28 = 0;
              }
#line 4315
              _amd64_rex_bits___3 = (unsigned char )((tmp___26 | tmp___27) | tmp___28);
#line 4315
              if ((int )_amd64_rex_bits___3 != 0) {
#line 4315
                tmp___29 = jit->ip;
#line 4315
                (jit->ip) ++;
#line 4315
                *tmp___29 = (unsigned char )(0x40 | (int )_amd64_rex_bits___3);
              } else
#line 4315
              if ((int )sizeof(void *) == 1) {
#line 4315
                tmp___29 = jit->ip;
#line 4315
                (jit->ip) ++;
#line 4315
                *tmp___29 = (unsigned char )(0x40 | (int )_amd64_rex_bits___3);
              }
#line 4315
              break;
            }
#line 4315
            switch ((int )sizeof(void *)) {
            case 1: 
#line 4315
            tmp___30 = jit->ip;
#line 4315
            (jit->ip) ++;
#line 4315
            *tmp___30 = (unsigned char)138;
#line 4315
            break;
            case 8: 
            case 4: 
            case 2: 
#line 4315
            tmp___31 = jit->ip;
#line 4315
            (jit->ip) ++;
#line 4315
            *tmp___31 = (unsigned char)139;
#line 4315
            break;
            default: 
#line 4315
            tmp___32 = __builtin_expect(1L, 0L);
#line 4315
            if (tmp___32) {
#line 4315
              __assert_rtn((char const   *)"emit_shift_op", (char const   *)"tmp/src.c",
                           3318, (char const   *)"0");
            }
            }
#line 4315
            while (1) {
#line 4315
              while (1) {
#line 4315
                tmp___33 = jit->ip;
#line 4315
                (jit->ip) ++;
#line 4315
                *tmp___33 = (unsigned char )(((3 << 6) | ((destreg & 0x07) << 3)) | (valreg & 0x07));
#line 4315
                break;
              }
#line 4315
              break;
            }
#line 4315
            break;
          }
        } else {
#line 4316
          while (1) {
#line 4316
            if ((int )sizeof(void *) == 2) {
#line 4316
              tmp___34 = jit->ip;
#line 4316
              (jit->ip) ++;
#line 4316
              *tmp___34 = (unsigned char)102;
            }
#line 4316
            while (1) {
#line 4316
              if ((int )sizeof(void *) > 4) {
#line 4316
                tmp___35 = 8;
              } else {
#line 4316
                tmp___35 = 0;
              }
#line 4316
              if (destreg > 7) {
#line 4316
                tmp___36 = 4;
              } else {
#line 4316
                tmp___36 = 0;
              }
#line 4316
              _amd64_rex_bits___4 = (unsigned char )(tmp___35 | tmp___36);
#line 4316
              if ((int )_amd64_rex_bits___4 != 0) {
#line 4316
                tmp___37 = jit->ip;
#line 4316
                (jit->ip) ++;
#line 4316
                *tmp___37 = (unsigned char )(0x40 | (int )_amd64_rex_bits___4);
              } else
#line 4316
              if ((int )sizeof(void *) == 1) {
#line 4316
                tmp___37 = jit->ip;
#line 4316
                (jit->ip) ++;
#line 4316
                *tmp___37 = (unsigned char )(0x40 | (int )_amd64_rex_bits___4);
              }
#line 4316
              break;
            }
#line 4316
            switch ((int )sizeof(void *)) {
            case 1: 
#line 4316
            tmp___38 = jit->ip;
#line 4316
            (jit->ip) ++;
#line 4316
            *tmp___38 = (unsigned char)138;
#line 4316
            break;
            case 8: 
            case 4: 
            case 2: 
#line 4316
            tmp___39 = jit->ip;
#line 4316
            (jit->ip) ++;
#line 4316
            *tmp___39 = (unsigned char)139;
#line 4316
            break;
            default: 
#line 4316
            tmp___40 = __builtin_expect(1L, 0L);
#line 4316
            if (tmp___40) {
#line 4316
              __assert_rtn((char const   *)"emit_shift_op", (char const   *)"tmp/src.c",
                           3319, (char const   *)"0");
            }
            }
#line 4316
            while (1) {
#line 4316
              while (1) {
#line 4316
                while (1) {
#line 4316
                  tmp___46 = jit->ip;
#line 4316
                  (jit->ip) ++;
#line 4316
                  *tmp___46 = (unsigned char )((((destreg & 0x7) & 0x07) << 3) | 4);
#line 4316
                  break;
                }
#line 4316
                while (1) {
#line 4316
                  tmp___47 = jit->ip;
#line 4316
                  (jit->ip) ++;
#line 4316
                  *tmp___47 = (unsigned char )((4 << 3) | 4);
#line 4316
                  break;
                }
#line 4316
                break;
#line 4316
                while (1) {
#line 4316
                  tmp___56 = jit->ip;
#line 4316
                  (jit->ip) ++;
#line 4316
                  *tmp___56 = (unsigned char )((((destreg & 0x7) & 0x07) << 3) | 4);
#line 4316
                  break;
                }
#line 4316
                break;
#line 4316
                while (1) {
#line 4316
                  tmp___57 = jit->ip;
#line 4316
                  (jit->ip) ++;
#line 4316
                  *tmp___57 = (unsigned char )(((1 << 6) | (((destreg & 0x7) & 0x07) << 3)) | 4);
#line 4316
                  break;
                }
#line 4316
                while (1) {
#line 4316
                  *(jit->ip) = (unsigned char)0;
#line 4316
                  (jit->ip) ++;
#line 4316
                  break;
                }
#line 4316
                break;
              }
#line 4316
              break;
            }
#line 4316
            break;
          }
        }
      }
#line 4318
      while (1) {
#line 4318
        while (1) {
#line 4318
          if (destreg > 7) {
#line 4318
            tmp___63 = 1;
          } else {
#line 4318
            tmp___63 = 0;
          }
#line 4318
          _amd64_rex_bits___5 = (unsigned char )(8 | tmp___63);
#line 4318
          if ((int )_amd64_rex_bits___5 != 0) {
#line 4318
            tmp___64 = jit->ip;
#line 4318
            (jit->ip) ++;
#line 4318
            *tmp___64 = (unsigned char )(0x40 | (int )_amd64_rex_bits___5);
          }
#line 4318
          break;
        }
#line 4318
        while (1) {
#line 4318
          tmp___65 = jit->ip;
#line 4318
          (jit->ip) ++;
#line 4318
          *tmp___65 = (unsigned char)211;
#line 4318
          while (1) {
#line 4318
            while (1) {
#line 4318
              tmp___66 = jit->ip;
#line 4318
              (jit->ip) ++;
#line 4318
              *tmp___66 = (unsigned char )(((3 << 6) | ((shift_op & 0x07) << 3)) | ((destreg & 0x7) & 0x07));
#line 4318
              break;
            }
#line 4318
            break;
          }
#line 4318
          break;
        }
#line 4318
        break;
      }
#line 4319
      if (cx_in_use) {
#line 4319
        if (shiftreg != 1) {
#line 4319
          while (1) {
#line 4319
            while (1) {
#line 4319
              _amd64_rex_bits___6 = (unsigned char)0;
#line 4319
              if ((int )_amd64_rex_bits___6 != 0) {
#line 4319
                tmp___67 = jit->ip;
#line 4319
                (jit->ip) ++;
#line 4319
                *tmp___67 = (unsigned char )(0x40 | (int )_amd64_rex_bits___6);
              }
#line 4319
              break;
            }
#line 4319
            tmp___68 = jit->ip;
#line 4319
            (jit->ip) ++;
#line 4319
            *tmp___68 = (unsigned char)89;
#line 4319
            break;
          }
        }
      }
    } else {
#line 4321
      tmp___70 = jit_get_unused_reg(jit->reg_al, op, 0);
#line 4321
      tmp___69 = tmp___70;
#line 4322
      if (tmp___69) {
#line 4322
        tmp___71 = tmp___69->id;
      } else {
#line 4322
        tmp___71 = 0;
      }
#line 4322
      tmpreg = tmp___71;
#line 4323
      tmp___72 = jit_reg_in_use(op, tmpreg, 0);
#line 4323
      tmp_in_use = tmp___72;
#line 4324
      if (tmp_in_use) {
#line 4324
        while (1) {
#line 4324
          while (1) {
#line 4324
            if (tmpreg > 7) {
#line 4324
              tmp___73 = 1;
            } else {
#line 4324
              tmp___73 = 0;
            }
#line 4324
            _amd64_rex_bits___7 = (unsigned char )tmp___73;
#line 4324
            if ((int )_amd64_rex_bits___7 != 0) {
#line 4324
              tmp___74 = jit->ip;
#line 4324
              (jit->ip) ++;
#line 4324
              *tmp___74 = (unsigned char )(0x40 | (int )_amd64_rex_bits___7);
            }
#line 4324
            break;
          }
#line 4324
          tmp___75 = jit->ip;
#line 4324
          (jit->ip) ++;
#line 4324
          *tmp___75 = (unsigned char )(80 + (tmpreg & 0x7));
#line 4324
          break;
        }
      }
#line 4325
      if (tmpreg != valreg) {
#line 4325
        while (1) {
#line 4325
          if ((int )sizeof(void *) == 2) {
#line 4325
            tmp___76 = jit->ip;
#line 4325
            (jit->ip) ++;
#line 4325
            *tmp___76 = (unsigned char)102;
          }
#line 4325
          while (1) {
#line 4325
            if ((int )sizeof(void *) > 4) {
#line 4325
              tmp___77 = 8;
            } else {
#line 4325
              tmp___77 = 0;
            }
#line 4325
            if (tmpreg > 7) {
#line 4325
              tmp___78 = 4;
            } else {
#line 4325
              tmp___78 = 0;
            }
#line 4325
            if (valreg > 7) {
#line 4325
              tmp___79 = 1;
            } else {
#line 4325
              tmp___79 = 0;
            }
#line 4325
            _amd64_rex_bits___8 = (unsigned char )((tmp___77 | tmp___78) | tmp___79);
#line 4325
            if ((int )_amd64_rex_bits___8 != 0) {
#line 4325
              tmp___80 = jit->ip;
#line 4325
              (jit->ip) ++;
#line 4325
              *tmp___80 = (unsigned char )(0x40 | (int )_amd64_rex_bits___8);
            } else
#line 4325
            if ((int )sizeof(void *) == 1) {
#line 4325
              tmp___80 = jit->ip;
#line 4325
              (jit->ip) ++;
#line 4325
              *tmp___80 = (unsigned char )(0x40 | (int )_amd64_rex_bits___8);
            }
#line 4325
            break;
          }
#line 4325
          switch ((int )sizeof(void *)) {
          case 1: 
#line 4325
          tmp___81 = jit->ip;
#line 4325
          (jit->ip) ++;
#line 4325
          *tmp___81 = (unsigned char)138;
#line 4325
          break;
          case 8: 
          case 4: 
          case 2: 
#line 4325
          tmp___82 = jit->ip;
#line 4325
          (jit->ip) ++;
#line 4325
          *tmp___82 = (unsigned char)139;
#line 4325
          break;
          default: 
#line 4325
          tmp___83 = __builtin_expect(1L, 0L);
#line 4325
          if (tmp___83) {
#line 4325
            __assert_rtn((char const   *)"emit_shift_op", (char const   *)"tmp/src.c",
                         3332, (char const   *)"0");
          }
          }
#line 4325
          while (1) {
#line 4325
            while (1) {
#line 4325
              tmp___84 = jit->ip;
#line 4325
              (jit->ip) ++;
#line 4325
              *tmp___84 = (unsigned char )(((3 << 6) | ((tmpreg & 0x07) << 3)) | (valreg & 0x07));
#line 4325
              break;
            }
#line 4325
            break;
          }
#line 4325
          break;
        }
      }
#line 4326
      if (shiftreg != 1) {
#line 4326
        while (1) {
#line 4326
          if ((int )sizeof(void *) == 2) {
#line 4326
            tmp___85 = jit->ip;
#line 4326
            (jit->ip) ++;
#line 4326
            *tmp___85 = (unsigned char)102;
          }
#line 4326
          while (1) {
#line 4326
            if ((int )sizeof(void *) > 4) {
#line 4326
              tmp___86 = 8;
            } else {
#line 4326
              tmp___86 = 0;
            }
#line 4326
            if (shiftreg > 7) {
#line 4326
              tmp___87 = 1;
            } else {
#line 4326
              tmp___87 = 0;
            }
#line 4326
            _amd64_rex_bits___9 = (unsigned char )(tmp___86 | tmp___87);
#line 4326
            if ((int )_amd64_rex_bits___9 != 0) {
#line 4326
              tmp___88 = jit->ip;
#line 4326
              (jit->ip) ++;
#line 4326
              *tmp___88 = (unsigned char )(0x40 | (int )_amd64_rex_bits___9);
            } else
#line 4326
            if ((int )sizeof(void *) == 1) {
#line 4326
              tmp___88 = jit->ip;
#line 4326
              (jit->ip) ++;
#line 4326
              *tmp___88 = (unsigned char )(0x40 | (int )_amd64_rex_bits___9);
            }
#line 4326
            break;
          }
#line 4326
          switch ((int )sizeof(void *)) {
          case 1: 
#line 4326
          tmp___89 = jit->ip;
#line 4326
          (jit->ip) ++;
#line 4326
          *tmp___89 = (unsigned char)138;
#line 4326
          break;
          case 8: 
          case 4: 
          case 2: 
#line 4326
          tmp___90 = jit->ip;
#line 4326
          (jit->ip) ++;
#line 4326
          *tmp___90 = (unsigned char)139;
#line 4326
          break;
          default: 
#line 4326
          tmp___91 = __builtin_expect(1L, 0L);
#line 4326
          if (tmp___91) {
#line 4326
            __assert_rtn((char const   *)"emit_shift_op", (char const   *)"tmp/src.c",
                         3333, (char const   *)"0");
          }
          }
#line 4326
          while (1) {
#line 4326
            while (1) {
#line 4326
              tmp___92 = jit->ip;
#line 4326
              (jit->ip) ++;
#line 4326
              *tmp___92 = (unsigned char )(((3 << 6) | (1 << 3)) | (shiftreg & 0x07));
#line 4326
              break;
            }
#line 4326
            break;
          }
#line 4326
          break;
        }
      }
#line 4327
      while (1) {
#line 4327
        while (1) {
#line 4327
          if (tmpreg > 7) {
#line 4327
            tmp___93 = 1;
          } else {
#line 4327
            tmp___93 = 0;
          }
#line 4327
          _amd64_rex_bits___10 = (unsigned char )(8 | tmp___93);
#line 4327
          if ((int )_amd64_rex_bits___10 != 0) {
#line 4327
            tmp___94 = jit->ip;
#line 4327
            (jit->ip) ++;
#line 4327
            *tmp___94 = (unsigned char )(0x40 | (int )_amd64_rex_bits___10);
          }
#line 4327
          break;
        }
#line 4327
        while (1) {
#line 4327
          tmp___95 = jit->ip;
#line 4327
          (jit->ip) ++;
#line 4327
          *tmp___95 = (unsigned char)211;
#line 4327
          while (1) {
#line 4327
            while (1) {
#line 4327
              tmp___96 = jit->ip;
#line 4327
              (jit->ip) ++;
#line 4327
              *tmp___96 = (unsigned char )(((3 << 6) | ((shift_op & 0x07) << 3)) | ((tmpreg & 0x7) & 0x07));
#line 4327
              break;
            }
#line 4327
            break;
          }
#line 4327
          break;
        }
#line 4327
        break;
      }
#line 4328
      while (1) {
#line 4328
        if ((int )sizeof(void *) == 2) {
#line 4328
          tmp___97 = jit->ip;
#line 4328
          (jit->ip) ++;
#line 4328
          *tmp___97 = (unsigned char)102;
        }
#line 4328
        while (1) {
#line 4328
          if ((int )sizeof(void *) > 4) {
#line 4328
            tmp___98 = 8;
          } else {
#line 4328
            tmp___98 = 0;
          }
#line 4328
          if (destreg > 7) {
#line 4328
            tmp___99 = 4;
          } else {
#line 4328
            tmp___99 = 0;
          }
#line 4328
          if (tmpreg > 7) {
#line 4328
            tmp___100 = 1;
          } else {
#line 4328
            tmp___100 = 0;
          }
#line 4328
          _amd64_rex_bits___11 = (unsigned char )((tmp___98 | tmp___99) | tmp___100);
#line 4328
          if ((int )_amd64_rex_bits___11 != 0) {
#line 4328
            tmp___101 = jit->ip;
#line 4328
            (jit->ip) ++;
#line 4328
            *tmp___101 = (unsigned char )(0x40 | (int )_amd64_rex_bits___11);
          } else
#line 4328
          if ((int )sizeof(void *) == 1) {
#line 4328
            tmp___101 = jit->ip;
#line 4328
            (jit->ip) ++;
#line 4328
            *tmp___101 = (unsigned char )(0x40 | (int )_amd64_rex_bits___11);
          }
#line 4328
          break;
        }
#line 4328
        switch ((int )sizeof(void *)) {
        case 1: 
#line 4328
        tmp___102 = jit->ip;
#line 4328
        (jit->ip) ++;
#line 4328
        *tmp___102 = (unsigned char)138;
#line 4328
        break;
        case 8: 
        case 4: 
        case 2: 
#line 4328
        tmp___103 = jit->ip;
#line 4328
        (jit->ip) ++;
#line 4328
        *tmp___103 = (unsigned char)139;
#line 4328
        break;
        default: 
#line 4328
        tmp___104 = __builtin_expect(1L, 0L);
#line 4328
        if (tmp___104) {
#line 4328
          __assert_rtn((char const   *)"emit_shift_op", (char const   *)"tmp/src.c",
                       3335, (char const   *)"0");
        }
        }
#line 4328
        while (1) {
#line 4328
          while (1) {
#line 4328
            tmp___105 = jit->ip;
#line 4328
            (jit->ip) ++;
#line 4328
            *tmp___105 = (unsigned char )(((3 << 6) | ((destreg & 0x07) << 3)) | (tmpreg & 0x07));
#line 4328
            break;
          }
#line 4328
          break;
        }
#line 4328
        break;
      }
#line 4329
      if (tmp_in_use) {
#line 4329
        while (1) {
#line 4329
          while (1) {
#line 4329
            if (tmpreg > 7) {
#line 4329
              tmp___106 = 1;
            } else {
#line 4329
              tmp___106 = 0;
            }
#line 4329
            _amd64_rex_bits___12 = (unsigned char )tmp___106;
#line 4329
            if ((int )_amd64_rex_bits___12 != 0) {
#line 4329
              tmp___107 = jit->ip;
#line 4329
              (jit->ip) ++;
#line 4329
              *tmp___107 = (unsigned char )(0x40 | (int )_amd64_rex_bits___12);
            }
#line 4329
            break;
          }
#line 4329
          tmp___108 = jit->ip;
#line 4329
          (jit->ip) ++;
#line 4329
          *tmp___108 = (unsigned char )(88 + (tmpreg & 0x7));
#line 4329
          break;
        }
      }
    }
  }
#line 4332
  return;
}
}
/* END FUNCTION-DEF emit_shift_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF assign_getarg LOC=UNKNOWN */
static int assign_getarg(jit_op *op , struct jit_reg_allocator *al ) 
{ 
  int arg_id ;
  struct jit_inp_arg *arg ;
  int reg_id ;
  int tmp ;
  jit_hw_reg *hreg ;
  jit_hw_reg *tmp___0 ;
  int tmp___1 ;

  {
#line 5996
  arg_id = (int )op->arg[1];
#line 5997
  arg = (al->current_func_info)->args + arg_id;
#line 5998
  if ((unsigned int )arg->type == 2U) {
#line 5998
    tmp = 1;
  } else {
#line 5998
    tmp = 0;
  }
#line 5998
  reg_id = ((tmp & 0x01) | (3 << 1)) | ((arg_id & 0xfffffff) << 4);
#line 5999
  tmp___1 = jit_set_get(op->live_out, reg_id);
#line 5999
  if (! tmp___1) {
#line 6000
    if ((unsigned int )arg->type != 2U) {
#line 6000
      if (arg->size == (int )sizeof(void *)) {
#line 6000
        goto _L;
      } else {
#line 6000
        goto _L___0;
      }
    } else
    _L___0: /* CIL Label */ 
#line 6000
    if ((unsigned int )arg->type == 2U) {
      _L: /* CIL Label */ 
#line 6002
      tmp___0 = rmap_get(op->regmap, (jit_value )reg_id);
#line 6002
      hreg = tmp___0;
#line 6003
      if (hreg) {
#line 6004
        rmap_unassoc(op->regmap, (jit_value )reg_id);
#line 6005
        rmap_assoc(op->regmap, op->arg[0], hreg);
#line 6006
        op->r_arg[0] = (jit_value )hreg->id;
#line 6007
        op->r_arg[1] = op->arg[1];
#line 6008
        op->code = (unsigned short)864;
#line 6009
        return (1);
      }
    }
  }
#line 6013
  return (0);
}
}
/* END FUNCTION-DEF assign_getarg LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF ob_new LOC=UNKNOWN */
static struct output_buf *ob_new(void) 
{ 
  struct output_buf *ob ;
  void *tmp ;
  void *tmp___0 ;

  {
#line 4942
  tmp = malloc((size_t )sizeof(struct output_buf ));
#line 4942
  ob = (struct output_buf *)tmp;
#line 4943
  tmp___0 = malloc((size_t )8192);
#line 4943
  ob->buf = (char *)tmp___0;
#line 4944
  ob->capacity = (size_t )8192;
#line 4945
  ob->size = (size_t )0;
#line 4946
  *(ob->buf + 0) = (char )'\000';
#line 4947
  return (ob);
}
}
/* END FUNCTION-DEF ob_new LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF rmap_init LOC=UNKNOWN */
__inline static jit_rmap *rmap_init(void) 
{ 
  jit_rmap *res ;
  void *tmp ;

  {
#line 3243
  tmp = malloc((size_t )sizeof(jit_rmap ));
#line 3243
  res = (jit_rmap *)tmp;
#line 3244
  res->map = (jit_tree *)((void *)0);
#line 3245
  return (res);
}
}
/* END FUNCTION-DEF rmap_init LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_reg_allocator_create LOC=UNKNOWN */
struct jit_reg_allocator *jit_reg_allocator_create(void) 
{ 
  struct jit_reg_allocator *a ;
  void *tmp ;
  void *tmp___0 ;
  jit_hw_reg __constr_expr_0 ;
  jit_hw_reg __constr_expr_1 ;
  jit_hw_reg __constr_expr_2 ;
  jit_hw_reg __constr_expr_3 ;
  jit_hw_reg __constr_expr_4 ;
  jit_hw_reg __constr_expr_5 ;
  jit_hw_reg __constr_expr_6 ;
  jit_hw_reg __constr_expr_7 ;
  jit_hw_reg __constr_expr_8 ;
  jit_hw_reg __constr_expr_9 ;
  jit_hw_reg __constr_expr_10 ;
  jit_hw_reg __constr_expr_11 ;
  jit_hw_reg __constr_expr_12 ;
  int reg ;
  void *tmp___1 ;
  int tmp___2 ;
  jit_hw_reg __constr_expr_13 ;
  int tmp___3 ;
  jit_hw_reg __constr_expr_14 ;
  int tmp___4 ;
  jit_hw_reg __constr_expr_15 ;
  int tmp___5 ;
  jit_hw_reg __constr_expr_16 ;
  int tmp___6 ;
  jit_hw_reg __constr_expr_17 ;
  int tmp___7 ;
  jit_hw_reg __constr_expr_18 ;
  int tmp___8 ;
  jit_hw_reg __constr_expr_19 ;
  int tmp___9 ;
  jit_hw_reg __constr_expr_20 ;
  int tmp___10 ;
  jit_hw_reg __constr_expr_21 ;
  int tmp___11 ;
  jit_hw_reg __constr_expr_22 ;
  void *tmp___12 ;
  void *tmp___13 ;
  int i ;

  {
#line 3839
  tmp = malloc((size_t )sizeof(struct jit_reg_allocator ));
#line 3839
  a = (struct jit_reg_allocator *)tmp;
#line 3840
  a->gp_reg_cnt = 13;
#line 3841
  tmp___0 = malloc((size_t )(sizeof(jit_hw_reg ) * (unsigned long long )a->gp_reg_cnt));
#line 3841
  a->gp_regs = (jit_hw_reg *)tmp___0;
#line 3842
  __constr_expr_0.id = 0;
#line 3842
  __constr_expr_0.name = "rax";
#line 3842
  __constr_expr_0.callee_saved = (char)0;
#line 3842
  __constr_expr_0.fp = (char)0;
#line 3842
  __constr_expr_0.priority = (short)7;
#line 3842
  *(a->gp_regs + 0) = __constr_expr_0;
#line 3843
  __constr_expr_1.id = 3;
#line 3843
  __constr_expr_1.name = "rbx";
#line 3843
  __constr_expr_1.callee_saved = (char)1;
#line 3843
  __constr_expr_1.fp = (char)0;
#line 3843
  __constr_expr_1.priority = (short)8;
#line 3843
  *(a->gp_regs + 1) = __constr_expr_1;
#line 3844
  __constr_expr_2.id = 1;
#line 3844
  __constr_expr_2.name = "rcx";
#line 3844
  __constr_expr_2.callee_saved = (char)0;
#line 3844
  __constr_expr_2.fp = (char)0;
#line 3844
  __constr_expr_2.priority = (short)4;
#line 3844
  *(a->gp_regs + 2) = __constr_expr_2;
#line 3845
  __constr_expr_3.id = 2;
#line 3845
  __constr_expr_3.name = "rdx";
#line 3845
  __constr_expr_3.callee_saved = (char)0;
#line 3845
  __constr_expr_3.fp = (char)0;
#line 3845
  __constr_expr_3.priority = (short)3;
#line 3845
  *(a->gp_regs + 3) = __constr_expr_3;
#line 3846
  __constr_expr_4.id = 6;
#line 3846
  __constr_expr_4.name = "rsi";
#line 3846
  __constr_expr_4.callee_saved = (char)0;
#line 3846
  __constr_expr_4.fp = (char)0;
#line 3846
  __constr_expr_4.priority = (short)2;
#line 3846
  *(a->gp_regs + 4) = __constr_expr_4;
#line 3847
  __constr_expr_5.id = 7;
#line 3847
  __constr_expr_5.name = "rdi";
#line 3847
  __constr_expr_5.callee_saved = (char)0;
#line 3847
  __constr_expr_5.fp = (char)0;
#line 3847
  __constr_expr_5.priority = (short)1;
#line 3847
  *(a->gp_regs + 5) = __constr_expr_5;
#line 3848
  __constr_expr_6.id = 8;
#line 3848
  __constr_expr_6.name = "r8";
#line 3848
  __constr_expr_6.callee_saved = (char)0;
#line 3848
  __constr_expr_6.fp = (char)0;
#line 3848
  __constr_expr_6.priority = (short)5;
#line 3848
  *(a->gp_regs + 6) = __constr_expr_6;
#line 3849
  __constr_expr_7.id = 9;
#line 3849
  __constr_expr_7.name = "r9";
#line 3849
  __constr_expr_7.callee_saved = (char)0;
#line 3849
  __constr_expr_7.fp = (char)0;
#line 3849
  __constr_expr_7.priority = (short)6;
#line 3849
  *(a->gp_regs + 7) = __constr_expr_7;
#line 3850
  __constr_expr_8.id = 10;
#line 3850
  __constr_expr_8.name = "r10";
#line 3850
  __constr_expr_8.callee_saved = (char)0;
#line 3850
  __constr_expr_8.fp = (char)0;
#line 3850
  __constr_expr_8.priority = (short)9;
#line 3850
  *(a->gp_regs + 8) = __constr_expr_8;
#line 3851
  __constr_expr_9.id = 11;
#line 3851
  __constr_expr_9.name = "r11";
#line 3851
  __constr_expr_9.callee_saved = (char)0;
#line 3851
  __constr_expr_9.fp = (char)0;
#line 3851
  __constr_expr_9.priority = (short)10;
#line 3851
  *(a->gp_regs + 9) = __constr_expr_9;
#line 3852
  __constr_expr_10.id = 12;
#line 3852
  __constr_expr_10.name = "r12";
#line 3852
  __constr_expr_10.callee_saved = (char)1;
#line 3852
  __constr_expr_10.fp = (char)0;
#line 3852
  __constr_expr_10.priority = (short)11;
#line 3852
  *(a->gp_regs + 10) = __constr_expr_10;
#line 3853
  __constr_expr_11.id = 14;
#line 3853
  __constr_expr_11.name = "r14";
#line 3853
  __constr_expr_11.callee_saved = (char)1;
#line 3853
  __constr_expr_11.fp = (char)0;
#line 3853
  __constr_expr_11.priority = (short)13;
#line 3853
  *(a->gp_regs + 11) = __constr_expr_11;
#line 3854
  __constr_expr_12.id = 15;
#line 3854
  __constr_expr_12.name = "r15";
#line 3854
  __constr_expr_12.callee_saved = (char)1;
#line 3854
  __constr_expr_12.fp = (char)0;
#line 3854
  __constr_expr_12.priority = (short)14;
#line 3854
  *(a->gp_regs + 12) = __constr_expr_12;
#line 3855
  a->gp_arg_reg_cnt = 6;
#line 3856
  a->fp_reg = 5;
#line 3857
  a->ret_reg = a->gp_regs + 0;
#line 3858
  a->fp_reg_cnt = 10;
#line 3859
  reg = 0;
#line 3860
  tmp___1 = malloc((size_t )(sizeof(jit_hw_reg ) * (unsigned long long )a->fp_reg_cnt));
#line 3860
  a->fp_regs = (jit_hw_reg *)tmp___1;
#line 3861
  tmp___2 = reg;
#line 3861
  reg ++;
#line 3861
  __constr_expr_13.id = 0;
#line 3861
  __constr_expr_13.name = "xmm0";
#line 3861
  __constr_expr_13.callee_saved = (char)0;
#line 3861
  __constr_expr_13.fp = (char)1;
#line 3861
  __constr_expr_13.priority = (short)99;
#line 3861
  *(a->fp_regs + tmp___2) = __constr_expr_13;
#line 3862
  tmp___3 = reg;
#line 3862
  reg ++;
#line 3862
  __constr_expr_14.id = 1;
#line 3862
  __constr_expr_14.name = "xmm1";
#line 3862
  __constr_expr_14.callee_saved = (char)0;
#line 3862
  __constr_expr_14.fp = (char)1;
#line 3862
  __constr_expr_14.priority = (short)98;
#line 3862
  *(a->fp_regs + tmp___3) = __constr_expr_14;
#line 3863
  tmp___4 = reg;
#line 3863
  reg ++;
#line 3863
  __constr_expr_15.id = 2;
#line 3863
  __constr_expr_15.name = "xmm2";
#line 3863
  __constr_expr_15.callee_saved = (char)0;
#line 3863
  __constr_expr_15.fp = (char)1;
#line 3863
  __constr_expr_15.priority = (short)97;
#line 3863
  *(a->fp_regs + tmp___4) = __constr_expr_15;
#line 3864
  tmp___5 = reg;
#line 3864
  reg ++;
#line 3864
  __constr_expr_16.id = 3;
#line 3864
  __constr_expr_16.name = "xmm3";
#line 3864
  __constr_expr_16.callee_saved = (char)0;
#line 3864
  __constr_expr_16.fp = (char)1;
#line 3864
  __constr_expr_16.priority = (short)96;
#line 3864
  *(a->fp_regs + tmp___5) = __constr_expr_16;
#line 3865
  tmp___6 = reg;
#line 3865
  reg ++;
#line 3865
  __constr_expr_17.id = 4;
#line 3865
  __constr_expr_17.name = "xmm4";
#line 3865
  __constr_expr_17.callee_saved = (char)0;
#line 3865
  __constr_expr_17.fp = (char)1;
#line 3865
  __constr_expr_17.priority = (short)95;
#line 3865
  *(a->fp_regs + tmp___6) = __constr_expr_17;
#line 3866
  tmp___7 = reg;
#line 3866
  reg ++;
#line 3866
  __constr_expr_18.id = 5;
#line 3866
  __constr_expr_18.name = "xmm5";
#line 3866
  __constr_expr_18.callee_saved = (char)0;
#line 3866
  __constr_expr_18.fp = (char)1;
#line 3866
  __constr_expr_18.priority = (short)94;
#line 3866
  *(a->fp_regs + tmp___7) = __constr_expr_18;
#line 3867
  tmp___8 = reg;
#line 3867
  reg ++;
#line 3867
  __constr_expr_19.id = 6;
#line 3867
  __constr_expr_19.name = "xmm6";
#line 3867
  __constr_expr_19.callee_saved = (char)0;
#line 3867
  __constr_expr_19.fp = (char)1;
#line 3867
  __constr_expr_19.priority = (short)93;
#line 3867
  *(a->fp_regs + tmp___8) = __constr_expr_19;
#line 3868
  tmp___9 = reg;
#line 3868
  reg ++;
#line 3868
  __constr_expr_20.id = 7;
#line 3868
  __constr_expr_20.name = "xmm7";
#line 3868
  __constr_expr_20.callee_saved = (char)0;
#line 3868
  __constr_expr_20.fp = (char)1;
#line 3868
  __constr_expr_20.priority = (short)92;
#line 3868
  *(a->fp_regs + tmp___9) = __constr_expr_20;
#line 3869
  tmp___10 = reg;
#line 3869
  reg ++;
#line 3869
  __constr_expr_21.id = 13;
#line 3869
  __constr_expr_21.name = "xmm13";
#line 3869
  __constr_expr_21.callee_saved = (char)0;
#line 3869
  __constr_expr_21.fp = (char)1;
#line 3869
  __constr_expr_21.priority = (short)1;
#line 3869
  *(a->fp_regs + tmp___10) = __constr_expr_21;
#line 3870
  tmp___11 = reg;
#line 3870
  reg ++;
#line 3870
  __constr_expr_22.id = 12;
#line 3870
  __constr_expr_22.name = "xmm12";
#line 3870
  __constr_expr_22.callee_saved = (char)0;
#line 3870
  __constr_expr_22.fp = (char)1;
#line 3870
  __constr_expr_22.priority = (short)2;
#line 3870
  *(a->fp_regs + tmp___11) = __constr_expr_22;
#line 3871
  a->fpret_reg = a->fp_regs + 0;
#line 3872
  a->gp_arg_reg_cnt = 6;
#line 3873
  tmp___12 = malloc((size_t )(sizeof(jit_hw_reg *) * 6ULL));
#line 3873
  a->gp_arg_regs = (jit_hw_reg **)tmp___12;
#line 3874
  *(a->gp_arg_regs + 0) = a->gp_regs + 5;
#line 3875
  *(a->gp_arg_regs + 1) = a->gp_regs + 4;
#line 3876
  *(a->gp_arg_regs + 2) = a->gp_regs + 3;
#line 3877
  *(a->gp_arg_regs + 3) = a->gp_regs + 2;
#line 3878
  *(a->gp_arg_regs + 4) = a->gp_regs + 6;
#line 3879
  *(a->gp_arg_regs + 5) = a->gp_regs + 7;
#line 3880
  a->fp_arg_reg_cnt = 8;
#line 3881
  tmp___13 = malloc((size_t )(sizeof(jit_hw_reg *) * 8ULL));
#line 3881
  a->fp_arg_regs = (jit_hw_reg **)tmp___13;
#line 3882
  i = 0;
#line 3882
  while (i < 8) {
#line 3883
    *(a->fp_arg_regs + i) = a->fp_regs + i;
#line 3882
    i ++;
  }
#line 3884
  return (a);
}
}
/* END FUNCTION-DEF jit_reg_allocator_create LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_disable_optimization LOC=UNKNOWN */
void jit_disable_optimization(struct jit *jit , int opt ) 
{ 


  {
#line 6695
  jit->optimizations &= (unsigned int )(~ opt);
#line 6696
  return;
}
}
/* END FUNCTION-DEF jit_disable_optimization LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF hints_refcount_inc LOC=UNKNOWN */
static void hints_refcount_inc(jit_tree *hints ) 
{ 


  {
#line 6212
  if ((unsigned long )hints == (unsigned long )((void *)0)) {
#line 6212
    return;
  }
#line 6213
  (((struct jit_allocator_hint *)hints->value)->refs) ++;
#line 6214
  hints_refcount_inc(hints->left);
#line 6215
  hints_refcount_inc(hints->right);
#line 6216
  return;
}
}
/* END FUNCTION-DEF hints_refcount_inc LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_get_op_name LOC=UNKNOWN */
char *jit_get_op_name(struct jit_op *op ) 
{ 


  {
#line 5039
  switch ((unsigned int )((jit_opcode )((int )op->code & 0xfff8))) {
  case 120U: 
#line 5040
  return ("mov");
  case 368U: 
#line 5041
  return ("ld");
  case 744U: 
#line 5042
  return ("ldx");
  case 912U: 
#line 5043
  return ("st");
  case 344U: 
#line 5044
  return ("stx");
  case 168U: 
#line 5045
  return ("memcpy");
  case 104U: 
#line 5046
  return ("memset");
  case 624U: 
#line 5047
  return ("jmp");
  case 616U: 
#line 5048
  return (".patch");
  case 784U: 
#line 5049
  return ("prepare");
  case 848U: 
#line 5050
  return ("prepare_optional");
  case 216U: 
#line 5051
  return ("putarg");
  case 232U: 
#line 5052
  return ("call");
  case 208U: 
#line 5053
  return ("ret");
  case 688U: 
#line 5054
  return ("prolog");
  case 224U: 
#line 5055
  return ("getarg");
  case 472U: 
#line 5056
  return ("retval");
  case 440U: 
#line 5057
  return ("alloca");
  case 520U: 
#line 5058
  return ("declare_arg");
  case 800U: 
#line 5059
  return ("add");
  case 608U: 
#line 5060
  return ("addc");
  case 480U: 
#line 5061
  return ("addx");
  case 152U: 
#line 5062
  return ("sub");
  case 320U: 
#line 5063
  return ("subc");
  case 8U: 
#line 5064
  return ("subx");
  case 144U: 
#line 5065
  return ("rsb");
  case 48U: 
#line 5066
  return ("neg");
  case 528U: 
#line 5067
  return ("mul");
  case 112U: 
#line 5068
  return ("hmul");
  case 0U: 
#line 5069
  return ("div");
  case 776U: 
#line 5070
  return ("mod");
  case 248U: 
#line 5071
  return ("or");
  case 640U: 
#line 5072
  return ("xor");
  case 416U: 
#line 5073
  return ("and");
  case 424U: 
#line 5074
  return ("lsh");
  case 32U: 
#line 5075
  return ("rsh");
  case 400U: 
#line 5076
  return ("not");
  case 656U: 
#line 5077
  return ("lt");
  case 904U: 
#line 5078
  return ("le");
  case 536U: 
#line 5079
  return ("gt");
  case 672U: 
#line 5080
  return ("ge");
  case 328U: 
#line 5081
  return ("eq");
  case 312U: 
#line 5082
  return ("ne");
  case 760U: 
#line 5083
  return ("blt");
  case 288U: 
#line 5084
  return ("ble");
  case 448U: 
#line 5085
  return ("bgt");
  case 96U: 
#line 5086
  return ("bge");
  case 496U: 
#line 5087
  return ("beq");
  case 336U: 
#line 5088
  return ("bne");
  case 584U: 
#line 5089
  return ("bms");
  case 488U: 
#line 5090
  return ("bmc");
  case 384U: 
#line 5091
  return ("boadd");
  case 272U: 
#line 5092
  return ("bosub");
  case 304U: 
#line 5093
  return ("bnoadd");
  case 600U: 
#line 5094
  return ("bnosub");
  case 464U: 
#line 5095
  return (".ureg");
  case 512U: 
#line 5096
  return (".lreg");
  case 720U: 
#line 5097
  return (".code");
  case 136U: 
#line 5098
  return (".label");
  case 592U: 
#line 5099
  return (".syncreg");
  case 432U: 
#line 5100
  return (".renamereg");
  case 352U: 
#line 5101
  return ("msg");
  case 192U: 
#line 5102
  return (".comment");
  case 864U: 
#line 5103
  return ("nop");
  case 872U: 
#line 5104
  return (".align");
  case 376U: 
#line 5105
  return (".byte");
  case 160U: 
#line 5106
  return (".bytes");
  case 856U: 
#line 5107
  return (".ref_code");
  case 704U: 
#line 5108
  return (".ref_data");
  case 280U: 
#line 5109
  return ("ref_code");
  case 832U: 
#line 5110
  return ("ref_data");
  case 816U: 
#line 5111
  return (".full_spill");
  case 264U: 
#line 5112
  return (".trace");
  case 72U: 
#line 5113
  return ("force_spill");
  case 880U: 
#line 5114
  return ("force_assoc");
  case 128U: 
#line 5115
  return ("mark");
  case 576U: 
#line 5116
  return ("touch");
  case 184U: 
#line 5117
  return ("transfer");
  case 456U: 
#line 5118
  return ("transfer_cpy");
  case 728U: 
#line 5119
  return ("transfer_and");
  case 560U: 
#line 5120
  return ("transfer_or");
  case 56U: 
#line 5121
  return ("transfer_xor");
  case 552U: 
#line 5122
  return ("transfer_add");
  case 808U: 
#line 5123
  return ("transfer_sub");
  case 544U: 
#line 5124
  return ("fmov");
  case 80U: 
#line 5125
  return ("fadd");
  case 24U: 
#line 5126
  return ("fsub");
  case 888U: 
#line 5127
  return ("frsb");
  case 736U: 
#line 5128
  return ("fmul");
  case 768U: 
#line 5129
  return ("fdiv");
  case 680U: 
#line 5130
  return ("fneg");
  case 568U: 
#line 5131
  return ("fretval");
  case 200U: 
#line 5132
  return ("fputarg");
  case 240U: 
#line 5133
  return ("ext");
  case 360U: 
#line 5134
  return ("round");
  case 88U: 
#line 5135
  return ("trunc");
  case 256U: 
#line 5136
  return ("floor");
  case 16U: 
#line 5137
  return ("ceil");
  case 896U: 
#line 5138
  return ("fblt");
  case 504U: 
#line 5139
  return ("fble");
  case 696U: 
#line 5140
  return ("fbgt");
  case 648U: 
#line 5141
  return ("fbge");
  case 632U: 
#line 5142
  return ("fbeq");
  case 792U: 
#line 5143
  return ("fbne");
  case 392U: 
#line 5144
  return ("fld");
  case 408U: 
#line 5145
  return ("fldx");
  case 752U: 
#line 5146
  return ("fst");
  case 712U: 
#line 5147
  return ("fstx");
  case 40U: 
#line 5148
  return ("fret");
  default: 
#line 5149
  return ("(unknown)");
  }
}
}
/* END FUNCTION-DEF jit_get_op_name LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF __darwin_fd_isset LOC=UNKNOWN */
__inline int ( __attribute__((__always_inline__)) __darwin_fd_isset)(int _fd , struct fd_set  const  *_p ) 
{ 
  int tmp ;

  {
#line 75 "/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_fd_def.h"
  tmp = __darwin_check_fd_set(_fd, (void const   *)_p);
#line 75
  if (tmp) {
#line 76
    return (_p->fds_bits[(unsigned long long )((unsigned long )_fd) / (sizeof(__int32_t ) * 8ULL)] & (__int32_t )(1UL << (unsigned long long )((unsigned long )_fd) % (sizeof(__int32_t ) * 8ULL)));
  }
#line 79
  return (0);
}
}
/* END FUNCTION-DEF __darwin_fd_isset LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF rmap_is_associated LOC=UNKNOWN */
static jit_hw_reg *rmap_is_associated(jit_rmap *rmap , int reg_id , int fp , jit_value *virt_reg ) 
{ 
  jit_hw_reg *tmp ;

  {
#line 3267 "<string>"
  tmp = rmap_is_associated_aux(rmap->map, reg_id, fp, virt_reg);
#line 3267
  return (tmp);
}
}
/* END FUNCTION-DEF rmap_is_associated LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_op_is_cond_branch LOC=UNKNOWN */
static int jit_op_is_cond_branch(jit_op *op ) 
{ 
  jit_opcode code ;
  int tmp ;

  {
#line 2576
  code = (jit_opcode )((int )op->code & 0xfff8);
#line 2577
  if ((unsigned int )code == 760U) {
#line 2577
    tmp = 1;
  } else
#line 2577
  if ((unsigned int )code == 288U) {
#line 2577
    tmp = 1;
  } else
#line 2577
  if ((unsigned int )code == 448U) {
#line 2577
    tmp = 1;
  } else
#line 2577
  if ((unsigned int )code == 96U) {
#line 2577
    tmp = 1;
  } else
#line 2577
  if ((unsigned int )code == 496U) {
#line 2577
    tmp = 1;
  } else
#line 2577
  if ((unsigned int )code == 336U) {
#line 2577
    tmp = 1;
  } else
#line 2577
  if ((unsigned int )code == 896U) {
#line 2577
    tmp = 1;
  } else
#line 2577
  if ((unsigned int )code == 504U) {
#line 2577
    tmp = 1;
  } else
#line 2577
  if ((unsigned int )code == 696U) {
#line 2577
    tmp = 1;
  } else
#line 2577
  if ((unsigned int )code == 648U) {
#line 2577
    tmp = 1;
  } else
#line 2577
  if ((unsigned int )code == 632U) {
#line 2577
    tmp = 1;
  } else
#line 2577
  if ((unsigned int )code == 792U) {
#line 2577
    tmp = 1;
  } else
#line 2577
  if ((unsigned int )code == 384U) {
#line 2577
    tmp = 1;
  } else
#line 2577
  if ((unsigned int )code == 272U) {
#line 2577
    tmp = 1;
  } else
#line 2577
  if ((unsigned int )code == 304U) {
#line 2577
    tmp = 1;
  } else
#line 2577
  if ((unsigned int )code == 600U) {
#line 2577
    tmp = 1;
  } else {
#line 2577
    tmp = 0;
  }
#line 2577
  return (tmp);
}
}
/* END FUNCTION-DEF jit_op_is_cond_branch LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_add_op LOC=UNKNOWN */
struct jit_op *jit_add_op(struct jit *jit , unsigned short code , unsigned char spec ,
                          jit_value arg1 , jit_value arg2 , jit_value arg3 , unsigned char arg_size ,
                          struct jit_debug_info *debug_info ) 
{ 
  struct jit_op *r ;
  struct jit_op *tmp ;

  {
#line 6331
  tmp = jit_op_new(code, spec, arg1, arg2, arg3, arg_size);
#line 6331
  r = tmp;
#line 6332
  r->debug_info = debug_info;
#line 6333
  jit_op_append(jit->last_op, r);
#line 6334
  jit->last_op = r;
#line 6335
  return (r);
}
}
/* END FUNCTION-DEF jit_add_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_tree_addall LOC=UNKNOWN */
__inline static jit_tree *jit_tree_addall(jit_tree *target , jit_tree *n ) 
{ 


  {
#line 2209
  if ((unsigned long )n == (unsigned long )((void *)0)) {
#line 2209
    return (target);
  }
#line 2210
  target = jit_tree_addall(target, n->left);
#line 2211
  target = jit_tree_insert(target, n->key, n->value, (int *)((void *)0));
#line 2212
  target = jit_tree_addall(target, n->right);
#line 2213
  return (target);
}
}
/* END FUNCTION-DEF jit_tree_addall LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF flw_analyze_prolog LOC=UNKNOWN */
__inline static void flw_analyze_prolog(struct jit *jit , jit_op *op , struct jit_func_info *func_info ) 
{ 
  int i ;

  {
#line 4774
  i = 0;
#line 4774
  while (i < func_info->general_arg_cnt + func_info->float_arg_cnt) {
#line 4775
    if ((unsigned int )(func_info->args + i)->type == 2U) {
#line 4776
      jit_set_remove(op->live_in, (1 | (3 << 1)) | ((i & 0xfffffff) << 4));
    } else {
#line 4778
      jit_set_remove(op->live_in, (3 << 1) | ((i & 0xfffffff) << 4));
    }
#line 4774
    i ++;
  }
#line 4781
  return;
}
}
/* END FUNCTION-DEF flw_analyze_prolog LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_free LOC=UNKNOWN */
void jit_free(struct jit *jit ) 
{ 
  jit_op *tmp ;

  {
#line 6699
  jit_reg_allocator_free(jit->reg_al);
#line 6700
  tmp = jit_op_first(jit->ops);
#line 6700
  free_ops(tmp);
#line 6701
  free_labels(jit->labels);
#line 6702
  if (jit->buf) {
#line 6703
    if (jit->mmaped_buf) {
#line 6703
      jit_exec_mem_free(jit->mmaped_buf);
    } else {
#line 6704
      free((void *)jit->buf);
    }
  }
#line 6706
  free((void *)jit);
#line 6707
  return;
}
}
/* END FUNCTION-DEF jit_free LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF emit_pop_caller_saved_regs LOC=UNKNOWN */
static int emit_pop_caller_saved_regs(struct jit *jit , jit_op *op ) 
{ 
  int gp_count ;
  int fp_count ;
  struct jit_reg_allocator *al ;
  jit_hw_reg *active_regs[32] ;
  int stack_offset ;
  int stack_space ;
  int tmp ;
  int tmp___0 ;
  unsigned char _amd64_rex_bits ;
  unsigned char *tmp___1 ;
  unsigned char *tmp___2 ;
  unsigned char *tmp___3 ;
  unsigned char _amd64_rex_bits___0 ;
  unsigned char *tmp___4 ;
  unsigned char *tmp___5 ;
  x86_imm_buf imb ;
  unsigned char *tmp___6 ;
  unsigned char *tmp___7 ;
  unsigned char *tmp___8 ;
  unsigned char *tmp___9 ;
  unsigned char _amd64_rex_bits___1 ;
  unsigned char *tmp___10 ;
  unsigned char *tmp___11 ;
  unsigned char *tmp___12 ;
  x86_imm_buf imb___0 ;
  unsigned char *tmp___13 ;
  unsigned char *tmp___14 ;
  unsigned char *tmp___15 ;
  unsigned char *tmp___16 ;
  int i ;
  int tmp___17 ;
  unsigned char _amd64_rex_bits___2 ;
  unsigned char *tmp___18 ;
  unsigned char *tmp___19 ;
  unsigned char *tmp___20 ;
  unsigned char _amd64_rex_bits___3 ;
  unsigned char *tmp___21 ;
  unsigned char *tmp___22 ;
  x86_imm_buf imb___1 ;
  unsigned char *tmp___23 ;
  unsigned char *tmp___24 ;
  unsigned char *tmp___25 ;
  unsigned char *tmp___26 ;
  unsigned char _amd64_rex_bits___4 ;
  unsigned char *tmp___27 ;
  unsigned char *tmp___28 ;
  unsigned char *tmp___29 ;
  x86_imm_buf imb___2 ;
  unsigned char *tmp___30 ;
  unsigned char *tmp___31 ;
  unsigned char *tmp___32 ;
  unsigned char *tmp___33 ;
  unsigned char _amd64_rex_bits___5 ;
  unsigned char *tmp___34 ;
  unsigned char *tmp___35 ;
  unsigned char *tmp___36 ;
  unsigned char _amd64_rex_bits___6 ;
  unsigned char *tmp___37 ;
  unsigned char *tmp___38 ;
  x86_imm_buf imb___3 ;
  unsigned char *tmp___39 ;
  unsigned char *tmp___40 ;
  unsigned char *tmp___41 ;
  unsigned char *tmp___42 ;
  unsigned char _amd64_rex_bits___7 ;
  unsigned char *tmp___43 ;
  unsigned char *tmp___44 ;
  unsigned char *tmp___45 ;
  x86_imm_buf imb___4 ;
  unsigned char *tmp___46 ;
  unsigned char *tmp___47 ;
  unsigned char *tmp___48 ;
  unsigned char *tmp___49 ;

  {
#line 3986
  al = jit->reg_al;
#line 3988
  stack_offset = 0;
#line 3989
  tmp = list_caller_saved_regs(jit, op, al->gp_regs, al->gp_reg_cnt, 0, al->ret_reg,
                               active_regs, & gp_count);
#line 3989
  stack_space = tmp;
#line 3990
  tmp___0 = list_caller_saved_regs(jit, op, al->fp_regs, al->fp_reg_cnt, 1, al->fpret_reg,
                                   active_regs + gp_count, & fp_count);
#line 3990
  stack_space += tmp___0;
#line 3991
  while (1) {
#line 3991
    while (1) {
#line 3991
      _amd64_rex_bits = (unsigned char)8;
#line 3991
      if ((int )_amd64_rex_bits != 0) {
#line 3991
        tmp___1 = jit->ip;
#line 3991
        (jit->ip) ++;
#line 3991
        *tmp___1 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
      }
#line 3991
      break;
    }
#line 3991
    tmp___2 = jit->ip;
#line 3991
    (jit->ip) ++;
#line 3991
    *tmp___2 = (unsigned char)131;
#line 3991
    while (1) {
#line 3991
      while (1) {
#line 3991
        tmp___3 = jit->ip;
#line 3991
        (jit->ip) ++;
#line 3991
        *tmp___3 = (unsigned char )((3 << 6) | 4);
#line 3991
        break;
      }
#line 3991
      break;
    }
#line 3991
    while (1) {
#line 3991
      *(jit->ip) = (unsigned char)0;
#line 3991
      (jit->ip) ++;
#line 3991
      break;
    }
#line 3991
    break;
  }
#line 3992
  i = 0;
#line 3992
  while (i < gp_count + fp_count) {
#line 3993
    tmp___17 = emit_pop_reg(jit, active_regs[i], stack_offset);
#line 3993
    stack_offset += tmp___17;
#line 3992
    i ++;
  }
#line 3994
  while (1) {
#line 3994
    while (1) {
#line 3994
      _amd64_rex_bits___2 = (unsigned char)8;
#line 3994
      if ((int )_amd64_rex_bits___2 != 0) {
#line 3994
        tmp___18 = jit->ip;
#line 3994
        (jit->ip) ++;
#line 3994
        *tmp___18 = (unsigned char )(0x40 | (int )_amd64_rex_bits___2);
      }
#line 3994
      break;
    }
#line 3994
    tmp___19 = jit->ip;
#line 3994
    (jit->ip) ++;
#line 3994
    *tmp___19 = (unsigned char)131;
#line 3994
    while (1) {
#line 3994
      while (1) {
#line 3994
        tmp___20 = jit->ip;
#line 3994
        (jit->ip) ++;
#line 3994
        *tmp___20 = (unsigned char )((3 << 6) | 4);
#line 3994
        break;
      }
#line 3994
      break;
    }
#line 3994
    while (1) {
#line 3994
      *(jit->ip) = (unsigned char)0;
#line 3994
      (jit->ip) ++;
#line 3994
      break;
    }
#line 3994
    break;
  }
#line 3995
  if (stack_space) {
#line 3995
    while (1) {
#line 3995
      if ((jit_value )stack_space >= -128L) {
#line 3995
        if ((jit_value )stack_space <= 127L) {
#line 3995
          while (1) {
#line 3995
            _amd64_rex_bits___5 = (unsigned char)8;
#line 3995
            if ((int )_amd64_rex_bits___5 != 0) {
#line 3995
              tmp___34 = jit->ip;
#line 3995
              (jit->ip) ++;
#line 3995
              *tmp___34 = (unsigned char )(0x40 | (int )_amd64_rex_bits___5);
            }
#line 3995
            break;
          }
#line 3995
          tmp___35 = jit->ip;
#line 3995
          (jit->ip) ++;
#line 3995
          *tmp___35 = (unsigned char)131;
#line 3995
          while (1) {
#line 3995
            while (1) {
#line 3995
              tmp___36 = jit->ip;
#line 3995
              (jit->ip) ++;
#line 3995
              *tmp___36 = (unsigned char )((3 << 6) | 4);
#line 3995
              break;
            }
#line 3995
            break;
          }
#line 3995
          while (1) {
#line 3995
            *(jit->ip) = (unsigned char )(stack_space & 0xff);
#line 3995
            (jit->ip) ++;
#line 3995
            break;
          }
        } else {
#line 3995
          goto _L;
        }
      } else {
        _L: /* CIL Label */ 
#line 3995
        while (1) {
#line 3995
          _amd64_rex_bits___7 = (unsigned char)8;
#line 3995
          if ((int )_amd64_rex_bits___7 != 0) {
#line 3995
            tmp___43 = jit->ip;
#line 3995
            (jit->ip) ++;
#line 3995
            *tmp___43 = (unsigned char )(0x40 | (int )_amd64_rex_bits___7);
          }
#line 3995
          break;
        }
#line 3995
        tmp___44 = jit->ip;
#line 3995
        (jit->ip) ++;
#line 3995
        *tmp___44 = (unsigned char)129;
#line 3995
        while (1) {
#line 3995
          while (1) {
#line 3995
            tmp___45 = jit->ip;
#line 3995
            (jit->ip) ++;
#line 3995
            *tmp___45 = (unsigned char )((3 << 6) | 4);
#line 3995
            break;
          }
#line 3995
          break;
        }
#line 3995
        while (1) {
#line 3995
          imb___4.val = stack_space;
#line 3995
          tmp___46 = jit->ip;
#line 3995
          (jit->ip) ++;
#line 3995
          *tmp___46 = imb___4.b[0];
#line 3995
          tmp___47 = jit->ip;
#line 3995
          (jit->ip) ++;
#line 3995
          *tmp___47 = imb___4.b[1];
#line 3995
          tmp___48 = jit->ip;
#line 3995
          (jit->ip) ++;
#line 3995
          *tmp___48 = imb___4.b[2];
#line 3995
          tmp___49 = jit->ip;
#line 3995
          (jit->ip) ++;
#line 3995
          *tmp___49 = imb___4.b[3];
#line 3995
          break;
        }
      }
#line 3995
      break;
    }
  }
#line 3996
  return (stack_space / (int )sizeof(void *));
}
}
/* END FUNCTION-DEF emit_pop_caller_saved_regs LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF _cipher$_xtea_decipherBlock LOC=UNKNOWN */
void _cipher$_xtea_decipherBlock(unsigned int num_rounds , unsigned int *v , unsigned int *key ) 
{ 
  unsigned int v0 ;
  unsigned int v1 ;
  unsigned int delta ;
  unsigned int sum ;
  unsigned int i ;

  {
  v0 = v[0];
  v1 = v[1];
  delta = 2117564857;
  sum = delta * num_rounds;
  i = 0;
  while (i < num_rounds) {
    v1 -= (((v0 << 4) ^ (v0 >> 5)) + v0) ^ (sum + key[(sum >> 11) & 3]);
    sum -= delta;
    v0 -= (((v1 << 4) ^ (v1 >> 5)) + v1) ^ (sum + key[sum & 3]);
    i ++;
  }
  v[0] = v0;
  v[1] = v1;
}
}
/* END FUNCTION-DEF _cipher$_xtea_decipherBlock LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF unload_reg LOC=UNKNOWN */
void unload_reg(jit_op *op , jit_hw_reg *hreg , jit_value virt_reg ) 
{ 


  {
#line 5905
  insert_reg_op(464, op, virt_reg, (jit_value )hreg->id);
#line 5906
  return;
}
}
/* END FUNCTION-DEF unload_reg LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF mark_livecode LOC=UNKNOWN */
__inline static void mark_livecode(jit_op *op ) 
{ 


  {
#line 4872
  while (op) {
#line 4873
    if (op->in_use) {
#line 4873
      return;
    }
#line 4874
    op->in_use = (unsigned char)1;
#line 4875
    if (op->jmp_addr) {
#line 4875
      mark_livecode(op->jmp_addr);
    }
#line 4876
    if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 208U) {
#line 4876
      return;
    }
#line 4877
    if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 40U) {
#line 4877
      return;
    }
#line 4878
    if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 624U) {
#line 4878
      return;
    }
#line 4879
    op = op->next;
  }
#line 4881
  return;
}
}
/* END FUNCTION-DEF mark_livecode LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_collect_statistics LOC=UNKNOWN */
void jit_collect_statistics(struct jit *jit ) 
{ 
  int i ;
  int j ;
  int ops_from_return ;
  jit_tree *last_hints ;
  jit_op *op ;
  jit_op *tmp ;
  jit_tree *new_hints ;
  jit_tree *tmp___0 ;
  jit_value regs[3] ;
  int found_regs ;
  int found ;
  jit_value reg ;
  int tmp___1 ;
  jit_value reg___0 ;
  jit_tree *hint ;
  jit_tree *tmp___2 ;
  struct jit_allocator_hint *new_hint ;
  void *tmp___3 ;
  unsigned long long tmp___4 ;

  {
#line 6163
  ops_from_return = 0;
#line 6164
  last_hints = (jit_tree *)((void *)0);
#line 6165
  tmp = jit_op_last(jit->ops);
#line 6165
  op = tmp;
#line 6165
  while ((unsigned long )op != (unsigned long )((void *)0)) {
#line 6166
    tmp___0 = jit_tree_clone(last_hints);
#line 6166
    new_hints = tmp___0;
#line 6167
    op->normalized_pos = ops_from_return;
#line 6169
    found_regs = 0;
#line 6170
    i = 0;
#line 6170
    while (i < 3) {
#line 6171
      if ((((int )op->spec >> ((i + 1) - 1) * 2) & 0x03) == 0x01) {
#line 6171
        goto _L;
      } else
#line 6171
      if ((((int )op->spec >> ((i + 1) - 1) * 2) & 0x03) == 0x03) {
        _L: /* CIL Label */ 
#line 6172
        found = 0;
#line 6173
        reg = op->arg[i];
#line 6174
        j = 0;
#line 6174
        while (j < found_regs) {
#line 6175
          if (regs[j] == reg) {
#line 6176
            found = 1;
#line 6177
            break;
          }
#line 6174
          j ++;
        }
#line 6180
        if (! found) {
#line 6180
          tmp___1 = found_regs;
#line 6180
          found_regs ++;
#line 6180
          regs[tmp___1] = reg;
        }
      }
#line 6170
      i ++;
    }
#line 6182
    i = 0;
#line 6182
    while (i < found_regs) {
#line 6183
      reg___0 = regs[i];
#line 6184
      tmp___2 = jit_tree_search(new_hints, reg___0);
#line 6184
      hint = tmp___2;
#line 6185
      tmp___3 = malloc((size_t )sizeof(struct jit_allocator_hint ));
#line 6185
      new_hint = (struct jit_allocator_hint *)tmp___3;
#line 6186
      if (hint) {
#line 6186
        tmp___4 = __builtin_object_size((void *)new_hint, 0);
#line 6186
        __builtin___memcpy_chk((void *)new_hint, (void const   *)hint->value, sizeof(struct jit_allocator_hint ),
                               tmp___4);
      } else {
#line 6188
        new_hint->last_pos = 0;
#line 6189
        new_hint->should_be_calleesaved = 0;
#line 6190
        new_hint->should_be_eax = 0;
      }
#line 6192
      new_hint->refs = 0;
#line 6193
      new_hint->last_pos = ops_from_return;
#line 6194
      if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 472U) {
#line 6195
        (new_hint->should_be_eax) ++;
      } else
#line 6194
      if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 208U) {
#line 6195
        (new_hint->should_be_eax) ++;
      }
#line 6196
      new_hints = jit_tree_insert(new_hints, reg___0, (jit_tree_value )new_hint, (int *)((void *)0));
#line 6182
      i ++;
    }
#line 6198
    if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 232U) {
#line 6198
      mark_calleesaved_regs(new_hints, op);
    }
#line 6199
    hints_refcount_inc(new_hints);
#line 6200
    op->allocator_hints = new_hints;
#line 6201
    if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 688U) {
#line 6202
      last_hints = (jit_tree *)((void *)0);
#line 6203
      ops_from_return = 0;
    } else {
#line 6205
      last_hints = new_hints;
#line 6206
      ops_from_return ++;
    }
#line 6165
    op = op->prev;
  }
#line 6209
  return;
}
}
/* END FUNCTION-DEF jit_collect_statistics LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF emit_fret_op LOC=UNKNOWN */
static void emit_fret_op(struct jit *jit , jit_op *op ) 
{ 
  jit_value arg ;
  jit_hw_reg *ret_reg ;
  unsigned char *tmp ;
  unsigned char _amd64_rex_bits ;
  int tmp___0 ;
  int tmp___1 ;
  unsigned char *tmp___2 ;
  unsigned char *tmp___3 ;
  unsigned char *tmp___4 ;
  unsigned char *tmp___5 ;
  unsigned char *tmp___6 ;
  unsigned char _amd64_rex_bits___0 ;
  int tmp___7 ;
  int tmp___8 ;
  unsigned char *tmp___9 ;
  unsigned char *tmp___10 ;
  unsigned char *tmp___11 ;
  unsigned char *tmp___12 ;
  int tmp___13 ;
  unsigned char *tmp___14 ;
  unsigned char _amd64_rex_bits___1 ;
  unsigned char *tmp___15 ;
  unsigned char *tmp___16 ;
  unsigned char *tmp___17 ;
  long tmp___18 ;
  unsigned char *tmp___19 ;
  unsigned char _amd64_rex_bits___2 ;
  unsigned char *tmp___20 ;
  unsigned char *tmp___21 ;
  struct jit_func_info *tmp___22 ;
  unsigned char *tmp___23 ;

  {
#line 3816
  arg = op->r_arg[0];
#line 3817
  ret_reg = (jit->reg_al)->fpret_reg;
#line 3818
  if ((unsigned long long )op->arg_size == sizeof(float )) {
#line 3819
    while (1) {
#line 3819
      tmp = jit->ip;
#line 3819
      (jit->ip) ++;
#line 3819
      *tmp = (unsigned char)242;
#line 3819
      while (1) {
#line 3819
        if (ret_reg->id > 7) {
#line 3819
          tmp___0 = 4;
        } else {
#line 3819
          tmp___0 = 0;
        }
#line 3819
        if (arg > 7L) {
#line 3819
          tmp___1 = 1;
        } else {
#line 3819
          tmp___1 = 0;
        }
#line 3819
        _amd64_rex_bits = (unsigned char )(tmp___0 | tmp___1);
#line 3819
        if ((int )_amd64_rex_bits != 0) {
#line 3819
          tmp___2 = jit->ip;
#line 3819
          (jit->ip) ++;
#line 3819
          *tmp___2 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
        }
#line 3819
        break;
      }
#line 3819
      tmp___3 = jit->ip;
#line 3819
      (jit->ip) ++;
#line 3819
      *tmp___3 = (unsigned char)15;
#line 3819
      tmp___4 = jit->ip;
#line 3819
      (jit->ip) ++;
#line 3819
      *tmp___4 = (unsigned char)90;
#line 3819
      while (1) {
#line 3819
        while (1) {
#line 3819
          tmp___5 = jit->ip;
#line 3819
          (jit->ip) ++;
#line 3819
          *tmp___5 = (unsigned char )((long )((3 << 6) | ((ret_reg->id & 0x07) << 3)) | (arg & 7L));
#line 3819
          break;
        }
#line 3819
        break;
      }
#line 3819
      break;
    }
  } else
#line 3821
  if ((jit_value )ret_reg->id != arg) {
#line 3821
    while (1) {
#line 3821
      tmp___6 = jit->ip;
#line 3821
      (jit->ip) ++;
#line 3821
      *tmp___6 = (unsigned char)242;
#line 3821
      while (1) {
#line 3821
        if (ret_reg->id > 7) {
#line 3821
          tmp___7 = 4;
        } else {
#line 3821
          tmp___7 = 0;
        }
#line 3821
        if (arg > 7L) {
#line 3821
          tmp___8 = 1;
        } else {
#line 3821
          tmp___8 = 0;
        }
#line 3821
        _amd64_rex_bits___0 = (unsigned char )(tmp___7 | tmp___8);
#line 3821
        if ((int )_amd64_rex_bits___0 != 0) {
#line 3821
          tmp___9 = jit->ip;
#line 3821
          (jit->ip) ++;
#line 3821
          *tmp___9 = (unsigned char )(0x40 | (int )_amd64_rex_bits___0);
        }
#line 3821
        break;
      }
#line 3821
      tmp___10 = jit->ip;
#line 3821
      (jit->ip) ++;
#line 3821
      *tmp___10 = (unsigned char)15;
#line 3821
      tmp___11 = jit->ip;
#line 3821
      (jit->ip) ++;
#line 3821
      *tmp___11 = (unsigned char)16;
#line 3821
      while (1) {
#line 3821
        while (1) {
#line 3821
          tmp___12 = jit->ip;
#line 3821
          (jit->ip) ++;
#line 3821
          *tmp___12 = (unsigned char )((long )((3 << 6) | ((ret_reg->id & 0x07) << 3)) | (arg & 7L));
#line 3821
          break;
        }
#line 3821
        break;
      }
#line 3821
      break;
    }
  }
#line 3823
  tmp___13 = emit_pop_callee_saved_regs(jit);
#line 3823
  jit->push_count -= tmp___13;
#line 3824
  tmp___22 = jit_current_func_info(jit);
#line 3824
  if (tmp___22->has_prolog) {
#line 3825
    while (1) {
#line 3825
      while (1) {
#line 3825
        _amd64_rex_bits___1 = (unsigned char)8;
#line 3825
        if ((int )_amd64_rex_bits___1 != 0) {
#line 3825
          tmp___15 = jit->ip;
#line 3825
          (jit->ip) ++;
#line 3825
          *tmp___15 = (unsigned char )(0x40 | (int )_amd64_rex_bits___1);
        }
#line 3825
        break;
      }
#line 3825
      switch (8) {
      case 1: 
#line 3825
      tmp___16 = jit->ip;
#line 3825
      (jit->ip) ++;
#line 3825
      *tmp___16 = (unsigned char)138;
#line 3825
      break;
      case 8: 
      case 4: 
      case 2: 
#line 3825
      tmp___17 = jit->ip;
#line 3825
      (jit->ip) ++;
#line 3825
      *tmp___17 = (unsigned char)139;
#line 3825
      break;
      default: 
#line 3825
      tmp___18 = __builtin_expect(1L, 0L);
#line 3825
      if (tmp___18) {
#line 3825
        __assert_rtn((char const   *)"emit_fret_op", (char const   *)"tmp/src.c",
                     2686, (char const   *)"0");
      }
      }
#line 3825
      while (1) {
#line 3825
        while (1) {
#line 3825
          tmp___19 = jit->ip;
#line 3825
          (jit->ip) ++;
#line 3825
          *tmp___19 = (unsigned char )(((3 << 6) | (4 << 3)) | 5);
#line 3825
          break;
        }
#line 3825
        break;
      }
#line 3825
      break;
    }
#line 3826
    while (1) {
#line 3826
      while (1) {
#line 3826
        _amd64_rex_bits___2 = (unsigned char)0;
#line 3826
        if ((int )_amd64_rex_bits___2 != 0) {
#line 3826
          tmp___20 = jit->ip;
#line 3826
          (jit->ip) ++;
#line 3826
          *tmp___20 = (unsigned char )(0x40 | (int )_amd64_rex_bits___2);
        }
#line 3826
        break;
      }
#line 3826
      tmp___21 = jit->ip;
#line 3826
      (jit->ip) ++;
#line 3826
      *tmp___21 = (unsigned char)93;
#line 3826
      break;
    }
  }
#line 3828
  while (1) {
#line 3828
    tmp___23 = jit->ip;
#line 3828
    (jit->ip) ++;
#line 3828
    *tmp___23 = (unsigned char)195;
#line 3828
    break;
  }
#line 3829
  return;
}
}
/* END FUNCTION-DEF emit_fret_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF __darwin_fd_clr LOC=UNKNOWN */
__inline void ( __attribute__((__always_inline__)) __darwin_fd_clr)(int _fd , struct fd_set *_p ) 
{ 
  int tmp ;

  {
#line 93 "/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_fd_def.h"
  tmp = __darwin_check_fd_set(_fd, (void const   *)_p);
#line 93
  if (tmp) {
#line 94
    _p->fds_bits[(unsigned long long )((unsigned long )_fd) / (sizeof(__int32_t ) * 8ULL)] &= ~ ((__int32_t )(1UL << (unsigned long long )((unsigned long )_fd) % (sizeof(__int32_t ) * 8ULL)));
  }
#line 96
  return;
}
}
/* END FUNCTION-DEF __darwin_fd_clr LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_prepare_arguments LOC=UNKNOWN */
void jit_prepare_arguments(struct jit *jit ) 
{ 
  jit_op *op ;
  jit_op *tmp ;
  struct jit_func_info *info ;
  int gp_arg_pos ;
  int fp_arg_pos ;
  int argpos ;
  int phys_reg ;
  int tmp___0 ;
  int tmp___1 ;

  {
#line 6544 "<string>"
  tmp = jit_op_first(jit->ops);
#line 6544
  op = tmp;
#line 6545
  info = (struct jit_func_info *)((void *)0);
#line 6546
  gp_arg_pos = 0;
#line 6547
  fp_arg_pos = 0;
#line 6548
  argpos = 0;
#line 6549
  phys_reg = 0;
#line 6550
  while (op) {
#line 6551
    if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 688U) {
#line 6552
      info = (struct jit_func_info *)op->arg[1];
#line 6553
      info->has_prolog = 1;
#line 6554
      gp_arg_pos = 0;
#line 6555
      fp_arg_pos = 0;
#line 6556
      argpos = 0;
#line 6557
      phys_reg = 0;
    }
#line 6559
    if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 520U) {
#line 6560
      (info->args + argpos)->type = (enum jit_inp_type )op->arg[0];
#line 6561
      (info->args + argpos)->size = (int )op->arg[1];
#line 6562
      if (op->arg[0] == 2L) {
#line 6563
        (info->args + argpos)->gp_pos = gp_arg_pos;
#line 6564
        tmp___0 = fp_arg_pos;
#line 6564
        fp_arg_pos ++;
#line 6564
        (info->args + argpos)->fp_pos = tmp___0;
      } else {
#line 6566
        tmp___1 = gp_arg_pos;
#line 6566
        gp_arg_pos ++;
#line 6566
        (info->args + argpos)->gp_pos = tmp___1;
#line 6567
        (info->args + argpos)->fp_pos = fp_arg_pos;
      }
#line 6569
      jit_init_arg_params(jit, info, argpos, & phys_reg);
#line 6570
      argpos ++;
    }
#line 6572
    op = op->next;
  }
#line 6574
  return;
}
}
/* END FUNCTION-DEF jit_prepare_arguments LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF ob_append LOC=UNKNOWN */
static void ob_append(struct output_buf *ob , char *str ) 
{ 
  int len ;
  size_t tmp ;
  unsigned long long tmp___0 ;

  {
#line 4975
  tmp = strlen((char const   *)str);
#line 4975
  len = (int )tmp;
#line 4976
  ob_assert_space(ob, len);
#line 4977
  tmp___0 = __builtin_object_size((void *)ob->buf, 1);
#line 4977
  __builtin___strcat_chk(ob->buf, (char const   *)str, tmp___0);
#line 4978
  ob->size += (size_t )len;
#line 4979
  return;
}
}
/* END FUNCTION-DEF ob_append LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF emit_push_callee_saved_regs LOC=UNKNOWN */
static int emit_push_callee_saved_regs(struct jit *jit , jit_op *op ) 
{ 
  int count ;
  jit_hw_reg *active_regs[32] ;
  int stack_space ;
  int tmp ;
  unsigned char _amd64_rex_bits ;
  unsigned char *tmp___0 ;
  unsigned char *tmp___1 ;
  unsigned char *tmp___2 ;
  unsigned char _amd64_rex_bits___0 ;
  unsigned char *tmp___3 ;
  unsigned char *tmp___4 ;
  x86_imm_buf imb ;
  unsigned char *tmp___5 ;
  unsigned char *tmp___6 ;
  unsigned char *tmp___7 ;
  unsigned char *tmp___8 ;
  unsigned char _amd64_rex_bits___1 ;
  unsigned char *tmp___9 ;
  unsigned char *tmp___10 ;
  unsigned char *tmp___11 ;
  x86_imm_buf imb___0 ;
  unsigned char *tmp___12 ;
  unsigned char *tmp___13 ;
  unsigned char *tmp___14 ;
  unsigned char *tmp___15 ;
  int stack_offset ;
  int i ;
  int tmp___16 ;

  {
#line 3942
  count = 0;
#line 3944
  tmp = list_callee_saved_regs(jit, op, active_regs, & count);
#line 3944
  stack_space = tmp;
#line 3945
  if (stack_space) {
#line 3945
    while (1) {
#line 3945
      if ((jit_value )stack_space >= -128L) {
#line 3945
        if ((jit_value )stack_space <= 127L) {
#line 3945
          while (1) {
#line 3945
            _amd64_rex_bits = (unsigned char)8;
#line 3945
            if ((int )_amd64_rex_bits != 0) {
#line 3945
              tmp___0 = jit->ip;
#line 3945
              (jit->ip) ++;
#line 3945
              *tmp___0 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
            }
#line 3945
            break;
          }
#line 3945
          tmp___1 = jit->ip;
#line 3945
          (jit->ip) ++;
#line 3945
          *tmp___1 = (unsigned char)131;
#line 3945
          while (1) {
#line 3945
            while (1) {
#line 3945
              tmp___2 = jit->ip;
#line 3945
              (jit->ip) ++;
#line 3945
              *tmp___2 = (unsigned char )(((3 << 6) | (5 << 3)) | 4);
#line 3945
              break;
            }
#line 3945
            break;
          }
#line 3945
          while (1) {
#line 3945
            *(jit->ip) = (unsigned char )(stack_space & 0xff);
#line 3945
            (jit->ip) ++;
#line 3945
            break;
          }
        } else {
#line 3945
          goto _L;
        }
      } else {
        _L: /* CIL Label */ 
#line 3945
        while (1) {
#line 3945
          _amd64_rex_bits___1 = (unsigned char)8;
#line 3945
          if ((int )_amd64_rex_bits___1 != 0) {
#line 3945
            tmp___9 = jit->ip;
#line 3945
            (jit->ip) ++;
#line 3945
            *tmp___9 = (unsigned char )(0x40 | (int )_amd64_rex_bits___1);
          }
#line 3945
          break;
        }
#line 3945
        tmp___10 = jit->ip;
#line 3945
        (jit->ip) ++;
#line 3945
        *tmp___10 = (unsigned char)129;
#line 3945
        while (1) {
#line 3945
          while (1) {
#line 3945
            tmp___11 = jit->ip;
#line 3945
            (jit->ip) ++;
#line 3945
            *tmp___11 = (unsigned char )(((3 << 6) | (5 << 3)) | 4);
#line 3945
            break;
          }
#line 3945
          break;
        }
#line 3945
        while (1) {
#line 3945
          imb___0.val = stack_space;
#line 3945
          tmp___12 = jit->ip;
#line 3945
          (jit->ip) ++;
#line 3945
          *tmp___12 = imb___0.b[0];
#line 3945
          tmp___13 = jit->ip;
#line 3945
          (jit->ip) ++;
#line 3945
          *tmp___13 = imb___0.b[1];
#line 3945
          tmp___14 = jit->ip;
#line 3945
          (jit->ip) ++;
#line 3945
          *tmp___14 = imb___0.b[2];
#line 3945
          tmp___15 = jit->ip;
#line 3945
          (jit->ip) ++;
#line 3945
          *tmp___15 = imb___0.b[3];
#line 3945
          break;
        }
      }
#line 3945
      break;
    }
  }
#line 3946
  stack_offset = 0;
#line 3947
  i = 0;
#line 3947
  while (i < count) {
#line 3948
    tmp___16 = emit_push_reg(jit, active_regs[i], stack_offset);
#line 3948
    stack_offset += tmp___16;
#line 3947
    i ++;
  }
#line 3950
  return (stack_space / (int )sizeof(void *));
}
}
/* END FUNCTION-DEF emit_push_callee_saved_regs LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF emit_fppush_arg LOC=UNKNOWN */
__inline static void emit_fppush_arg(struct jit *jit , struct jit_out_arg *arg ) 
{ 
  int sreg ;
  int pos ;
  int tmp ;
  unsigned char _amd64_rex_bits ;
  unsigned char *tmp___0 ;
  unsigned char *tmp___1 ;
  unsigned char *tmp___2 ;
  unsigned char *tmp___3 ;
  unsigned char *tmp___4 ;
  unsigned char *tmp___5 ;
  unsigned char *tmp___6 ;
  unsigned char *tmp___7 ;
  x86_imm_buf imb ;
  unsigned char *tmp___8 ;
  unsigned char *tmp___9 ;
  unsigned char *tmp___10 ;
  unsigned char *tmp___11 ;
  unsigned char *tmp___12 ;
  unsigned char *tmp___13 ;
  unsigned char *tmp___14 ;
  x86_imm_buf imb___0 ;
  unsigned char *tmp___15 ;
  unsigned char *tmp___16 ;
  unsigned char *tmp___17 ;
  unsigned char *tmp___18 ;
  unsigned char _amd64_rex_bits___0 ;
  unsigned char *tmp___19 ;
  unsigned char *tmp___20 ;
  unsigned char *tmp___21 ;
  unsigned char _amd64_rex_bits___1 ;
  unsigned char *tmp___22 ;
  unsigned char *tmp___23 ;
  x86_imm_buf imb___1 ;
  unsigned char *tmp___24 ;
  unsigned char *tmp___25 ;
  unsigned char *tmp___26 ;
  unsigned char *tmp___27 ;
  unsigned char _amd64_rex_bits___2 ;
  unsigned char *tmp___28 ;
  unsigned char *tmp___29 ;
  unsigned char *tmp___30 ;
  x86_imm_buf imb___2 ;
  unsigned char *tmp___31 ;
  unsigned char *tmp___32 ;
  unsigned char *tmp___33 ;
  unsigned char *tmp___34 ;
  unsigned char *tmp___35 ;
  unsigned char _amd64_rex_bits___3 ;
  int tmp___36 ;
  unsigned char *tmp___37 ;
  unsigned char *tmp___38 ;
  unsigned char *tmp___39 ;
  unsigned char *tmp___40 ;
  x86_imm_buf imb___3 ;
  unsigned char *tmp___41 ;
  unsigned char *tmp___42 ;
  unsigned char *tmp___43 ;
  unsigned char *tmp___44 ;
  unsigned char *tmp___45 ;
  unsigned char *tmp___46 ;
  unsigned char *tmp___47 ;
  unsigned char *tmp___48 ;
  unsigned char *tmp___49 ;
  unsigned char *tmp___50 ;
  x86_imm_buf imb___4 ;
  unsigned char *tmp___51 ;
  unsigned char *tmp___52 ;
  unsigned char *tmp___53 ;
  unsigned char *tmp___54 ;
  unsigned char *tmp___55 ;
  unsigned char *tmp___56 ;
  unsigned char *tmp___57 ;
  x86_imm_buf imb___5 ;
  unsigned char *tmp___58 ;
  unsigned char *tmp___59 ;
  unsigned char *tmp___60 ;
  unsigned char *tmp___61 ;
  int tmp___62 ;
  double b ;
  jit_unsigned_value tmp___63 ;
  unsigned long long tmp___64 ;
  unsigned char _amd64_rex_bits___4 ;
  unsigned char *tmp___65 ;
  unsigned char *tmp___66 ;
  amd64_imm_buf imb___6 ;
  unsigned char *tmp___67 ;
  unsigned char *tmp___68 ;
  unsigned char *tmp___69 ;
  unsigned char *tmp___70 ;
  unsigned char *tmp___71 ;
  unsigned char *tmp___72 ;
  unsigned char *tmp___73 ;
  unsigned char *tmp___74 ;
  x86_imm_buf imb___7 ;
  unsigned char *tmp___75 ;
  unsigned char *tmp___76 ;
  unsigned char *tmp___77 ;
  unsigned char *tmp___78 ;
  unsigned char _amd64_rex_bits___5 ;
  unsigned char *tmp___79 ;
  unsigned char *tmp___80 ;
  unsigned char *tmp___81 ;
  unsigned char _amd64_rex_bits___6 ;
  unsigned char *tmp___82 ;
  unsigned char *tmp___83 ;
  unsigned char *tmp___84 ;
  unsigned char *tmp___85 ;
  x86_imm_buf imb___8 ;
  int tmp___86 ;
  unsigned char *tmp___87 ;
  unsigned char *tmp___88 ;
  unsigned char *tmp___89 ;
  unsigned char *tmp___90 ;
  unsigned char *tmp___91 ;
  unsigned char *tmp___92 ;
  unsigned char *tmp___93 ;
  unsigned char *tmp___94 ;
  int tmp___95 ;
  unsigned char *tmp___96 ;
  unsigned char *tmp___97 ;
  x86_imm_buf imb___9 ;
  int tmp___98 ;
  unsigned char *tmp___99 ;
  unsigned char *tmp___100 ;
  unsigned char *tmp___101 ;
  unsigned char *tmp___102 ;
  int tmp___103 ;
  int tmp___104 ;
  int tmp___105 ;
  unsigned char *tmp___106 ;
  int tmp___107 ;
  unsigned char *tmp___108 ;
  int tmp___109 ;
  unsigned char *tmp___110 ;
  x86_imm_buf imb___10 ;
  int tmp___111 ;
  unsigned char *tmp___112 ;
  unsigned char *tmp___113 ;
  unsigned char *tmp___114 ;
  unsigned char *tmp___115 ;
  int tmp___116 ;
  int tmp___117 ;
  unsigned char *tmp___118 ;
  unsigned char _amd64_rex_bits___7 ;
  int tmp___119 ;
  unsigned char *tmp___120 ;
  unsigned char *tmp___121 ;
  unsigned char *tmp___122 ;
  unsigned char *tmp___123 ;
  int tmp___124 ;
  unsigned char _amd64_rex_bits___8 ;
  unsigned char *tmp___125 ;
  unsigned char *tmp___126 ;
  unsigned char *tmp___127 ;
  unsigned char _amd64_rex_bits___9 ;
  unsigned char *tmp___128 ;
  unsigned char *tmp___129 ;
  x86_imm_buf imb___11 ;
  unsigned char *tmp___130 ;
  unsigned char *tmp___131 ;
  unsigned char *tmp___132 ;
  unsigned char *tmp___133 ;
  unsigned char _amd64_rex_bits___10 ;
  unsigned char *tmp___134 ;
  unsigned char *tmp___135 ;
  unsigned char *tmp___136 ;
  x86_imm_buf imb___12 ;
  unsigned char *tmp___137 ;
  unsigned char *tmp___138 ;
  unsigned char *tmp___139 ;
  unsigned char *tmp___140 ;
  unsigned char *tmp___141 ;
  unsigned char _amd64_rex_bits___11 ;
  unsigned char *tmp___142 ;
  unsigned char *tmp___143 ;
  unsigned char *tmp___144 ;
  unsigned char *tmp___145 ;
  x86_imm_buf imb___13 ;
  unsigned char *tmp___146 ;
  unsigned char *tmp___147 ;
  unsigned char *tmp___148 ;
  unsigned char *tmp___149 ;
  unsigned char *tmp___150 ;
  unsigned char *tmp___151 ;
  unsigned char *tmp___152 ;
  unsigned char *tmp___153 ;
  unsigned char *tmp___154 ;
  unsigned char *tmp___155 ;
  x86_imm_buf imb___14 ;
  unsigned char *tmp___156 ;
  unsigned char *tmp___157 ;
  unsigned char *tmp___158 ;
  unsigned char *tmp___159 ;
  unsigned char *tmp___160 ;
  unsigned char *tmp___161 ;
  unsigned char *tmp___162 ;
  x86_imm_buf imb___15 ;
  unsigned char *tmp___163 ;
  unsigned char *tmp___164 ;
  unsigned char *tmp___165 ;
  unsigned char *tmp___166 ;
  float b___0 ;
  jit_unsigned_value tmp___167 ;
  unsigned long long tmp___168 ;
  unsigned char _amd64_rex_bits___12 ;
  unsigned char *tmp___169 ;
  unsigned char *tmp___170 ;
  amd64_imm_buf imb___16 ;
  unsigned char *tmp___171 ;
  unsigned char *tmp___172 ;
  unsigned char *tmp___173 ;
  unsigned char *tmp___174 ;
  unsigned char *tmp___175 ;
  unsigned char *tmp___176 ;
  unsigned char *tmp___177 ;
  unsigned char *tmp___178 ;
  x86_imm_buf imb___17 ;
  unsigned char *tmp___179 ;
  unsigned char *tmp___180 ;
  unsigned char *tmp___181 ;
  unsigned char *tmp___182 ;
  unsigned char _amd64_rex_bits___13 ;
  unsigned char *tmp___183 ;
  unsigned char *tmp___184 ;

  {
#line 3658
  if ((unsigned long long )arg->size == sizeof(double )) {
#line 3659
    if (arg->isreg) {
#line 3660
      tmp___62 = is_spilled(arg->value.generic, jit->prepared_args.op, & sreg);
#line 3660
      if (tmp___62) {
#line 3661
        tmp = stack_reg_pos(jit, (int )arg->value.generic);
#line 3661
        pos = tmp;
#line 3662
        while (1) {
#line 3662
          while (1) {
#line 3662
            _amd64_rex_bits = (unsigned char)0;
#line 3662
            if ((int )_amd64_rex_bits != 0) {
#line 3662
              tmp___0 = jit->ip;
#line 3662
              (jit->ip) ++;
#line 3662
              *tmp___0 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
            }
#line 3662
            break;
          }
#line 3662
          tmp___1 = jit->ip;
#line 3662
          (jit->ip) ++;
#line 3662
          *tmp___1 = (unsigned char)255;
#line 3662
          while (1) {
#line 3662
            if (0) {
#line 3662
              if (pos == 0) {
#line 3662
                while (1) {
#line 3662
                  tmp___2 = jit->ip;
#line 3662
                  (jit->ip) ++;
#line 3662
                  *tmp___2 = (unsigned char )((6 << 3) | 4);
#line 3662
                  break;
                }
#line 3662
                while (1) {
#line 3662
                  tmp___3 = jit->ip;
#line 3662
                  (jit->ip) ++;
#line 3662
                  *tmp___3 = (unsigned char )((4 << 3) | 4);
#line 3662
                  break;
                }
              } else
#line 3662
              if ((jit_value )pos >= -128L) {
#line 3662
                if ((jit_value )pos <= 127L) {
#line 3662
                  while (1) {
#line 3662
                    tmp___4 = jit->ip;
#line 3662
                    (jit->ip) ++;
#line 3662
                    *tmp___4 = (unsigned char )(((1 << 6) | (6 << 3)) | 4);
#line 3662
                    break;
                  }
#line 3662
                  while (1) {
#line 3662
                    tmp___5 = jit->ip;
#line 3662
                    (jit->ip) ++;
#line 3662
                    *tmp___5 = (unsigned char )((4 << 3) | 4);
#line 3662
                    break;
                  }
#line 3662
                  while (1) {
#line 3662
                    *(jit->ip) = (unsigned char )(pos & 0xff);
#line 3662
                    (jit->ip) ++;
#line 3662
                    break;
                  }
                } else {
#line 3662
                  goto _L;
                }
              } else {
                _L: /* CIL Label */ 
#line 3662
                while (1) {
#line 3662
                  tmp___6 = jit->ip;
#line 3662
                  (jit->ip) ++;
#line 3662
                  *tmp___6 = (unsigned char )(((2 << 6) | (6 << 3)) | 4);
#line 3662
                  break;
                }
#line 3662
                while (1) {
#line 3662
                  tmp___7 = jit->ip;
#line 3662
                  (jit->ip) ++;
#line 3662
                  *tmp___7 = (unsigned char )((4 << 3) | 4);
#line 3662
                  break;
                }
#line 3662
                while (1) {
#line 3662
                  imb.val = pos;
#line 3662
                  tmp___8 = jit->ip;
#line 3662
                  (jit->ip) ++;
#line 3662
                  *tmp___8 = imb.b[0];
#line 3662
                  tmp___9 = jit->ip;
#line 3662
                  (jit->ip) ++;
#line 3662
                  *tmp___9 = imb.b[1];
#line 3662
                  tmp___10 = jit->ip;
#line 3662
                  (jit->ip) ++;
#line 3662
                  *tmp___10 = imb.b[2];
#line 3662
                  tmp___11 = jit->ip;
#line 3662
                  (jit->ip) ++;
#line 3662
                  *tmp___11 = imb.b[3];
#line 3662
                  break;
                }
              }
#line 3662
              break;
            }
#line 3662
            if (pos == 0) {

            }
#line 3662
            if ((jit_value )pos >= -128L) {
#line 3662
              if ((jit_value )pos <= 127L) {
#line 3662
                while (1) {
#line 3662
                  tmp___13 = jit->ip;
#line 3662
                  (jit->ip) ++;
#line 3662
                  *tmp___13 = (unsigned char )(((1 << 6) | (6 << 3)) | 5);
#line 3662
                  break;
                }
#line 3662
                while (1) {
#line 3662
                  *(jit->ip) = (unsigned char )(pos & 0xff);
#line 3662
                  (jit->ip) ++;
#line 3662
                  break;
                }
              } else {
#line 3662
                goto _L___0;
              }
            } else {
              _L___0: /* CIL Label */ 
#line 3662
              while (1) {
#line 3662
                tmp___14 = jit->ip;
#line 3662
                (jit->ip) ++;
#line 3662
                *tmp___14 = (unsigned char )(((2 << 6) | (6 << 3)) | 5);
#line 3662
                break;
              }
#line 3662
              while (1) {
#line 3662
                imb___0.val = pos;
#line 3662
                tmp___15 = jit->ip;
#line 3662
                (jit->ip) ++;
#line 3662
                *tmp___15 = imb___0.b[0];
#line 3662
                tmp___16 = jit->ip;
#line 3662
                (jit->ip) ++;
#line 3662
                *tmp___16 = imb___0.b[1];
#line 3662
                tmp___17 = jit->ip;
#line 3662
                (jit->ip) ++;
#line 3662
                *tmp___17 = imb___0.b[2];
#line 3662
                tmp___18 = jit->ip;
#line 3662
                (jit->ip) ++;
#line 3662
                *tmp___18 = imb___0.b[3];
#line 3662
                break;
              }
            }
#line 3662
            break;
          }
#line 3662
          break;
        }
      } else {
#line 3664
        while (1) {
#line 3664
          while (1) {
#line 3664
            _amd64_rex_bits___0 = (unsigned char)8;
#line 3664
            if ((int )_amd64_rex_bits___0 != 0) {
#line 3664
              tmp___19 = jit->ip;
#line 3664
              (jit->ip) ++;
#line 3664
              *tmp___19 = (unsigned char )(0x40 | (int )_amd64_rex_bits___0);
            }
#line 3664
            break;
          }
#line 3664
          tmp___20 = jit->ip;
#line 3664
          (jit->ip) ++;
#line 3664
          *tmp___20 = (unsigned char)131;
#line 3664
          while (1) {
#line 3664
            while (1) {
#line 3664
              tmp___21 = jit->ip;
#line 3664
              (jit->ip) ++;
#line 3664
              *tmp___21 = (unsigned char )(((3 << 6) | (5 << 3)) | 4);
#line 3664
              break;
            }
#line 3664
            break;
          }
#line 3664
          while (1) {
#line 3664
            *(jit->ip) = (unsigned char)8;
#line 3664
            (jit->ip) ++;
#line 3664
            break;
          }
#line 3664
          break;
        }
#line 3665
        while (1) {
#line 3665
          tmp___35 = jit->ip;
#line 3665
          (jit->ip) ++;
#line 3665
          *tmp___35 = (unsigned char)102;
#line 3665
          while (1) {
#line 3665
            if (sreg > 7) {
#line 3665
              tmp___36 = 4;
            } else {
#line 3665
              tmp___36 = 0;
            }
#line 3665
            _amd64_rex_bits___3 = (unsigned char )tmp___36;
#line 3665
            if ((int )_amd64_rex_bits___3 != 0) {
#line 3665
              tmp___37 = jit->ip;
#line 3665
              (jit->ip) ++;
#line 3665
              *tmp___37 = (unsigned char )(0x40 | (int )_amd64_rex_bits___3);
            }
#line 3665
            break;
          }
#line 3665
          tmp___38 = jit->ip;
#line 3665
          (jit->ip) ++;
#line 3665
          *tmp___38 = (unsigned char)15;
#line 3665
          tmp___39 = jit->ip;
#line 3665
          (jit->ip) ++;
#line 3665
          *tmp___39 = (unsigned char)19;
#line 3665
          while (1) {
#line 3665
            while (1) {
#line 3665
              while (1) {
#line 3665
                tmp___45 = jit->ip;
#line 3665
                (jit->ip) ++;
#line 3665
                *tmp___45 = (unsigned char )((((sreg & 0x7) & 0x07) << 3) | 4);
#line 3665
                break;
              }
#line 3665
              while (1) {
#line 3665
                tmp___46 = jit->ip;
#line 3665
                (jit->ip) ++;
#line 3665
                *tmp___46 = (unsigned char )((4 << 3) | 4);
#line 3665
                break;
              }
#line 3665
              break;
#line 3665
              while (1) {
#line 3665
                tmp___55 = jit->ip;
#line 3665
                (jit->ip) ++;
#line 3665
                *tmp___55 = (unsigned char )((((sreg & 0x7) & 0x07) << 3) | 4);
#line 3665
                break;
              }
#line 3665
              break;
#line 3665
              while (1) {
#line 3665
                tmp___56 = jit->ip;
#line 3665
                (jit->ip) ++;
#line 3665
                *tmp___56 = (unsigned char )(((1 << 6) | (((sreg & 0x7) & 0x07) << 3)) | 4);
#line 3665
                break;
              }
#line 3665
              while (1) {
#line 3665
                *(jit->ip) = (unsigned char)0;
#line 3665
                (jit->ip) ++;
#line 3665
                break;
              }
#line 3665
              break;
            }
#line 3665
            break;
          }
#line 3665
          break;
        }
      }
    } else {
#line 3668
      b = arg->value.fp;
#line 3670
      tmp___64 = __builtin_object_size((void *)(& tmp___63), 0);
#line 3670
      __builtin___memcpy_chk((void *)(& tmp___63), (void const   *)(& b), sizeof(double ),
                             tmp___64);
#line 3671
      while (1) {
#line 3671
        while (1) {
#line 3671
          _amd64_rex_bits___4 = (unsigned char)8;
#line 3671
          if ((int )_amd64_rex_bits___4 != 0) {
#line 3671
            tmp___65 = jit->ip;
#line 3671
            (jit->ip) ++;
#line 3671
            *tmp___65 = (unsigned char )(0x40 | (int )_amd64_rex_bits___4);
          }
#line 3671
          break;
        }
#line 3671
        tmp___66 = jit->ip;
#line 3671
        (jit->ip) ++;
#line 3671
        *tmp___66 = (unsigned char)184;
#line 3671
        while (1) {
#line 3671
          imb___6.val = tmp___63;
#line 3671
          tmp___67 = jit->ip;
#line 3671
          (jit->ip) ++;
#line 3671
          *tmp___67 = imb___6.b[0];
#line 3671
          tmp___68 = jit->ip;
#line 3671
          (jit->ip) ++;
#line 3671
          *tmp___68 = imb___6.b[1];
#line 3671
          tmp___69 = jit->ip;
#line 3671
          (jit->ip) ++;
#line 3671
          *tmp___69 = imb___6.b[2];
#line 3671
          tmp___70 = jit->ip;
#line 3671
          (jit->ip) ++;
#line 3671
          *tmp___70 = imb___6.b[3];
#line 3671
          tmp___71 = jit->ip;
#line 3671
          (jit->ip) ++;
#line 3671
          *tmp___71 = imb___6.b[4];
#line 3671
          tmp___72 = jit->ip;
#line 3671
          (jit->ip) ++;
#line 3671
          *tmp___72 = imb___6.b[5];
#line 3671
          tmp___73 = jit->ip;
#line 3671
          (jit->ip) ++;
#line 3671
          *tmp___73 = imb___6.b[6];
#line 3671
          tmp___74 = jit->ip;
#line 3671
          (jit->ip) ++;
#line 3671
          *tmp___74 = imb___6.b[7];
#line 3671
          break;
        }
#line 3671
        break;
      }
#line 3672
      while (1) {
#line 3672
        while (1) {
#line 3672
          _amd64_rex_bits___5 = (unsigned char)0;
#line 3672
          if ((int )_amd64_rex_bits___5 != 0) {
#line 3672
            tmp___79 = jit->ip;
#line 3672
            (jit->ip) ++;
#line 3672
            *tmp___79 = (unsigned char )(0x40 | (int )_amd64_rex_bits___5);
          }
#line 3672
          break;
        }
#line 3672
        tmp___80 = jit->ip;
#line 3672
        (jit->ip) ++;
#line 3672
        *tmp___80 = (unsigned char)80;
#line 3672
        break;
      }
    }
  } else
#line 3675
  if (arg->isreg) {
#line 3676
    tmp___124 = is_spilled(arg->value.generic, jit->prepared_args.op, & sreg);
#line 3676
    if (tmp___124) {
#line 3677
      while (1) {
#line 3677
        tmp___81 = jit->ip;
#line 3677
        (jit->ip) ++;
#line 3677
        *tmp___81 = (unsigned char)242;
#line 3677
        while (1) {
#line 3677
          _amd64_rex_bits___6 = (unsigned char)0;
#line 3677
          if ((int )_amd64_rex_bits___6 != 0) {
#line 3677
            tmp___82 = jit->ip;
#line 3677
            (jit->ip) ++;
#line 3677
            *tmp___82 = (unsigned char )(0x40 | (int )_amd64_rex_bits___6);
          }
#line 3677
          break;
        }
#line 3677
        tmp___83 = jit->ip;
#line 3677
        (jit->ip) ++;
#line 3677
        *tmp___83 = (unsigned char)15;
#line 3677
        tmp___84 = jit->ip;
#line 3677
        (jit->ip) ++;
#line 3677
        *tmp___84 = (unsigned char)90;
#line 3677
        while (1) {
#line 3677
          while (1) {
#line 3677
            if (0) {
#line 3677
              tmp___105 = stack_reg_pos(jit, (int )arg->value.generic);
#line 3677
              if (tmp___105 == 0) {
#line 3677
                while (1) {
#line 3677
                  tmp___91 = jit->ip;
#line 3677
                  (jit->ip) ++;
#line 3677
                  *tmp___91 = (unsigned char)4;
#line 3677
                  break;
                }
#line 3677
                while (1) {
#line 3677
                  tmp___92 = jit->ip;
#line 3677
                  (jit->ip) ++;
#line 3677
                  *tmp___92 = (unsigned char )((4 << 3) | 4);
#line 3677
                  break;
                }
              } else {
#line 3677
                tmp___103 = stack_reg_pos(jit, (int )arg->value.generic);
#line 3677
                if ((jit_value )tmp___103 >= -128L) {
#line 3677
                  tmp___104 = stack_reg_pos(jit, (int )arg->value.generic);
#line 3677
                  if ((jit_value )tmp___104 <= 127L) {
#line 3677
                    while (1) {
#line 3677
                      tmp___93 = jit->ip;
#line 3677
                      (jit->ip) ++;
#line 3677
                      *tmp___93 = (unsigned char )((1 << 6) | 4);
#line 3677
                      break;
                    }
#line 3677
                    while (1) {
#line 3677
                      tmp___94 = jit->ip;
#line 3677
                      (jit->ip) ++;
#line 3677
                      *tmp___94 = (unsigned char )((4 << 3) | 4);
#line 3677
                      break;
                    }
#line 3677
                    while (1) {
#line 3677
                      tmp___95 = stack_reg_pos(jit, (int )arg->value.generic);
#line 3677
                      *(jit->ip) = (unsigned char )(tmp___95 & 0xff);
#line 3677
                      (jit->ip) ++;
#line 3677
                      break;
                    }
                  } else {
#line 3677
                    goto _L___1;
                  }
                } else {
                  _L___1: /* CIL Label */ 
#line 3677
                  while (1) {
#line 3677
                    tmp___96 = jit->ip;
#line 3677
                    (jit->ip) ++;
#line 3677
                    *tmp___96 = (unsigned char )((2 << 6) | 4);
#line 3677
                    break;
                  }
#line 3677
                  while (1) {
#line 3677
                    tmp___97 = jit->ip;
#line 3677
                    (jit->ip) ++;
#line 3677
                    *tmp___97 = (unsigned char )((4 << 3) | 4);
#line 3677
                    break;
                  }
#line 3677
                  while (1) {
#line 3677
                    tmp___98 = stack_reg_pos(jit, (int )arg->value.generic);
#line 3677
                    imb___9.val = tmp___98;
#line 3677
                    tmp___99 = jit->ip;
#line 3677
                    (jit->ip) ++;
#line 3677
                    *tmp___99 = imb___9.b[0];
#line 3677
                    tmp___100 = jit->ip;
#line 3677
                    (jit->ip) ++;
#line 3677
                    *tmp___100 = imb___9.b[1];
#line 3677
                    tmp___101 = jit->ip;
#line 3677
                    (jit->ip) ++;
#line 3677
                    *tmp___101 = imb___9.b[2];
#line 3677
                    tmp___102 = jit->ip;
#line 3677
                    (jit->ip) ++;
#line 3677
                    *tmp___102 = imb___9.b[3];
#line 3677
                    break;
                  }
                }
              }
#line 3677
              break;
            }
#line 3677
            tmp___107 = stack_reg_pos(jit, (int )arg->value.generic);
#line 3677
            if (tmp___107 == 0) {

            }
#line 3677
            tmp___116 = stack_reg_pos(jit, (int )arg->value.generic);
#line 3677
            if ((jit_value )tmp___116 >= -128L) {
#line 3677
              tmp___117 = stack_reg_pos(jit, (int )arg->value.generic);
#line 3677
              if ((jit_value )tmp___117 <= 127L) {
#line 3677
                while (1) {
#line 3677
                  tmp___108 = jit->ip;
#line 3677
                  (jit->ip) ++;
#line 3677
                  *tmp___108 = (unsigned char )((1 << 6) | 5);
#line 3677
                  break;
                }
#line 3677
                while (1) {
#line 3677
                  tmp___109 = stack_reg_pos(jit, (int )arg->value.generic);
#line 3677
                  *(jit->ip) = (unsigned char )(tmp___109 & 0xff);
#line 3677
                  (jit->ip) ++;
#line 3677
                  break;
                }
              } else {
#line 3677
                goto _L___2;
              }
            } else {
              _L___2: /* CIL Label */ 
#line 3677
              while (1) {
#line 3677
                tmp___110 = jit->ip;
#line 3677
                (jit->ip) ++;
#line 3677
                *tmp___110 = (unsigned char )((2 << 6) | 5);
#line 3677
                break;
              }
#line 3677
              while (1) {
#line 3677
                tmp___111 = stack_reg_pos(jit, (int )arg->value.generic);
#line 3677
                imb___10.val = tmp___111;
#line 3677
                tmp___112 = jit->ip;
#line 3677
                (jit->ip) ++;
#line 3677
                *tmp___112 = imb___10.b[0];
#line 3677
                tmp___113 = jit->ip;
#line 3677
                (jit->ip) ++;
#line 3677
                *tmp___113 = imb___10.b[1];
#line 3677
                tmp___114 = jit->ip;
#line 3677
                (jit->ip) ++;
#line 3677
                *tmp___114 = imb___10.b[2];
#line 3677
                tmp___115 = jit->ip;
#line 3677
                (jit->ip) ++;
#line 3677
                *tmp___115 = imb___10.b[3];
#line 3677
                break;
              }
            }
#line 3677
            break;
          }
#line 3677
          break;
        }
#line 3677
        break;
      }
    } else {
#line 3679
      while (1) {
#line 3679
        tmp___118 = jit->ip;
#line 3679
        (jit->ip) ++;
#line 3679
        *tmp___118 = (unsigned char)242;
#line 3679
        while (1) {
#line 3679
          if (sreg > 7) {
#line 3679
            tmp___119 = 1;
          } else {
#line 3679
            tmp___119 = 0;
          }
#line 3679
          _amd64_rex_bits___7 = (unsigned char )tmp___119;
#line 3679
          if ((int )_amd64_rex_bits___7 != 0) {
#line 3679
            tmp___120 = jit->ip;
#line 3679
            (jit->ip) ++;
#line 3679
            *tmp___120 = (unsigned char )(0x40 | (int )_amd64_rex_bits___7);
          }
#line 3679
          break;
        }
#line 3679
        tmp___121 = jit->ip;
#line 3679
        (jit->ip) ++;
#line 3679
        *tmp___121 = (unsigned char)15;
#line 3679
        tmp___122 = jit->ip;
#line 3679
        (jit->ip) ++;
#line 3679
        *tmp___122 = (unsigned char)90;
#line 3679
        while (1) {
#line 3679
          while (1) {
#line 3679
            tmp___123 = jit->ip;
#line 3679
            (jit->ip) ++;
#line 3679
            *tmp___123 = (unsigned char )((3 << 6) | (sreg & 0x07));
#line 3679
            break;
          }
#line 3679
          break;
        }
#line 3679
        break;
      }
    }
#line 3681
    while (1) {
#line 3681
      while (1) {
#line 3681
        _amd64_rex_bits___8 = (unsigned char)8;
#line 3681
        if ((int )_amd64_rex_bits___8 != 0) {
#line 3681
          tmp___125 = jit->ip;
#line 3681
          (jit->ip) ++;
#line 3681
          *tmp___125 = (unsigned char )(0x40 | (int )_amd64_rex_bits___8);
        }
#line 3681
        break;
      }
#line 3681
      tmp___126 = jit->ip;
#line 3681
      (jit->ip) ++;
#line 3681
      *tmp___126 = (unsigned char)131;
#line 3681
      while (1) {
#line 3681
        while (1) {
#line 3681
          tmp___127 = jit->ip;
#line 3681
          (jit->ip) ++;
#line 3681
          *tmp___127 = (unsigned char )(((3 << 6) | (5 << 3)) | 4);
#line 3681
          break;
        }
#line 3681
        break;
      }
#line 3681
      while (1) {
#line 3681
        *(jit->ip) = (unsigned char)8;
#line 3681
        (jit->ip) ++;
#line 3681
        break;
      }
#line 3681
      break;
    }
#line 3682
    while (1) {
#line 3682
      tmp___141 = jit->ip;
#line 3682
      (jit->ip) ++;
#line 3682
      *tmp___141 = (unsigned char)102;
#line 3682
      while (1) {
#line 3682
        _amd64_rex_bits___11 = (unsigned char)0;
#line 3682
        if ((int )_amd64_rex_bits___11 != 0) {
#line 3682
          tmp___142 = jit->ip;
#line 3682
          (jit->ip) ++;
#line 3682
          *tmp___142 = (unsigned char )(0x40 | (int )_amd64_rex_bits___11);
        }
#line 3682
        break;
      }
#line 3682
      tmp___143 = jit->ip;
#line 3682
      (jit->ip) ++;
#line 3682
      *tmp___143 = (unsigned char)15;
#line 3682
      tmp___144 = jit->ip;
#line 3682
      (jit->ip) ++;
#line 3682
      *tmp___144 = (unsigned char)19;
#line 3682
      while (1) {
#line 3682
        while (1) {
#line 3682
          while (1) {
#line 3682
            tmp___150 = jit->ip;
#line 3682
            (jit->ip) ++;
#line 3682
            *tmp___150 = (unsigned char)4;
#line 3682
            break;
          }
#line 3682
          while (1) {
#line 3682
            tmp___151 = jit->ip;
#line 3682
            (jit->ip) ++;
#line 3682
            *tmp___151 = (unsigned char )((4 << 3) | 4);
#line 3682
            break;
          }
#line 3682
          break;
#line 3682
          while (1) {
#line 3682
            tmp___160 = jit->ip;
#line 3682
            (jit->ip) ++;
#line 3682
            *tmp___160 = (unsigned char)4;
#line 3682
            break;
          }
#line 3682
          break;
#line 3682
          while (1) {
#line 3682
            tmp___161 = jit->ip;
#line 3682
            (jit->ip) ++;
#line 3682
            *tmp___161 = (unsigned char )((1 << 6) | 4);
#line 3682
            break;
          }
#line 3682
          while (1) {
#line 3682
            *(jit->ip) = (unsigned char)0;
#line 3682
            (jit->ip) ++;
#line 3682
            break;
          }
#line 3682
          break;
        }
#line 3682
        break;
      }
#line 3682
      break;
    }
  } else {
#line 3684
    b___0 = (float )arg->value.fp;
#line 3685
    tmp___167 = (jit_unsigned_value )0;
#line 3686
    tmp___168 = __builtin_object_size((void *)(& tmp___167), 0);
#line 3686
    __builtin___memcpy_chk((void *)(& tmp___167), (void const   *)(& b___0), sizeof(float ),
                           tmp___168);
#line 3687
    while (1) {
#line 3687
      while (1) {
#line 3687
        _amd64_rex_bits___12 = (unsigned char)8;
#line 3687
        if ((int )_amd64_rex_bits___12 != 0) {
#line 3687
          tmp___169 = jit->ip;
#line 3687
          (jit->ip) ++;
#line 3687
          *tmp___169 = (unsigned char )(0x40 | (int )_amd64_rex_bits___12);
        }
#line 3687
        break;
      }
#line 3687
      tmp___170 = jit->ip;
#line 3687
      (jit->ip) ++;
#line 3687
      *tmp___170 = (unsigned char)184;
#line 3687
      while (1) {
#line 3687
        imb___16.val = tmp___167;
#line 3687
        tmp___171 = jit->ip;
#line 3687
        (jit->ip) ++;
#line 3687
        *tmp___171 = imb___16.b[0];
#line 3687
        tmp___172 = jit->ip;
#line 3687
        (jit->ip) ++;
#line 3687
        *tmp___172 = imb___16.b[1];
#line 3687
        tmp___173 = jit->ip;
#line 3687
        (jit->ip) ++;
#line 3687
        *tmp___173 = imb___16.b[2];
#line 3687
        tmp___174 = jit->ip;
#line 3687
        (jit->ip) ++;
#line 3687
        *tmp___174 = imb___16.b[3];
#line 3687
        tmp___175 = jit->ip;
#line 3687
        (jit->ip) ++;
#line 3687
        *tmp___175 = imb___16.b[4];
#line 3687
        tmp___176 = jit->ip;
#line 3687
        (jit->ip) ++;
#line 3687
        *tmp___176 = imb___16.b[5];
#line 3687
        tmp___177 = jit->ip;
#line 3687
        (jit->ip) ++;
#line 3687
        *tmp___177 = imb___16.b[6];
#line 3687
        tmp___178 = jit->ip;
#line 3687
        (jit->ip) ++;
#line 3687
        *tmp___178 = imb___16.b[7];
#line 3687
        break;
      }
#line 3687
      break;
    }
#line 3688
    while (1) {
#line 3688
      while (1) {
#line 3688
        _amd64_rex_bits___13 = (unsigned char)0;
#line 3688
        if ((int )_amd64_rex_bits___13 != 0) {
#line 3688
          tmp___183 = jit->ip;
#line 3688
          (jit->ip) ++;
#line 3688
          *tmp___183 = (unsigned char )(0x40 | (int )_amd64_rex_bits___13);
        }
#line 3688
        break;
      }
#line 3688
      tmp___184 = jit->ip;
#line 3688
      (jit->ip) ++;
#line 3688
      *tmp___184 = (unsigned char)80;
#line 3688
      break;
    }
  }
#line 3691
  return;
}
}
/* END FUNCTION-DEF emit_fppush_arg LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_optimize_st_ops LOC=UNKNOWN */
void jit_optimize_st_ops(struct jit *jit ) 
{ 
  jit_op *op ;
  jit_op *tmp ;
  int tmp___0 ;
  int tmp___1 ;

  {
#line 3397
  tmp = jit_op_first(jit->ops);
#line 3397
  op = tmp;
#line 3397
  while ((unsigned long )op != (unsigned long )((void *)0)) {
#line 3398
    if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 912U) {
#line 3398
      if (op->prev) {
#line 3398
        if ((int )(op->prev)->code == 122) {
#line 3398
          if (op->arg[1] == (op->prev)->arg[0]) {
#line 3398
            if ((op->prev)->arg[1] >= (-0x7FFFFFFF-1)) {
#line 3398
              if ((op->prev)->arg[1] <= 2147483647L) {
#line 3398
                tmp___0 = jit_set_get(op->live_out, (int )op->arg[1]);
#line 3398
                if (! tmp___0) {
#line 3405
                  if (! ((int )op->code & 0x02)) {
#line 3406
                    op->code = (unsigned short)841;
#line 3407
                    op->spec = (unsigned char )((0x02 << 2) | 0x01);
                  } else {
#line 3409
                    op->code = (unsigned short)842;
#line 3410
                    op->spec = (unsigned char )((0x02 << 2) | 0x02);
                  }
#line 3412
                  op->arg[1] = (op->prev)->arg[1];
#line 3413
                  (op->prev)->code = (unsigned short)864;
#line 3414
                  (op->prev)->spec = (unsigned char)0;
                }
              }
            }
          }
        }
      }
    }
#line 3416
    if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 344U) {
#line 3416
      if (op->prev) {
#line 3416
        if ((int )(op->prev)->code == 122) {
#line 3416
          if (op->arg[2] == (op->prev)->arg[0]) {
#line 3416
            if ((op->prev)->arg[1] >= (-0x7FFFFFFF-1)) {
#line 3416
              if ((op->prev)->arg[1] <= 2147483647L) {
#line 3416
                tmp___1 = jit_set_get(op->live_out, (int )op->arg[2]);
#line 3416
                if (! tmp___1) {
#line 3423
                  if (! ((int )op->code & 0x02)) {
#line 3424
                    op->code = (unsigned short)825;
#line 3425
                    op->spec = (unsigned char )(((0x02 << 4) | (0x01 << 2)) | 0x01);
                  } else {
#line 3427
                    op->code = (unsigned short)826;
#line 3428
                    op->spec = (unsigned char )(((0x02 << 4) | (0x01 << 2)) | 0x02);
                  }
#line 3430
                  op->arg[2] = (op->prev)->arg[1];
#line 3431
                  (op->prev)->code = (unsigned short)864;
#line 3432
                  (op->prev)->spec = (unsigned char)0;
                }
              }
            }
          }
        }
      }
    }
#line 3397
    op = op->next;
  }
#line 3435
  return;
}
}
/* END FUNCTION-DEF jit_optimize_st_ops LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF print_op_bytes LOC=UNKNOWN */
__inline static void print_op_bytes(FILE *f , struct jit *jit , jit_op *op ) 
{ 
  int i ;

  {
#line 5535
  i = 0;
#line 5535
  while ((size_t )i < op->code_length) {
#line 5536
    fprintf((FILE */* __restrict  */)f, (char const   */* __restrict  */)" %02x",
            (int )*(jit->buf + (op->code_offset + (size_t )i)));
#line 5535
    i ++;
  }
#line 5537
  fprintf((FILE */* __restrict  */)f, (char const   */* __restrict  */)"\n.nl\n");
#line 5538
  return;
}
}
/* END FUNCTION-DEF print_op_bytes LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF free_ops LOC=UNKNOWN */
static void free_ops(struct jit_op *op ) 
{ 


  {
#line 6678
  if ((unsigned long )op == (unsigned long )((void *)0)) {
#line 6678
    return;
  }
#line 6679
  free_ops(op->next);
#line 6680
  if (op->addendum) {
#line 6680
    free(op->addendum);
  }
#line 6681
  jit_free_op(op);
#line 6682
  return;
}
}
/* END FUNCTION-DEF free_ops LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF print_reg_liveness_callback LOC=UNKNOWN */
static void print_reg_liveness_callback(jit_tree_key key , jit_tree_value value ,
                                        void *disasm ) 
{ 
  char buf[256] ;

  {
#line 5178
  jit_get_reg_name((struct jit_disasm *)disasm, buf, (int )key);
#line 5179
  printf((char const   */* __restrict  */)"%s ", buf);
#line 5180
  return;
}
}
/* END FUNCTION-DEF print_reg_liveness_callback LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_correct_float_imms LOC=UNKNOWN */
__inline static void jit_correct_float_imms(struct jit *jit ) 
{ 
  jit_op *op ;
  jit_op *tmp ;
  int imm_arg ;
  int i ;
  jit_op *newop ;
  struct jit_op *tmp___0 ;

  {
#line 6436
  tmp = jit_op_first(jit->ops);
#line 6436
  op = tmp;
#line 6436
  while ((unsigned long )op != (unsigned long )((void *)0)) {
#line 6437
    if (! ((int )op->code & 0x02)) {
#line 6437
      goto __Cont;
    }
#line 6438
    if (! op->fp) {
#line 6438
      goto __Cont;
    }
#line 6439
    if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 544U) {
#line 6439
      goto __Cont;
    }
#line 6440
    if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 200U) {
#line 6440
      goto __Cont;
    }
#line 6441
    if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 392U) {
#line 6441
      goto __Cont;
    }
#line 6442
    if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 408U) {
#line 6442
      goto __Cont;
    }
#line 6443
    if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 752U) {
#line 6443
      goto __Cont;
    }
#line 6444
    if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 712U) {
#line 6444
      goto __Cont;
    }
#line 6445
    if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 688U) {
#line 6446
      goto __Cont;
    }
#line 6449
    i = 1;
#line 6449
    while (i < 4) {
#line 6450
      if ((((int )op->spec >> (i - 1) * 2) & 0x03) == 0x02) {
#line 6450
        imm_arg = i - 1;
      }
#line 6449
      i ++;
    }
#line 6451
    tmp___0 = jit_op_new((unsigned short)546, (unsigned char )((0x02 << 2) | 0x03),
                         (jit_value )(1 | (1 << 1)), (jit_value )0, (jit_value )0,
                         (unsigned char)0);
#line 6451
    newop = tmp___0;
#line 6452
    newop->fp = (unsigned char)1;
#line 6453
    newop->flt_imm = op->flt_imm;
#line 6454
    jit_op_prepend(op, newop);
#line 6455
    op->code = (unsigned short )((int )op->code & -4);
#line 6456
    op->code = (unsigned short )((int )op->code | 0x01);
#line 6457
    op->spec = (unsigned char )((int )op->spec & ~ (0x3 << 2 * imm_arg));
#line 6458
    op->spec = (unsigned char )((int )op->spec | (0x01 << 2 * imm_arg));
#line 6459
    op->arg[imm_arg] = (jit_value )(1 | (1 << 1));
    __Cont: /* CIL Label */ 
#line 6436
    op = op->next;
  }
#line 6461
  return;
}
}
/* END FUNCTION-DEF jit_correct_float_imms LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF rmap_free LOC=UNKNOWN */
static void rmap_free(jit_rmap *regmap ) 
{ 


  {
#line 3391
  if (! regmap) {
#line 3391
    return;
  }
#line 3392
  jit_tree_free(regmap->map);
#line 3393
  free((void *)regmap);
#line 3394
  return;
}
}
/* END FUNCTION-DEF rmap_free LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_assign_regs LOC=UNKNOWN */
void jit_assign_regs(struct jit *jit ) 
{ 
  jit_op *op ;
  jit_op *tmp ;
  jit_op *op___0 ;
  jit_op *tmp___0 ;
  jit_op *op___1 ;
  jit_op *tmp___1 ;
  jit_op *op___2 ;
  jit_op *tmp___2 ;

  {
#line 6281
  tmp = jit_op_first(jit->ops);
#line 6281
  op = tmp;
#line 6281
  while ((unsigned long )op != (unsigned long )((void *)0)) {
#line 6282
    op->regmap = rmap_init();
#line 6281
    op = op->next;
  }
#line 6283
  tmp___0 = jit_op_first(jit->ops);
#line 6283
  op___0 = tmp___0;
#line 6283
  while ((unsigned long )op___0 != (unsigned long )((void *)0)) {
#line 6284
    assign_regs(jit, op___0);
#line 6283
    op___0 = op___0->next;
  }
#line 6285
  tmp___1 = jit_op_first(jit->ops);
#line 6285
  op___1 = tmp___1;
#line 6285
  while ((unsigned long )op___1 != (unsigned long )((void *)0)) {
#line 6286
    branch_adjustment(jit, op___1);
#line 6285
    op___1 = op___1->next;
  }
#line 6287
  tmp___2 = jit_op_first(jit->ops);
#line 6287
  op___2 = tmp___2;
#line 6287
  while ((unsigned long )op___2 != (unsigned long )((void *)0)) {
#line 6288
    jump_adjustment(jit, op___2);
#line 6287
    op___2 = op___2->next;
  }
#line 6289
  return;
}
}
/* END FUNCTION-DEF jit_assign_regs LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF flw_analyze_op LOC=UNKNOWN */
__inline static int flw_analyze_op(struct jit *jit , jit_op *op , struct jit_func_info *func_info ,
                                   int changed , struct code_refs_cache *code_refs ) 
{ 
  int live_out_size ;
  int tmp ;
  int live_in_size ;
  int tmp___0 ;
  int i ;
  int i___0 ;
  int i___1 ;
  int tmp___1 ;
  int tmp___2 ;

  {
#line 4806
  tmp = jit_set_size(op->live_out);
#line 4806
  live_out_size = tmp;
#line 4807
  tmp___0 = jit_set_size(op->live_in);
#line 4807
  live_in_size = tmp___0;
#line 4808
  if (op->jmp_addr) {
#line 4808
    if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) != 280U) {
#line 4808
      if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) != 856U) {
#line 4809
        jit_set_addall(op->live_out, (op->jmp_addr)->live_in);
      }
    }
  }
#line 4810
  if ((int )op->code == 625) {
#line 4811
    if (code_refs->size < 0) {
#line 4811
      initialize_code_refs(code_refs, func_info);
    }
#line 4812
    i = 0;
#line 4812
    while (i < code_refs->size) {
#line 4813
      jit_set_addall(op->live_out, ((*(code_refs->ops + i))->jmp_addr)->live_in);
#line 4812
      i ++;
    }
#line 4815
    goto skip;
  }
#line 4817
  if ((int )op->code == 626) {
#line 4817
    goto skip;
  }
#line 4818
  if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 208U) {
#line 4819
    op->live_out = jit_set_new();
#line 4820
    goto skip;
  } else
#line 4818
  if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 40U) {
#line 4819
    op->live_out = jit_set_new();
#line 4820
    goto skip;
  }
#line 4822
  if (op->next) {
#line 4822
    jit_set_addall(op->live_out, (op->next)->live_in);
  }
  skip: 
#line 4824
  jit_set_addall(op->live_in, op->live_out);
#line 4825
  i___0 = 0;
#line 4825
  while (i___0 < 3) {
#line 4826
    if ((((int )op->spec >> ((i___0 + 1) - 1) * 2) & 0x03) == 0x03) {
#line 4826
      jit_set_remove(op->live_in, (int )op->arg[i___0]);
    }
#line 4825
    i___0 ++;
  }
#line 4827
  i___1 = 0;
#line 4827
  while (i___1 < 3) {
#line 4828
    if ((((int )op->spec >> ((i___1 + 1) - 1) * 2) & 0x03) == 0x01) {
#line 4828
      jit_set_add(op->live_in, (int )op->arg[i___1]);
    }
#line 4827
    i___1 ++;
  }
#line 4829
  if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 688U) {
#line 4829
    flw_analyze_prolog(jit, op, func_info);
  }
#line 4830
  if (changed) {
#line 4830
    return (changed);
  }
#line 4831
  tmp___1 = jit_set_size(op->live_out);
#line 4831
  if (live_out_size != tmp___1) {
#line 4831
    return (1);
  }
#line 4832
  tmp___2 = jit_set_size(op->live_in);
#line 4832
  if (live_in_size != tmp___2) {
#line 4832
    return (1);
  }
#line 4833
  return (0);
}
}
/* END FUNCTION-DEF flw_analyze_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF ob_printf LOC=UNKNOWN */
static void ob_printf(struct output_buf *ob , char const   *fmt  , ...) 
{ 
  char str[8192] ;
  va_list___0 ap ;
  int len ;
  unsigned long long tmp ;
  int tmp___0 ;
  size_t tmp___1 ;
  unsigned long long tmp___2 ;

  {
#line 4965
  __builtin_va_start(ap, fmt);
#line 4966
  tmp = __builtin_object_size((void *)(str), 1);
#line 4966
  tmp___0 = __builtin___vsnprintf_chk(str, 8192ULL, 0, tmp, fmt, ap);
#line 4966
  len = tmp___0;
#line 4967
  __builtin_va_end(ap);
#line 4968
  tmp___1 = strlen((char const   *)(str));
#line 4968
  len = (int )tmp___1;
#line 4969
  ob_assert_space(ob, len);
#line 4970
  tmp___2 = __builtin_object_size((void *)ob->buf, 1);
#line 4970
  __builtin___strcat_chk(ob->buf, (char const   *)(str), tmp___2);
#line 4971
  ob->size += (size_t )len;
#line 4972
  return;
}
}
/* END FUNCTION-DEF ob_printf LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_tree_insert LOC=UNKNOWN */
static jit_tree *jit_tree_insert(jit_tree *root , jit_tree_key key , jit_tree_value value ,
                                 int *found ) 
{ 


  {
#line 2127
  if (found) {
#line 2127
    *found = 0;
  }
#line 2128
  root = node_insert(root, key, value, found);
#line 2129
  root->color = 0;
#line 2130
  return (root);
}
}
/* END FUNCTION-DEF jit_tree_insert LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_patch_local_addrs LOC=UNKNOWN */
void jit_patch_local_addrs(struct jit *jit ) 
{ 
  jit_op *op ;
  jit_op *tmp ;
  unsigned char *buf ;
  jit_value addr ;
  int tmp___0 ;
  size_t tmp___1 ;
  int tmp___2 ;
  unsigned char _amd64_rex_bits ;
  int tmp___3 ;
  int tmp___4 ;
  unsigned char *tmp___5 ;
  unsigned char *tmp___6 ;
  amd64_imm_buf imb ;
  unsigned char *tmp___7 ;
  unsigned char *tmp___8 ;
  unsigned char *tmp___9 ;
  unsigned char *tmp___10 ;
  unsigned char *tmp___11 ;
  unsigned char *tmp___12 ;
  unsigned char *tmp___13 ;
  unsigned char *tmp___14 ;
  x86_imm_buf imb___0 ;
  unsigned char *tmp___15 ;
  unsigned char *tmp___16 ;
  unsigned char *tmp___17 ;
  unsigned char *tmp___18 ;
  unsigned char *buf___0 ;
  jit_value addr___0 ;
  int tmp___19 ;
  size_t tmp___20 ;
  int tmp___21 ;

  {
#line 4546
  tmp = jit_op_first(jit->ops);
#line 4546
  op = tmp;
#line 4546
  while ((unsigned long )op != (unsigned long )((void *)0)) {
#line 4547
    if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 280U) {
#line 4547
      goto _L;
    } else
#line 4547
    if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 832U) {
      _L: /* CIL Label */ 
#line 4548
      buf = jit->buf + op->patch_addr;
#line 4549
      tmp___2 = jit_is_label(jit, (void *)op->arg[1]);
#line 4549
      if (tmp___2) {
#line 4549
        tmp___1 = ((jit_label *)op->arg[1])->pos;
      } else {
#line 4549
        tmp___1 = (size_t )op->arg[1];
      }
#line 4549
      addr = (jit_value )tmp___1;
#line 4550
      while (1) {
#line 4550
        while (1) {
#line 4550
          if (sizeof(void *) > 4ULL) {
#line 4550
            tmp___3 = 8;
          } else {
#line 4550
            tmp___3 = 0;
          }
#line 4550
          if (op->r_arg[0] > 7L) {
#line 4550
            tmp___4 = 1;
          } else {
#line 4550
            tmp___4 = 0;
          }
#line 4550
          _amd64_rex_bits = (unsigned char )(tmp___3 | tmp___4);
#line 4550
          if ((int )_amd64_rex_bits != 0) {
#line 4550
            tmp___5 = buf;
#line 4550
            buf ++;
#line 4550
            *tmp___5 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
          } else
#line 4550
          if (sizeof(void *) == 1ULL) {
#line 4550
            tmp___5 = buf;
#line 4550
            buf ++;
#line 4550
            *tmp___5 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
          }
#line 4550
          break;
        }
#line 4550
        tmp___6 = buf;
#line 4550
        buf ++;
#line 4550
        *tmp___6 = (unsigned char )(184L + (op->r_arg[0] & 7L));
#line 4550
        if (sizeof(void *) == 8ULL) {
#line 4550
          while (1) {
#line 4550
            imb.val = (size_t )(jit->buf + addr);
#line 4550
            tmp___7 = buf;
#line 4550
            buf ++;
#line 4550
            *tmp___7 = imb.b[0];
#line 4550
            tmp___8 = buf;
#line 4550
            buf ++;
#line 4550
            *tmp___8 = imb.b[1];
#line 4550
            tmp___9 = buf;
#line 4550
            buf ++;
#line 4550
            *tmp___9 = imb.b[2];
#line 4550
            tmp___10 = buf;
#line 4550
            buf ++;
#line 4550
            *tmp___10 = imb.b[3];
#line 4550
            tmp___11 = buf;
#line 4550
            buf ++;
#line 4550
            *tmp___11 = imb.b[4];
#line 4550
            tmp___12 = buf;
#line 4550
            buf ++;
#line 4550
            *tmp___12 = imb.b[5];
#line 4550
            tmp___13 = buf;
#line 4550
            buf ++;
#line 4550
            *tmp___13 = imb.b[6];
#line 4550
            tmp___14 = buf;
#line 4550
            buf ++;
#line 4550
            *tmp___14 = imb.b[7];
#line 4550
            break;
          }
        } else {
#line 4550
          while (1) {
#line 4550
            imb___0.val = (int )((size_t )(jit->buf + addr));
#line 4550
            tmp___15 = buf;
#line 4550
            buf ++;
#line 4550
            *tmp___15 = imb___0.b[0];
#line 4550
            tmp___16 = buf;
#line 4550
            buf ++;
#line 4550
            *tmp___16 = imb___0.b[1];
#line 4550
            tmp___17 = buf;
#line 4550
            buf ++;
#line 4550
            *tmp___17 = imb___0.b[2];
#line 4550
            tmp___18 = buf;
#line 4550
            buf ++;
#line 4550
            *tmp___18 = imb___0.b[3];
#line 4550
            break;
          }
        }
#line 4550
        break;
      }
    }
#line 4552
    if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 856U) {
#line 4552
      goto _L___0;
    } else
#line 4552
    if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 704U) {
      _L___0: /* CIL Label */ 
#line 4553
      buf___0 = jit->buf + op->patch_addr;
#line 4554
      tmp___21 = jit_is_label(jit, (void *)op->arg[0]);
#line 4554
      if (tmp___21) {
#line 4554
        tmp___20 = ((jit_label *)op->arg[0])->pos;
      } else {
#line 4554
        tmp___20 = (size_t )op->arg[0];
      }
#line 4554
      addr___0 = (jit_value )tmp___20;
#line 4555
      *((jit_value *)buf___0) = (jit_value )(jit->buf + addr___0);
    }
#line 4546
    op = op->next;
  }
#line 4558
  return;
}
}
/* END FUNCTION-DEF jit_patch_local_addrs LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF spill_all_registers LOC=UNKNOWN */
static int spill_all_registers(jit_op *op , struct jit_reg_allocator *al ) 
{ 
  jit_value reg ;
  int i ;
  jit_hw_reg *hreg ;
  jit_hw_reg *tmp ;
  int tmp___0 ;
  int i___0 ;
  jit_hw_reg *hreg___0 ;
  jit_hw_reg *tmp___1 ;
  int tmp___2 ;

  {
#line 6046
  i = 0;
#line 6046
  while (i < al->gp_reg_cnt) {
#line 6047
    tmp = rmap_is_associated(op->regmap, (al->gp_regs + i)->id, 0, & reg);
#line 6047
    hreg = tmp;
#line 6048
    if (hreg) {
#line 6048
      tmp___0 = jit_set_get(op->live_out, (int )reg);
#line 6048
      if (tmp___0) {
#line 6049
        if (op->in_use) {
#line 6049
          unload_reg(op, hreg, reg);
        }
#line 6050
        rmap_unassoc(op->regmap, reg);
      }
    }
#line 6046
    i ++;
  }
#line 6053
  i___0 = 0;
#line 6053
  while (i___0 < al->fp_reg_cnt) {
#line 6054
    tmp___1 = rmap_is_associated(op->regmap, (al->fp_regs + i___0)->id, 1, & reg);
#line 6054
    hreg___0 = tmp___1;
#line 6055
    if (hreg___0) {
#line 6055
      tmp___2 = jit_set_get(op->live_out, (int )reg);
#line 6055
      if (tmp___2) {
#line 6056
        if (op->in_use) {
#line 6056
          unload_reg(op, hreg___0, reg);
        }
#line 6057
        rmap_unassoc(op->regmap, reg);
      }
    }
#line 6053
    i___0 ++;
  }
#line 6060
  return (1);
}
}
/* END FUNCTION-DEF spill_all_registers LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF join_muli_addr LOC=UNKNOWN */
static int join_muli_addr(jit_op *op , jit_op *nextop ) 
{ 
  int tmp ;
  jit_value add_reg ;
  jit_value tmp___0 ;
  int tmp___1 ;

  {
#line 3542
  tmp = is_suitable_mul(op);
#line 3542
  if (tmp) {
#line 3542
    if (nextop->arg[1] == nextop->arg[2]) {
#line 3542
      return (0);
    }
  } else {
#line 3542
    return (0);
  }
#line 3543
  if (nextop->arg[1] == op->arg[0]) {
#line 3543
    tmp___0 = nextop->arg[2];
  } else {
#line 3543
    tmp___0 = nextop->arg[1];
  }
#line 3543
  add_reg = tmp___0;
#line 3544
  nextop->code = (unsigned short)65;
#line 3545
  nextop->spec = (unsigned char )(((0x01 << 4) | (0x01 << 2)) | 0x03);
#line 3546
  nextop->arg[1] = add_reg;
#line 3547
  nextop->arg[2] = op->arg[1];
#line 3548
  if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 528U) {
#line 3548
    tmp___1 = shift_index((int )op->arg[2]);
#line 3548
    nextop->arg_size = (unsigned char )tmp___1;
  } else {
#line 3548
    nextop->arg_size = (unsigned char )op->arg[2];
  }
#line 3549
  make_nop(op);
#line 3550
  return (1);
}
}
/* END FUNCTION-DEF join_muli_addr LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF rmap_clone LOC=UNKNOWN */
static jit_rmap *rmap_clone(jit_rmap *rmap ) 
{ 
  jit_rmap *res ;
  void *tmp ;

  {
#line 3279
  tmp = malloc((size_t )sizeof(jit_rmap ));
#line 3279
  res = (jit_rmap *)tmp;
#line 3280
  res->map = jit_tree_clone(rmap->map);
#line 3281
  return (res);
}
}
/* END FUNCTION-DEF rmap_clone LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF emit_sse_get_sign_mask LOC=UNKNOWN */
static unsigned char *emit_sse_get_sign_mask(void) 
{ 
  static unsigned char bufx[32] ;
  unsigned char *buf ;
  unsigned long long *bit_mask ;

  {
#line 2988
  buf = bufx + 1;
#line 2989
  while ((long )buf % 16L) {
#line 2989
    buf ++;
  }
#line 2990
  bit_mask = (unsigned long long *)buf;
#line 2991
  *bit_mask = 1ULL << 63;
#line 2992
  return (buf);
}
}
/* END FUNCTION-DEF emit_sse_get_sign_mask LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_exec_addr LOC=UNKNOWN */
static void *jit_exec_addr(struct jit_exec_mem *mem ) 
{ 


  {
#line 2044
  return (mem->data);
}
}
/* END FUNCTION-DEF jit_exec_addr LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF move_red_left LOC=UNKNOWN */
__inline static jit_tree *move_red_left(jit_tree *h ) 
{ 
  int tmp ;

  {
#line 2140
  color_flip(h);
#line 2141
  tmp = is_red((h->right)->left);
#line 2141
  if (tmp) {
#line 2142
    h->right = rotate_right(h->right);
#line 2143
    h = rotate_left(h);
#line 2144
    color_flip(h);
  }
#line 2146
  return (h);
}
}
/* END FUNCTION-DEF move_red_left LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF assign_regs_for_args LOC=UNKNOWN */
static void assign_regs_for_args(struct jit_reg_allocator *al , jit_op *op ) 
{ 
  struct jit_func_info *info ;
  int assoc_gp_regs ;
  int assoc_fp_regs ;
  int i ;
  int isfp_arg ;

  {
#line 5933
  info = (struct jit_func_info *)op->arg[1];
#line 5934
  assoc_gp_regs = 0;
#line 5935
  assoc_fp_regs = 0;
#line 5936
  i = 0;
#line 5936
  while (i < info->general_arg_cnt + info->float_arg_cnt) {
#line 5937
    isfp_arg = (unsigned int )(info->args + i)->type == 2U;
#line 5938
    if (! isfp_arg) {
#line 5938
      if (assoc_gp_regs < al->gp_arg_reg_cnt) {
#line 5939
        rmap_assoc(op->regmap, (jit_value )((3 << 1) | ((i & 0xfffffff) << 4)), *(al->gp_arg_regs + assoc_gp_regs));
#line 5940
        assoc_gp_regs ++;
      }
    }
#line 5942
    if (isfp_arg) {
#line 5942
      if (assoc_fp_regs < al->fp_arg_reg_cnt) {
#line 5943
        rmap_assoc(op->regmap, (jit_value )((1 | (3 << 1)) | ((i & 0xfffffff) << 4)),
                   *(al->fp_arg_regs + assoc_fp_regs));
#line 5944
        assoc_fp_regs ++;
      }
    }
#line 5936
    i ++;
  }
#line 5947
  return;
}
}
/* END FUNCTION-DEF assign_regs_for_args LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF sse_alu_sd_reg_safeimm LOC=UNKNOWN */
static void sse_alu_sd_reg_safeimm(struct jit *jit , jit_op *op , int op_id , int reg ,
                                   double *imm ) 
{ 
  jit_hw_reg *r ;
  jit_hw_reg *tmp ;
  int _amd64_width_temp ;
  unsigned char _amd64_rex_bits ;
  int tmp___0 ;
  int tmp___1 ;
  int tmp___2 ;
  int tmp___3 ;
  unsigned char *tmp___4 ;
  int tmp___5 ;
  unsigned char *tmp___6 ;
  amd64_imm_buf imb ;
  unsigned char *tmp___7 ;
  unsigned char *tmp___8 ;
  unsigned char *tmp___9 ;
  unsigned char *tmp___10 ;
  unsigned char *tmp___11 ;
  unsigned char *tmp___12 ;
  unsigned char *tmp___13 ;
  unsigned char *tmp___14 ;
  x86_imm_buf imb___0 ;
  unsigned char *tmp___15 ;
  unsigned char *tmp___16 ;
  unsigned char *tmp___17 ;
  unsigned char *tmp___18 ;
  int tmp___19 ;
  unsigned char *tmp___20 ;
  unsigned char _amd64_rex_bits___0 ;
  int tmp___21 ;
  int tmp___22 ;
  int tmp___23 ;
  int tmp___24 ;
  unsigned char *tmp___25 ;
  unsigned char *tmp___26 ;
  unsigned char *tmp___27 ;
  unsigned char *tmp___28 ;
  x86_imm_buf imb___1 ;
  unsigned char *tmp___29 ;
  unsigned char *tmp___30 ;
  unsigned char *tmp___31 ;
  unsigned char *tmp___32 ;
  unsigned char *tmp___33 ;
  unsigned char *tmp___34 ;
  unsigned char *tmp___35 ;
  unsigned char *tmp___36 ;
  unsigned char *tmp___37 ;
  unsigned char *tmp___38 ;
  x86_imm_buf imb___2 ;
  unsigned char *tmp___39 ;
  unsigned char *tmp___40 ;
  unsigned char *tmp___41 ;
  unsigned char *tmp___42 ;
  unsigned char *tmp___43 ;
  unsigned char *tmp___44 ;
  unsigned char *tmp___45 ;
  x86_imm_buf imb___3 ;
  unsigned char *tmp___46 ;
  unsigned char *tmp___47 ;
  unsigned char *tmp___48 ;
  unsigned char *tmp___49 ;
  unsigned char _amd64_rex_bits___1 ;
  unsigned char *tmp___50 ;
  unsigned char *tmp___51 ;
  int _amd64_width_temp___0 ;
  unsigned char _amd64_rex_bits___2 ;
  int tmp___52 ;
  int tmp___53 ;
  int tmp___54 ;
  unsigned char *tmp___55 ;
  int tmp___56 ;
  unsigned char *tmp___57 ;
  amd64_imm_buf imb___4 ;
  unsigned char *tmp___58 ;
  unsigned char *tmp___59 ;
  unsigned char *tmp___60 ;
  unsigned char *tmp___61 ;
  unsigned char *tmp___62 ;
  unsigned char *tmp___63 ;
  unsigned char *tmp___64 ;
  unsigned char *tmp___65 ;
  x86_imm_buf imb___5 ;
  unsigned char *tmp___66 ;
  unsigned char *tmp___67 ;
  unsigned char *tmp___68 ;
  unsigned char *tmp___69 ;
  int tmp___70 ;
  unsigned char *tmp___71 ;
  unsigned char _amd64_rex_bits___3 ;
  int tmp___72 ;
  unsigned char *tmp___73 ;
  unsigned char *tmp___74 ;
  unsigned char *tmp___75 ;
  unsigned char *tmp___76 ;
  x86_imm_buf imb___6 ;
  unsigned char *tmp___77 ;
  unsigned char *tmp___78 ;
  unsigned char *tmp___79 ;
  unsigned char *tmp___80 ;
  unsigned char *tmp___81 ;
  unsigned char *tmp___82 ;
  unsigned char *tmp___83 ;
  unsigned char *tmp___84 ;
  unsigned char *tmp___85 ;
  unsigned char *tmp___86 ;
  x86_imm_buf imb___7 ;
  unsigned char *tmp___87 ;
  unsigned char *tmp___88 ;
  unsigned char *tmp___89 ;
  unsigned char *tmp___90 ;
  unsigned char *tmp___91 ;
  unsigned char *tmp___92 ;
  unsigned char *tmp___93 ;
  x86_imm_buf imb___8 ;
  unsigned char *tmp___94 ;
  unsigned char *tmp___95 ;
  unsigned char *tmp___96 ;
  unsigned char *tmp___97 ;
  unsigned char _amd64_rex_bits___4 ;
  unsigned char *tmp___98 ;
  unsigned char *tmp___99 ;
  unsigned char *tmp___100 ;
  unsigned char _amd64_rex_bits___5 ;
  int tmp___101 ;
  unsigned char *tmp___102 ;
  unsigned char *tmp___103 ;
  unsigned char *tmp___104 ;
  unsigned char *tmp___105 ;
  unsigned char *tmp___106 ;
  x86_imm_buf imb___9 ;
  unsigned char *tmp___107 ;
  unsigned char *tmp___108 ;
  unsigned char *tmp___109 ;
  unsigned char *tmp___110 ;

  {
#line 2970
  if ((jit_unsigned_value )imm > 0xffffffffUL) {
#line 2971
    tmp = jit_get_unused_reg(jit->reg_al, op, 0);
#line 2971
    r = tmp;
#line 2972
    if (r) {
#line 2973
      while (1) {
#line 2973
        _amd64_width_temp = (size_t )((jit_value )imm) == (size_t )((int )((size_t )((jit_value )imm)));
#line 2973
        while (1) {
#line 2973
          while (1) {
#line 2973
            if (_amd64_width_temp) {
#line 2973
              tmp___2 = 4;
            } else {
#line 2973
              tmp___2 = 8;
            }
#line 2973
            if (tmp___2 > 4) {
#line 2973
              tmp___1 = 8;
            } else {
#line 2973
              tmp___1 = 0;
            }
#line 2973
            if (r->id > 7) {
#line 2973
              tmp___3 = 1;
            } else {
#line 2973
              tmp___3 = 0;
            }
#line 2973
            _amd64_rex_bits = (unsigned char )(tmp___1 | tmp___3);
#line 2973
            if ((int )_amd64_rex_bits != 0) {
#line 2973
              tmp___4 = jit->ip;
#line 2973
              (jit->ip) ++;
#line 2973
              *tmp___4 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
            } else {
#line 2973
              if (_amd64_width_temp) {
#line 2973
                tmp___5 = 4;
              } else {
#line 2973
                tmp___5 = 8;
              }
#line 2973
              if (tmp___5 == 1) {
#line 2973
                tmp___4 = jit->ip;
#line 2973
                (jit->ip) ++;
#line 2973
                *tmp___4 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
              }
            }
#line 2973
            break;
          }
#line 2973
          tmp___6 = jit->ip;
#line 2973
          (jit->ip) ++;
#line 2973
          *tmp___6 = (unsigned char )(184 + (r->id & 0x7));
#line 2973
          if (_amd64_width_temp) {
#line 2973
            tmp___19 = 4;
          } else {
#line 2973
            tmp___19 = 8;
          }
#line 2973
          if (tmp___19 == 8) {
#line 2973
            while (1) {
#line 2973
              imb.val = (size_t )((jit_value )imm);
#line 2973
              tmp___7 = jit->ip;
#line 2973
              (jit->ip) ++;
#line 2973
              *tmp___7 = imb.b[0];
#line 2973
              tmp___8 = jit->ip;
#line 2973
              (jit->ip) ++;
#line 2973
              *tmp___8 = imb.b[1];
#line 2973
              tmp___9 = jit->ip;
#line 2973
              (jit->ip) ++;
#line 2973
              *tmp___9 = imb.b[2];
#line 2973
              tmp___10 = jit->ip;
#line 2973
              (jit->ip) ++;
#line 2973
              *tmp___10 = imb.b[3];
#line 2973
              tmp___11 = jit->ip;
#line 2973
              (jit->ip) ++;
#line 2973
              *tmp___11 = imb.b[4];
#line 2973
              tmp___12 = jit->ip;
#line 2973
              (jit->ip) ++;
#line 2973
              *tmp___12 = imb.b[5];
#line 2973
              tmp___13 = jit->ip;
#line 2973
              (jit->ip) ++;
#line 2973
              *tmp___13 = imb.b[6];
#line 2973
              tmp___14 = jit->ip;
#line 2973
              (jit->ip) ++;
#line 2973
              *tmp___14 = imb.b[7];
#line 2973
              break;
            }
          } else {
#line 2973
            while (1) {
#line 2973
              imb___0.val = (int )((size_t )((jit_value )imm));
#line 2973
              tmp___15 = jit->ip;
#line 2973
              (jit->ip) ++;
#line 2973
              *tmp___15 = imb___0.b[0];
#line 2973
              tmp___16 = jit->ip;
#line 2973
              (jit->ip) ++;
#line 2973
              *tmp___16 = imb___0.b[1];
#line 2973
              tmp___17 = jit->ip;
#line 2973
              (jit->ip) ++;
#line 2973
              *tmp___17 = imb___0.b[2];
#line 2973
              tmp___18 = jit->ip;
#line 2973
              (jit->ip) ++;
#line 2973
              *tmp___18 = imb___0.b[3];
#line 2973
              break;
            }
          }
#line 2973
          break;
        }
#line 2973
        break;
      }
#line 2974
      while (1) {
#line 2974
        tmp___20 = jit->ip;
#line 2974
        (jit->ip) ++;
#line 2974
        *tmp___20 = (unsigned char)242;
#line 2974
        while (1) {
#line 2974
          if (reg > 7) {
#line 2974
            tmp___21 = 4;
          } else {
#line 2974
            tmp___21 = 0;
          }
#line 2974
          if (r->id == 16) {
#line 2974
            tmp___24 = 0;
          } else {
#line 2974
            tmp___24 = r->id;
          }
#line 2974
          if (tmp___24 > 7) {
#line 2974
            tmp___23 = 1;
          } else {
#line 2974
            tmp___23 = 0;
          }
#line 2974
          _amd64_rex_bits___0 = (unsigned char )(tmp___21 | tmp___23);
#line 2974
          if ((int )_amd64_rex_bits___0 != 0) {
#line 2974
            tmp___25 = jit->ip;
#line 2974
            (jit->ip) ++;
#line 2974
            *tmp___25 = (unsigned char )(0x40 | (int )_amd64_rex_bits___0);
          }
#line 2974
          break;
        }
#line 2974
        tmp___26 = jit->ip;
#line 2974
        (jit->ip) ++;
#line 2974
        *tmp___26 = (unsigned char)15;
#line 2974
        tmp___27 = jit->ip;
#line 2974
        (jit->ip) ++;
#line 2974
        *tmp___27 = (unsigned char )op_id;
#line 2974
        while (1) {
#line 2974
          if (r->id == 16) {
#line 2974
            while (1) {
#line 2974
              tmp___28 = jit->ip;
#line 2974
              (jit->ip) ++;
#line 2974
              *tmp___28 = (unsigned char )((((reg & 0x7) & 0x07) << 3) | 5);
#line 2974
              break;
            }
#line 2974
            while (1) {
#line 2974
              imb___1.val = 0;
#line 2974
              tmp___29 = jit->ip;
#line 2974
              (jit->ip) ++;
#line 2974
              *tmp___29 = imb___1.b[0];
#line 2974
              tmp___30 = jit->ip;
#line 2974
              (jit->ip) ++;
#line 2974
              *tmp___30 = imb___1.b[1];
#line 2974
              tmp___31 = jit->ip;
#line 2974
              (jit->ip) ++;
#line 2974
              *tmp___31 = imb___1.b[2];
#line 2974
              tmp___32 = jit->ip;
#line 2974
              (jit->ip) ++;
#line 2974
              *tmp___32 = imb___1.b[3];
#line 2974
              break;
            }
          } else {
#line 2974
            while (1) {
#line 2974
              if ((r->id & 0x7) == 4) {
#line 2974
                while (1) {
#line 2974
                  tmp___33 = jit->ip;
#line 2974
                  (jit->ip) ++;
#line 2974
                  *tmp___33 = (unsigned char )((((reg & 0x7) & 0x07) << 3) | 4);
#line 2974
                  break;
                }
#line 2974
                while (1) {
#line 2974
                  tmp___34 = jit->ip;
#line 2974
                  (jit->ip) ++;
#line 2974
                  *tmp___34 = (unsigned char )((4 << 3) | 4);
#line 2974
                  break;
                }
#line 2974
                break;
              }
#line 2974
              if ((r->id & 0x7) != 5) {
#line 2974
                while (1) {
#line 2974
                  tmp___43 = jit->ip;
#line 2974
                  (jit->ip) ++;
#line 2974
                  *tmp___43 = (unsigned char )((((reg & 0x7) & 0x07) << 3) | ((r->id & 0x7) & 0x07));
#line 2974
                  break;
                }
#line 2974
                break;
              }
#line 2974
              while (1) {
#line 2974
                tmp___44 = jit->ip;
#line 2974
                (jit->ip) ++;
#line 2974
                *tmp___44 = (unsigned char )(((1 << 6) | (((reg & 0x7) & 0x07) << 3)) | ((r->id & 0x7) & 0x07));
#line 2974
                break;
              }
#line 2974
              while (1) {
#line 2974
                *(jit->ip) = (unsigned char)0;
#line 2974
                (jit->ip) ++;
#line 2974
                break;
              }
#line 2974
              break;
            }
          }
#line 2974
          break;
        }
#line 2974
        break;
      }
    } else {
#line 2976
      while (1) {
#line 2976
        while (1) {
#line 2976
          _amd64_rex_bits___1 = (unsigned char)0;
#line 2976
          if ((int )_amd64_rex_bits___1 != 0) {
#line 2976
            tmp___50 = jit->ip;
#line 2976
            (jit->ip) ++;
#line 2976
            *tmp___50 = (unsigned char )(0x40 | (int )_amd64_rex_bits___1);
          }
#line 2976
          break;
        }
#line 2976
        tmp___51 = jit->ip;
#line 2976
        (jit->ip) ++;
#line 2976
        *tmp___51 = (unsigned char)80;
#line 2976
        break;
      }
#line 2977
      while (1) {
#line 2977
        _amd64_width_temp___0 = (size_t )((jit_value )imm) == (size_t )((int )((size_t )((jit_value )imm)));
#line 2977
        while (1) {
#line 2977
          while (1) {
#line 2977
            if (_amd64_width_temp___0) {
#line 2977
              tmp___54 = 4;
            } else {
#line 2977
              tmp___54 = 8;
            }
#line 2977
            if (tmp___54 > 4) {
#line 2977
              tmp___53 = 8;
            } else {
#line 2977
              tmp___53 = 0;
            }
#line 2977
            _amd64_rex_bits___2 = (unsigned char )tmp___53;
#line 2977
            if ((int )_amd64_rex_bits___2 != 0) {
#line 2977
              tmp___55 = jit->ip;
#line 2977
              (jit->ip) ++;
#line 2977
              *tmp___55 = (unsigned char )(0x40 | (int )_amd64_rex_bits___2);
            } else {
#line 2977
              if (_amd64_width_temp___0) {
#line 2977
                tmp___56 = 4;
              } else {
#line 2977
                tmp___56 = 8;
              }
#line 2977
              if (tmp___56 == 1) {
#line 2977
                tmp___55 = jit->ip;
#line 2977
                (jit->ip) ++;
#line 2977
                *tmp___55 = (unsigned char )(0x40 | (int )_amd64_rex_bits___2);
              }
            }
#line 2977
            break;
          }
#line 2977
          tmp___57 = jit->ip;
#line 2977
          (jit->ip) ++;
#line 2977
          *tmp___57 = (unsigned char)184;
#line 2977
          if (_amd64_width_temp___0) {
#line 2977
            tmp___70 = 4;
          } else {
#line 2977
            tmp___70 = 8;
          }
#line 2977
          if (tmp___70 == 8) {
#line 2977
            while (1) {
#line 2977
              imb___4.val = (size_t )((jit_value )imm);
#line 2977
              tmp___58 = jit->ip;
#line 2977
              (jit->ip) ++;
#line 2977
              *tmp___58 = imb___4.b[0];
#line 2977
              tmp___59 = jit->ip;
#line 2977
              (jit->ip) ++;
#line 2977
              *tmp___59 = imb___4.b[1];
#line 2977
              tmp___60 = jit->ip;
#line 2977
              (jit->ip) ++;
#line 2977
              *tmp___60 = imb___4.b[2];
#line 2977
              tmp___61 = jit->ip;
#line 2977
              (jit->ip) ++;
#line 2977
              *tmp___61 = imb___4.b[3];
#line 2977
              tmp___62 = jit->ip;
#line 2977
              (jit->ip) ++;
#line 2977
              *tmp___62 = imb___4.b[4];
#line 2977
              tmp___63 = jit->ip;
#line 2977
              (jit->ip) ++;
#line 2977
              *tmp___63 = imb___4.b[5];
#line 2977
              tmp___64 = jit->ip;
#line 2977
              (jit->ip) ++;
#line 2977
              *tmp___64 = imb___4.b[6];
#line 2977
              tmp___65 = jit->ip;
#line 2977
              (jit->ip) ++;
#line 2977
              *tmp___65 = imb___4.b[7];
#line 2977
              break;
            }
          } else {
#line 2977
            while (1) {
#line 2977
              imb___5.val = (int )((size_t )((jit_value )imm));
#line 2977
              tmp___66 = jit->ip;
#line 2977
              (jit->ip) ++;
#line 2977
              *tmp___66 = imb___5.b[0];
#line 2977
              tmp___67 = jit->ip;
#line 2977
              (jit->ip) ++;
#line 2977
              *tmp___67 = imb___5.b[1];
#line 2977
              tmp___68 = jit->ip;
#line 2977
              (jit->ip) ++;
#line 2977
              *tmp___68 = imb___5.b[2];
#line 2977
              tmp___69 = jit->ip;
#line 2977
              (jit->ip) ++;
#line 2977
              *tmp___69 = imb___5.b[3];
#line 2977
              break;
            }
          }
#line 2977
          break;
        }
#line 2977
        break;
      }
#line 2978
      while (1) {
#line 2978
        tmp___71 = jit->ip;
#line 2978
        (jit->ip) ++;
#line 2978
        *tmp___71 = (unsigned char)242;
#line 2978
        while (1) {
#line 2978
          if (reg > 7) {
#line 2978
            tmp___72 = 4;
          } else {
#line 2978
            tmp___72 = 0;
          }
#line 2978
          _amd64_rex_bits___3 = (unsigned char )tmp___72;
#line 2978
          if ((int )_amd64_rex_bits___3 != 0) {
#line 2978
            tmp___73 = jit->ip;
#line 2978
            (jit->ip) ++;
#line 2978
            *tmp___73 = (unsigned char )(0x40 | (int )_amd64_rex_bits___3);
          }
#line 2978
          break;
        }
#line 2978
        tmp___74 = jit->ip;
#line 2978
        (jit->ip) ++;
#line 2978
        *tmp___74 = (unsigned char)15;
#line 2978
        tmp___75 = jit->ip;
#line 2978
        (jit->ip) ++;
#line 2978
        *tmp___75 = (unsigned char )op_id;
#line 2978
        while (1) {
#line 2978
          while (1) {
#line 2978
            while (1) {
#line 2978
              tmp___91 = jit->ip;
#line 2978
              (jit->ip) ++;
#line 2978
              *tmp___91 = (unsigned char )(((reg & 0x7) & 0x07) << 3);
#line 2978
              break;
            }
#line 2978
            break;
#line 2978
            while (1) {
#line 2978
              tmp___92 = jit->ip;
#line 2978
              (jit->ip) ++;
#line 2978
              *tmp___92 = (unsigned char )((1 << 6) | (((reg & 0x7) & 0x07) << 3));
#line 2978
              break;
            }
#line 2978
            while (1) {
#line 2978
              *(jit->ip) = (unsigned char)0;
#line 2978
              (jit->ip) ++;
#line 2978
              break;
            }
#line 2978
            break;
          }
#line 2978
          break;
        }
#line 2978
        break;
      }
#line 2979
      while (1) {
#line 2979
        while (1) {
#line 2979
          _amd64_rex_bits___4 = (unsigned char)0;
#line 2979
          if ((int )_amd64_rex_bits___4 != 0) {
#line 2979
            tmp___98 = jit->ip;
#line 2979
            (jit->ip) ++;
#line 2979
            *tmp___98 = (unsigned char )(0x40 | (int )_amd64_rex_bits___4);
          }
#line 2979
          break;
        }
#line 2979
        tmp___99 = jit->ip;
#line 2979
        (jit->ip) ++;
#line 2979
        *tmp___99 = (unsigned char)88;
#line 2979
        break;
      }
    }
  } else {
#line 2982
    while (1) {
#line 2982
      tmp___100 = jit->ip;
#line 2982
      (jit->ip) ++;
#line 2982
      *tmp___100 = (unsigned char)242;
#line 2982
      while (1) {
#line 2982
        if (reg > 7) {
#line 2982
          tmp___101 = 4;
        } else {
#line 2982
          tmp___101 = 0;
        }
#line 2982
        _amd64_rex_bits___5 = (unsigned char )(8 | tmp___101);
#line 2982
        if ((int )_amd64_rex_bits___5 != 0) {
#line 2982
          tmp___102 = jit->ip;
#line 2982
          (jit->ip) ++;
#line 2982
          *tmp___102 = (unsigned char )(0x40 | (int )_amd64_rex_bits___5);
        }
#line 2982
        break;
      }
#line 2982
      tmp___103 = jit->ip;
#line 2982
      (jit->ip) ++;
#line 2982
      *tmp___103 = (unsigned char)15;
#line 2982
      tmp___104 = jit->ip;
#line 2982
      (jit->ip) ++;
#line 2982
      *tmp___104 = (unsigned char )op_id;
#line 2982
      while (1) {
#line 2982
        tmp___105 = jit->ip;
#line 2982
        (jit->ip) ++;
#line 2982
        *tmp___105 = (unsigned char )(((reg & 0x07) << 3) | 4);
#line 2982
        break;
      }
#line 2982
      while (1) {
#line 2982
        tmp___106 = jit->ip;
#line 2982
        (jit->ip) ++;
#line 2982
        *tmp___106 = (unsigned char )((4 << 3) | 5);
#line 2982
        break;
      }
#line 2982
      while (1) {
#line 2982
        imb___9.val = (int )((jit_value )imm);
#line 2982
        tmp___107 = jit->ip;
#line 2982
        (jit->ip) ++;
#line 2982
        *tmp___107 = imb___9.b[0];
#line 2982
        tmp___108 = jit->ip;
#line 2982
        (jit->ip) ++;
#line 2982
        *tmp___108 = imb___9.b[1];
#line 2982
        tmp___109 = jit->ip;
#line 2982
        (jit->ip) ++;
#line 2982
        *tmp___109 = imb___9.b[2];
#line 2982
        tmp___110 = jit->ip;
#line 2982
        (jit->ip) ++;
#line 2982
        *tmp___110 = imb___9.b[3];
#line 2982
        break;
      }
#line 2982
      break;
    }
  }
#line 2984
  return;
}
}
/* END FUNCTION-DEF sse_alu_sd_reg_safeimm LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_get_reg_name LOC=UNKNOWN */
void jit_get_reg_name(struct jit_disasm *disasm , char *r , int reg ) 
{ 
  unsigned long long tmp ;
  unsigned long long tmp___0 ;
  unsigned long long tmp___1 ;
  unsigned long long tmp___2 ;
  unsigned long long tmp___3 ;
  unsigned long long tmp___4 ;
  unsigned long long tmp___5 ;
  unsigned long long tmp___6 ;
  unsigned long long tmp___7 ;

  {
#line 5154
  if (reg == 2 << 1) {
#line 5154
    tmp = __builtin_object_size((void *)r, 1);
#line 5154
    __builtin___strcpy_chk(r, (char const   *)disasm->reg_fp_template, tmp);
  } else
#line 5155
  if (reg == ((2 << 1) | (1 << 4))) {
#line 5155
    tmp___0 = __builtin_object_size((void *)r, 1);
#line 5155
    __builtin___strcpy_chk(r, (char const   *)disasm->reg_out_template, tmp___0);
  } else
#line 5156
  if (reg == 1 << 1) {
#line 5156
    tmp___1 = __builtin_object_size((void *)r, 1);
#line 5156
    __builtin___strcpy_chk(r, (char const   *)disasm->reg_imm_template, tmp___1);
  } else
#line 5157
  if (reg == (1 | (1 << 1))) {
#line 5157
    tmp___2 = __builtin_object_size((void *)r, 1);
#line 5157
    __builtin___strcpy_chk(r, (char const   *)disasm->reg_fimm_template, tmp___2);
  } else
#line 5159
  if (((reg >> 1) & 0x03) == 0) {
#line 5160
    if ((reg & 0x01) == 0) {
#line 5160
      tmp___3 = __builtin_object_size((void *)r, 1);
#line 5160
      __builtin___sprintf_chk(r, 0, tmp___3, (char const   *)disasm->reg_template,
                              (reg >> 4) & 0xfffffff);
    } else {
#line 5161
      tmp___4 = __builtin_object_size((void *)r, 1);
#line 5161
      __builtin___sprintf_chk(r, 0, tmp___4, (char const   *)disasm->freg_template,
                              (reg >> 4) & 0xfffffff);
    }
  } else
#line 5163
  if (((reg >> 1) & 0x03) == 3) {
#line 5164
    if ((reg & 0x01) == 0) {
#line 5164
      tmp___5 = __builtin_object_size((void *)r, 1);
#line 5164
      __builtin___sprintf_chk(r, 0, tmp___5, (char const   *)disasm->arg_template,
                              (reg >> 4) & 0xfffffff);
    } else {
#line 5165
      tmp___6 = __builtin_object_size((void *)r, 1);
#line 5165
      __builtin___sprintf_chk(r, 0, tmp___6, (char const   *)disasm->farg_template,
                              (reg >> 4) & 0xfffffff);
    }
  } else {
#line 5166
    tmp___7 = __builtin_object_size((void *)r, 1);
#line 5166
    __builtin___sprintf_chk(r, 0, tmp___7, (char const   *)"%s", disasm->reg_unknown_template);
  }
#line 5168
  return;
}
}
/* END FUNCTION-DEF jit_get_reg_name LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF stack_arg_pos LOC=UNKNOWN */
__inline static int stack_arg_pos(struct jit *jit , struct jit_func_info *info , int arg ) 
{ 
  int tmp ;

  {
#line 3194
  if (info->float_arg_cnt < (jit->reg_al)->fp_arg_reg_cnt) {
#line 3194
    tmp = info->float_arg_cnt;
  } else {
#line 3194
    tmp = (jit->reg_al)->fp_arg_reg_cnt;
  }
#line 3194
  return ((int )(- (info->allocai_mem + (long )(((((info->gp_reg_count + info->fp_reg_count) + tmp) + arg) + 1) * (int )sizeof(void *)))));
}
}
/* END FUNCTION-DEF stack_arg_pos LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF __sputc LOC=UNKNOWN */
__inline int ( __attribute__((__always_inline__)) __sputc)(int _c , FILE *_p ) 
{ 
  unsigned char *tmp ;
  unsigned char tmp___0 ;
  int tmp___1 ;

  {
#line 261 "/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h"
  (_p->_w) --;
#line 261
  if (_p->_w >= 0) {
#line 262
    tmp = _p->_p;
#line 262
    (_p->_p) ++;
#line 262
    tmp___0 = (unsigned char )_c;
#line 262
    *tmp = tmp___0;
#line 262
    return ((int )tmp___0);
  } else
#line 261
  if (_p->_w >= _p->_lbfsize) {
#line 261
    if ((int )((char )_c) != 10) {
#line 262
      tmp = _p->_p;
#line 262
      (_p->_p) ++;
#line 262
      tmp___0 = (unsigned char )_c;
#line 262
      *tmp = tmp___0;
#line 262
      return ((int )tmp___0);
    } else {
#line 264
      tmp___1 = __swbuf(_c, _p);
#line 264
      return (tmp___1);
    }
  } else {
#line 264
    tmp___1 = __swbuf(_c, _p);
#line 264
    return (tmp___1);
  }
}
}
/* END FUNCTION-DEF __sputc LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF join_addi_addr LOC=UNKNOWN */
static int join_addi_addr(jit_op *op , jit_op *nextop ) 
{ 
  unsigned long long tmp ;

  {
#line 3579
  if (op->arg[2] >= (-0x7FFFFFFF-1)) {
#line 3579
    if (! (op->arg[2] <= 2147483647L)) {
#line 3579
      return (0);
    }
  } else {
#line 3579 "<string>"
    return (0);
  }
#line 3580
  if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 152U) {
#line 3580
    op->arg[2] = - op->arg[2];
  }
#line 3581
  make_nop(op);
#line 3582
  nextop->code = (unsigned short)664;
#line 3583
  nextop->spec = (unsigned char )(((0x01 << 4) | (0x01 << 2)) | 0x03);
#line 3584
  if (nextop->arg[1] == nextop->arg[2]) {
#line 3584
    op->arg[2] *= 2L;
  }
#line 3585
  tmp = __builtin_object_size((void *)(& nextop->flt_imm), 0);
#line 3585
  __builtin___memcpy_chk((void *)(& nextop->flt_imm), (void const   *)(& op->arg[2]),
                         sizeof(jit_value ), tmp);
#line 3586
  if (nextop->arg[1] == op->arg[0]) {
#line 3586
    nextop->arg[1] = op->arg[1];
  }
#line 3587
  if (nextop->arg[2] == op->arg[0]) {
#line 3587
    nextop->arg[2] = op->arg[1];
  }
#line 3588
  return (1);
}
}
/* END FUNCTION-DEF join_addi_addr LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_optimize_frame_ptr LOC=UNKNOWN */
void jit_optimize_frame_ptr(struct jit *jit ) 
{ 
  struct jit_func_info *info ;
  int uses_frame_ptr ;
  jit_op *op ;
  jit_op *tmp ;

  {
#line 3438
  if (! (jit->optimizations & 1U)) {
#line 3438
    return;
  }
#line 3439
  info = (struct jit_func_info *)((void *)0);
#line 3440
  uses_frame_ptr = 0;
#line 3441
  tmp = jit_op_first(jit->ops);
#line 3441
  op = tmp;
#line 3441
  while (1) {
#line 3442
    if (! op) {
#line 3442
      goto _L;
    } else
#line 3442
    if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 688U) {
      _L: /* CIL Label */ 
#line 3443
      if (info) {
#line 3443
        if (! uses_frame_ptr) {
#line 3444
          info->has_prolog = 0;
#line 3445
          uses_frame_ptr = 0;
        }
      }
#line 3447
      if (op) {
#line 3447
        info = (struct jit_func_info *)op->arg[1];
      }
    }
#line 3449
    if (! op) {
#line 3449
      break;
    }
#line 3450
    if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 440U) {
#line 3451
      uses_frame_ptr |= 1;
    } else
#line 3450
    if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 464U) {
#line 3451
      uses_frame_ptr |= 1;
    } else
#line 3450
    if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 512U) {
#line 3451
      uses_frame_ptr |= 1;
    } else
#line 3450
    if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 592U) {
#line 3451
      uses_frame_ptr |= 1;
    }
#line 3453
    if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 520U) {
#line 3453
      if (op->arg[0] == 2L) {
#line 3453
        if ((unsigned long long )op->arg[1] == sizeof(float )) {
#line 3454
          uses_frame_ptr |= 1;
        }
      }
    }
#line 3441
    op = op->next;
  }
#line 3457
  return;
}
}
/* END FUNCTION-DEF jit_optimize_frame_ptr LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF insert_reg_op LOC=UNKNOWN */
static void insert_reg_op(int opcode , jit_op *op , jit_value r1 , jit_value r2 ) 
{ 
  jit_op *o ;
  struct jit_op *tmp ;

  {
#line 5898
  tmp = jit_op_new((unsigned short )opcode, (unsigned char )((0x02 << 2) | 0x02),
                   r1, r2, (jit_value )0, (unsigned char)0);
#line 5898
  o = tmp;
#line 5899
  o->r_arg[0] = o->arg[0];
#line 5900
  o->r_arg[1] = o->arg[1];
#line 5901
  jit_op_prepend(op, o);
#line 5902
  return;
}
}
/* END FUNCTION-DEF insert_reg_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_set_remove LOC=UNKNOWN */
__inline static void jit_set_remove(jit_set *s , int value ) 
{ 


  {
#line 2290
  s->root = jit_tree_delete(s->root, (jit_tree_key )value, (int *)((void *)0));
#line 2291
  return;
}
}
/* END FUNCTION-DEF jit_set_remove LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_op_first LOC=UNKNOWN */
__inline static jit_op *jit_op_first(jit_op *op ) 
{ 


  {
#line 2479
  while ((unsigned long )op->prev != (unsigned long )((void *)0)) {
#line 2479
    op = op->prev;
  }
#line 2480
  return (op);
}
}
/* END FUNCTION-DEF jit_op_first LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_reg_in_use LOC=UNKNOWN */
int jit_reg_in_use(jit_op *op , int reg , int fp ) 
{ 
  jit_value virt_reg ;
  jit_hw_reg *tmp ;
  int tmp___0 ;
  int tmp___1 ;

  {
#line 6301
  tmp = rmap_is_associated(op->regmap, reg, fp, & virt_reg);
#line 6301
  if (tmp) {
#line 6301
    tmp___0 = jit_set_get(op->live_in, (int )virt_reg);
#line 6301
    if (tmp___0) {
#line 6302
      return (1);
    } else {
#line 6301
      tmp___1 = jit_set_get(op->live_out, (int )virt_reg);
#line 6301
      if (tmp___1) {
#line 6302
        return (1);
      } else {
#line 6303
        return (0);
      }
    }
  } else {
#line 6303
    return (0);
  }
}
}
/* END FUNCTION-DEF jit_reg_in_use LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF print_addr LOC=UNKNOWN */
__inline static void print_addr(struct jit_disasm *disasm , struct output_buf *buf ,
                                jit_tree *labels , jit_op *op , int arg_pos ) 
{ 
  void *arg ;
  jit_tree *label_item ;
  jit_tree *tmp ;

  {
#line 5206
  arg = (void *)op->arg[arg_pos];
#line 5207
  tmp = jit_tree_search(labels, (long )op);
#line 5207
  label_item = tmp;
#line 5208
  if (label_item) {
#line 5208
    ob_printf(buf, (char const   *)disasm->label_forward_template, - ((long )label_item->value));
  } else {
#line 5210
    label_item = jit_tree_search(labels, (long )arg);
#line 5211
    if (label_item) {
#line 5211
      ob_printf(buf, (char const   *)disasm->label_template, (long )label_item->value);
    } else {
#line 5212
      ob_printf(buf, (char const   *)disasm->generic_addr_template, arg);
    }
  }
#line 5214
  return;
}
}
/* END FUNCTION-DEF print_addr LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_dump_ops_general LOC=UNKNOWN */
static void jit_dump_ops_general(struct jit *jit , jit_tree *labels , int verbosity ) 
{ 
  jit_op *op ;
  jit_op *tmp ;
  int size ;
  int tmp___0 ;

  {
#line 5512
  tmp = jit_op_first(jit->ops);
#line 5512
  op = tmp;
#line 5512
  while ((unsigned long )op != (unsigned long )((void *)0)) {
#line 5513
    tmp___0 = print_op(__stdoutp, & jit_disasm_general, op, labels, verbosity);
#line 5513
    size = tmp___0;
#line 5514
    if (size == 0) {
#line 5514
      return;
    }
#line 5515
    while (size < 35) {
#line 5516
      printf((char const   */* __restrict  */)" ");
#line 5515
      size ++;
    }
#line 5517
    if (verbosity & 0x400) {
#line 5517
      if (op->live_in) {
#line 5517
        if (op->live_out) {
#line 5518
          printf((char const   */* __restrict  */)"In: ");
#line 5519
          jit_tree_walk((op->live_in)->root, & print_reg_liveness_callback, (void *)(& jit_disasm_general));
#line 5520
          printf((char const   */* __restrict  */)"\tOut: ");
#line 5521
          jit_tree_walk((op->live_out)->root, & print_reg_liveness_callback, (void *)(& jit_disasm_general));
        }
      }
    }
#line 5523
    if (verbosity & 0x200) {
#line 5523
      if (op->regmap) {
#line 5524
        printf((char const   */* __restrict  */)"\tAssoc: ");
#line 5525
        jit_tree_walk((op->regmap)->map, & print_rmap_callback, (void *)(& jit_disasm_general));
      }
    }
#line 5527
    printf((char const   */* __restrict  */)"\n");
#line 5512
    op = op->next;
  }
#line 5529
  return;
}
}
/* END FUNCTION-DEF jit_dump_ops_general LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF uses_hw_reg LOC=UNKNOWN */
static int uses_hw_reg(struct jit_op *op , jit_value reg , int fp ) 
{ 
  int i ;

  {
#line 2916
  if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 432U) {
#line 2916
    if (op->r_arg[0] == reg) {
#line 2916
      return (1);
    }
  }
#line 2917
  i = 0;
#line 2917
  while (i < 3) {
#line 2918
    if ((((int )op->spec >> ((i + 1) - 1) * 2) & 0x03) == 0x01) {
#line 2918
      goto _L;
    } else
#line 2918
    if ((((int )op->spec >> ((i + 1) - 1) * 2) & 0x03) == 0x03) {
      _L: /* CIL Label */ 
#line 2919
      if (fp) {
#line 2919
        if ((op->arg[i] & 1L) == 0L) {
#line 2919
          goto __Cont;
        }
      }
#line 2920
      if (! fp) {
#line 2920
        if ((op->arg[i] & 1L) == 1L) {
#line 2920
          goto __Cont;
        }
      }
#line 2921
      if (op->r_arg[i] == reg) {
#line 2921
        return (1);
      }
    }
    __Cont: /* CIL Label */ 
#line 2917
    i ++;
  }
#line 2923
  return (0);
}
}
/* END FUNCTION-DEF uses_hw_reg LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_regs_active_count LOC=UNKNOWN */
int jit_regs_active_count(jit_op *op ) 
{ 
  int tmp ;

  {
#line 6710
  tmp = jit_set_size(op->live_out);
#line 6710
  return (tmp);
}
}
/* END FUNCTION-DEF jit_regs_active_count LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF rotate_left LOC=UNKNOWN */
__inline static jit_tree *rotate_left(jit_tree *h ) 
{ 
  jit_tree *x ;

  {
#line 2072
  x = h->right;
#line 2073
  h->right = x->left;
#line 2074
  x->left = h;
#line 2075
  x->color = (x->left)->color;
#line 2076
  (x->left)->color = 1;
#line 2077
  return (x);
}
}
/* END FUNCTION-DEF rotate_left LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_set_addall LOC=UNKNOWN */
__inline static void jit_set_addall(jit_set *target , jit_set *s ) 
{ 


  {
#line 2278
  target->root = jit_tree_addall(target->root, s->root);
#line 2279
  return;
}
}
/* END FUNCTION-DEF jit_set_addall LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF emit_get_arg LOC=UNKNOWN */
static void emit_get_arg(struct jit *jit , jit_op *op ) 
{ 
  struct jit_func_info *info ;
  struct jit_func_info *tmp ;
  int dreg ;
  int arg_id ;
  struct jit_inp_arg *arg ;
  int size ;
  int type ;
  int reg_id ;
  int tmp___0 ;
  int read_from_stack ;
  int stack_pos ;
  struct jit_func_info *tmp___1 ;
  jit_hw_reg *tmp___2 ;
  jit_hw_reg *arg_reg ;
  jit_hw_reg *tmp___3 ;
  unsigned char *tmp___4 ;
  unsigned char _amd64_rex_bits ;
  int tmp___5 ;
  int tmp___6 ;
  int tmp___7 ;
  unsigned char *tmp___8 ;
  unsigned char *tmp___9 ;
  unsigned char *tmp___10 ;
  long tmp___11 ;
  unsigned char *tmp___12 ;
  unsigned char _amd64_rex_bits___0 ;
  int tmp___13 ;
  int tmp___14 ;
  unsigned char *tmp___15 ;
  unsigned char *tmp___16 ;
  unsigned char *tmp___17 ;
  unsigned char *tmp___18 ;
  unsigned char _amd64_rex_bits___1 ;
  int tmp___19 ;
  int tmp___20 ;
  unsigned char *tmp___21 ;
  unsigned char *tmp___22 ;
  unsigned char *tmp___23 ;
  unsigned char *tmp___24 ;
  unsigned char *tmp___25 ;
  long tmp___26 ;
  unsigned char *tmp___27 ;
  unsigned char *tmp___28 ;
  unsigned char _amd64_rex_bits___2 ;
  int tmp___29 ;
  int tmp___30 ;
  int tmp___31 ;
  unsigned char *tmp___32 ;
  unsigned char *tmp___33 ;
  unsigned char *tmp___34 ;
  long tmp___35 ;
  unsigned char *tmp___36 ;
  unsigned char *tmp___37 ;
  unsigned char _amd64_rex_bits___3 ;
  int tmp___38 ;
  int tmp___39 ;
  unsigned char *tmp___40 ;
  unsigned char *tmp___41 ;
  unsigned char *tmp___42 ;
  unsigned char *tmp___43 ;
  unsigned char *tmp___44 ;
  long tmp___45 ;
  unsigned char *tmp___46 ;
  unsigned char *tmp___47 ;
  unsigned char _amd64_rex_bits___4 ;
  int tmp___48 ;
  int tmp___49 ;
  unsigned char *tmp___50 ;
  unsigned char *tmp___51 ;
  unsigned char *tmp___52 ;
  unsigned char *tmp___53 ;

  {
#line 4090
  tmp = jit_current_func_info(jit);
#line 4090
  info = tmp;
#line 4091
  dreg = (int )op->r_arg[0];
#line 4092
  arg_id = (int )op->r_arg[1];
#line 4093
  arg = info->args + arg_id;
#line 4094
  size = arg->size;
#line 4095
  type = (int )arg->type;
#line 4096
  if (type == 2) {
#line 4096
    tmp___0 = 1;
  } else {
#line 4096
    tmp___0 = 0;
  }
#line 4096
  reg_id = ((tmp___0 & 0x01) | (3 << 1)) | ((arg_id & 0xfffffff) << 4);
#line 4097
  read_from_stack = 0;
#line 4099
  if (! arg->passed_by_reg) {
#line 4100
    read_from_stack = 1;
#line 4101
    stack_pos = arg->location.stack_pos;
#line 4102
    tmp___1 = jit_current_func_info(jit);
#line 4102
    if (! tmp___1->has_prolog) {
#line 4103
      stack_pos -= (int )sizeof(void *);
#line 4104
      stack_pos += jit->push_count * (int )sizeof(void *);
#line 4105
      emit_get_arg_from_stack(jit, type, size, dreg, 4, stack_pos);
#line 4106
      return;
    }
  }
#line 4109
  if (arg->passed_by_reg) {
#line 4109
    tmp___2 = rmap_get(op->regmap, (jit_value )reg_id);
#line 4109
    if ((unsigned long )tmp___2 == (unsigned long )((void *)0)) {
#line 4110
      read_from_stack = 1;
#line 4111
      stack_pos = arg->spill_pos;
    }
  }
#line 4113
  if (read_from_stack) {
#line 4114
    stack_pos = arg->spill_pos;
#line 4115
    emit_get_arg_from_stack(jit, type, size, dreg, 5, stack_pos);
#line 4116
    return;
  }
#line 4118
  tmp___3 = rmap_get(op->regmap, (jit_value )reg_id);
#line 4118
  arg_reg = tmp___3;
#line 4119
  if (type != 2) {
#line 4120
    if (size == (int )sizeof(void *)) {
#line 4120
      while (1) {
#line 4120
        if ((int )sizeof(void *) == 2) {
#line 4120
          tmp___4 = jit->ip;
#line 4120
          (jit->ip) ++;
#line 4120
          *tmp___4 = (unsigned char)102;
        }
#line 4120
        while (1) {
#line 4120
          if ((int )sizeof(void *) > 4) {
#line 4120
            tmp___5 = 8;
          } else {
#line 4120
            tmp___5 = 0;
          }
#line 4120
          if (dreg > 7) {
#line 4120
            tmp___6 = 4;
          } else {
#line 4120
            tmp___6 = 0;
          }
#line 4120
          if (arg_reg->id > 7) {
#line 4120
            tmp___7 = 1;
          } else {
#line 4120
            tmp___7 = 0;
          }
#line 4120
          _amd64_rex_bits = (unsigned char )((tmp___5 | tmp___6) | tmp___7);
#line 4120
          if ((int )_amd64_rex_bits != 0) {
#line 4120
            tmp___8 = jit->ip;
#line 4120
            (jit->ip) ++;
#line 4120
            *tmp___8 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
          } else
#line 4120
          if ((int )sizeof(void *) == 1) {
#line 4120
            tmp___8 = jit->ip;
#line 4120
            (jit->ip) ++;
#line 4120
            *tmp___8 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
          }
#line 4120
          break;
        }
#line 4120
        switch ((int )sizeof(void *)) {
        case 1: 
#line 4120
        tmp___9 = jit->ip;
#line 4120
        (jit->ip) ++;
#line 4120
        *tmp___9 = (unsigned char)138;
#line 4120
        break;
        case 8: 
        case 4: 
        case 2: 
#line 4120
        tmp___10 = jit->ip;
#line 4120
        (jit->ip) ++;
#line 4120
        *tmp___10 = (unsigned char)139;
#line 4120
        break;
        default: 
#line 4120
        tmp___11 = __builtin_expect(1L, 0L);
#line 4120
        if (tmp___11) {
#line 4120
          __assert_rtn((char const   *)"emit_get_arg", (char const   *)"tmp/src.c",
                       3076, (char const   *)"0");
        }
        }
#line 4120
        while (1) {
#line 4120
          while (1) {
#line 4120
            tmp___12 = jit->ip;
#line 4120
            (jit->ip) ++;
#line 4120
            *tmp___12 = (unsigned char )(((3 << 6) | ((dreg & 0x07) << 3)) | (arg_reg->id & 0x07));
#line 4120
            break;
          }
#line 4120
          break;
        }
#line 4120
        break;
      }
    } else
#line 4121
    if (type == 0) {
#line 4121
      while (1) {
#line 4121
        if (size == 4) {
#line 4121
          while (1) {
#line 4121
            while (1) {
#line 4121
              if (dreg > 7) {
#line 4121
                tmp___13 = 4;
              } else {
#line 4121
                tmp___13 = 0;
              }
#line 4121
              if (arg_reg->id > 7) {
#line 4121
                tmp___14 = 1;
              } else {
#line 4121
                tmp___14 = 0;
              }
#line 4121
              _amd64_rex_bits___0 = (unsigned char )((8 | tmp___13) | tmp___14);
#line 4121
              if ((int )_amd64_rex_bits___0 != 0) {
#line 4121
                tmp___15 = jit->ip;
#line 4121
                (jit->ip) ++;
#line 4121
                *tmp___15 = (unsigned char )(0x40 | (int )_amd64_rex_bits___0);
              }
#line 4121
              break;
            }
#line 4121
            tmp___16 = jit->ip;
#line 4121
            (jit->ip) ++;
#line 4121
            *tmp___16 = (unsigned char)99;
#line 4121
            while (1) {
#line 4121
              while (1) {
#line 4121
                tmp___17 = jit->ip;
#line 4121
                (jit->ip) ++;
#line 4121
                *tmp___17 = (unsigned char )(((3 << 6) | (((dreg & 0x7) & 0x07) << 3)) | ((arg_reg->id & 0x7) & 0x07));
#line 4121
                break;
              }
#line 4121
              break;
            }
#line 4121
            break;
          }
#line 4121
          break;
        }
#line 4121
        if (size == 2) {
#line 4121
          tmp___18 = jit->ip;
#line 4121
          (jit->ip) ++;
#line 4121
          *tmp___18 = (unsigned char)102;
        }
#line 4121
        while (1) {
#line 4121
          if (dreg > 7) {
#line 4121
            tmp___19 = 4;
          } else {
#line 4121
            tmp___19 = 0;
          }
#line 4121
          if (arg_reg->id > 7) {
#line 4121
            tmp___20 = 1;
          } else {
#line 4121
            tmp___20 = 0;
          }
#line 4121
          _amd64_rex_bits___1 = (unsigned char )((8 | tmp___19) | tmp___20);
#line 4121
          if ((int )_amd64_rex_bits___1 != 0) {
#line 4121
            tmp___21 = jit->ip;
#line 4121
            (jit->ip) ++;
#line 4121
            *tmp___21 = (unsigned char )(0x40 | (int )_amd64_rex_bits___1);
          }
#line 4121
          break;
        }
#line 4121
        switch (size) {
        case 1: 
#line 4121
        tmp___22 = jit->ip;
#line 4121
        (jit->ip) ++;
#line 4121
        *tmp___22 = (unsigned char)15;
#line 4121
        tmp___23 = jit->ip;
#line 4121
        (jit->ip) ++;
#line 4121
        *tmp___23 = (unsigned char)190;
#line 4121
        break;
        case 2: 
#line 4121
        tmp___24 = jit->ip;
#line 4121
        (jit->ip) ++;
#line 4121
        *tmp___24 = (unsigned char)15;
#line 4121
        tmp___25 = jit->ip;
#line 4121
        (jit->ip) ++;
#line 4121
        *tmp___25 = (unsigned char)191;
#line 4121
        break;
        default: 
#line 4121
        tmp___26 = __builtin_expect(1L, 0L);
#line 4121
        if (tmp___26) {
#line 4121
          __assert_rtn((char const   *)"emit_get_arg", (char const   *)"tmp/src.c",
                       3077, (char const   *)"0");
        }
        }
#line 4121
        while (1) {
#line 4121
          while (1) {
#line 4121
            tmp___27 = jit->ip;
#line 4121
            (jit->ip) ++;
#line 4121
            *tmp___27 = (unsigned char )(((3 << 6) | ((dreg & 0x07) << 3)) | (arg_reg->id & 0x07));
#line 4121
            break;
          }
#line 4121
          break;
        }
#line 4121
        break;
      }
    } else {
#line 4122
      while (1) {
#line 4122
        if (size == 8) {
#line 4122
          goto _L;
        } else
#line 4122
        if (size == 4) {
          _L: /* CIL Label */ 
#line 4122
          while (1) {
#line 4122
            if (size == 2) {
#line 4122
              tmp___28 = jit->ip;
#line 4122
              (jit->ip) ++;
#line 4122
              *tmp___28 = (unsigned char)102;
            }
#line 4122
            while (1) {
#line 4122
              if (size > 4) {
#line 4122
                tmp___29 = 8;
              } else {
#line 4122
                tmp___29 = 0;
              }
#line 4122
              if (dreg > 7) {
#line 4122
                tmp___30 = 4;
              } else {
#line 4122
                tmp___30 = 0;
              }
#line 4122
              if (arg_reg->id > 7) {
#line 4122
                tmp___31 = 1;
              } else {
#line 4122
                tmp___31 = 0;
              }
#line 4122
              _amd64_rex_bits___2 = (unsigned char )((tmp___29 | tmp___30) | tmp___31);
#line 4122
              if ((int )_amd64_rex_bits___2 != 0) {
#line 4122
                tmp___32 = jit->ip;
#line 4122
                (jit->ip) ++;
#line 4122
                *tmp___32 = (unsigned char )(0x40 | (int )_amd64_rex_bits___2);
              } else
#line 4122
              if (size == 1) {
#line 4122
                tmp___32 = jit->ip;
#line 4122
                (jit->ip) ++;
#line 4122
                *tmp___32 = (unsigned char )(0x40 | (int )_amd64_rex_bits___2);
              }
#line 4122
              break;
            }
#line 4122
            switch (size) {
            case 1: 
#line 4122
            tmp___33 = jit->ip;
#line 4122
            (jit->ip) ++;
#line 4122
            *tmp___33 = (unsigned char)138;
#line 4122
            break;
            case 8: 
            case 4: 
            case 2: 
#line 4122
            tmp___34 = jit->ip;
#line 4122
            (jit->ip) ++;
#line 4122
            *tmp___34 = (unsigned char)139;
#line 4122
            break;
            default: 
#line 4122
            tmp___35 = __builtin_expect(1L, 0L);
#line 4122
            if (tmp___35) {
#line 4122
              __assert_rtn((char const   *)"emit_get_arg", (char const   *)"tmp/src.c",
                           3078, (char const   *)"0");
            }
            }
#line 4122
            while (1) {
#line 4122
              while (1) {
#line 4122
                tmp___36 = jit->ip;
#line 4122
                (jit->ip) ++;
#line 4122
                *tmp___36 = (unsigned char )(((3 << 6) | ((dreg & 0x07) << 3)) | (arg_reg->id & 0x07));
#line 4122
                break;
              }
#line 4122
              break;
            }
#line 4122
            break;
          }
#line 4122
          break;
        }
#line 4122
        if (size == 2) {
#line 4122
          tmp___37 = jit->ip;
#line 4122
          (jit->ip) ++;
#line 4122
          *tmp___37 = (unsigned char)102;
        }
#line 4122
        while (1) {
#line 4122
          if (dreg > 7) {
#line 4122
            tmp___38 = 4;
          } else {
#line 4122
            tmp___38 = 0;
          }
#line 4122
          if (arg_reg->id > 7) {
#line 4122
            tmp___39 = 1;
          } else {
#line 4122
            tmp___39 = 0;
          }
#line 4122
          _amd64_rex_bits___3 = (unsigned char )((8 | tmp___38) | tmp___39);
#line 4122
          if ((int )_amd64_rex_bits___3 != 0) {
#line 4122
            tmp___40 = jit->ip;
#line 4122
            (jit->ip) ++;
#line 4122
            *tmp___40 = (unsigned char )(0x40 | (int )_amd64_rex_bits___3);
          }
#line 4122
          break;
        }
#line 4122
        switch (size) {
        case 1: 
#line 4122
        tmp___41 = jit->ip;
#line 4122
        (jit->ip) ++;
#line 4122
        *tmp___41 = (unsigned char)15;
#line 4122
        tmp___42 = jit->ip;
#line 4122
        (jit->ip) ++;
#line 4122
        *tmp___42 = (unsigned char)182;
#line 4122
        break;
        case 2: 
#line 4122
        tmp___43 = jit->ip;
#line 4122
        (jit->ip) ++;
#line 4122
        *tmp___43 = (unsigned char)15;
#line 4122
        tmp___44 = jit->ip;
#line 4122
        (jit->ip) ++;
#line 4122
        *tmp___44 = (unsigned char)183;
#line 4122
        break;
        default: 
#line 4122
        tmp___45 = __builtin_expect(1L, 0L);
#line 4122
        if (tmp___45) {
#line 4122
          __assert_rtn((char const   *)"emit_get_arg", (char const   *)"tmp/src.c",
                       3078, (char const   *)"0");
        }
        }
#line 4122
        while (1) {
#line 4122
          while (1) {
#line 4122
            tmp___46 = jit->ip;
#line 4122
            (jit->ip) ++;
#line 4122
            *tmp___46 = (unsigned char )(((3 << 6) | ((dreg & 0x07) << 3)) | (arg_reg->id & 0x07));
#line 4122
            break;
          }
#line 4122
          break;
        }
#line 4122
        break;
      }
    }
  } else {
#line 4124
    while (1) {
#line 4124
      tmp___47 = jit->ip;
#line 4124
      (jit->ip) ++;
#line 4124
      *tmp___47 = (unsigned char)242;
#line 4124
      while (1) {
#line 4124
        if (dreg > 7) {
#line 4124
          tmp___48 = 4;
        } else {
#line 4124
          tmp___48 = 0;
        }
#line 4124
        if (arg_reg->id > 7) {
#line 4124
          tmp___49 = 1;
        } else {
#line 4124
          tmp___49 = 0;
        }
#line 4124
        _amd64_rex_bits___4 = (unsigned char )(tmp___48 | tmp___49);
#line 4124
        if ((int )_amd64_rex_bits___4 != 0) {
#line 4124
          tmp___50 = jit->ip;
#line 4124
          (jit->ip) ++;
#line 4124
          *tmp___50 = (unsigned char )(0x40 | (int )_amd64_rex_bits___4);
        }
#line 4124
        break;
      }
#line 4124
      tmp___51 = jit->ip;
#line 4124
      (jit->ip) ++;
#line 4124
      *tmp___51 = (unsigned char)15;
#line 4124
      tmp___52 = jit->ip;
#line 4124
      (jit->ip) ++;
#line 4124
      *tmp___52 = (unsigned char)16;
#line 4124
      while (1) {
#line 4124
        while (1) {
#line 4124
          tmp___53 = jit->ip;
#line 4124
          (jit->ip) ++;
#line 4124
          *tmp___53 = (unsigned char )(((3 << 6) | ((dreg & 0x07) << 3)) | (arg_reg->id & 0x07));
#line 4124
          break;
        }
#line 4124
        break;
      }
#line 4124
      break;
    }
  }
#line 4126
  return;
}
}
/* END FUNCTION-DEF emit_get_arg LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF list_caller_saved_regs LOC=UNKNOWN */
static int list_caller_saved_regs(struct jit *jit , jit_op *op , jit_hw_reg *regs ,
                                  int reg_count , int fp , jit_hw_reg *skip_reg ,
                                  jit_hw_reg **used_regs , int *used_count ) 
{ 
  jit_value reg ;
  int skip_reg_id ;
  int tmp ;
  int i ;
  jit_hw_reg *hreg ;
  jit_hw_reg *tmp___0 ;
  int tmp___1 ;
  int stack_space ;
  unsigned long long tmp___2 ;

  {
#line 3927
  if (skip_reg) {
#line 3927
    tmp = skip_reg->id;
  } else {
#line 3927
    tmp = -1;
  }
#line 3927
  skip_reg_id = tmp;
#line 3928
  *used_count = 0;
#line 3929
  i = 0;
#line 3929
  while (i < reg_count) {
#line 3930
    if ((regs + i)->id == skip_reg_id) {
#line 3930
      goto __Cont;
    } else
#line 3930
    if ((regs + i)->callee_saved) {
#line 3930
      goto __Cont;
    }
#line 3931
    tmp___0 = rmap_is_associated(op->regmap, (regs + i)->id, fp, & reg);
#line 3931
    hreg = tmp___0;
#line 3932
    if (hreg) {
#line 3932
      tmp___1 = jit_set_get(op->live_in, (int )reg);
#line 3932
      if (tmp___1) {
#line 3933
        *(used_regs + *used_count) = hreg;
#line 3934
        (*used_count) ++;
      }
    }
    __Cont: /* CIL Label */ 
#line 3929
    i ++;
  }
#line 3937
  if (fp) {
#line 3937
    tmp___2 = sizeof(double );
  } else {
#line 3937
    tmp___2 = (unsigned long long )((int )sizeof(void *));
  }
#line 3937
  stack_space = (int )((unsigned long long )*used_count * tmp___2);
#line 3938
  return (stack_space);
}
}
/* END FUNCTION-DEF list_caller_saved_regs LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_get_label LOC=UNKNOWN */
jit_label *jit_get_label(struct jit *jit ) 
{ 
  jit_label *r ;
  void *tmp ;

  {
#line 6381
  tmp = malloc((size_t )sizeof(jit_label ));
#line 6381
  r = (jit_label *)tmp;
#line 6382
  jit_add_op(jit, (unsigned short)136, (unsigned char)2, (jit_value )r, (jit_value )0,
             (jit_value )0, (unsigned char)0, (struct jit_debug_info *)((void *)0));
#line 6383
  r->next = jit->labels;
#line 6384
  jit->labels = r;
#line 6385
  return (r);
}
}
/* END FUNCTION-DEF jit_get_label LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_enable_optimization LOC=UNKNOWN */
void jit_enable_optimization(struct jit *jit , int opt ) 
{ 


  {
#line 6691
  jit->optimizations |= (unsigned int )opt;
#line 6692
  return;
}
}
/* END FUNCTION-DEF jit_enable_optimization LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF _OSSwapInt64 LOC=UNKNOWN */
__inline static __uint64_t _OSSwapInt64(__uint64_t _data ) 
{ 
  long tmp ;

  {
#line 74 "/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/libkern/i386/_OSByteOrder.h"
  tmp = __builtin_bswap64((long )_data);
#line 74
  return ((__uint64_t )tmp);
}
}
/* END FUNCTION-DEF _OSSwapInt64 LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF free_labels LOC=UNKNOWN */
static void free_labels(jit_label *lab ) 
{ 


  {
#line 6685
  if ((unsigned long )lab == (unsigned long )((void *)0)) {
#line 6685 "<string>"
    return;
  }
#line 6686
  free_labels(lab->next);
#line 6687
  free((void *)lab);
#line 6688
  return;
}
}
/* END FUNCTION-DEF free_labels LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF rotate_right LOC=UNKNOWN */
__inline static jit_tree *rotate_right(jit_tree *h ) 
{ 
  jit_tree *x ;

  {
#line 2081
  x = h->left;
#line 2082
  h->left = x->right;
#line 2083
  x->right = h;
#line 2084
  x->color = (x->right)->color;
#line 2085
  (x->right)->color = 1;
#line 2086
  return (x);
}
}
/* END FUNCTION-DEF rotate_right LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF associate_register LOC=UNKNOWN */
static void associate_register(struct jit_reg_allocator *al , jit_op *op , int i ) 
{ 
  jit_hw_reg *reg ;
  jit_hw_reg *tmp ;
  jit_hw_reg *tmp___0 ;
  int tmp___1 ;
  int tmp___2 ;

  {
#line 6096
  tmp = rmap_get(op->regmap, op->arg[i]);
#line 6096
  reg = tmp;
#line 6097
  if (reg) {
#line 6097
    op->r_arg[i] = (jit_value )reg->id;
  } else {
#line 6099
    tmp___2 = is_transfer_op(op);
#line 6099
    if (tmp___2) {
#line 6107
      op->r_arg[i] = (jit_value )-1;
    } else
#line 6099
    if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) != 232U) {
#line 6102
      reg = make_free_reg(al, op, op->arg[i]);
#line 6103
      rmap_assoc(op->regmap, op->arg[i], reg);
#line 6104
      op->r_arg[i] = (jit_value )reg->id;
#line 6105
      tmp___1 = jit_set_get(op->live_in, (int )op->arg[i]);
#line 6105
      if (tmp___1) {
#line 6106
        tmp___0 = rmap_get(op->regmap, op->arg[i]);
#line 6106
        load_reg(op, tmp___0, op->arg[i]);
      }
    } else {
#line 6107
      op->r_arg[i] = (jit_value )-1;
    }
  }
#line 6109
  return;
}
}
/* END FUNCTION-DEF associate_register LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_optimize_join_addimm LOC=UNKNOWN */
int jit_optimize_join_addimm(struct jit *jit ) 
{ 
  int change ;
  jit_op *op ;
  jit_op *tmp ;
  int tmp___0 ;
  int tmp___1 ;
  int tmp___2 ;
  int tmp___3 ;

  {
#line 3592
  change = 0;
#line 3593
  tmp = jit_op_first(jit->ops);
#line 3593
  op = tmp;
#line 3593
  while ((unsigned long )op != (unsigned long )((void *)0)) {
#line 3594
    tmp___0 = join_2ops(op, 801, 802, & join_addr_addi);
#line 3594
    change |= tmp___0;
#line 3595
    tmp___1 = join_2ops(op, 801, 154, & join_addr_addi);
#line 3595
    change |= tmp___1;
#line 3596
    tmp___2 = join_2ops(op, 802, 801, & join_addi_addr);
#line 3596
    change |= tmp___2;
#line 3597
    tmp___3 = join_2ops(op, 154, 801, & join_addi_addr);
#line 3597
    change |= tmp___3;
#line 3593
    op = op->next;
  }
#line 3599
  return (change);
}
}
/* END FUNCTION-DEF jit_optimize_join_addimm LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_arg_layout_add LOC=UNKNOWN */
static void jit_arg_layout_add(struct jit_arg_layout *layout , int isfp , struct jit_out_arg *arg ) 
{ 
  int i ;
  int tmp ;
  struct jit_arg_layout_location *location ;
  struct jit_reg_allocator *reg_al ;
  int tmp___0 ;
  int tmp___1 ;

  {
#line 3166
  tmp = layout->arg_index;
#line 3166
  (layout->arg_index) ++;
#line 3166
  i = tmp;
#line 3167
  location = & layout->arguments[i];
#line 3168
  reg_al = (layout->jit)->reg_al;
#line 3169
  location->oarg = arg;
#line 3170
  location->isfp = (char )isfp;
#line 3171
  if (! isfp) {
#line 3171
    if (layout->gp_index < reg_al->gp_arg_reg_cnt) {
#line 3172
      location->passed_in_reg = (char)1;
#line 3173
      tmp___0 = layout->gp_index;
#line 3173
      (layout->gp_index) ++;
#line 3173
      location->index = tmp___0;
    } else {
#line 3171
      goto _L;
    }
  } else
  _L: /* CIL Label */ 
#line 3174
  if (isfp) {
#line 3174
    if (layout->fp_index < reg_al->fp_arg_reg_cnt) {
#line 3175
      location->passed_in_reg = (char)1;
#line 3176
      tmp___1 = layout->fp_index;
#line 3176
      (layout->fp_index) ++;
#line 3176
      location->index = tmp___1;
    } else {
#line 3178
      location->passed_in_reg = (char)0;
#line 3179
      location->index = layout->stack_index;
#line 3180
      (layout->stack_index) ++;
    }
  } else {
#line 3178
    location->passed_in_reg = (char)0;
#line 3179
    location->index = layout->stack_index;
#line 3180
    (layout->stack_index) ++;
  }
#line 3182
  return;
}
}
/* END FUNCTION-DEF jit_arg_layout_add LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_exec_mem_free LOC=UNKNOWN */
static void jit_exec_mem_free(struct jit_exec_mem *mem ) 
{ 


  {
#line 2048
  munmap(mem->data, mem->size);
#line 2049
  free((void *)mem);
#line 2050
  return;
}
}
/* END FUNCTION-DEF jit_exec_mem_free LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF rmap_is_associated_aux LOC=UNKNOWN */
__inline static jit_hw_reg *rmap_is_associated_aux(jit_tree *n , int reg_id , int fp ,
                                                   jit_value *virt_reg ) 
{ 
  jit_hw_reg *r ;
  jit_hw_reg *tmp ;

  {
#line 3255
  if ((unsigned long )n == (unsigned long )((void *)0)) {
#line 3255
    return ((jit_hw_reg *)((void *)0));
  }
#line 3256
  r = (jit_hw_reg *)n->value;
#line 3257
  if ((int )r->fp == fp) {
#line 3257
    if (r->id == reg_id) {
#line 3258
      if (virt_reg) {
#line 3258
        *virt_reg = n->key;
      }
#line 3259
      return (r);
    }
  }
#line 3261
  r = rmap_is_associated_aux(n->left, reg_id, fp, virt_reg);
#line 3262
  if (r) {
#line 3262
    return (r);
  } else {
#line 3263
    tmp = rmap_is_associated_aux(n->right, reg_id, fp, virt_reg);
#line 3263
    return (tmp);
  }
}
}
/* END FUNCTION-DEF rmap_is_associated_aux LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_tree_clone LOC=UNKNOWN */
__inline static jit_tree *jit_tree_clone(jit_tree *root ) 
{ 
  jit_tree *tmp ;

  {
#line 2217
  tmp = jit_tree_addall((jit_tree *)((void *)0), root);
#line 2217
  return (tmp);
}
}
/* END FUNCTION-DEF jit_tree_clone LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF emit_trace_op LOC=UNKNOWN */
static void emit_trace_op(struct jit *jit , jit_op *op ) 
{ 
  unsigned char _amd64_rex_bits ;
  unsigned char *tmp ;
  unsigned char *tmp___0 ;
  unsigned char _amd64_rex_bits___0 ;
  unsigned char *tmp___1 ;
  unsigned char *tmp___2 ;
  unsigned char *tmp___3 ;
  unsigned char *tmp___4 ;
  long tmp___5 ;
  unsigned char *tmp___6 ;
  unsigned char _amd64_rex_bits___1 ;
  unsigned char *tmp___7 ;
  unsigned char *tmp___8 ;
  unsigned char *tmp___9 ;
  unsigned char _amd64_rex_bits___2 ;
  unsigned char *tmp___10 ;
  unsigned char *tmp___11 ;
  x86_imm_buf imb ;
  unsigned char *tmp___12 ;
  unsigned char *tmp___13 ;
  unsigned char *tmp___14 ;
  unsigned char *tmp___15 ;
  unsigned char _amd64_rex_bits___3 ;
  unsigned char *tmp___16 ;
  unsigned char *tmp___17 ;
  unsigned char *tmp___18 ;
  x86_imm_buf imb___0 ;
  unsigned char *tmp___19 ;
  unsigned char *tmp___20 ;
  unsigned char *tmp___21 ;
  unsigned char *tmp___22 ;
  unsigned char _amd64_rex_bits___4 ;
  unsigned char *tmp___23 ;
  unsigned char *tmp___24 ;
  unsigned char *tmp___25 ;
  unsigned char _amd64_rex_bits___5 ;
  unsigned char *tmp___26 ;
  unsigned char *tmp___27 ;
  x86_imm_buf imb___1 ;
  unsigned char *tmp___28 ;
  unsigned char *tmp___29 ;
  unsigned char *tmp___30 ;
  unsigned char *tmp___31 ;
  unsigned char _amd64_rex_bits___6 ;
  unsigned char *tmp___32 ;
  unsigned char *tmp___33 ;
  unsigned char *tmp___34 ;
  x86_imm_buf imb___2 ;
  unsigned char *tmp___35 ;
  unsigned char *tmp___36 ;
  unsigned char *tmp___37 ;
  unsigned char *tmp___38 ;
  int trace ;
  jit_opcode prev_code ;
  jit_opcode next_code ;
  int jit_reg___0 ;
  int op_reg ;
  int verbosity_reg ;
  int trace_reg ;
  int fun_reg ;
  unsigned char _amd64_rex_bits___7 ;
  int tmp___39 ;
  unsigned char *tmp___40 ;
  unsigned char *tmp___41 ;
  amd64_imm_buf imb___3 ;
  unsigned char *tmp___42 ;
  unsigned char *tmp___43 ;
  unsigned char *tmp___44 ;
  unsigned char *tmp___45 ;
  unsigned char *tmp___46 ;
  unsigned char *tmp___47 ;
  unsigned char *tmp___48 ;
  unsigned char *tmp___49 ;
  x86_imm_buf imb___4 ;
  unsigned char *tmp___50 ;
  unsigned char *tmp___51 ;
  unsigned char *tmp___52 ;
  unsigned char *tmp___53 ;
  unsigned char _amd64_rex_bits___8 ;
  int tmp___54 ;
  unsigned char *tmp___55 ;
  unsigned char *tmp___56 ;
  amd64_imm_buf imb___5 ;
  unsigned char *tmp___57 ;
  unsigned char *tmp___58 ;
  unsigned char *tmp___59 ;
  unsigned char *tmp___60 ;
  unsigned char *tmp___61 ;
  unsigned char *tmp___62 ;
  unsigned char *tmp___63 ;
  unsigned char *tmp___64 ;
  x86_imm_buf imb___6 ;
  unsigned char *tmp___65 ;
  unsigned char *tmp___66 ;
  unsigned char *tmp___67 ;
  unsigned char *tmp___68 ;
  unsigned char _amd64_rex_bits___9 ;
  int tmp___69 ;
  unsigned char *tmp___70 ;
  unsigned char *tmp___71 ;
  amd64_imm_buf imb___7 ;
  unsigned char *tmp___72 ;
  unsigned char *tmp___73 ;
  unsigned char *tmp___74 ;
  unsigned char *tmp___75 ;
  unsigned char *tmp___76 ;
  unsigned char *tmp___77 ;
  unsigned char *tmp___78 ;
  unsigned char *tmp___79 ;
  x86_imm_buf imb___8 ;
  unsigned char *tmp___80 ;
  unsigned char *tmp___81 ;
  unsigned char *tmp___82 ;
  unsigned char *tmp___83 ;
  unsigned char _amd64_rex_bits___10 ;
  int tmp___84 ;
  unsigned char *tmp___85 ;
  unsigned char *tmp___86 ;
  amd64_imm_buf imb___9 ;
  unsigned char *tmp___87 ;
  unsigned char *tmp___88 ;
  unsigned char *tmp___89 ;
  unsigned char *tmp___90 ;
  unsigned char *tmp___91 ;
  unsigned char *tmp___92 ;
  unsigned char *tmp___93 ;
  unsigned char *tmp___94 ;
  x86_imm_buf imb___10 ;
  unsigned char *tmp___95 ;
  unsigned char *tmp___96 ;
  unsigned char *tmp___97 ;
  unsigned char *tmp___98 ;
  unsigned char _amd64_rex_bits___11 ;
  unsigned char *tmp___99 ;
  unsigned char *tmp___100 ;
  unsigned char *tmp___101 ;
  int _amd64_width_temp ;
  unsigned char _amd64_rex_bits___12 ;
  int tmp___102 ;
  int tmp___103 ;
  int tmp___104 ;
  int tmp___105 ;
  unsigned char *tmp___106 ;
  int tmp___107 ;
  unsigned char *tmp___108 ;
  amd64_imm_buf imb___11 ;
  unsigned char *tmp___109 ;
  unsigned char *tmp___110 ;
  unsigned char *tmp___111 ;
  unsigned char *tmp___112 ;
  unsigned char *tmp___113 ;
  unsigned char *tmp___114 ;
  unsigned char *tmp___115 ;
  unsigned char *tmp___116 ;
  x86_imm_buf imb___12 ;
  unsigned char *tmp___117 ;
  unsigned char *tmp___118 ;
  unsigned char *tmp___119 ;
  unsigned char *tmp___120 ;
  int tmp___121 ;
  unsigned char _amd64_rex_bits___13 ;
  int tmp___122 ;
  unsigned char *tmp___123 ;
  unsigned char *tmp___124 ;
  unsigned char *tmp___125 ;
  unsigned char _amd64_rex_bits___14 ;
  unsigned char *tmp___126 ;
  unsigned char *tmp___127 ;
  unsigned char *tmp___128 ;
  unsigned char *tmp___129 ;
  long tmp___130 ;
  unsigned char *tmp___131 ;
  unsigned char _amd64_rex_bits___15 ;
  unsigned char *tmp___132 ;
  unsigned char *tmp___133 ;

  {
#line 3788
  emit_save_all_regs(jit, op);
#line 3789
  while (1) {
#line 3789
    while (1) {
#line 3789
      _amd64_rex_bits = (unsigned char)0;
#line 3789
      if ((int )_amd64_rex_bits != 0) {
#line 3789
        tmp = jit->ip;
#line 3789
        (jit->ip) ++;
#line 3789
        *tmp = (unsigned char )(0x40 | (int )_amd64_rex_bits);
      }
#line 3789
      break;
    }
#line 3789
    tmp___0 = jit->ip;
#line 3789
    (jit->ip) ++;
#line 3789
    *tmp___0 = (unsigned char)83;
#line 3789
    break;
  }
#line 3790
  while (1) {
#line 3790
    while (1) {
#line 3790
      _amd64_rex_bits___0 = (unsigned char)8;
#line 3790
      if ((int )_amd64_rex_bits___0 != 0) {
#line 3790
        tmp___1 = jit->ip;
#line 3790
        (jit->ip) ++;
#line 3790
        *tmp___1 = (unsigned char )(0x40 | (int )_amd64_rex_bits___0);
      }
#line 3790
      break;
    }
#line 3790
    while (1) {
#line 3790
      switch (4) {
      case 1: 
#line 3790
      tmp___2 = jit->ip;
#line 3790
      (jit->ip) ++;
#line 3790
      *tmp___2 = (unsigned char)138;
#line 3790
      break;
      case 2: 
#line 3790
      tmp___3 = jit->ip;
#line 3790
      (jit->ip) ++;
#line 3790
      *tmp___3 = (unsigned char)102;
      case 4: 
#line 3790
      tmp___4 = jit->ip;
#line 3790
      (jit->ip) ++;
#line 3790
      *tmp___4 = (unsigned char)139;
#line 3790
      break;
      default: 
#line 3790
      tmp___5 = __builtin_expect(1L, 0L);
#line 3790
      if (tmp___5) {
#line 3790
        __assert_rtn((char const   *)"emit_trace_op", (char const   *)"tmp/src.c",
                     2643, (char const   *)"0");
      }
      }
#line 3790
      while (1) {
#line 3790
        while (1) {
#line 3790
          tmp___6 = jit->ip;
#line 3790
          (jit->ip) ++;
#line 3790
          *tmp___6 = (unsigned char )(((3 << 6) | (3 << 3)) | 4);
#line 3790
          break;
        }
#line 3790
        break;
      }
#line 3790
      break;
    }
#line 3790
    break;
  }
#line 3791
  while (1) {
#line 3791
    while (1) {
#line 3791
      _amd64_rex_bits___1 = (unsigned char)8;
#line 3791
      if ((int )_amd64_rex_bits___1 != 0) {
#line 3791
        tmp___7 = jit->ip;
#line 3791
        (jit->ip) ++;
#line 3791
        *tmp___7 = (unsigned char )(0x40 | (int )_amd64_rex_bits___1);
      }
#line 3791
      break;
    }
#line 3791
    tmp___8 = jit->ip;
#line 3791
    (jit->ip) ++;
#line 3791
    *tmp___8 = (unsigned char)131;
#line 3791
    while (1) {
#line 3791
      while (1) {
#line 3791
        tmp___9 = jit->ip;
#line 3791
        (jit->ip) ++;
#line 3791
        *tmp___9 = (unsigned char )(((3 << 6) | (4 << 3)) | 4);
#line 3791
        break;
      }
#line 3791
      break;
    }
#line 3791
    while (1) {
#line 3791
      *(jit->ip) = (unsigned char)240;
#line 3791
      (jit->ip) ++;
#line 3791
      break;
    }
#line 3791
    break;
  }
#line 3792
  while (1) {
#line 3792
    while (1) {
#line 3792
      _amd64_rex_bits___4 = (unsigned char)8;
#line 3792
      if ((int )_amd64_rex_bits___4 != 0) {
#line 3792
        tmp___23 = jit->ip;
#line 3792
        (jit->ip) ++;
#line 3792
        *tmp___23 = (unsigned char )(0x40 | (int )_amd64_rex_bits___4);
      }
#line 3792
      break;
    }
#line 3792
    tmp___24 = jit->ip;
#line 3792
    (jit->ip) ++;
#line 3792
    *tmp___24 = (unsigned char)131;
#line 3792
    while (1) {
#line 3792
      while (1) {
#line 3792
        tmp___25 = jit->ip;
#line 3792
        (jit->ip) ++;
#line 3792
        *tmp___25 = (unsigned char )(((3 << 6) | (5 << 3)) | 4);
#line 3792
        break;
      }
#line 3792
      break;
    }
#line 3792
    while (1) {
#line 3792
      *(jit->ip) = (unsigned char)16;
#line 3792
      (jit->ip) ++;
#line 3792
      break;
    }
#line 3792
    break;
  }
#line 3793
  trace = 0;
#line 3794
  prev_code = (jit_opcode )((int )(op->prev)->code & 0xfff8);
#line 3795
  next_code = (jit_opcode )((int )(op->next)->code & 0xfff8);
#line 3796
  if ((unsigned int )prev_code == 688U) {
#line 3796
    trace |= 1;
  } else
#line 3796
  if ((unsigned int )prev_code == 136U) {
#line 3796
    trace |= 1;
  } else
#line 3796
  if ((unsigned int )prev_code == 616U) {
#line 3796
    trace |= 1;
  }
#line 3797
  if ((unsigned int )next_code != 688U) {
#line 3797
    if ((unsigned int )next_code != 136U) {
#line 3797
      if ((unsigned int )next_code != 616U) {
#line 3797
        trace |= 2;
      }
    }
  }
#line 3798
  jit_reg___0 = 7;
#line 3799
  op_reg = 6;
#line 3800
  verbosity_reg = 2;
#line 3801
  trace_reg = 1;
#line 3802
  fun_reg = 8;
#line 3803
  while (1) {
#line 3803
    while (1) {
#line 3803
      if (jit_reg___0 > 7) {
#line 3803
        tmp___39 = 1;
      } else {
#line 3803
        tmp___39 = 0;
      }
#line 3803
      _amd64_rex_bits___7 = (unsigned char )(8 | tmp___39);
#line 3803
      if ((int )_amd64_rex_bits___7 != 0) {
#line 3803
        tmp___40 = jit->ip;
#line 3803
        (jit->ip) ++;
#line 3803
        *tmp___40 = (unsigned char )(0x40 | (int )_amd64_rex_bits___7);
      }
#line 3803
      break;
    }
#line 3803
    tmp___41 = jit->ip;
#line 3803
    (jit->ip) ++;
#line 3803
    *tmp___41 = (unsigned char )(184 + (jit_reg___0 & 0x7));
#line 3803
    while (1) {
#line 3803
      imb___3.val = (size_t )jit;
#line 3803
      tmp___42 = jit->ip;
#line 3803
      (jit->ip) ++;
#line 3803
      *tmp___42 = imb___3.b[0];
#line 3803
      tmp___43 = jit->ip;
#line 3803
      (jit->ip) ++;
#line 3803
      *tmp___43 = imb___3.b[1];
#line 3803
      tmp___44 = jit->ip;
#line 3803
      (jit->ip) ++;
#line 3803
      *tmp___44 = imb___3.b[2];
#line 3803
      tmp___45 = jit->ip;
#line 3803
      (jit->ip) ++;
#line 3803
      *tmp___45 = imb___3.b[3];
#line 3803
      tmp___46 = jit->ip;
#line 3803
      (jit->ip) ++;
#line 3803
      *tmp___46 = imb___3.b[4];
#line 3803
      tmp___47 = jit->ip;
#line 3803
      (jit->ip) ++;
#line 3803
      *tmp___47 = imb___3.b[5];
#line 3803
      tmp___48 = jit->ip;
#line 3803
      (jit->ip) ++;
#line 3803
      *tmp___48 = imb___3.b[6];
#line 3803
      tmp___49 = jit->ip;
#line 3803
      (jit->ip) ++;
#line 3803
      *tmp___49 = imb___3.b[7];
#line 3803
      break;
    }
#line 3803
    break;
  }
#line 3804
  while (1) {
#line 3804
    while (1) {
#line 3804
      if (op_reg > 7) {
#line 3804
        tmp___54 = 1;
      } else {
#line 3804
        tmp___54 = 0;
      }
#line 3804
      _amd64_rex_bits___8 = (unsigned char )(8 | tmp___54);
#line 3804
      if ((int )_amd64_rex_bits___8 != 0) {
#line 3804
        tmp___55 = jit->ip;
#line 3804
        (jit->ip) ++;
#line 3804
        *tmp___55 = (unsigned char )(0x40 | (int )_amd64_rex_bits___8);
      }
#line 3804
      break;
    }
#line 3804
    tmp___56 = jit->ip;
#line 3804
    (jit->ip) ++;
#line 3804
    *tmp___56 = (unsigned char )(184 + (op_reg & 0x7));
#line 3804
    while (1) {
#line 3804
      imb___5.val = (size_t )op;
#line 3804
      tmp___57 = jit->ip;
#line 3804
      (jit->ip) ++;
#line 3804
      *tmp___57 = imb___5.b[0];
#line 3804
      tmp___58 = jit->ip;
#line 3804
      (jit->ip) ++;
#line 3804
      *tmp___58 = imb___5.b[1];
#line 3804
      tmp___59 = jit->ip;
#line 3804
      (jit->ip) ++;
#line 3804
      *tmp___59 = imb___5.b[2];
#line 3804
      tmp___60 = jit->ip;
#line 3804
      (jit->ip) ++;
#line 3804
      *tmp___60 = imb___5.b[3];
#line 3804
      tmp___61 = jit->ip;
#line 3804
      (jit->ip) ++;
#line 3804
      *tmp___61 = imb___5.b[4];
#line 3804
      tmp___62 = jit->ip;
#line 3804
      (jit->ip) ++;
#line 3804
      *tmp___62 = imb___5.b[5];
#line 3804
      tmp___63 = jit->ip;
#line 3804
      (jit->ip) ++;
#line 3804
      *tmp___63 = imb___5.b[6];
#line 3804
      tmp___64 = jit->ip;
#line 3804
      (jit->ip) ++;
#line 3804
      *tmp___64 = imb___5.b[7];
#line 3804
      break;
    }
#line 3804
    break;
  }
#line 3805
  while (1) {
#line 3805
    while (1) {
#line 3805
      if (verbosity_reg > 7) {
#line 3805
        tmp___69 = 1;
      } else {
#line 3805
        tmp___69 = 0;
      }
#line 3805
      _amd64_rex_bits___9 = (unsigned char )tmp___69;
#line 3805
      if ((int )_amd64_rex_bits___9 != 0) {
#line 3805
        tmp___70 = jit->ip;
#line 3805
        (jit->ip) ++;
#line 3805
        *tmp___70 = (unsigned char )(0x40 | (int )_amd64_rex_bits___9);
      }
#line 3805
      break;
    }
#line 3805
    tmp___71 = jit->ip;
#line 3805
    (jit->ip) ++;
#line 3805
    *tmp___71 = (unsigned char )(184 + (verbosity_reg & 0x7));
#line 3805
    while (1) {
#line 3805
      imb___8.val = (int )((size_t )op->r_arg[0]);
#line 3805
      tmp___80 = jit->ip;
#line 3805
      (jit->ip) ++;
#line 3805
      *tmp___80 = imb___8.b[0];
#line 3805
      tmp___81 = jit->ip;
#line 3805
      (jit->ip) ++;
#line 3805
      *tmp___81 = imb___8.b[1];
#line 3805
      tmp___82 = jit->ip;
#line 3805
      (jit->ip) ++;
#line 3805
      *tmp___82 = imb___8.b[2];
#line 3805
      tmp___83 = jit->ip;
#line 3805
      (jit->ip) ++;
#line 3805
      *tmp___83 = imb___8.b[3];
#line 3805
      break;
    }
#line 3805
    break;
  }
#line 3806
  while (1) {
#line 3806
    while (1) {
#line 3806
      if (trace_reg > 7) {
#line 3806
        tmp___84 = 1;
      } else {
#line 3806
        tmp___84 = 0;
      }
#line 3806
      _amd64_rex_bits___10 = (unsigned char )tmp___84;
#line 3806
      if ((int )_amd64_rex_bits___10 != 0) {
#line 3806
        tmp___85 = jit->ip;
#line 3806
        (jit->ip) ++;
#line 3806
        *tmp___85 = (unsigned char )(0x40 | (int )_amd64_rex_bits___10);
      }
#line 3806
      break;
    }
#line 3806
    tmp___86 = jit->ip;
#line 3806
    (jit->ip) ++;
#line 3806
    *tmp___86 = (unsigned char )(184 + (trace_reg & 0x7));
#line 3806
    while (1) {
#line 3806
      imb___10.val = (int )((size_t )trace);
#line 3806
      tmp___95 = jit->ip;
#line 3806
      (jit->ip) ++;
#line 3806
      *tmp___95 = imb___10.b[0];
#line 3806
      tmp___96 = jit->ip;
#line 3806
      (jit->ip) ++;
#line 3806
      *tmp___96 = imb___10.b[1];
#line 3806
      tmp___97 = jit->ip;
#line 3806
      (jit->ip) ++;
#line 3806
      *tmp___97 = imb___10.b[2];
#line 3806
      tmp___98 = jit->ip;
#line 3806
      (jit->ip) ++;
#line 3806
      *tmp___98 = imb___10.b[3];
#line 3806
      break;
    }
#line 3806
    break;
  }
#line 3807
  while (1) {
#line 3807
    while (1) {
#line 3807
      _amd64_rex_bits___11 = (unsigned char)8;
#line 3807
      if ((int )_amd64_rex_bits___11 != 0) {
#line 3807
        tmp___99 = jit->ip;
#line 3807
        (jit->ip) ++;
#line 3807
        *tmp___99 = (unsigned char )(0x40 | (int )_amd64_rex_bits___11);
      }
#line 3807
      break;
    }
#line 3807
    tmp___100 = jit->ip;
#line 3807
    (jit->ip) ++;
#line 3807
    *tmp___100 = (unsigned char )((6 << 3) + 3);
#line 3807
    while (1) {
#line 3807
      while (1) {
#line 3807
        tmp___101 = jit->ip;
#line 3807
        (jit->ip) ++;
#line 3807
        *tmp___101 = (unsigned char )(3 << 6);
#line 3807
        break;
      }
#line 3807
      break;
    }
#line 3807
    break;
  }
#line 3808
  while (1) {
#line 3808
    _amd64_width_temp = (size_t )(& jit_trace_callback) == (size_t )((int )((size_t )(& jit_trace_callback)));
#line 3808
    while (1) {
#line 3808
      while (1) {
#line 3808
        if (_amd64_width_temp) {
#line 3808
          tmp___104 = 4;
        } else {
#line 3808
          tmp___104 = 8;
        }
#line 3808
        if (tmp___104 > 4) {
#line 3808
          tmp___103 = 8;
        } else {
#line 3808
          tmp___103 = 0;
        }
#line 3808
        if (fun_reg > 7) {
#line 3808
          tmp___105 = 1;
        } else {
#line 3808
          tmp___105 = 0;
        }
#line 3808
        _amd64_rex_bits___12 = (unsigned char )(tmp___103 | tmp___105);
#line 3808
        if ((int )_amd64_rex_bits___12 != 0) {
#line 3808
          tmp___106 = jit->ip;
#line 3808
          (jit->ip) ++;
#line 3808
          *tmp___106 = (unsigned char )(0x40 | (int )_amd64_rex_bits___12);
        } else {
#line 3808
          if (_amd64_width_temp) {
#line 3808
            tmp___107 = 4;
          } else {
#line 3808
            tmp___107 = 8;
          }
#line 3808
          if (tmp___107 == 1) {
#line 3808
            tmp___106 = jit->ip;
#line 3808
            (jit->ip) ++;
#line 3808
            *tmp___106 = (unsigned char )(0x40 | (int )_amd64_rex_bits___12);
          }
        }
#line 3808
        break;
      }
#line 3808
      tmp___108 = jit->ip;
#line 3808
      (jit->ip) ++;
#line 3808
      *tmp___108 = (unsigned char )(184 + (fun_reg & 0x7));
#line 3808
      if (_amd64_width_temp) {
#line 3808
        tmp___121 = 4;
      } else {
#line 3808
        tmp___121 = 8;
      }
#line 3808
      if (tmp___121 == 8) {
#line 3808
        while (1) {
#line 3808
          imb___11.val = (size_t )(& jit_trace_callback);
#line 3808
          tmp___109 = jit->ip;
#line 3808
          (jit->ip) ++;
#line 3808
          *tmp___109 = imb___11.b[0];
#line 3808
          tmp___110 = jit->ip;
#line 3808
          (jit->ip) ++;
#line 3808
          *tmp___110 = imb___11.b[1];
#line 3808
          tmp___111 = jit->ip;
#line 3808
          (jit->ip) ++;
#line 3808
          *tmp___111 = imb___11.b[2];
#line 3808
          tmp___112 = jit->ip;
#line 3808
          (jit->ip) ++;
#line 3808
          *tmp___112 = imb___11.b[3];
#line 3808
          tmp___113 = jit->ip;
#line 3808
          (jit->ip) ++;
#line 3808
          *tmp___113 = imb___11.b[4];
#line 3808
          tmp___114 = jit->ip;
#line 3808
          (jit->ip) ++;
#line 3808
          *tmp___114 = imb___11.b[5];
#line 3808
          tmp___115 = jit->ip;
#line 3808
          (jit->ip) ++;
#line 3808
          *tmp___115 = imb___11.b[6];
#line 3808
          tmp___116 = jit->ip;
#line 3808
          (jit->ip) ++;
#line 3808
          *tmp___116 = imb___11.b[7];
#line 3808
          break;
        }
      } else {
#line 3808
        while (1) {
#line 3808
          imb___12.val = (int )((size_t )(& jit_trace_callback));
#line 3808
          tmp___117 = jit->ip;
#line 3808
          (jit->ip) ++;
#line 3808
          *tmp___117 = imb___12.b[0];
#line 3808
          tmp___118 = jit->ip;
#line 3808
          (jit->ip) ++;
#line 3808
          *tmp___118 = imb___12.b[1];
#line 3808
          tmp___119 = jit->ip;
#line 3808
          (jit->ip) ++;
#line 3808
          *tmp___119 = imb___12.b[2];
#line 3808
          tmp___120 = jit->ip;
#line 3808
          (jit->ip) ++;
#line 3808
          *tmp___120 = imb___12.b[3];
#line 3808
          break;
        }
      }
#line 3808
      break;
    }
#line 3808
    break;
  }
#line 3809
  while (1) {
#line 3809
    while (1) {
#line 3809
      if (fun_reg > 7) {
#line 3809
        tmp___122 = 1;
      } else {
#line 3809
        tmp___122 = 0;
      }
#line 3809
      _amd64_rex_bits___13 = (unsigned char )tmp___122;
#line 3809
      if ((int )_amd64_rex_bits___13 != 0) {
#line 3809
        tmp___123 = jit->ip;
#line 3809
        (jit->ip) ++;
#line 3809
        *tmp___123 = (unsigned char )(0x40 | (int )_amd64_rex_bits___13);
      }
#line 3809
      break;
    }
#line 3809
    tmp___124 = jit->ip;
#line 3809
    (jit->ip) ++;
#line 3809
    *tmp___124 = (unsigned char)255;
#line 3809
    while (1) {
#line 3809
      while (1) {
#line 3809
        tmp___125 = jit->ip;
#line 3809
        (jit->ip) ++;
#line 3809
        *tmp___125 = (unsigned char )(((3 << 6) | (2 << 3)) | ((fun_reg & 0x7) & 0x07));
#line 3809
        break;
      }
#line 3809
      break;
    }
#line 3809
    break;
  }
#line 3810
  while (1) {
#line 3810
    while (1) {
#line 3810
      _amd64_rex_bits___14 = (unsigned char)8;
#line 3810
      if ((int )_amd64_rex_bits___14 != 0) {
#line 3810
        tmp___126 = jit->ip;
#line 3810
        (jit->ip) ++;
#line 3810
        *tmp___126 = (unsigned char )(0x40 | (int )_amd64_rex_bits___14);
      }
#line 3810
      break;
    }
#line 3810
    while (1) {
#line 3810
      switch (4) {
      case 1: 
#line 3810
      tmp___127 = jit->ip;
#line 3810
      (jit->ip) ++;
#line 3810
      *tmp___127 = (unsigned char)138;
#line 3810
      break;
      case 2: 
#line 3810
      tmp___128 = jit->ip;
#line 3810
      (jit->ip) ++;
#line 3810
      *tmp___128 = (unsigned char)102;
      case 4: 
#line 3810
      tmp___129 = jit->ip;
#line 3810
      (jit->ip) ++;
#line 3810
      *tmp___129 = (unsigned char)139;
#line 3810
      break;
      default: 
#line 3810
      tmp___130 = __builtin_expect(1L, 0L);
#line 3810
      if (tmp___130) {
#line 3810
        __assert_rtn((char const   *)"emit_trace_op", (char const   *)"tmp/src.c",
                     2669, (char const   *)"0");
      }
      }
#line 3810
      while (1) {
#line 3810
        while (1) {
#line 3810
          tmp___131 = jit->ip;
#line 3810
          (jit->ip) ++;
#line 3810
          *tmp___131 = (unsigned char )(((3 << 6) | (4 << 3)) | 3);
#line 3810
          break;
        }
#line 3810
        break;
      }
#line 3810
      break;
    }
#line 3810
    break;
  }
#line 3811
  while (1) {
#line 3811
    while (1) {
#line 3811
      _amd64_rex_bits___15 = (unsigned char)0;
#line 3811
      if ((int )_amd64_rex_bits___15 != 0) {
#line 3811
        tmp___132 = jit->ip;
#line 3811
        (jit->ip) ++;
#line 3811
        *tmp___132 = (unsigned char )(0x40 | (int )_amd64_rex_bits___15);
      }
#line 3811
      break;
    }
#line 3811
    tmp___133 = jit->ip;
#line 3811
    (jit->ip) ++;
#line 3811
    *tmp___133 = (unsigned char)91;
#line 3811
    break;
  }
#line 3812
  emit_restore_all_regs(jit, op);
#line 3813
  return;
}
}
/* END FUNCTION-DEF emit_trace_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_generate_code LOC=UNKNOWN */
void jit_generate_code(struct jit *jit ) 
{ 
  int change ;
  int tmp ;
  int tmp___0 ;
  void *tmp___1 ;
  struct jit_op *op ;
  unsigned long offset_1 ;
  unsigned char *tmp___2 ;
  int i ;
  unsigned char *tmp___3 ;
  int i___0 ;
  unsigned long offset_2 ;
  int code_size ;
  struct jit_exec_mem *exec_mem ;
  struct jit_exec_mem *tmp___4 ;
  void *mem ;
  void *tmp___5 ;
  unsigned long long tmp___6 ;
  long pos ;
  jit_op *op___0 ;
  jit_op *tmp___7 ;

  {
#line 6592
  jit_expand_patches_and_labels(jit);
#line 6593
  jit_correct_long_imms(jit);
#line 6594
  jit_correct_float_imms(jit);
#line 6595
  jit_prepare_reg_counts(jit);
#line 6596
  jit_prepare_arguments(jit);
#line 6597
  jit_prepare_spills_on_jmpr_targets(jit);
#line 6598
  if (jit->optimizations & 8U) {
#line 6599
    jit_dead_code_analysis(jit, 1);
  }
#line 6601
  jit_flw_analysis(jit);
#line 6602
  if (jit->optimizations & 2U) {
#line 6602
    jit_optimize_unused_assignments(jit);
  }
#line 6603
  change = 0;
#line 6604
  jit_optimize_st_ops(jit);
#line 6605
  if (jit->optimizations & 4U) {
#line 6606
    tmp = jit_optimize_join_addmul(jit);
#line 6606
    change |= tmp;
#line 6607
    tmp___0 = jit_optimize_join_addimm(jit);
#line 6607
    change |= tmp___0;
  }
#line 6609
  if (change) {
#line 6609
    jit_flw_analysis(jit);
  }
#line 6610
  jit_collect_statistics(jit);
#line 6611
  jit_assign_regs(jit);
#line 6612
  if (jit->optimizations & 1U) {
#line 6612
    jit_optimize_frame_ptr(jit);
  }
#line 6613
  jit->buf_capacity = 4096U;
#line 6614
  tmp___1 = malloc((size_t )jit->buf_capacity);
#line 6614
  jit->buf = (unsigned char *)tmp___1;
#line 6615
  jit->ip = jit->buf;
#line 6616
  op = jit->ops;
#line 6616
  while ((unsigned long )op != (unsigned long )((void *)0)) {
#line 6617
    if ((long )jit->buf_capacity - (jit->ip - jit->buf) < 1024L) {
#line 6617
      jit_buf_expand(jit);
    }
#line 6618
    offset_1 = (unsigned long )(jit->ip - jit->buf);
#line 6619
    switch ((unsigned int )((jit_opcode )((int )op->code & 0xfff8))) {
    case 376U: 
#line 6620
    tmp___2 = jit->ip;
#line 6620
    (jit->ip) ++;
#line 6620
    *tmp___2 = (unsigned char )op->arg[0];
#line 6620
    break;
    case 160U: 
#line 6622
    while ((long )jit->buf_capacity - (jit->ip - jit->buf) < op->arg[0]) {
#line 6623
      jit_buf_expand(jit);
    }
#line 6624
    i = 0;
#line 6624
    while ((jit_value )i < op->arg[0]) {
#line 6625
      tmp___3 = jit->ip;
#line 6625
      (jit->ip) ++;
#line 6625
      *tmp___3 = *((unsigned char *)op->addendum + i);
#line 6624
      i ++;
    }
#line 6626
    break;
    case 704U: 
    case 856U: 
#line 6629
    op->patch_addr = (jit_value )jit->ip - (jit_value )jit->buf;
#line 6630
    i___0 = 0;
#line 6630
    while ((unsigned long long )i___0 < sizeof(void *)) {
#line 6631
      *(jit->ip) = (unsigned char)0;
#line 6632
      (jit->ip) ++;
#line 6630
      i___0 ++;
    }
#line 6634
    break;
    case 576U: 
    case 128U: 
    case 192U: 
    case 880U: 
    case 72U: 
#line 6640
    break;
    default: 
#line 6641
    jit_gen_op(jit, op);
    }
#line 6643
    offset_2 = (unsigned long )(jit->ip - jit->buf);
#line 6644
    op->code_offset = offset_1;
#line 6645
    op->code_length = offset_2 - offset_1;
#line 6616
    op = op->next;
  }
#line 6647
  code_size = (int )(jit->ip - jit->buf);
#line 6648
  tmp___4 = jit_exec_mem_new((size_t )jit->buf_capacity);
#line 6648
  exec_mem = tmp___4;
#line 6649
  tmp___5 = jit_exec_addr(exec_mem);
#line 6649
  mem = tmp___5;
#line 6650
  tmp___6 = __builtin_object_size(mem, 0);
#line 6650
  __builtin___memcpy_chk(mem, (void const   *)jit->buf, (unsigned long long )code_size,
                         tmp___6);
#line 6651
  free((void *)jit->buf);
#line 6652
  pos = jit->ip - jit->buf;
#line 6653
  jit->buf = (unsigned char *)mem;
#line 6654
  jit->ip = jit->buf + pos;
#line 6655
  jit->mmaped_buf = exec_mem;
#line 6656
  jit_patch_external_calls(jit);
#line 6657
  jit_patch_local_addrs(jit);
#line 6658
  tmp___7 = jit_op_first(jit->ops);
#line 6658
  op___0 = tmp___7;
#line 6658
  while ((unsigned long )op___0 != (unsigned long )((void *)0)) {
#line 6659
    if ((unsigned int )((jit_opcode )((int )op___0->code & 0xfff8)) == 688U) {
#line 6660
      *((void **)op___0->arg[0]) = (void *)(jit->buf + op___0->patch_addr);
    }
#line 6658
    op___0 = op___0->next;
  }
#line 6662
  jit_exec_mem_seal(exec_mem);
#line 6663
  return;
}
}
/* END FUNCTION-DEF jit_generate_code LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_dead_code_analysis LOC=UNKNOWN */
static void jit_dead_code_analysis(struct jit *jit , int remove_dead_code ) 
{ 
  jit_op *op ;
  jit_op *tmp ;
  jit_op *op___0 ;
  jit_op *tmp___0 ;
  jit_op *op___1 ;
  jit_op *tmp___1 ;
  jit_op *op___2 ;
  jit_op *tmp___2 ;
  jit_op *next ;

  {
#line 4884
  tmp = jit_op_first(jit->ops);
#line 4884
  op = tmp;
#line 4884
  while (op) {
#line 4885
    op->in_use = (unsigned char)0;
#line 4884
    op = op->next;
  }
#line 4886
  tmp___0 = jit_op_first(jit->ops);
#line 4886
  op___0 = tmp___0;
#line 4886
  while (op___0) {
#line 4887
    if ((unsigned int )((jit_opcode )((int )op___0->code & 0xfff8)) == 688U) {
#line 4887
      mark_livecode(op___0);
    }
#line 4888
    if ((unsigned int )((jit_opcode )((int )op___0->code & 0xfff8)) == 856U) {
#line 4888
      mark_livecode(op___0->jmp_addr);
    }
#line 4886
    op___0 = op___0->next;
  }
#line 4890
  tmp___1 = jit_op_first(jit->ops);
#line 4890
  op___1 = tmp___1;
#line 4890
  while (op___1) {
#line 4891
    if ((unsigned int )((jit_opcode )((int )op___1->code & 0xfff8)) == 720U) {
#line 4891
      op___1->in_use = (unsigned char)1;
    }
#line 4892
    if ((unsigned int )((jit_opcode )((int )op___1->code & 0xfff8)) == 376U) {
#line 4892
      op___1->in_use = (unsigned char)1;
    }
#line 4893
    if ((unsigned int )((jit_opcode )((int )op___1->code & 0xfff8)) == 856U) {
#line 4893
      op___1->in_use = (unsigned char)1;
    }
#line 4894
    if ((unsigned int )((jit_opcode )((int )op___1->code & 0xfff8)) == 704U) {
#line 4894
      op___1->in_use = (unsigned char)1;
    }
#line 4895
    if ((unsigned int )((jit_opcode )((int )op___1->code & 0xfff8)) == 872U) {
#line 4895
      op___1->in_use = (unsigned char)1;
    }
#line 4896
    if ((unsigned int )((jit_opcode )((int )op___1->code & 0xfff8)) == 136U) {
#line 4896
      op___1->in_use = (unsigned char)1;
    }
#line 4897
    if ((unsigned int )((jit_opcode )((int )op___1->code & 0xfff8)) == 616U) {
#line 4897
      op___1->in_use = (unsigned char)1;
    }
#line 4898
    if ((unsigned int )((jit_opcode )((int )op___1->code & 0xfff8)) == 192U) {
#line 4898
      op___1->in_use = (unsigned char)1;
    }
#line 4899
    if ((unsigned int )((jit_opcode )((int )op___1->code & 0xfff8)) == 128U) {
#line 4899
      op___1->in_use = (unsigned char)1;
    }
#line 4890
    op___1 = op___1->next;
  }
#line 4901
  if (! remove_dead_code) {
#line 4901
    return;
  }
#line 4902
  tmp___2 = jit_op_first(jit->ops);
#line 4902
  op___2 = tmp___2;
#line 4903
  while (op___2) {
#line 4904
    if (! op___2->in_use) {
#line 4905
      if ((unsigned int )((jit_opcode )((int )op___2->code & 0xfff8)) == 816U) {
#line 4905
        goto skip;
      }
#line 4906
      next = op___2->next;
#line 4907
      jit_op_delete(op___2);
#line 4908
      op___2 = next;
#line 4909
      continue;
    }
    skip: 
#line 4912
    op___2 = op___2->next;
  }
#line 4914
  return;
}
}
/* END FUNCTION-DEF jit_dead_code_analysis LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF emit_sse_div_op LOC=UNKNOWN */
static void emit_sse_div_op(struct jit *jit , jit_value a1 , jit_value a2 , jit_value a3 ) 
{ 
  unsigned char *tmp ;
  unsigned char _amd64_rex_bits ;
  int tmp___0 ;
  int tmp___1 ;
  unsigned char *tmp___2 ;
  unsigned char *tmp___3 ;
  unsigned char *tmp___4 ;
  unsigned char *tmp___5 ;
  unsigned char *tmp___6 ;
  unsigned char *tmp___7 ;
  unsigned char *tmp___8 ;
  unsigned char *tmp___9 ;
  unsigned char *tmp___10 ;
  unsigned char *tmp___11 ;
  unsigned char _amd64_rex_bits___0 ;
  int tmp___12 ;
  int tmp___13 ;
  unsigned char *tmp___14 ;
  unsigned char *tmp___15 ;
  unsigned char *tmp___16 ;
  unsigned char *tmp___17 ;
  unsigned char *tmp___18 ;
  unsigned char _amd64_rex_bits___1 ;
  int tmp___19 ;
  int tmp___20 ;
  unsigned char *tmp___21 ;
  unsigned char *tmp___22 ;
  unsigned char *tmp___23 ;
  unsigned char *tmp___24 ;
  unsigned char *tmp___25 ;
  unsigned char *tmp___26 ;
  unsigned char *tmp___27 ;
  unsigned char *tmp___28 ;
  unsigned char *tmp___29 ;
  unsigned char *tmp___30 ;
  unsigned char _amd64_rex_bits___2 ;
  int tmp___31 ;
  int tmp___32 ;
  unsigned char *tmp___33 ;
  unsigned char *tmp___34 ;
  unsigned char *tmp___35 ;
  unsigned char *tmp___36 ;
  unsigned char *tmp___37 ;
  unsigned char _amd64_rex_bits___3 ;
  int tmp___38 ;
  int tmp___39 ;
  unsigned char *tmp___40 ;
  unsigned char *tmp___41 ;
  unsigned char *tmp___42 ;
  unsigned char *tmp___43 ;

  {
#line 3023
  if (a1 == a2) {
#line 3024
    while (1) {
#line 3024
      tmp = jit->ip;
#line 3024
      (jit->ip) ++;
#line 3024
      *tmp = (unsigned char)242;
#line 3024
      while (1) {
#line 3024
        if (a1 > 7L) {
#line 3024
          tmp___0 = 4;
        } else {
#line 3024
          tmp___0 = 0;
        }
#line 3024
        if (a3 > 7L) {
#line 3024
          tmp___1 = 1;
        } else {
#line 3024
          tmp___1 = 0;
        }
#line 3024
        _amd64_rex_bits = (unsigned char )(tmp___0 | tmp___1);
#line 3024
        if ((int )_amd64_rex_bits != 0) {
#line 3024
          tmp___2 = jit->ip;
#line 3024
          (jit->ip) ++;
#line 3024
          *tmp___2 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
        }
#line 3024
        break;
      }
#line 3024
      tmp___3 = jit->ip;
#line 3024
      (jit->ip) ++;
#line 3024
      *tmp___3 = (unsigned char)15;
#line 3024
      tmp___4 = jit->ip;
#line 3024
      (jit->ip) ++;
#line 3024
      *tmp___4 = (unsigned char)94;
#line 3024
      while (1) {
#line 3024
        while (1) {
#line 3024
          tmp___5 = jit->ip;
#line 3024
          (jit->ip) ++;
#line 3024
          *tmp___5 = (unsigned char )(((long )(3 << 6) | ((a1 & 7L) << 3)) | (a3 & 7L));
#line 3024
          break;
        }
#line 3024
        break;
      }
#line 3024
      break;
    }
  } else
#line 3025
  if (a1 == a3) {
#line 3026
    while (1) {
#line 3026
      while (1) {
#line 3026
        tmp___6 = jit->ip;
#line 3026
        (jit->ip) ++;
#line 3026
        *tmp___6 = (unsigned char)102;
#line 3026
        while (1) {
#line 3026
          tmp___7 = jit->ip;
#line 3026
          (jit->ip) ++;
#line 3026
          *tmp___7 = (unsigned char)15;
#line 3026
          tmp___8 = jit->ip;
#line 3026
          (jit->ip) ++;
#line 3026
          *tmp___8 = (unsigned char)198;
#line 3026
          while (1) {
#line 3026
            while (1) {
#line 3026
              tmp___9 = jit->ip;
#line 3026
              (jit->ip) ++;
#line 3026
              *tmp___9 = (unsigned char )(((long )(3 << 6) | ((a2 & 7L) << 3)) | (a2 & 7L));
#line 3026
              break;
            }
#line 3026
            break;
          }
#line 3026
          break;
        }
#line 3026
        break;
      }
#line 3026
      tmp___10 = jit->ip;
#line 3026
      (jit->ip) ++;
#line 3026
      *tmp___10 = (unsigned char)0;
#line 3026
      break;
    }
#line 3027
    while (1) {
#line 3027
      tmp___11 = jit->ip;
#line 3027
      (jit->ip) ++;
#line 3027
      *tmp___11 = (unsigned char)242;
#line 3027
      while (1) {
#line 3027
        if (a2 > 7L) {
#line 3027
          tmp___12 = 4;
        } else {
#line 3027
          tmp___12 = 0;
        }
#line 3027
        if (a3 > 7L) {
#line 3027
          tmp___13 = 1;
        } else {
#line 3027
          tmp___13 = 0;
        }
#line 3027
        _amd64_rex_bits___0 = (unsigned char )(tmp___12 | tmp___13);
#line 3027
        if ((int )_amd64_rex_bits___0 != 0) {
#line 3027
          tmp___14 = jit->ip;
#line 3027
          (jit->ip) ++;
#line 3027
          *tmp___14 = (unsigned char )(0x40 | (int )_amd64_rex_bits___0);
        }
#line 3027
        break;
      }
#line 3027
      tmp___15 = jit->ip;
#line 3027
      (jit->ip) ++;
#line 3027
      *tmp___15 = (unsigned char)15;
#line 3027
      tmp___16 = jit->ip;
#line 3027
      (jit->ip) ++;
#line 3027
      *tmp___16 = (unsigned char)94;
#line 3027
      while (1) {
#line 3027
        while (1) {
#line 3027
          tmp___17 = jit->ip;
#line 3027
          (jit->ip) ++;
#line 3027
          *tmp___17 = (unsigned char )(((long )(3 << 6) | ((a2 & 7L) << 3)) | (a3 & 7L));
#line 3027
          break;
        }
#line 3027
        break;
      }
#line 3027
      break;
    }
#line 3028
    while (1) {
#line 3028
      tmp___18 = jit->ip;
#line 3028
      (jit->ip) ++;
#line 3028
      *tmp___18 = (unsigned char)242;
#line 3028
      while (1) {
#line 3028
        if (a1 > 7L) {
#line 3028
          tmp___19 = 4;
        } else {
#line 3028
          tmp___19 = 0;
        }
#line 3028
        if (a2 > 7L) {
#line 3028
          tmp___20 = 1;
        } else {
#line 3028
          tmp___20 = 0;
        }
#line 3028
        _amd64_rex_bits___1 = (unsigned char )(tmp___19 | tmp___20);
#line 3028
        if ((int )_amd64_rex_bits___1 != 0) {
#line 3028
          tmp___21 = jit->ip;
#line 3028
          (jit->ip) ++;
#line 3028
          *tmp___21 = (unsigned char )(0x40 | (int )_amd64_rex_bits___1);
        }
#line 3028
        break;
      }
#line 3028
      tmp___22 = jit->ip;
#line 3028
      (jit->ip) ++;
#line 3028
      *tmp___22 = (unsigned char)15;
#line 3028
      tmp___23 = jit->ip;
#line 3028
      (jit->ip) ++;
#line 3028
      *tmp___23 = (unsigned char)16;
#line 3028
      while (1) {
#line 3028
        while (1) {
#line 3028
          tmp___24 = jit->ip;
#line 3028
          (jit->ip) ++;
#line 3028
          *tmp___24 = (unsigned char )(((long )(3 << 6) | ((a1 & 7L) << 3)) | (a2 & 7L));
#line 3028
          break;
        }
#line 3028
        break;
      }
#line 3028
      break;
    }
#line 3029
    while (1) {
#line 3029
      while (1) {
#line 3029
        tmp___25 = jit->ip;
#line 3029
        (jit->ip) ++;
#line 3029
        *tmp___25 = (unsigned char)102;
#line 3029
        while (1) {
#line 3029
          tmp___26 = jit->ip;
#line 3029
          (jit->ip) ++;
#line 3029
          *tmp___26 = (unsigned char)15;
#line 3029
          tmp___27 = jit->ip;
#line 3029
          (jit->ip) ++;
#line 3029
          *tmp___27 = (unsigned char)198;
#line 3029
          while (1) {
#line 3029
            while (1) {
#line 3029
              tmp___28 = jit->ip;
#line 3029
              (jit->ip) ++;
#line 3029
              *tmp___28 = (unsigned char )(((long )(3 << 6) | ((a2 & 7L) << 3)) | (a2 & 7L));
#line 3029
              break;
            }
#line 3029
            break;
          }
#line 3029
          break;
        }
#line 3029
        break;
      }
#line 3029
      tmp___29 = jit->ip;
#line 3029
      (jit->ip) ++;
#line 3029
      *tmp___29 = (unsigned char)1;
#line 3029
      break;
    }
  } else {
#line 3031
    while (1) {
#line 3031
      tmp___30 = jit->ip;
#line 3031
      (jit->ip) ++;
#line 3031
      *tmp___30 = (unsigned char)242;
#line 3031
      while (1) {
#line 3031
        if (a1 > 7L) {
#line 3031
          tmp___31 = 4;
        } else {
#line 3031
          tmp___31 = 0;
        }
#line 3031
        if (a2 > 7L) {
#line 3031
          tmp___32 = 1;
        } else {
#line 3031
          tmp___32 = 0;
        }
#line 3031
        _amd64_rex_bits___2 = (unsigned char )(tmp___31 | tmp___32);
#line 3031
        if ((int )_amd64_rex_bits___2 != 0) {
#line 3031
          tmp___33 = jit->ip;
#line 3031
          (jit->ip) ++;
#line 3031
          *tmp___33 = (unsigned char )(0x40 | (int )_amd64_rex_bits___2);
        }
#line 3031
        break;
      }
#line 3031
      tmp___34 = jit->ip;
#line 3031
      (jit->ip) ++;
#line 3031
      *tmp___34 = (unsigned char)15;
#line 3031
      tmp___35 = jit->ip;
#line 3031
      (jit->ip) ++;
#line 3031
      *tmp___35 = (unsigned char)16;
#line 3031
      while (1) {
#line 3031
        while (1) {
#line 3031
          tmp___36 = jit->ip;
#line 3031
          (jit->ip) ++;
#line 3031
          *tmp___36 = (unsigned char )(((long )(3 << 6) | ((a1 & 7L) << 3)) | (a2 & 7L));
#line 3031
          break;
        }
#line 3031
        break;
      }
#line 3031
      break;
    }
#line 3032
    while (1) {
#line 3032
      tmp___37 = jit->ip;
#line 3032
      (jit->ip) ++;
#line 3032
      *tmp___37 = (unsigned char)242;
#line 3032
      while (1) {
#line 3032
        if (a1 > 7L) {
#line 3032
          tmp___38 = 4;
        } else {
#line 3032
          tmp___38 = 0;
        }
#line 3032
        if (a3 > 7L) {
#line 3032
          tmp___39 = 1;
        } else {
#line 3032
          tmp___39 = 0;
        }
#line 3032
        _amd64_rex_bits___3 = (unsigned char )(tmp___38 | tmp___39);
#line 3032
        if ((int )_amd64_rex_bits___3 != 0) {
#line 3032
          tmp___40 = jit->ip;
#line 3032
          (jit->ip) ++;
#line 3032
          *tmp___40 = (unsigned char )(0x40 | (int )_amd64_rex_bits___3);
        }
#line 3032
        break;
      }
#line 3032
      tmp___41 = jit->ip;
#line 3032
      (jit->ip) ++;
#line 3032
      *tmp___41 = (unsigned char)15;
#line 3032
      tmp___42 = jit->ip;
#line 3032
      (jit->ip) ++;
#line 3032
      *tmp___42 = (unsigned char)94;
#line 3032
      while (1) {
#line 3032
        while (1) {
#line 3032
          tmp___43 = jit->ip;
#line 3032
          (jit->ip) ++;
#line 3032
          *tmp___43 = (unsigned char )(((long )(3 << 6) | ((a1 & 7L) << 3)) | (a3 & 7L));
#line 3032
          break;
        }
#line 3032
        break;
      }
#line 3032
      break;
    }
  }
#line 3034
  return;
}
}
/* END FUNCTION-DEF emit_sse_div_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF print_load_op LOC=UNKNOWN */
static int print_load_op(struct jit_disasm *disasm , struct output_buf *linebuf ,
                         jit_op *op ) 
{ 
  char rbuf[256] ;
  char *tmp ;
  char *tmp___0 ;
  jit_value reg ;
  char *tmp___1 ;
  char *tmp___2 ;

  {
#line 5265
  switch ((unsigned int )((jit_opcode )((int )op->code & 0xfff8))) {
  case 512U: 
#line 5267
  ob_append(linebuf, disasm->indent_template);
#line 5268
  tmp = jit_get_op_name(op);
#line 5268
  ob_append(linebuf, tmp);
#line 5269
  ob_pad(linebuf, 13);
#line 5270
  jit_get_reg_name(disasm, rbuf, (int )op->arg[1]);
#line 5271
  ob_append(linebuf, rbuf);
#line 5272
  return (1);
  case 592U: 
  case 464U: 
#line 5275
  ob_append(linebuf, disasm->indent_template);
#line 5276
  tmp___0 = jit_get_op_name(op);
#line 5276
  ob_append(linebuf, tmp___0);
#line 5277
  ob_pad(linebuf, 13);
#line 5278
  jit_get_reg_name(disasm, rbuf, (int )op->arg[0]);
#line 5279
  ob_append(linebuf, rbuf);
#line 5280
  return (1);
  case 432U: 
#line 5283
  rmap_is_associated((op->prev)->regmap, (int )op->arg[1], 0, & reg);
#line 5284
  ob_append(linebuf, disasm->indent_template);
#line 5285
  tmp___1 = jit_get_op_name(op);
#line 5285
  ob_append(linebuf, tmp___1);
#line 5286
  ob_append(linebuf, " ");
#line 5287
  ob_pad(linebuf, 13);
#line 5288
  jit_get_reg_name(disasm, rbuf, (int )reg);
#line 5289
  ob_append(linebuf, rbuf);
#line 5290
  return (1);
  case 816U: 
#line 5293
  ob_append(linebuf, disasm->indent_template);
#line 5294
  tmp___2 = jit_get_op_name(op);
#line 5294
  ob_append(linebuf, tmp___2);
#line 5295
  return (1);
  default: 
#line 5297
  return (0);
  }
}
}
/* END FUNCTION-DEF print_load_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF stack_fparg_pos LOC=UNKNOWN */
__inline static int stack_fparg_pos(struct jit *jit , struct jit_func_info *info ,
                                    int arg ) 
{ 


  {
#line 3198
  return ((int )(- (info->allocai_mem + (long )((((info->gp_reg_count + info->fp_reg_count) + arg) + 1) * (int )sizeof(void *)))));
}
}
/* END FUNCTION-DEF stack_fparg_pos LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF assign_regs LOC=UNKNOWN */
static void assign_regs(struct jit *jit , struct jit_op *op ) 
{ 
  int i ;
  int skip ;
  struct jit_reg_allocator *al ;
  struct jit_func_info *info ;
  jit_reg virt_reg ;

  {
#line 6113
  skip = 0;
#line 6114
  al = jit->reg_al;
#line 6115
  if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 688U) {
#line 6116
    info = (struct jit_func_info *)op->arg[1];
#line 6117
    al->current_func_info = info;
#line 6118
    assign_regs_for_args(al, op);
  } else
#line 6120
  if (op->prev) {
#line 6121
    rmap_free(op->regmap);
#line 6122
    op->regmap = rmap_clone((op->prev)->regmap);
  }
#line 6125
  switch ((unsigned int )((jit_opcode )((int )op->code & 0xfff8))) {
  case 784U: 
#line 6126
  prepare_registers_for_call(al, op);
#line 6126
  break;
  case 216U: 
#line 6127
  skip = 1;
#line 6127
  break;
  case 200U: 
#line 6128
  skip = 1;
#line 6128
  break;
  case 472U: 
#line 6129
  skip = assign_ret_reg(op, al->ret_reg);
#line 6129
  break;
  case 568U: 
#line 6130
  skip = assign_ret_reg(op, al->fpret_reg);
#line 6130
  break;
  case 224U: 
#line 6131
  skip = assign_getarg(op, al);
#line 6131
  break;
  case 232U: 
#line 6132
  skip = assign_call(op, al);
#line 6132
  break;
  case 624U: 
#line 6133
  skip = assign_jmp(op, al);
#line 6133
  break;
  case 816U: 
#line 6134
  skip = spill_all_registers(op, al);
#line 6134
  break;
  case 72U: 
#line 6135
  skip = force_spill(op);
#line 6135
  break;
  case 880U: 
#line 6136
  skip = force_assoc(op, al);
#line 6136
  break;
  default: 
#line 6137
  break;
  }
#line 6139
  if (skip) {
#line 6139
    return;
  }
#line 6140
  i = 0;
#line 6140
  while (i < 3) {
#line 6141
    if ((((int )op->spec >> ((i + 1) - 1) * 2) & 0x03) == 0x01) {
#line 6141
      goto _L;
    } else
#line 6141
    if ((((int )op->spec >> ((i + 1) - 1) * 2) & 0x03) == 0x03) {
      _L: /* CIL Label */ 
#line 6142
      virt_reg = op->arg[i];
#line 6143
      if (((virt_reg >> 1) & 3L) == 2L) {
#line 6143
        associate_register_alias(al, op, i);
      } else {
#line 6144
        associate_register(al, op, i);
      }
    } else
#line 6145
    if ((((int )op->spec >> ((i + 1) - 1) * 2) & 0x03) == 0x02) {
#line 6146
      op->r_arg[i] = op->arg[i];
    }
#line 6140
    i ++;
  }
#line 6149
  return;
}
}
/* END FUNCTION-DEF assign_regs LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF initialize_code_refs LOC=UNKNOWN */
__inline static void initialize_code_refs(struct code_refs_cache *code_refs , struct jit_func_info *func_info ) 
{ 
  jit_op *op ;
  void *tmp ;
  int i ;
  int tmp___0 ;

  {
#line 4788
  op = (func_info->first_op)->next;
#line 4789
  code_refs->size = 0;
#line 4790
  while (1) {
#line 4790
    if (op) {
#line 4790
      if (! ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) != 688U)) {
#line 4790
        break;
      }
    } else {
#line 4790
      break;
    }
#line 4791
    if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 280U) {
#line 4792
      (code_refs->size) ++;
    } else
#line 4791
    if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 856U) {
#line 4792
      (code_refs->size) ++;
    }
#line 4793
    op = op->next;
  }
#line 4795
  tmp = malloc((size_t )(sizeof(jit_op *) * (unsigned long long )code_refs->size));
#line 4795
  code_refs->ops = (jit_op **)tmp;
#line 4796
  op = (func_info->first_op)->next;
#line 4797
  i = 0;
#line 4798
  while (1) {
#line 4798
    if (op) {
#line 4798
      if (! ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) != 688U)) {
#line 4798
        break;
      }
    } else {
#line 4798
      break;
    }
#line 4799
    if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 280U) {
#line 4800
      tmp___0 = i;
#line 4800
      i ++;
#line 4800
      *(code_refs->ops + tmp___0) = op;
    } else
#line 4799
    if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 856U) {
#line 4800
      tmp___0 = i;
#line 4800
      i ++;
#line 4800
      *(code_refs->ops + tmp___0) = op;
    }
#line 4801
    op = op->next;
  }
#line 4803
  return;
}
}
/* END FUNCTION-DEF initialize_code_refs LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_reg_allocator_free LOC=UNKNOWN */
void jit_reg_allocator_free(struct jit_reg_allocator *a ) 
{ 


  {
#line 6292
  if (a->fp_regs) {
#line 6292
    free((void *)a->fp_regs);
  }
#line 6293
  free((void *)a->gp_regs);
#line 6294
  if (a->fp_arg_regs) {
#line 6294
    free((void *)a->fp_arg_regs);
  }
#line 6295
  if (a->gp_arg_regs) {
#line 6295
    free((void *)a->gp_arg_regs);
  }
#line 6296
  free((void *)a);
#line 6297
  return;
}
}
/* END FUNCTION-DEF jit_reg_allocator_free LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF emit_pop_callee_saved_regs LOC=UNKNOWN */
static int emit_pop_callee_saved_regs(struct jit *jit ) 
{ 
  int count ;
  jit_hw_reg *active_regs[32] ;
  int stack_space ;
  int tmp ;
  int stack_offset ;
  int i ;
  int tmp___0 ;
  unsigned char _amd64_rex_bits ;
  unsigned char *tmp___1 ;
  unsigned char *tmp___2 ;
  unsigned char *tmp___3 ;
  unsigned char _amd64_rex_bits___0 ;
  unsigned char *tmp___4 ;
  unsigned char *tmp___5 ;
  x86_imm_buf imb ;
  unsigned char *tmp___6 ;
  unsigned char *tmp___7 ;
  unsigned char *tmp___8 ;
  unsigned char *tmp___9 ;
  unsigned char _amd64_rex_bits___1 ;
  unsigned char *tmp___10 ;
  unsigned char *tmp___11 ;
  unsigned char *tmp___12 ;
  x86_imm_buf imb___0 ;
  unsigned char *tmp___13 ;
  unsigned char *tmp___14 ;
  unsigned char *tmp___15 ;
  unsigned char *tmp___16 ;

  {
#line 3954
  count = 0;
#line 3956
  tmp = list_callee_saved_regs(jit, jit->current_func, active_regs, & count);
#line 3956
  stack_space = tmp;
#line 3957
  stack_offset = 0;
#line 3958
  i = 0;
#line 3958
  while (i < count) {
#line 3959
    tmp___0 = emit_pop_reg(jit, active_regs[i], stack_offset);
#line 3959
    stack_offset += tmp___0;
#line 3958
    i ++;
  }
#line 3961
  if (stack_space) {
#line 3961
    while (1) {
#line 3961
      if ((jit_value )stack_space >= -128L) {
#line 3961
        if ((jit_value )stack_space <= 127L) {
#line 3961
          while (1) {
#line 3961
            _amd64_rex_bits = (unsigned char)8;
#line 3961
            if ((int )_amd64_rex_bits != 0) {
#line 3961
              tmp___1 = jit->ip;
#line 3961
              (jit->ip) ++;
#line 3961
              *tmp___1 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
            }
#line 3961
            break;
          }
#line 3961
          tmp___2 = jit->ip;
#line 3961
          (jit->ip) ++;
#line 3961
          *tmp___2 = (unsigned char)131;
#line 3961
          while (1) {
#line 3961
            while (1) {
#line 3961
              tmp___3 = jit->ip;
#line 3961
              (jit->ip) ++;
#line 3961
              *tmp___3 = (unsigned char )((3 << 6) | 4);
#line 3961
              break;
            }
#line 3961
            break;
          }
#line 3961
          while (1) {
#line 3961
            *(jit->ip) = (unsigned char )(stack_space & 0xff);
#line 3961
            (jit->ip) ++;
#line 3961
            break;
          }
        } else {
#line 3961
          goto _L;
        }
      } else {
        _L: /* CIL Label */ 
#line 3961
        while (1) {
#line 3961
          _amd64_rex_bits___1 = (unsigned char)8;
#line 3961
          if ((int )_amd64_rex_bits___1 != 0) {
#line 3961
            tmp___10 = jit->ip;
#line 3961
            (jit->ip) ++;
#line 3961
            *tmp___10 = (unsigned char )(0x40 | (int )_amd64_rex_bits___1);
          }
#line 3961
          break;
        }
#line 3961
        tmp___11 = jit->ip;
#line 3961
        (jit->ip) ++;
#line 3961
        *tmp___11 = (unsigned char)129;
#line 3961
        while (1) {
#line 3961
          while (1) {
#line 3961
            tmp___12 = jit->ip;
#line 3961
            (jit->ip) ++;
#line 3961
            *tmp___12 = (unsigned char )((3 << 6) | 4);
#line 3961
            break;
          }
#line 3961
          break;
        }
#line 3961
        while (1) {
#line 3961
          imb___0.val = stack_space;
#line 3961
          tmp___13 = jit->ip;
#line 3961
          (jit->ip) ++;
#line 3961
          *tmp___13 = imb___0.b[0];
#line 3961
          tmp___14 = jit->ip;
#line 3961
          (jit->ip) ++;
#line 3961
          *tmp___14 = imb___0.b[1];
#line 3961
          tmp___15 = jit->ip;
#line 3961
          (jit->ip) ++;
#line 3961
          *tmp___15 = imb___0.b[2];
#line 3961
          tmp___16 = jit->ip;
#line 3961
          (jit->ip) ++;
#line 3961
          *tmp___16 = imb___0.b[3];
#line 3961
          break;
        }
      }
#line 3961
      break;
    }
  }
#line 3962
  return (stack_space / (int )sizeof(void *));
}
}
/* END FUNCTION-DEF emit_pop_callee_saved_regs LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF print_full_op_name LOC=UNKNOWN */
void print_full_op_name(struct output_buf *linebuf , jit_op *op ) 
{ 
  char *op_name ;
  char *tmp ;

  {
#line 5255
  tmp = jit_get_op_name(op);
#line 5255
  op_name = tmp;
#line 5256
  ob_append(linebuf, op_name);
#line 5257
  if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 232U) {
#line 5257
    if (((int )op->code & 0x0007) & 0x02) {
#line 5257
      return;
    }
  }
#line 5258
  if (((int )op->code & 0x0007) & 0x02) {
#line 5258
    ob_append(linebuf, "i");
  }
#line 5259
  if (((int )op->code & 0x0007) & 0x01) {
#line 5259
    ob_append(linebuf, "r");
  }
#line 5260
  if (((int )op->code & 0x0007) & 0x04) {
#line 5260
    ob_append(linebuf, "_u");
  }
#line 5261
  return;
}
}
/* END FUNCTION-DEF print_full_op_name LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF list_callee_saved_regs LOC=UNKNOWN */
static int list_callee_saved_regs(struct jit *jit , jit_op *func_start , jit_hw_reg **active_regs ,
                                  int *count ) 
{ 
  int i ;
  jit_hw_reg *r ;
  struct jit_op *o ;
  int tmp ;
  int stack_space ;
  jit_value tmp___0 ;

  {
#line 3908
  *count = 0;
#line 3909
  i = (jit->reg_al)->gp_reg_cnt - 1;
#line 3909
  while (i >= 0) {
#line 3910
    r = (jit->reg_al)->gp_regs + i;
#line 3911
    if (! r->callee_saved) {
#line 3911
      goto __Cont;
    }
#line 3912
    o = func_start->next;
#line 3912
    while ((unsigned long )o != (unsigned long )((void *)0)) {
#line 3913
      if ((unsigned int )((jit_opcode )((int )o->code & 0xfff8)) == 688U) {
#line 3913
        break;
      }
#line 3914
      tmp = uses_hw_reg(o, (jit_value )r->id, 0);
#line 3914
      if (tmp) {
#line 3915
        *(active_regs + *count) = r;
#line 3916
        (*count) ++;
#line 3917
        break;
      }
#line 3912
      o = o->next;
    }
    __Cont: /* CIL Label */ 
#line 3909
    i --;
  }
#line 3921
  tmp___0 = jit_value_align((jit_value )(*count * (int )sizeof(void *)), (jit_value )16);
#line 3921
  stack_space = (int )tmp___0;
#line 3922
  return (stack_space);
}
}
/* END FUNCTION-DEF list_callee_saved_regs LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF __darwin_fd_set LOC=UNKNOWN */
__inline void ( __attribute__((__always_inline__)) __darwin_fd_set)(int _fd , struct fd_set *_p ) 
{ 
  int tmp ;

  {
#line 85 "/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_fd_def.h"
  tmp = __darwin_check_fd_set(_fd, (void const   *)_p);
#line 85
  if (tmp) {
#line 86
    _p->fds_bits[(unsigned long long )((unsigned long )_fd) / (sizeof(__int32_t ) * 8ULL)] |= (__int32_t )(1UL << (unsigned long long )((unsigned long )_fd) % (sizeof(__int32_t ) * 8ULL));
  }
#line 88
  return;
}
}
/* END FUNCTION-DEF __darwin_fd_set LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF copy_reg_to_array LOC=UNKNOWN */
static void copy_reg_to_array(jit_tree_key key , jit_tree_value value , void *target ) 
{ 
  struct copy_target *t ;

  {
#line 2306 "<string>"
  t = (struct copy_target *)target;
#line 2307
  *(t->target + t->index) = key;
#line 2308
  (t->index) ++;
#line 2309
  return;
}
}
/* END FUNCTION-DEF copy_reg_to_array LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF emit_mul_op LOC=UNKNOWN */
static void emit_mul_op(struct jit *jit , struct jit_op *op , int imm , int sign ,
                        int high_bytes ) 
{ 
  jit_value dest ;
  jit_value factor1 ;
  jit_value factor2 ;
  unsigned char _amd64_rex_bits ;
  int tmp ;
  unsigned char *tmp___0 ;
  unsigned char *tmp___1 ;
  unsigned char *tmp___2 ;
  unsigned char *tmp___3 ;
  unsigned char *tmp___4 ;
  unsigned char _amd64_rex_bits___0 ;
  int tmp___5 ;
  int tmp___6 ;
  int tmp___7 ;
  unsigned char *tmp___8 ;
  unsigned char *tmp___9 ;
  unsigned char *tmp___10 ;
  unsigned char *tmp___11 ;
  x86_imm_buf imb ;
  unsigned char *tmp___12 ;
  unsigned char *tmp___13 ;
  unsigned char *tmp___14 ;
  unsigned char *tmp___15 ;
  unsigned char *tmp___16 ;
  unsigned char *tmp___17 ;
  unsigned char *tmp___18 ;
  unsigned char *tmp___19 ;
  unsigned char *tmp___20 ;
  unsigned char *tmp___21 ;
  x86_imm_buf imb___0 ;
  unsigned char *tmp___22 ;
  unsigned char *tmp___23 ;
  unsigned char *tmp___24 ;
  unsigned char *tmp___25 ;
  unsigned char _amd64_rex_bits___1 ;
  int tmp___26 ;
  int tmp___27 ;
  int tmp___28 ;
  unsigned char *tmp___29 ;
  unsigned char *tmp___30 ;
  unsigned char *tmp___31 ;
  unsigned char *tmp___32 ;
  x86_imm_buf imb___1 ;
  unsigned char *tmp___33 ;
  unsigned char *tmp___34 ;
  unsigned char *tmp___35 ;
  unsigned char *tmp___36 ;
  unsigned char *tmp___37 ;
  unsigned char *tmp___38 ;
  unsigned char *tmp___39 ;
  unsigned char *tmp___40 ;
  unsigned char *tmp___41 ;
  unsigned char *tmp___42 ;
  x86_imm_buf imb___2 ;
  unsigned char *tmp___43 ;
  unsigned char *tmp___44 ;
  unsigned char *tmp___45 ;
  unsigned char *tmp___46 ;
  unsigned char *tmp___47 ;
  unsigned char _amd64_rex_bits___2 ;
  int tmp___48 ;
  int tmp___49 ;
  int tmp___50 ;
  unsigned char *tmp___51 ;
  unsigned char *tmp___52 ;
  unsigned char *tmp___53 ;
  long tmp___54 ;
  unsigned char *tmp___55 ;
  unsigned char _amd64_rex_bits___3 ;
  int tmp___56 ;
  unsigned char *tmp___57 ;
  unsigned char *tmp___58 ;
  unsigned char *tmp___59 ;
  unsigned char *tmp___60 ;
  unsigned char *tmp___61 ;
  unsigned char _amd64_rex_bits___4 ;
  int tmp___62 ;
  int tmp___63 ;
  int tmp___64 ;
  unsigned char *tmp___65 ;
  unsigned char *tmp___66 ;
  unsigned char *tmp___67 ;
  unsigned char *tmp___68 ;
  x86_imm_buf imb___3 ;
  unsigned char *tmp___69 ;
  unsigned char *tmp___70 ;
  unsigned char *tmp___71 ;
  unsigned char *tmp___72 ;
  unsigned char *tmp___73 ;
  unsigned char *tmp___74 ;
  unsigned char *tmp___75 ;
  unsigned char *tmp___76 ;
  unsigned char *tmp___77 ;
  unsigned char *tmp___78 ;
  x86_imm_buf imb___4 ;
  unsigned char *tmp___79 ;
  unsigned char *tmp___80 ;
  unsigned char *tmp___81 ;
  unsigned char *tmp___82 ;
  unsigned char *tmp___83 ;
  unsigned char _amd64_rex_bits___5 ;
  int tmp___84 ;
  int tmp___85 ;
  int tmp___86 ;
  unsigned char *tmp___87 ;
  unsigned char *tmp___88 ;
  unsigned char *tmp___89 ;
  long tmp___90 ;
  unsigned char *tmp___91 ;
  unsigned char _amd64_rex_bits___6 ;
  int tmp___92 ;
  unsigned char *tmp___93 ;
  unsigned char *tmp___94 ;
  unsigned char *tmp___95 ;
  unsigned char *tmp___96 ;
  unsigned char *tmp___97 ;
  unsigned char _amd64_rex_bits___7 ;
  int tmp___98 ;
  int tmp___99 ;
  int tmp___100 ;
  unsigned char *tmp___101 ;
  unsigned char *tmp___102 ;
  unsigned char *tmp___103 ;
  unsigned char *tmp___104 ;
  x86_imm_buf imb___5 ;
  unsigned char *tmp___105 ;
  unsigned char *tmp___106 ;
  unsigned char *tmp___107 ;
  unsigned char *tmp___108 ;
  unsigned char *tmp___109 ;
  unsigned char *tmp___110 ;
  unsigned char *tmp___111 ;
  unsigned char *tmp___112 ;
  unsigned char *tmp___113 ;
  unsigned char *tmp___114 ;
  x86_imm_buf imb___6 ;
  unsigned char *tmp___115 ;
  unsigned char *tmp___116 ;
  unsigned char *tmp___117 ;
  unsigned char *tmp___118 ;
  int ax_in_use ;
  int tmp___119 ;
  int dx_in_use ;
  int tmp___120 ;
  unsigned char _amd64_rex_bits___8 ;
  unsigned char *tmp___121 ;
  unsigned char *tmp___122 ;
  unsigned char _amd64_rex_bits___9 ;
  unsigned char *tmp___123 ;
  unsigned char *tmp___124 ;
  unsigned char *tmp___125 ;
  unsigned char _amd64_rex_bits___10 ;
  int tmp___126 ;
  int tmp___127 ;
  unsigned char *tmp___128 ;
  unsigned char *tmp___129 ;
  unsigned char *tmp___130 ;
  long tmp___131 ;
  unsigned char *tmp___132 ;
  unsigned char _amd64_rex_bits___11 ;
  int tmp___133 ;
  unsigned char *tmp___134 ;
  unsigned char *tmp___135 ;
  amd64_imm_buf imb___7 ;
  unsigned char *tmp___136 ;
  unsigned char *tmp___137 ;
  unsigned char *tmp___138 ;
  unsigned char *tmp___139 ;
  unsigned char *tmp___140 ;
  unsigned char *tmp___141 ;
  unsigned char *tmp___142 ;
  unsigned char *tmp___143 ;
  x86_imm_buf imb___8 ;
  unsigned char *tmp___144 ;
  unsigned char *tmp___145 ;
  unsigned char *tmp___146 ;
  unsigned char *tmp___147 ;
  unsigned char _amd64_rex_bits___12 ;
  unsigned char *tmp___148 ;
  unsigned char *tmp___149 ;
  unsigned char *tmp___150 ;
  int tmp___151 ;
  unsigned char _amd64_rex_bits___13 ;
  int tmp___152 ;
  unsigned char *tmp___153 ;
  unsigned char *tmp___154 ;
  unsigned char *tmp___155 ;
  int tmp___156 ;
  unsigned char _amd64_rex_bits___14 ;
  int tmp___157 ;
  unsigned char *tmp___158 ;
  unsigned char *tmp___159 ;
  unsigned char *tmp___160 ;
  int tmp___161 ;
  unsigned char *tmp___162 ;
  unsigned char _amd64_rex_bits___15 ;
  int tmp___163 ;
  int tmp___164 ;
  unsigned char *tmp___165 ;
  unsigned char *tmp___166 ;
  unsigned char *tmp___167 ;
  long tmp___168 ;
  unsigned char *tmp___169 ;
  unsigned char _amd64_rex_bits___16 ;
  int tmp___170 ;
  unsigned char *tmp___171 ;
  unsigned char *tmp___172 ;
  unsigned char *tmp___173 ;
  int tmp___174 ;
  unsigned char *tmp___175 ;
  unsigned char _amd64_rex_bits___17 ;
  int tmp___176 ;
  int tmp___177 ;
  unsigned char *tmp___178 ;
  unsigned char *tmp___179 ;
  unsigned char *tmp___180 ;
  long tmp___181 ;
  unsigned char *tmp___182 ;
  unsigned char *tmp___183 ;
  unsigned char _amd64_rex_bits___18 ;
  int tmp___184 ;
  int tmp___185 ;
  unsigned char *tmp___186 ;
  unsigned char *tmp___187 ;
  unsigned char *tmp___188 ;
  long tmp___189 ;
  unsigned char *tmp___190 ;
  unsigned char _amd64_rex_bits___19 ;
  unsigned char *tmp___191 ;
  unsigned char *tmp___192 ;
  unsigned char _amd64_rex_bits___20 ;
  unsigned char *tmp___193 ;
  unsigned char *tmp___194 ;

  {
#line 4198
  dest = op->r_arg[0];
#line 4199
  factor1 = op->r_arg[1];
#line 4200
  factor2 = op->r_arg[2];
#line 4201
  if (! high_bytes) {
#line 4201
    if (imm) {
#line 4202
      switch (factor2) {
      case 2L: 
#line 4203
      if (factor1 == dest) {
#line 4203
        while (1) {
#line 4203
          while (1) {
#line 4203
            if (dest > 7L) {
#line 4203
              tmp = 1;
            } else {
#line 4203
              tmp = 0;
            }
#line 4203
            _amd64_rex_bits = (unsigned char )(8 | tmp);
#line 4203
            if ((int )_amd64_rex_bits != 0) {
#line 4203
              tmp___0 = jit->ip;
#line 4203
              (jit->ip) ++;
#line 4203
              *tmp___0 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
            }
#line 4203
            break;
          }
#line 4203
          while (1) {
#line 4203
            tmp___1 = jit->ip;
#line 4203
            (jit->ip) ++;
#line 4203
            *tmp___1 = (unsigned char)209;
#line 4203
            while (1) {
#line 4203
              while (1) {
#line 4203
                tmp___2 = jit->ip;
#line 4203
                (jit->ip) ++;
#line 4203
                *tmp___2 = (unsigned char )((long )((3 << 6) | (4 << 3)) | ((dest & 7L) & 7L));
#line 4203
                break;
              }
#line 4203
              break;
            }
#line 4203
            break;
          }
#line 4203
          break;
        }
      } else {
#line 4204
        while (1) {
#line 4204
          while (1) {
#line 4204
            if (dest > 7L) {
#line 4204
              tmp___5 = 4;
            } else {
#line 4204
              tmp___5 = 0;
            }
#line 4204
            if (factor1 > 7L) {
#line 4204
              tmp___6 = 2;
            } else {
#line 4204
              tmp___6 = 0;
            }
#line 4204
            if (factor1 > 7L) {
#line 4204
              tmp___7 = 1;
            } else {
#line 4204
              tmp___7 = 0;
            }
#line 4204
            _amd64_rex_bits___0 = (unsigned char )(((8 | tmp___5) | tmp___6) | tmp___7);
#line 4204
            if ((int )_amd64_rex_bits___0 != 0) {
#line 4204
              tmp___8 = jit->ip;
#line 4204
              (jit->ip) ++;
#line 4204
              *tmp___8 = (unsigned char )(0x40 | (int )_amd64_rex_bits___0);
            }
#line 4204
            break;
          }
#line 4204
          while (1) {
#line 4204
            tmp___9 = jit->ip;
#line 4204
            (jit->ip) ++;
#line 4204
            *tmp___9 = (unsigned char)141;
#line 4204
            while (1) {
#line 4204
              if (factor1 == -1L) {
#line 4204
                while (1) {
#line 4204
                  tmp___10 = jit->ip;
#line 4204
                  (jit->ip) ++;
#line 4204
                  *tmp___10 = (unsigned char )((((dest & 7L) & 7L) << 3) | 4L);
#line 4204
                  break;
                }
#line 4204
                while (1) {
#line 4204
                  tmp___11 = jit->ip;
#line 4204
                  (jit->ip) ++;
#line 4204
                  *tmp___11 = (unsigned char )((((factor1 & 7L) & 7L) << 3) | 5L);
#line 4204
                  break;
                }
#line 4204
                while (1) {
#line 4204
                  imb.val = 0;
#line 4204
                  tmp___12 = jit->ip;
#line 4204
                  (jit->ip) ++;
#line 4204
                  *tmp___12 = imb.b[0];
#line 4204
                  tmp___13 = jit->ip;
#line 4204
                  (jit->ip) ++;
#line 4204
                  *tmp___13 = imb.b[1];
#line 4204
                  tmp___14 = jit->ip;
#line 4204
                  (jit->ip) ++;
#line 4204
                  *tmp___14 = imb.b[2];
#line 4204
                  tmp___15 = jit->ip;
#line 4204
                  (jit->ip) ++;
#line 4204
                  *tmp___15 = imb.b[3];
#line 4204
                  break;
                }
              } else
#line 4204
              if (factor1 != 5L) {
#line 4204
                while (1) {
#line 4204
                  tmp___16 = jit->ip;
#line 4204
                  (jit->ip) ++;
#line 4204
                  *tmp___16 = (unsigned char )((((dest & 7L) & 7L) << 3) | 4L);
#line 4204
                  break;
                }
#line 4204
                while (1) {
#line 4204
                  tmp___17 = jit->ip;
#line 4204
                  (jit->ip) ++;
#line 4204
                  *tmp___17 = (unsigned char )(((((factor1 & 7L) & 7L) & 7L) << 3) | ((factor1 & 7L) & 7L));
#line 4204
                  break;
                }
              } else {
#line 4204
                while (1) {
#line 4204
                  tmp___18 = jit->ip;
#line 4204
                  (jit->ip) ++;
#line 4204
                  *tmp___18 = (unsigned char )(((long )(1 << 6) | (((dest & 7L) & 7L) << 3)) | 4L);
#line 4204
                  break;
                }
#line 4204
                while (1) {
#line 4204
                  tmp___19 = jit->ip;
#line 4204
                  (jit->ip) ++;
#line 4204
                  *tmp___19 = (unsigned char )(((((factor1 & 7L) & 7L) & 7L) << 3) | ((factor1 & 7L) & 7L));
#line 4204
                  break;
                }
#line 4204
                while (1) {
#line 4204
                  *(jit->ip) = (unsigned char)0;
#line 4204
                  (jit->ip) ++;
#line 4204
                  break;
                }
              }
#line 4204
              break;
            }
#line 4204
            break;
          }
#line 4204
          break;
        }
      }
#line 4205
      return;
      case 3L: 
#line 4206
      while (1) {
#line 4206
        while (1) {
#line 4206
          if (dest > 7L) {
#line 4206
            tmp___26 = 4;
          } else {
#line 4206
            tmp___26 = 0;
          }
#line 4206
          if (factor1 > 7L) {
#line 4206
            tmp___27 = 2;
          } else {
#line 4206
            tmp___27 = 0;
          }
#line 4206
          if (factor1 > 7L) {
#line 4206
            tmp___28 = 1;
          } else {
#line 4206
            tmp___28 = 0;
          }
#line 4206
          _amd64_rex_bits___1 = (unsigned char )(((8 | tmp___26) | tmp___27) | tmp___28);
#line 4206
          if ((int )_amd64_rex_bits___1 != 0) {
#line 4206
            tmp___29 = jit->ip;
#line 4206
            (jit->ip) ++;
#line 4206
            *tmp___29 = (unsigned char )(0x40 | (int )_amd64_rex_bits___1);
          }
#line 4206
          break;
        }
#line 4206
        while (1) {
#line 4206
          tmp___30 = jit->ip;
#line 4206
          (jit->ip) ++;
#line 4206
          *tmp___30 = (unsigned char)141;
#line 4206
          while (1) {
#line 4206
            if (factor1 == -1L) {
#line 4206
              while (1) {
#line 4206
                tmp___31 = jit->ip;
#line 4206
                (jit->ip) ++;
#line 4206
                *tmp___31 = (unsigned char )((((dest & 7L) & 7L) << 3) | 4L);
#line 4206
                break;
              }
#line 4206
              while (1) {
#line 4206
                tmp___32 = jit->ip;
#line 4206
                (jit->ip) ++;
#line 4206
                *tmp___32 = (unsigned char )(((long )(1 << 6) | (((factor1 & 7L) & 7L) << 3)) | 5L);
#line 4206
                break;
              }
#line 4206
              while (1) {
#line 4206
                imb___1.val = 0;
#line 4206
                tmp___33 = jit->ip;
#line 4206
                (jit->ip) ++;
#line 4206
                *tmp___33 = imb___1.b[0];
#line 4206
                tmp___34 = jit->ip;
#line 4206
                (jit->ip) ++;
#line 4206
                *tmp___34 = imb___1.b[1];
#line 4206
                tmp___35 = jit->ip;
#line 4206
                (jit->ip) ++;
#line 4206
                *tmp___35 = imb___1.b[2];
#line 4206
                tmp___36 = jit->ip;
#line 4206
                (jit->ip) ++;
#line 4206
                *tmp___36 = imb___1.b[3];
#line 4206
                break;
              }
            } else
#line 4206
            if (factor1 != 5L) {
#line 4206
              while (1) {
#line 4206
                tmp___37 = jit->ip;
#line 4206
                (jit->ip) ++;
#line 4206
                *tmp___37 = (unsigned char )((((dest & 7L) & 7L) << 3) | 4L);
#line 4206
                break;
              }
#line 4206
              while (1) {
#line 4206
                tmp___38 = jit->ip;
#line 4206
                (jit->ip) ++;
#line 4206
                *tmp___38 = (unsigned char )(((long )(1 << 6) | ((((factor1 & 7L) & 7L) & 7L) << 3)) | ((factor1 & 7L) & 7L));
#line 4206
                break;
              }
            } else {
#line 4206
              while (1) {
#line 4206
                tmp___39 = jit->ip;
#line 4206
                (jit->ip) ++;
#line 4206
                *tmp___39 = (unsigned char )(((long )(1 << 6) | (((dest & 7L) & 7L) << 3)) | 4L);
#line 4206
                break;
              }
#line 4206
              while (1) {
#line 4206
                tmp___40 = jit->ip;
#line 4206
                (jit->ip) ++;
#line 4206
                *tmp___40 = (unsigned char )(((long )(1 << 6) | ((((factor1 & 7L) & 7L) & 7L) << 3)) | ((factor1 & 7L) & 7L));
#line 4206
                break;
              }
#line 4206
              while (1) {
#line 4206
                *(jit->ip) = (unsigned char)0;
#line 4206
                (jit->ip) ++;
#line 4206
                break;
              }
            }
#line 4206
            break;
          }
#line 4206
          break;
        }
#line 4206
        break;
      }
#line 4206
      return;
      case 4L: 
#line 4207
      if (factor1 != dest) {
#line 4207
        while (1) {
#line 4207
          if ((int )sizeof(void *) == 2) {
#line 4207
            tmp___47 = jit->ip;
#line 4207
            (jit->ip) ++;
#line 4207
            *tmp___47 = (unsigned char)102;
          }
#line 4207
          while (1) {
#line 4207
            if ((int )sizeof(void *) > 4) {
#line 4207
              tmp___48 = 8;
            } else {
#line 4207
              tmp___48 = 0;
            }
#line 4207
            if (dest > 7L) {
#line 4207
              tmp___49 = 4;
            } else {
#line 4207
              tmp___49 = 0;
            }
#line 4207
            if (factor1 > 7L) {
#line 4207
              tmp___50 = 1;
            } else {
#line 4207
              tmp___50 = 0;
            }
#line 4207
            _amd64_rex_bits___2 = (unsigned char )((tmp___48 | tmp___49) | tmp___50);
#line 4207
            if ((int )_amd64_rex_bits___2 != 0) {
#line 4207
              tmp___51 = jit->ip;
#line 4207
              (jit->ip) ++;
#line 4207
              *tmp___51 = (unsigned char )(0x40 | (int )_amd64_rex_bits___2);
            } else
#line 4207
            if ((int )sizeof(void *) == 1) {
#line 4207
              tmp___51 = jit->ip;
#line 4207
              (jit->ip) ++;
#line 4207
              *tmp___51 = (unsigned char )(0x40 | (int )_amd64_rex_bits___2);
            }
#line 4207
            break;
          }
#line 4207
          switch ((int )sizeof(void *)) {
          case 1: 
#line 4207
          tmp___52 = jit->ip;
#line 4207
          (jit->ip) ++;
#line 4207
          *tmp___52 = (unsigned char)138;
#line 4207
          break;
          case 8: 
          case 4: 
          case 2: 
#line 4207
          tmp___53 = jit->ip;
#line 4207
          (jit->ip) ++;
#line 4207
          *tmp___53 = (unsigned char)139;
#line 4207
          break;
          default: 
#line 4207
          tmp___54 = __builtin_expect(1L, 0L);
#line 4207
          if (tmp___54) {
#line 4207
            __assert_rtn((char const   *)"emit_mul_op", (char const   *)"tmp/src.c",
                         3185, (char const   *)"0");
          }
          }
#line 4207
          while (1) {
#line 4207
            while (1) {
#line 4207
              tmp___55 = jit->ip;
#line 4207
              (jit->ip) ++;
#line 4207
              *tmp___55 = (unsigned char )(((long )(3 << 6) | ((dest & 7L) << 3)) | (factor1 & 7L));
#line 4207
              break;
            }
#line 4207
            break;
          }
#line 4207
          break;
        }
      }
#line 4208
      while (1) {
#line 4208
        while (1) {
#line 4208
          if (dest > 7L) {
#line 4208
            tmp___56 = 1;
          } else {
#line 4208
            tmp___56 = 0;
          }
#line 4208
          _amd64_rex_bits___3 = (unsigned char )(8 | tmp___56);
#line 4208
          if ((int )_amd64_rex_bits___3 != 0) {
#line 4208
            tmp___57 = jit->ip;
#line 4208
            (jit->ip) ++;
#line 4208
            *tmp___57 = (unsigned char )(0x40 | (int )_amd64_rex_bits___3);
          }
#line 4208
          break;
        }
#line 4208
        while (1) {
#line 4208
          tmp___60 = jit->ip;
#line 4208
          (jit->ip) ++;
#line 4208
          *tmp___60 = (unsigned char)193;
#line 4208
          while (1) {
#line 4208
            while (1) {
#line 4208
              tmp___61 = jit->ip;
#line 4208
              (jit->ip) ++;
#line 4208
              *tmp___61 = (unsigned char )((long )((3 << 6) | (4 << 3)) | ((dest & 7L) & 7L));
#line 4208
              break;
            }
#line 4208
            break;
          }
#line 4208
          while (1) {
#line 4208
            *(jit->ip) = (unsigned char)2;
#line 4208
            (jit->ip) ++;
#line 4208
            break;
          }
#line 4208
          break;
        }
#line 4208
        break;
      }
#line 4209
      return;
      case 5L: 
#line 4210
      while (1) {
#line 4210
        while (1) {
#line 4210
          if (dest > 7L) {
#line 4210
            tmp___62 = 4;
          } else {
#line 4210
            tmp___62 = 0;
          }
#line 4210
          if (factor1 > 7L) {
#line 4210
            tmp___63 = 2;
          } else {
#line 4210
            tmp___63 = 0;
          }
#line 4210
          if (factor1 > 7L) {
#line 4210
            tmp___64 = 1;
          } else {
#line 4210
            tmp___64 = 0;
          }
#line 4210
          _amd64_rex_bits___4 = (unsigned char )(((8 | tmp___62) | tmp___63) | tmp___64);
#line 4210
          if ((int )_amd64_rex_bits___4 != 0) {
#line 4210
            tmp___65 = jit->ip;
#line 4210
            (jit->ip) ++;
#line 4210
            *tmp___65 = (unsigned char )(0x40 | (int )_amd64_rex_bits___4);
          }
#line 4210
          break;
        }
#line 4210
        while (1) {
#line 4210
          tmp___66 = jit->ip;
#line 4210
          (jit->ip) ++;
#line 4210
          *tmp___66 = (unsigned char)141;
#line 4210
          while (1) {
#line 4210
            if (factor1 == -1L) {
#line 4210
              while (1) {
#line 4210
                tmp___67 = jit->ip;
#line 4210
                (jit->ip) ++;
#line 4210
                *tmp___67 = (unsigned char )((((dest & 7L) & 7L) << 3) | 4L);
#line 4210
                break;
              }
#line 4210
              while (1) {
#line 4210
                tmp___68 = jit->ip;
#line 4210
                (jit->ip) ++;
#line 4210
                *tmp___68 = (unsigned char )(((long )(2 << 6) | (((factor1 & 7L) & 7L) << 3)) | 5L);
#line 4210
                break;
              }
#line 4210
              while (1) {
#line 4210
                imb___3.val = 0;
#line 4210
                tmp___69 = jit->ip;
#line 4210
                (jit->ip) ++;
#line 4210
                *tmp___69 = imb___3.b[0];
#line 4210
                tmp___70 = jit->ip;
#line 4210
                (jit->ip) ++;
#line 4210
                *tmp___70 = imb___3.b[1];
#line 4210
                tmp___71 = jit->ip;
#line 4210
                (jit->ip) ++;
#line 4210
                *tmp___71 = imb___3.b[2];
#line 4210
                tmp___72 = jit->ip;
#line 4210
                (jit->ip) ++;
#line 4210
                *tmp___72 = imb___3.b[3];
#line 4210
                break;
              }
            } else
#line 4210
            if (factor1 != 5L) {
#line 4210
              while (1) {
#line 4210
                tmp___73 = jit->ip;
#line 4210
                (jit->ip) ++;
#line 4210
                *tmp___73 = (unsigned char )((((dest & 7L) & 7L) << 3) | 4L);
#line 4210
                break;
              }
#line 4210
              while (1) {
#line 4210
                tmp___74 = jit->ip;
#line 4210
                (jit->ip) ++;
#line 4210
                *tmp___74 = (unsigned char )(((long )(2 << 6) | ((((factor1 & 7L) & 7L) & 7L) << 3)) | ((factor1 & 7L) & 7L));
#line 4210
                break;
              }
            } else {
#line 4210
              while (1) {
#line 4210
                tmp___75 = jit->ip;
#line 4210
                (jit->ip) ++;
#line 4210
                *tmp___75 = (unsigned char )(((long )(1 << 6) | (((dest & 7L) & 7L) << 3)) | 4L);
#line 4210
                break;
              }
#line 4210
              while (1) {
#line 4210
                tmp___76 = jit->ip;
#line 4210
                (jit->ip) ++;
#line 4210
                *tmp___76 = (unsigned char )(((long )(2 << 6) | ((((factor1 & 7L) & 7L) & 7L) << 3)) | ((factor1 & 7L) & 7L));
#line 4210
                break;
              }
#line 4210
              while (1) {
#line 4210
                *(jit->ip) = (unsigned char)0;
#line 4210
                (jit->ip) ++;
#line 4210
                break;
              }
            }
#line 4210
            break;
          }
#line 4210
          break;
        }
#line 4210
        break;
      }
#line 4211
      return;
      case 8L: 
#line 4212
      if (factor1 != dest) {
#line 4212
        while (1) {
#line 4212
          if ((int )sizeof(void *) == 2) {
#line 4212
            tmp___83 = jit->ip;
#line 4212
            (jit->ip) ++;
#line 4212
            *tmp___83 = (unsigned char)102;
          }
#line 4212
          while (1) {
#line 4212
            if ((int )sizeof(void *) > 4) {
#line 4212
              tmp___84 = 8;
            } else {
#line 4212
              tmp___84 = 0;
            }
#line 4212
            if (dest > 7L) {
#line 4212
              tmp___85 = 4;
            } else {
#line 4212
              tmp___85 = 0;
            }
#line 4212
            if (factor1 > 7L) {
#line 4212
              tmp___86 = 1;
            } else {
#line 4212
              tmp___86 = 0;
            }
#line 4212
            _amd64_rex_bits___5 = (unsigned char )((tmp___84 | tmp___85) | tmp___86);
#line 4212
            if ((int )_amd64_rex_bits___5 != 0) {
#line 4212
              tmp___87 = jit->ip;
#line 4212
              (jit->ip) ++;
#line 4212
              *tmp___87 = (unsigned char )(0x40 | (int )_amd64_rex_bits___5);
            } else
#line 4212
            if ((int )sizeof(void *) == 1) {
#line 4212
              tmp___87 = jit->ip;
#line 4212
              (jit->ip) ++;
#line 4212
              *tmp___87 = (unsigned char )(0x40 | (int )_amd64_rex_bits___5);
            }
#line 4212
            break;
          }
#line 4212
          switch ((int )sizeof(void *)) {
          case 1: 
#line 4212
          tmp___88 = jit->ip;
#line 4212
          (jit->ip) ++;
#line 4212
          *tmp___88 = (unsigned char)138;
#line 4212
          break;
          case 8: 
          case 4: 
          case 2: 
#line 4212
          tmp___89 = jit->ip;
#line 4212
          (jit->ip) ++;
#line 4212
          *tmp___89 = (unsigned char)139;
#line 4212
          break;
          default: 
#line 4212
          tmp___90 = __builtin_expect(1L, 0L);
#line 4212
          if (tmp___90) {
#line 4212
            __assert_rtn((char const   *)"emit_mul_op", (char const   *)"tmp/src.c",
                         3190, (char const   *)"0");
          }
          }
#line 4212
          while (1) {
#line 4212
            while (1) {
#line 4212
              tmp___91 = jit->ip;
#line 4212
              (jit->ip) ++;
#line 4212
              *tmp___91 = (unsigned char )(((long )(3 << 6) | ((dest & 7L) << 3)) | (factor1 & 7L));
#line 4212
              break;
            }
#line 4212
            break;
          }
#line 4212
          break;
        }
      }
#line 4213
      while (1) {
#line 4213
        while (1) {
#line 4213
          if (dest > 7L) {
#line 4213
            tmp___92 = 1;
          } else {
#line 4213
            tmp___92 = 0;
          }
#line 4213
          _amd64_rex_bits___6 = (unsigned char )(8 | tmp___92);
#line 4213
          if ((int )_amd64_rex_bits___6 != 0) {
#line 4213
            tmp___93 = jit->ip;
#line 4213
            (jit->ip) ++;
#line 4213
            *tmp___93 = (unsigned char )(0x40 | (int )_amd64_rex_bits___6);
          }
#line 4213
          break;
        }
#line 4213
        while (1) {
#line 4213
          tmp___96 = jit->ip;
#line 4213
          (jit->ip) ++;
#line 4213
          *tmp___96 = (unsigned char)193;
#line 4213
          while (1) {
#line 4213
            while (1) {
#line 4213
              tmp___97 = jit->ip;
#line 4213
              (jit->ip) ++;
#line 4213
              *tmp___97 = (unsigned char )((long )((3 << 6) | (4 << 3)) | ((dest & 7L) & 7L));
#line 4213
              break;
            }
#line 4213
            break;
          }
#line 4213
          while (1) {
#line 4213
            *(jit->ip) = (unsigned char)3;
#line 4213
            (jit->ip) ++;
#line 4213
            break;
          }
#line 4213
          break;
        }
#line 4213
        break;
      }
#line 4214
      return;
      case 9L: 
#line 4215
      while (1) {
#line 4215
        while (1) {
#line 4215
          if (dest > 7L) {
#line 4215
            tmp___98 = 4;
          } else {
#line 4215
            tmp___98 = 0;
          }
#line 4215
          if (factor1 > 7L) {
#line 4215
            tmp___99 = 2;
          } else {
#line 4215
            tmp___99 = 0;
          }
#line 4215
          if (factor1 > 7L) {
#line 4215
            tmp___100 = 1;
          } else {
#line 4215
            tmp___100 = 0;
          }
#line 4215
          _amd64_rex_bits___7 = (unsigned char )(((8 | tmp___98) | tmp___99) | tmp___100);
#line 4215
          if ((int )_amd64_rex_bits___7 != 0) {
#line 4215
            tmp___101 = jit->ip;
#line 4215
            (jit->ip) ++;
#line 4215
            *tmp___101 = (unsigned char )(0x40 | (int )_amd64_rex_bits___7);
          }
#line 4215
          break;
        }
#line 4215
        while (1) {
#line 4215
          tmp___102 = jit->ip;
#line 4215
          (jit->ip) ++;
#line 4215
          *tmp___102 = (unsigned char)141;
#line 4215
          while (1) {
#line 4215
            if (factor1 == -1L) {
#line 4215
              while (1) {
#line 4215
                tmp___103 = jit->ip;
#line 4215
                (jit->ip) ++;
#line 4215
                *tmp___103 = (unsigned char )((((dest & 7L) & 7L) << 3) | 4L);
#line 4215
                break;
              }
#line 4215
              while (1) {
#line 4215
                tmp___104 = jit->ip;
#line 4215
                (jit->ip) ++;
#line 4215
                *tmp___104 = (unsigned char )(((long )(3 << 6) | (((factor1 & 7L) & 7L) << 3)) | 5L);
#line 4215
                break;
              }
#line 4215
              while (1) {
#line 4215
                imb___5.val = 0;
#line 4215
                tmp___105 = jit->ip;
#line 4215
                (jit->ip) ++;
#line 4215
                *tmp___105 = imb___5.b[0];
#line 4215
                tmp___106 = jit->ip;
#line 4215
                (jit->ip) ++;
#line 4215
                *tmp___106 = imb___5.b[1];
#line 4215
                tmp___107 = jit->ip;
#line 4215
                (jit->ip) ++;
#line 4215
                *tmp___107 = imb___5.b[2];
#line 4215
                tmp___108 = jit->ip;
#line 4215
                (jit->ip) ++;
#line 4215
                *tmp___108 = imb___5.b[3];
#line 4215
                break;
              }
            } else
#line 4215
            if (factor1 != 5L) {
#line 4215
              while (1) {
#line 4215
                tmp___109 = jit->ip;
#line 4215
                (jit->ip) ++;
#line 4215
                *tmp___109 = (unsigned char )((((dest & 7L) & 7L) << 3) | 4L);
#line 4215
                break;
              }
#line 4215
              while (1) {
#line 4215
                tmp___110 = jit->ip;
#line 4215
                (jit->ip) ++;
#line 4215
                *tmp___110 = (unsigned char )(((long )(3 << 6) | ((((factor1 & 7L) & 7L) & 7L) << 3)) | ((factor1 & 7L) & 7L));
#line 4215
                break;
              }
            } else {
#line 4215
              while (1) {
#line 4215
                tmp___111 = jit->ip;
#line 4215
                (jit->ip) ++;
#line 4215
                *tmp___111 = (unsigned char )(((long )(1 << 6) | (((dest & 7L) & 7L) << 3)) | 4L);
#line 4215
                break;
              }
#line 4215
              while (1) {
#line 4215
                tmp___112 = jit->ip;
#line 4215
                (jit->ip) ++;
#line 4215
                *tmp___112 = (unsigned char )(((long )(3 << 6) | ((((factor1 & 7L) & 7L) & 7L) << 3)) | ((factor1 & 7L) & 7L));
#line 4215
                break;
              }
#line 4215
              while (1) {
#line 4215
                *(jit->ip) = (unsigned char)0;
#line 4215
                (jit->ip) ++;
#line 4215
                break;
              }
            }
#line 4215
            break;
          }
#line 4215
          break;
        }
#line 4215
        break;
      }
#line 4216
      return;
      }
    }
  }
#line 4219
  tmp___119 = jit_reg_in_use(op, 0, 0);
#line 4219
  ax_in_use = tmp___119;
#line 4220
  tmp___120 = jit_reg_in_use(op, 2, 0);
#line 4220
  dx_in_use = tmp___120;
#line 4221
  if (dest != 0L) {
#line 4221
    if (ax_in_use) {
#line 4221
      while (1) {
#line 4221
        while (1) {
#line 4221
          _amd64_rex_bits___8 = (unsigned char)0;
#line 4221
          if ((int )_amd64_rex_bits___8 != 0) {
#line 4221
            tmp___121 = jit->ip;
#line 4221
            (jit->ip) ++;
#line 4221
            *tmp___121 = (unsigned char )(0x40 | (int )_amd64_rex_bits___8);
          }
#line 4221
          break;
        }
#line 4221
        tmp___122 = jit->ip;
#line 4221
        (jit->ip) ++;
#line 4221
        *tmp___122 = (unsigned char)80;
#line 4221
        break;
      }
    }
  }
#line 4222
  if (dest != 2L) {
#line 4222
    if (dx_in_use) {
#line 4222
      while (1) {
#line 4222
        while (1) {
#line 4222
          _amd64_rex_bits___9 = (unsigned char)0;
#line 4222
          if ((int )_amd64_rex_bits___9 != 0) {
#line 4222
            tmp___123 = jit->ip;
#line 4222
            (jit->ip) ++;
#line 4222
            *tmp___123 = (unsigned char )(0x40 | (int )_amd64_rex_bits___9);
          }
#line 4222
          break;
        }
#line 4222
        tmp___124 = jit->ip;
#line 4222
        (jit->ip) ++;
#line 4222
        *tmp___124 = (unsigned char)82;
#line 4222
        break;
      }
    }
  }
#line 4223
  if (imm) {
#line 4224
    if (factor1 != 0L) {
#line 4224
      while (1) {
#line 4224
        if ((int )sizeof(void *) == 2) {
#line 4224
          tmp___125 = jit->ip;
#line 4224
          (jit->ip) ++;
#line 4224
          *tmp___125 = (unsigned char)102;
        }
#line 4224
        while (1) {
#line 4224
          if ((int )sizeof(void *) > 4) {
#line 4224
            tmp___126 = 8;
          } else {
#line 4224
            tmp___126 = 0;
          }
#line 4224
          if (factor1 > 7L) {
#line 4224
            tmp___127 = 1;
          } else {
#line 4224
            tmp___127 = 0;
          }
#line 4224
          _amd64_rex_bits___10 = (unsigned char )(tmp___126 | tmp___127);
#line 4224
          if ((int )_amd64_rex_bits___10 != 0) {
#line 4224
            tmp___128 = jit->ip;
#line 4224
            (jit->ip) ++;
#line 4224
            *tmp___128 = (unsigned char )(0x40 | (int )_amd64_rex_bits___10);
          } else
#line 4224
          if ((int )sizeof(void *) == 1) {
#line 4224
            tmp___128 = jit->ip;
#line 4224
            (jit->ip) ++;
#line 4224
            *tmp___128 = (unsigned char )(0x40 | (int )_amd64_rex_bits___10);
          }
#line 4224
          break;
        }
#line 4224
        switch ((int )sizeof(void *)) {
        case 1: 
#line 4224
        tmp___129 = jit->ip;
#line 4224
        (jit->ip) ++;
#line 4224
        *tmp___129 = (unsigned char)138;
#line 4224
        break;
        case 8: 
        case 4: 
        case 2: 
#line 4224
        tmp___130 = jit->ip;
#line 4224
        (jit->ip) ++;
#line 4224
        *tmp___130 = (unsigned char)139;
#line 4224
        break;
        default: 
#line 4224
        tmp___131 = __builtin_expect(1L, 0L);
#line 4224
        if (tmp___131) {
#line 4224
          __assert_rtn((char const   *)"emit_mul_op", (char const   *)"tmp/src.c",
                       3207, (char const   *)"0");
        }
        }
#line 4224
        while (1) {
#line 4224
          while (1) {
#line 4224
            tmp___132 = jit->ip;
#line 4224
            (jit->ip) ++;
#line 4224
            *tmp___132 = (unsigned char )((long )(3 << 6) | (factor1 & 7L));
#line 4224
            break;
          }
#line 4224
          break;
        }
#line 4224
        break;
      }
    }
#line 4225
    while (1) {
#line 4225
      while (1) {
#line 4225
        if (sizeof(void *) > 4ULL) {
#line 4225
          tmp___133 = 8;
        } else {
#line 4225
          tmp___133 = 0;
        }
#line 4225
        _amd64_rex_bits___11 = (unsigned char )tmp___133;
#line 4225
        if ((int )_amd64_rex_bits___11 != 0) {
#line 4225
          tmp___134 = jit->ip;
#line 4225
          (jit->ip) ++;
#line 4225
          *tmp___134 = (unsigned char )(0x40 | (int )_amd64_rex_bits___11);
        } else
#line 4225
        if (sizeof(void *) == 1ULL) {
#line 4225
          tmp___134 = jit->ip;
#line 4225
          (jit->ip) ++;
#line 4225
          *tmp___134 = (unsigned char )(0x40 | (int )_amd64_rex_bits___11);
        }
#line 4225
        break;
      }
#line 4225
      tmp___135 = jit->ip;
#line 4225
      (jit->ip) ++;
#line 4225
      *tmp___135 = (unsigned char)186;
#line 4225
      if (sizeof(void *) == 8ULL) {
#line 4225
        while (1) {
#line 4225
          imb___7.val = (size_t )factor2;
#line 4225
          tmp___136 = jit->ip;
#line 4225
          (jit->ip) ++;
#line 4225
          *tmp___136 = imb___7.b[0];
#line 4225
          tmp___137 = jit->ip;
#line 4225
          (jit->ip) ++;
#line 4225
          *tmp___137 = imb___7.b[1];
#line 4225
          tmp___138 = jit->ip;
#line 4225
          (jit->ip) ++;
#line 4225
          *tmp___138 = imb___7.b[2];
#line 4225
          tmp___139 = jit->ip;
#line 4225
          (jit->ip) ++;
#line 4225
          *tmp___139 = imb___7.b[3];
#line 4225
          tmp___140 = jit->ip;
#line 4225
          (jit->ip) ++;
#line 4225
          *tmp___140 = imb___7.b[4];
#line 4225
          tmp___141 = jit->ip;
#line 4225
          (jit->ip) ++;
#line 4225
          *tmp___141 = imb___7.b[5];
#line 4225
          tmp___142 = jit->ip;
#line 4225
          (jit->ip) ++;
#line 4225
          *tmp___142 = imb___7.b[6];
#line 4225
          tmp___143 = jit->ip;
#line 4225
          (jit->ip) ++;
#line 4225
          *tmp___143 = imb___7.b[7];
#line 4225
          break;
        }
      } else {
#line 4225
        while (1) {
#line 4225
          imb___8.val = (int )((size_t )factor2);
#line 4225
          tmp___144 = jit->ip;
#line 4225
          (jit->ip) ++;
#line 4225
          *tmp___144 = imb___8.b[0];
#line 4225
          tmp___145 = jit->ip;
#line 4225
          (jit->ip) ++;
#line 4225
          *tmp___145 = imb___8.b[1];
#line 4225
          tmp___146 = jit->ip;
#line 4225
          (jit->ip) ++;
#line 4225
          *tmp___146 = imb___8.b[2];
#line 4225
          tmp___147 = jit->ip;
#line 4225
          (jit->ip) ++;
#line 4225
          *tmp___147 = imb___8.b[3];
#line 4225
          break;
        }
      }
#line 4225
      break;
    }
#line 4226
    while (1) {
#line 4226
      while (1) {
#line 4226
        _amd64_rex_bits___12 = (unsigned char)8;
#line 4226
        if ((int )_amd64_rex_bits___12 != 0) {
#line 4226
          tmp___148 = jit->ip;
#line 4226
          (jit->ip) ++;
#line 4226
          *tmp___148 = (unsigned char )(0x40 | (int )_amd64_rex_bits___12);
        }
#line 4226
        break;
      }
#line 4226
      while (1) {
#line 4226
        tmp___149 = jit->ip;
#line 4226
        (jit->ip) ++;
#line 4226
        *tmp___149 = (unsigned char)247;
#line 4226
        while (1) {
#line 4226
          while (1) {
#line 4226
            tmp___150 = jit->ip;
#line 4226
            (jit->ip) ++;
#line 4226
            if (sign) {
#line 4226
              tmp___151 = 1;
            } else {
#line 4226
              tmp___151 = 0;
            }
#line 4226
            *tmp___150 = (unsigned char )(((3 << 6) | (((4 + tmp___151) & 0x07) << 3)) | 2);
#line 4226
            break;
          }
#line 4226
          break;
        }
#line 4226
        break;
      }
#line 4226
      break;
    }
  } else
#line 4228
  if (factor1 == 0L) {
#line 4228
    while (1) {
#line 4228
      while (1) {
#line 4228
        if (factor2 > 7L) {
#line 4228
          tmp___152 = 1;
        } else {
#line 4228
          tmp___152 = 0;
        }
#line 4228
        _amd64_rex_bits___13 = (unsigned char )(8 | tmp___152);
#line 4228
        if ((int )_amd64_rex_bits___13 != 0) {
#line 4228
          tmp___153 = jit->ip;
#line 4228
          (jit->ip) ++;
#line 4228
          *tmp___153 = (unsigned char )(0x40 | (int )_amd64_rex_bits___13);
        }
#line 4228
        break;
      }
#line 4228
      while (1) {
#line 4228
        tmp___154 = jit->ip;
#line 4228
        (jit->ip) ++;
#line 4228
        *tmp___154 = (unsigned char)247;
#line 4228
        while (1) {
#line 4228
          while (1) {
#line 4228
            tmp___155 = jit->ip;
#line 4228
            (jit->ip) ++;
#line 4228
            if (sign) {
#line 4228
              tmp___156 = 1;
            } else {
#line 4228
              tmp___156 = 0;
            }
#line 4228
            *tmp___155 = (unsigned char )((long )((3 << 6) | (((4 + tmp___156) & 0x07) << 3)) | ((factor2 & 7L) & 7L));
#line 4228
            break;
          }
#line 4228
          break;
        }
#line 4228
        break;
      }
#line 4228
      break;
    }
  } else
#line 4229
  if (factor2 == 0L) {
#line 4229
    while (1) {
#line 4229
      while (1) {
#line 4229
        if (factor1 > 7L) {
#line 4229
          tmp___157 = 1;
        } else {
#line 4229
          tmp___157 = 0;
        }
#line 4229
        _amd64_rex_bits___14 = (unsigned char )(8 | tmp___157);
#line 4229
        if ((int )_amd64_rex_bits___14 != 0) {
#line 4229
          tmp___158 = jit->ip;
#line 4229
          (jit->ip) ++;
#line 4229
          *tmp___158 = (unsigned char )(0x40 | (int )_amd64_rex_bits___14);
        }
#line 4229
        break;
      }
#line 4229
      while (1) {
#line 4229
        tmp___159 = jit->ip;
#line 4229
        (jit->ip) ++;
#line 4229
        *tmp___159 = (unsigned char)247;
#line 4229
        while (1) {
#line 4229
          while (1) {
#line 4229
            tmp___160 = jit->ip;
#line 4229
            (jit->ip) ++;
#line 4229
            if (sign) {
#line 4229
              tmp___161 = 1;
            } else {
#line 4229
              tmp___161 = 0;
            }
#line 4229
            *tmp___160 = (unsigned char )((long )((3 << 6) | (((4 + tmp___161) & 0x07) << 3)) | ((factor1 & 7L) & 7L));
#line 4229
            break;
          }
#line 4229
          break;
        }
#line 4229
        break;
      }
#line 4229
      break;
    }
  } else {
#line 4231
    while (1) {
#line 4231
      if ((int )sizeof(void *) == 2) {
#line 4231
        tmp___162 = jit->ip;
#line 4231
        (jit->ip) ++;
#line 4231
        *tmp___162 = (unsigned char)102;
      }
#line 4231
      while (1) {
#line 4231
        if ((int )sizeof(void *) > 4) {
#line 4231
          tmp___163 = 8;
        } else {
#line 4231
          tmp___163 = 0;
        }
#line 4231
        if (factor1 > 7L) {
#line 4231
          tmp___164 = 1;
        } else {
#line 4231
          tmp___164 = 0;
        }
#line 4231
        _amd64_rex_bits___15 = (unsigned char )(tmp___163 | tmp___164);
#line 4231
        if ((int )_amd64_rex_bits___15 != 0) {
#line 4231
          tmp___165 = jit->ip;
#line 4231
          (jit->ip) ++;
#line 4231
          *tmp___165 = (unsigned char )(0x40 | (int )_amd64_rex_bits___15);
        } else
#line 4231
        if ((int )sizeof(void *) == 1) {
#line 4231
          tmp___165 = jit->ip;
#line 4231
          (jit->ip) ++;
#line 4231
          *tmp___165 = (unsigned char )(0x40 | (int )_amd64_rex_bits___15);
        }
#line 4231
        break;
      }
#line 4231
      switch ((int )sizeof(void *)) {
      case 1: 
#line 4231
      tmp___166 = jit->ip;
#line 4231
      (jit->ip) ++;
#line 4231
      *tmp___166 = (unsigned char)138;
#line 4231
      break;
      case 8: 
      case 4: 
      case 2: 
#line 4231
      tmp___167 = jit->ip;
#line 4231
      (jit->ip) ++;
#line 4231
      *tmp___167 = (unsigned char)139;
#line 4231
      break;
      default: 
#line 4231
      tmp___168 = __builtin_expect(1L, 0L);
#line 4231
      if (tmp___168) {
#line 4231
        __assert_rtn((char const   *)"emit_mul_op", (char const   *)"tmp/src.c", 3214,
                     (char const   *)"0");
      }
      }
#line 4231
      while (1) {
#line 4231
        while (1) {
#line 4231
          tmp___169 = jit->ip;
#line 4231
          (jit->ip) ++;
#line 4231
          *tmp___169 = (unsigned char )((long )(3 << 6) | (factor1 & 7L));
#line 4231
          break;
        }
#line 4231
        break;
      }
#line 4231
      break;
    }
#line 4232
    while (1) {
#line 4232
      while (1) {
#line 4232
        if (factor2 > 7L) {
#line 4232
          tmp___170 = 1;
        } else {
#line 4232
          tmp___170 = 0;
        }
#line 4232
        _amd64_rex_bits___16 = (unsigned char )(8 | tmp___170);
#line 4232
        if ((int )_amd64_rex_bits___16 != 0) {
#line 4232
          tmp___171 = jit->ip;
#line 4232
          (jit->ip) ++;
#line 4232
          *tmp___171 = (unsigned char )(0x40 | (int )_amd64_rex_bits___16);
        }
#line 4232
        break;
      }
#line 4232
      while (1) {
#line 4232
        tmp___172 = jit->ip;
#line 4232
        (jit->ip) ++;
#line 4232
        *tmp___172 = (unsigned char)247;
#line 4232
        while (1) {
#line 4232
          while (1) {
#line 4232
            tmp___173 = jit->ip;
#line 4232
            (jit->ip) ++;
#line 4232
            if (sign) {
#line 4232
              tmp___174 = 1;
            } else {
#line 4232
              tmp___174 = 0;
            }
#line 4232
            *tmp___173 = (unsigned char )((long )((3 << 6) | (((4 + tmp___174) & 0x07) << 3)) | ((factor2 & 7L) & 7L));
#line 4232
            break;
          }
#line 4232
          break;
        }
#line 4232
        break;
      }
#line 4232
      break;
    }
  }
#line 4235
  if (! high_bytes) {
#line 4236
    if (dest != 0L) {
#line 4236
      while (1) {
#line 4236
        if ((int )sizeof(void *) == 2) {
#line 4236
          tmp___175 = jit->ip;
#line 4236
          (jit->ip) ++;
#line 4236
          *tmp___175 = (unsigned char)102;
        }
#line 4236
        while (1) {
#line 4236
          if ((int )sizeof(void *) > 4) {
#line 4236
            tmp___176 = 8;
          } else {
#line 4236
            tmp___176 = 0;
          }
#line 4236
          if (dest > 7L) {
#line 4236
            tmp___177 = 4;
          } else {
#line 4236
            tmp___177 = 0;
          }
#line 4236
          _amd64_rex_bits___17 = (unsigned char )(tmp___176 | tmp___177);
#line 4236
          if ((int )_amd64_rex_bits___17 != 0) {
#line 4236
            tmp___178 = jit->ip;
#line 4236
            (jit->ip) ++;
#line 4236
            *tmp___178 = (unsigned char )(0x40 | (int )_amd64_rex_bits___17);
          } else
#line 4236
          if ((int )sizeof(void *) == 1) {
#line 4236
            tmp___178 = jit->ip;
#line 4236
            (jit->ip) ++;
#line 4236
            *tmp___178 = (unsigned char )(0x40 | (int )_amd64_rex_bits___17);
          }
#line 4236
          break;
        }
#line 4236
        switch ((int )sizeof(void *)) {
        case 1: 
#line 4236
        tmp___179 = jit->ip;
#line 4236
        (jit->ip) ++;
#line 4236
        *tmp___179 = (unsigned char)138;
#line 4236
        break;
        case 8: 
        case 4: 
        case 2: 
#line 4236
        tmp___180 = jit->ip;
#line 4236
        (jit->ip) ++;
#line 4236
        *tmp___180 = (unsigned char)139;
#line 4236
        break;
        default: 
#line 4236
        tmp___181 = __builtin_expect(1L, 0L);
#line 4236
        if (tmp___181) {
#line 4236
          __assert_rtn((char const   *)"emit_mul_op", (char const   *)"tmp/src.c",
                       3220, (char const   *)"0");
        }
        }
#line 4236
        while (1) {
#line 4236
          while (1) {
#line 4236
            tmp___182 = jit->ip;
#line 4236
            (jit->ip) ++;
#line 4236
            *tmp___182 = (unsigned char )((long )(3 << 6) | ((dest & 7L) << 3));
#line 4236
            break;
          }
#line 4236
          break;
        }
#line 4236
        break;
      }
    }
  } else
#line 4238
  if (dest != 2L) {
#line 4238
    while (1) {
#line 4238
      if ((int )sizeof(void *) == 2) {
#line 4238
        tmp___183 = jit->ip;
#line 4238
        (jit->ip) ++;
#line 4238
        *tmp___183 = (unsigned char)102;
      }
#line 4238
      while (1) {
#line 4238
        if ((int )sizeof(void *) > 4) {
#line 4238
          tmp___184 = 8;
        } else {
#line 4238
          tmp___184 = 0;
        }
#line 4238
        if (dest > 7L) {
#line 4238
          tmp___185 = 4;
        } else {
#line 4238
          tmp___185 = 0;
        }
#line 4238
        _amd64_rex_bits___18 = (unsigned char )(tmp___184 | tmp___185);
#line 4238
        if ((int )_amd64_rex_bits___18 != 0) {
#line 4238
          tmp___186 = jit->ip;
#line 4238
          (jit->ip) ++;
#line 4238
          *tmp___186 = (unsigned char )(0x40 | (int )_amd64_rex_bits___18);
        } else
#line 4238
        if ((int )sizeof(void *) == 1) {
#line 4238
          tmp___186 = jit->ip;
#line 4238
          (jit->ip) ++;
#line 4238
          *tmp___186 = (unsigned char )(0x40 | (int )_amd64_rex_bits___18);
        }
#line 4238
        break;
      }
#line 4238
      switch ((int )sizeof(void *)) {
      case 1: 
#line 4238
      tmp___187 = jit->ip;
#line 4238
      (jit->ip) ++;
#line 4238
      *tmp___187 = (unsigned char)138;
#line 4238
      break;
      case 8: 
      case 4: 
      case 2: 
#line 4238
      tmp___188 = jit->ip;
#line 4238
      (jit->ip) ++;
#line 4238
      *tmp___188 = (unsigned char)139;
#line 4238
      break;
      default: 
#line 4238
      tmp___189 = __builtin_expect(1L, 0L);
#line 4238
      if (tmp___189) {
#line 4238
        __assert_rtn((char const   *)"emit_mul_op", (char const   *)"tmp/src.c", 3222,
                     (char const   *)"0");
      }
      }
#line 4238
      while (1) {
#line 4238
        while (1) {
#line 4238
          tmp___190 = jit->ip;
#line 4238
          (jit->ip) ++;
#line 4238
          *tmp___190 = (unsigned char )(((long )(3 << 6) | ((dest & 7L) << 3)) | 2L);
#line 4238
          break;
        }
#line 4238
        break;
      }
#line 4238
      break;
    }
  }
#line 4240
  if (dest != 2L) {
#line 4240
    if (dx_in_use) {
#line 4240
      while (1) {
#line 4240
        while (1) {
#line 4240
          _amd64_rex_bits___19 = (unsigned char)0;
#line 4240
          if ((int )_amd64_rex_bits___19 != 0) {
#line 4240
            tmp___191 = jit->ip;
#line 4240
            (jit->ip) ++;
#line 4240
            *tmp___191 = (unsigned char )(0x40 | (int )_amd64_rex_bits___19);
          }
#line 4240
          break;
        }
#line 4240
        tmp___192 = jit->ip;
#line 4240
        (jit->ip) ++;
#line 4240
        *tmp___192 = (unsigned char)90;
#line 4240
        break;
      }
    }
  }
#line 4241
  if (dest != 0L) {
#line 4241
    if (ax_in_use) {
#line 4241
      while (1) {
#line 4241
        while (1) {
#line 4241
          _amd64_rex_bits___20 = (unsigned char)0;
#line 4241
          if ((int )_amd64_rex_bits___20 != 0) {
#line 4241
            tmp___193 = jit->ip;
#line 4241
            (jit->ip) ++;
#line 4241
            *tmp___193 = (unsigned char )(0x40 | (int )_amd64_rex_bits___20);
          }
#line 4241
          break;
        }
#line 4241
        tmp___194 = jit->ip;
#line 4241
        (jit->ip) ++;
#line 4241
        *tmp___194 = (unsigned char)88;
#line 4241
        break;
      }
    }
  }
#line 4242
  return;
}
}
/* END FUNCTION-DEF emit_mul_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_gen_op LOC=UNKNOWN */
void jit_gen_op(struct jit *jit , struct jit_op *op ) 
{ 
  jit_value a1 ;
  jit_value a2 ;
  jit_value a3 ;
  int imm ;
  int sign ;
  int found ;
  unsigned char _amd64_rex_bits ;
  int tmp ;
  int tmp___0 ;
  unsigned char *tmp___1 ;
  unsigned char *tmp___2 ;
  unsigned char *tmp___3 ;
  x86_imm_buf imb ;
  unsigned char *tmp___4 ;
  unsigned char *tmp___5 ;
  unsigned char *tmp___6 ;
  unsigned char *tmp___7 ;
  unsigned char *tmp___8 ;
  unsigned char *tmp___9 ;
  unsigned char *tmp___10 ;
  unsigned char *tmp___11 ;
  unsigned char *tmp___12 ;
  unsigned char *tmp___13 ;
  x86_imm_buf imb___0 ;
  unsigned char *tmp___14 ;
  unsigned char *tmp___15 ;
  unsigned char *tmp___16 ;
  unsigned char *tmp___17 ;
  unsigned char *tmp___18 ;
  unsigned char *tmp___19 ;
  unsigned char *tmp___20 ;
  x86_imm_buf imb___1 ;
  unsigned char *tmp___21 ;
  unsigned char *tmp___22 ;
  unsigned char *tmp___23 ;
  unsigned char *tmp___24 ;
  unsigned char _amd64_rex_bits___0 ;
  int tmp___25 ;
  int tmp___26 ;
  int tmp___27 ;
  unsigned char *tmp___28 ;
  unsigned char *tmp___29 ;
  unsigned char *tmp___30 ;
  unsigned char *tmp___31 ;
  x86_imm_buf imb___2 ;
  unsigned char *tmp___32 ;
  unsigned char *tmp___33 ;
  unsigned char *tmp___34 ;
  unsigned char *tmp___35 ;
  unsigned char *tmp___36 ;
  unsigned char *tmp___37 ;
  unsigned char *tmp___38 ;
  unsigned char *tmp___39 ;
  unsigned char *tmp___40 ;
  unsigned char *tmp___41 ;
  x86_imm_buf imb___3 ;
  unsigned char *tmp___42 ;
  unsigned char *tmp___43 ;
  unsigned char *tmp___44 ;
  unsigned char *tmp___45 ;
  unsigned char *tmp___46 ;
  unsigned char _amd64_rex_bits___1 ;
  int tmp___47 ;
  int tmp___48 ;
  int tmp___49 ;
  unsigned char *tmp___50 ;
  unsigned char *tmp___51 ;
  unsigned char *tmp___52 ;
  long tmp___53 ;
  unsigned char *tmp___54 ;
  unsigned char _amd64_rex_bits___2 ;
  int tmp___55 ;
  unsigned char *tmp___56 ;
  unsigned char *tmp___57 ;
  unsigned char *tmp___58 ;
  unsigned char *tmp___59 ;
  unsigned char _amd64_rex_bits___3 ;
  int tmp___60 ;
  int tmp___61 ;
  int tmp___62 ;
  unsigned char *tmp___63 ;
  unsigned char *tmp___64 ;
  unsigned char *tmp___65 ;
  long tmp___66 ;
  unsigned char *tmp___67 ;
  unsigned char _amd64_rex_bits___4 ;
  int tmp___68 ;
  unsigned char *tmp___69 ;
  unsigned char *tmp___70 ;
  unsigned char *tmp___71 ;
  int tmp___72 ;
  struct jit_op *target ;
  jit_value pa ;
  unsigned char rex_correction ;
  unsigned char *pos ;
  int disp ;
  int size ;
  long tmp___73 ;
  long tmp___74 ;
  x86_imm_buf imb___4 ;
  unsigned char *tmp___75 ;
  unsigned char *tmp___76 ;
  unsigned char *tmp___77 ;
  unsigned char *tmp___78 ;
  long tmp___79 ;
  unsigned char _amd64_rex_bits___5 ;
  int tmp___80 ;
  unsigned char *tmp___81 ;
  unsigned char *tmp___82 ;
  unsigned char *tmp___83 ;
  unsigned char _amd64_rex_bits___6 ;
  unsigned char *tmp___84 ;
  int t ;
  int tmp___85 ;
  size_t tmp___86 ;
  int tmp___87 ;
  unsigned char *tmp___88 ;
  x86_imm_buf imb___5 ;
  unsigned char *tmp___89 ;
  unsigned char *tmp___90 ;
  unsigned char *tmp___91 ;
  unsigned char *tmp___92 ;
  unsigned char *tmp___93 ;
  unsigned char _amd64_rex_bits___7 ;
  int tmp___94 ;
  int tmp___95 ;
  unsigned char *tmp___96 ;
  unsigned char *tmp___97 ;
  unsigned char *tmp___98 ;
  long tmp___99 ;
  unsigned char *tmp___100 ;
  unsigned char _amd64_rex_bits___8 ;
  int tmp___101 ;
  unsigned char *tmp___102 ;
  unsigned char *tmp___103 ;
  amd64_imm_buf imb___6 ;
  unsigned char *tmp___104 ;
  unsigned char *tmp___105 ;
  unsigned char *tmp___106 ;
  unsigned char *tmp___107 ;
  unsigned char *tmp___108 ;
  unsigned char *tmp___109 ;
  unsigned char *tmp___110 ;
  unsigned char *tmp___111 ;
  x86_imm_buf imb___7 ;
  unsigned char *tmp___112 ;
  unsigned char *tmp___113 ;
  unsigned char *tmp___114 ;
  unsigned char *tmp___115 ;
  unsigned char *tmp___116 ;
  unsigned char _amd64_rex_bits___9 ;
  int tmp___117 ;
  unsigned char *tmp___118 ;
  unsigned char *tmp___119 ;
  unsigned char *tmp___120 ;
  long tmp___121 ;
  unsigned char *tmp___122 ;
  unsigned char _amd64_rex_bits___10 ;
  unsigned char *tmp___123 ;
  unsigned char *tmp___124 ;
  struct jit_func_info *tmp___125 ;
  unsigned char *tmp___126 ;
  unsigned char *tmp___127 ;
  unsigned char *tmp___128 ;
  unsigned char _amd64_rex_bits___11 ;
  int tmp___129 ;
  int tmp___130 ;
  unsigned char *tmp___131 ;
  unsigned char *tmp___132 ;
  amd64_imm_buf imb___8 ;
  unsigned char *tmp___133 ;
  unsigned char *tmp___134 ;
  unsigned char *tmp___135 ;
  unsigned char *tmp___136 ;
  unsigned char *tmp___137 ;
  unsigned char *tmp___138 ;
  unsigned char *tmp___139 ;
  unsigned char *tmp___140 ;
  x86_imm_buf imb___9 ;
  unsigned char *tmp___141 ;
  unsigned char *tmp___142 ;
  unsigned char *tmp___143 ;
  unsigned char *tmp___144 ;
  unsigned char *tmp___145 ;
  unsigned char _amd64_rex_bits___12 ;
  int tmp___146 ;
  int tmp___147 ;
  int tmp___148 ;
  unsigned char *tmp___149 ;
  unsigned char *tmp___150 ;
  unsigned char *tmp___151 ;
  long tmp___152 ;
  unsigned char *tmp___153 ;
  unsigned char _amd64_rex_bits___13 ;
  int tmp___154 ;
  int tmp___155 ;
  unsigned char *tmp___156 ;
  unsigned char *tmp___157 ;
  unsigned char *tmp___158 ;
  unsigned char _amd64_rex_bits___14 ;
  int tmp___159 ;
  unsigned char *tmp___160 ;
  unsigned char *tmp___161 ;
  amd64_imm_buf imb___10 ;
  unsigned char *tmp___162 ;
  unsigned char *tmp___163 ;
  unsigned char *tmp___164 ;
  unsigned char *tmp___165 ;
  unsigned char *tmp___166 ;
  unsigned char *tmp___167 ;
  unsigned char *tmp___168 ;
  unsigned char *tmp___169 ;
  x86_imm_buf imb___11 ;
  unsigned char *tmp___170 ;
  unsigned char *tmp___171 ;
  unsigned char *tmp___172 ;
  unsigned char *tmp___173 ;
  int tmp___174 ;
  unsigned char *tmp___175 ;
  unsigned char _amd64_rex_bits___15 ;
  int tmp___176 ;
  int tmp___177 ;
  unsigned char *tmp___178 ;
  unsigned char *tmp___179 ;
  unsigned char *tmp___180 ;
  long tmp___181 ;
  unsigned char *tmp___182 ;
  unsigned char *tmp___183 ;
  x86_imm_buf imb___12 ;
  unsigned char *tmp___184 ;
  unsigned char *tmp___185 ;
  unsigned char *tmp___186 ;
  unsigned char *tmp___187 ;
  unsigned char *tmp___188 ;
  unsigned char _amd64_rex_bits___16 ;
  int tmp___189 ;
  int tmp___190 ;
  int tmp___191 ;
  unsigned char *tmp___192 ;
  unsigned char *tmp___193 ;
  unsigned char *tmp___194 ;
  long tmp___195 ;
  unsigned char *tmp___196 ;
  unsigned char *tmp___197 ;
  unsigned char *tmp___198 ;
  unsigned char *tmp___199 ;
  unsigned char *tmp___200 ;
  unsigned char *tmp___201 ;
  x86_imm_buf imb___13 ;
  unsigned char *tmp___202 ;
  unsigned char *tmp___203 ;
  unsigned char *tmp___204 ;
  unsigned char *tmp___205 ;
  unsigned char *tmp___206 ;
  unsigned char *tmp___207 ;
  unsigned char *tmp___208 ;
  x86_imm_buf imb___14 ;
  unsigned char *tmp___209 ;
  unsigned char *tmp___210 ;
  unsigned char *tmp___211 ;
  unsigned char *tmp___212 ;
  unsigned char *tmp___213 ;
  unsigned char _amd64_rex_bits___17 ;
  int tmp___214 ;
  int tmp___215 ;
  int tmp___216 ;
  unsigned char *tmp___217 ;
  unsigned char *tmp___218 ;
  unsigned char *tmp___219 ;
  long tmp___220 ;
  unsigned char *tmp___221 ;
  unsigned char *tmp___222 ;
  unsigned char *tmp___223 ;
  unsigned char *tmp___224 ;
  unsigned char *tmp___225 ;
  unsigned char *tmp___226 ;
  x86_imm_buf imb___15 ;
  unsigned char *tmp___227 ;
  unsigned char *tmp___228 ;
  unsigned char *tmp___229 ;
  unsigned char *tmp___230 ;
  unsigned char *tmp___231 ;
  unsigned char *tmp___232 ;
  unsigned char *tmp___233 ;
  x86_imm_buf imb___16 ;
  unsigned char *tmp___234 ;
  unsigned char *tmp___235 ;
  unsigned char *tmp___236 ;
  unsigned char *tmp___237 ;
  unsigned char *tmp___238 ;
  unsigned char _amd64_rex_bits___18 ;
  int tmp___239 ;
  int tmp___240 ;
  int tmp___241 ;
  int tmp___242 ;
  unsigned char *tmp___243 ;
  unsigned char *tmp___244 ;
  unsigned char *tmp___245 ;
  long tmp___246 ;
  unsigned char *tmp___247 ;
  unsigned char *tmp___248 ;
  x86_imm_buf imb___17 ;
  unsigned char *tmp___249 ;
  unsigned char *tmp___250 ;
  unsigned char *tmp___251 ;
  unsigned char *tmp___252 ;
  unsigned char *tmp___253 ;
  unsigned char *tmp___254 ;
  unsigned char *tmp___255 ;
  unsigned char *tmp___256 ;
  unsigned char *tmp___257 ;
  unsigned char *tmp___258 ;
  x86_imm_buf imb___18 ;
  unsigned char *tmp___259 ;
  unsigned char *tmp___260 ;
  unsigned char *tmp___261 ;
  unsigned char *tmp___262 ;
  unsigned char *tmp___263 ;
  unsigned char _amd64_rex_bits___19 ;
  int tmp___264 ;
  int tmp___265 ;
  unsigned char *tmp___266 ;
  unsigned char *tmp___267 ;
  unsigned char *tmp___268 ;
  unsigned char *tmp___269 ;
  unsigned char *tmp___270 ;
  unsigned char _amd64_rex_bits___20 ;
  int tmp___271 ;
  int tmp___272 ;
  unsigned char *tmp___273 ;
  unsigned char *tmp___274 ;
  unsigned char *tmp___275 ;
  unsigned char *tmp___276 ;
  unsigned char *tmp___277 ;
  unsigned char _amd64_rex_bits___21 ;
  int tmp___278 ;
  int tmp___279 ;
  unsigned char *tmp___280 ;
  unsigned char *tmp___281 ;
  unsigned char *tmp___282 ;
  unsigned char *tmp___283 ;
  unsigned char *tmp___284 ;
  unsigned char _amd64_rex_bits___22 ;
  int tmp___285 ;
  int tmp___286 ;
  int tmp___287 ;
  unsigned char *tmp___288 ;
  unsigned char *tmp___289 ;
  unsigned char *tmp___290 ;
  long tmp___291 ;
  unsigned char *tmp___292 ;
  unsigned char _amd64_rex_bits___23 ;
  int tmp___293 ;
  unsigned char *tmp___294 ;
  unsigned char *tmp___295 ;
  unsigned char *tmp___296 ;
  unsigned char *tmp___297 ;
  x86_imm_buf imb___19 ;
  unsigned char *tmp___298 ;
  unsigned char *tmp___299 ;
  unsigned char *tmp___300 ;
  unsigned char *tmp___301 ;
  unsigned char *tmp___302 ;
  unsigned char *tmp___303 ;
  unsigned char *tmp___304 ;
  unsigned char *tmp___305 ;
  x86_imm_buf imb___20 ;
  unsigned char *tmp___306 ;
  unsigned char *tmp___307 ;
  unsigned char *tmp___308 ;
  unsigned char *tmp___309 ;
  unsigned char *tmp___310 ;
  unsigned char *tmp___311 ;
  unsigned char *tmp___312 ;
  x86_imm_buf imb___21 ;
  unsigned char *tmp___313 ;
  unsigned char *tmp___314 ;
  unsigned char *tmp___315 ;
  unsigned char *tmp___316 ;
  x86_imm_buf imb___22 ;
  unsigned char *tmp___317 ;
  unsigned char *tmp___318 ;
  unsigned char *tmp___319 ;
  unsigned char *tmp___320 ;
  unsigned char *tmp___321 ;
  unsigned char _amd64_rex_bits___24 ;
  int tmp___322 ;
  int tmp___323 ;
  int tmp___324 ;
  int tmp___325 ;
  unsigned char *tmp___326 ;
  int tmp___327 ;
  unsigned char *tmp___328 ;
  unsigned char *tmp___329 ;
  unsigned char *tmp___330 ;
  unsigned char *tmp___331 ;
  unsigned char *tmp___332 ;
  unsigned char *tmp___333 ;
  unsigned char *tmp___334 ;
  x86_imm_buf imb___23 ;
  unsigned char *tmp___335 ;
  unsigned char *tmp___336 ;
  unsigned char *tmp___337 ;
  unsigned char *tmp___338 ;
  unsigned char *tmp___339 ;
  unsigned char *tmp___340 ;
  unsigned char *tmp___341 ;
  x86_imm_buf imb___24 ;
  unsigned char *tmp___342 ;
  unsigned char *tmp___343 ;
  unsigned char *tmp___344 ;
  unsigned char *tmp___345 ;
  unsigned char *tmp___346 ;
  unsigned char *tmp___347 ;
  unsigned char *tmp___348 ;
  unsigned char *tmp___349 ;
  unsigned char *tmp___350 ;
  unsigned char *tmp___351 ;
  unsigned char *tmp___352 ;
  x86_imm_buf imb___25 ;
  unsigned char *tmp___353 ;
  unsigned char *tmp___354 ;
  unsigned char *tmp___355 ;
  unsigned char *tmp___356 ;
  unsigned char *tmp___357 ;
  unsigned char *tmp___358 ;
  unsigned char *tmp___359 ;
  x86_imm_buf imb___26 ;
  unsigned char *tmp___360 ;
  unsigned char *tmp___361 ;
  unsigned char *tmp___362 ;
  unsigned char *tmp___363 ;
  unsigned char *tmp___364 ;
  unsigned char *tmp___365 ;
  unsigned char *tmp___366 ;
  unsigned char *tmp___367 ;
  unsigned char *tmp___368 ;
  unsigned char *tmp___369 ;
  unsigned char *tmp___370 ;
  x86_imm_buf imb___27 ;
  unsigned char *tmp___371 ;
  unsigned char *tmp___372 ;
  unsigned char *tmp___373 ;
  unsigned char *tmp___374 ;
  unsigned char *tmp___375 ;
  unsigned char *tmp___376 ;
  unsigned char *tmp___377 ;
  x86_imm_buf imb___28 ;
  unsigned char *tmp___378 ;
  unsigned char *tmp___379 ;
  unsigned char *tmp___380 ;
  unsigned char *tmp___381 ;
  x86_imm_buf imb___29 ;
  unsigned char *tmp___382 ;
  unsigned char *tmp___383 ;
  unsigned char *tmp___384 ;
  unsigned char *tmp___385 ;
  unsigned char *tmp___386 ;
  unsigned char _amd64_rex_bits___25 ;
  int tmp___387 ;
  int tmp___388 ;
  int tmp___389 ;
  int tmp___390 ;
  unsigned char *tmp___391 ;
  int tmp___392 ;
  unsigned char *tmp___393 ;
  unsigned char *tmp___394 ;
  unsigned char *tmp___395 ;
  unsigned char *tmp___396 ;
  unsigned char *tmp___397 ;
  unsigned char *tmp___398 ;
  unsigned char *tmp___399 ;
  x86_imm_buf imb___30 ;
  unsigned char *tmp___400 ;
  unsigned char *tmp___401 ;
  unsigned char *tmp___402 ;
  unsigned char *tmp___403 ;
  unsigned char *tmp___404 ;
  unsigned char *tmp___405 ;
  unsigned char *tmp___406 ;
  x86_imm_buf imb___31 ;
  unsigned char *tmp___407 ;
  unsigned char *tmp___408 ;
  unsigned char *tmp___409 ;
  unsigned char *tmp___410 ;
  unsigned char *tmp___411 ;
  unsigned char *tmp___412 ;
  unsigned char *tmp___413 ;
  unsigned char *tmp___414 ;
  unsigned char *tmp___415 ;
  unsigned char *tmp___416 ;
  unsigned char *tmp___417 ;
  x86_imm_buf imb___32 ;
  unsigned char *tmp___418 ;
  unsigned char *tmp___419 ;
  unsigned char *tmp___420 ;
  unsigned char *tmp___421 ;
  unsigned char *tmp___422 ;
  unsigned char *tmp___423 ;
  unsigned char *tmp___424 ;
  x86_imm_buf imb___33 ;
  unsigned char *tmp___425 ;
  unsigned char *tmp___426 ;
  unsigned char *tmp___427 ;
  unsigned char *tmp___428 ;
  unsigned char *tmp___429 ;
  unsigned char *tmp___430 ;
  unsigned char *tmp___431 ;
  unsigned char *tmp___432 ;
  unsigned char *tmp___433 ;
  unsigned char *tmp___434 ;
  unsigned char *tmp___435 ;
  x86_imm_buf imb___34 ;
  unsigned char *tmp___436 ;
  unsigned char *tmp___437 ;
  unsigned char *tmp___438 ;
  unsigned char *tmp___439 ;
  unsigned char *tmp___440 ;
  unsigned char *tmp___441 ;
  unsigned char *tmp___442 ;
  x86_imm_buf imb___35 ;
  unsigned char *tmp___443 ;
  unsigned char *tmp___444 ;
  unsigned char *tmp___445 ;
  unsigned char *tmp___446 ;
  x86_imm_buf imb___36 ;
  unsigned char *tmp___447 ;
  unsigned char *tmp___448 ;
  unsigned char *tmp___449 ;
  unsigned char *tmp___450 ;
  unsigned char _amd64_rex_bits___26 ;
  int tmp___451 ;
  int tmp___452 ;
  int tmp___453 ;
  unsigned char *tmp___454 ;
  unsigned char *tmp___455 ;
  unsigned char *tmp___456 ;
  unsigned char *tmp___457 ;
  x86_imm_buf imb___37 ;
  unsigned char *tmp___458 ;
  unsigned char *tmp___459 ;
  unsigned char *tmp___460 ;
  unsigned char *tmp___461 ;
  unsigned char *tmp___462 ;
  unsigned char *tmp___463 ;
  unsigned char *tmp___464 ;
  unsigned char *tmp___465 ;
  unsigned char *tmp___466 ;
  unsigned char *tmp___467 ;
  x86_imm_buf imb___38 ;
  unsigned char *tmp___468 ;
  unsigned char *tmp___469 ;
  unsigned char *tmp___470 ;
  unsigned char *tmp___471 ;
  unsigned char *tmp___472 ;
  unsigned char *tmp___473 ;
  unsigned char *tmp___474 ;
  unsigned char *tmp___475 ;
  x86_imm_buf imb___39 ;
  unsigned char *tmp___476 ;
  unsigned char *tmp___477 ;
  unsigned char *tmp___478 ;
  unsigned char *tmp___479 ;
  unsigned char *tmp___480 ;
  unsigned char *tmp___481 ;
  unsigned char *tmp___482 ;
  unsigned char *tmp___483 ;
  unsigned char *tmp___484 ;
  unsigned char *tmp___485 ;
  x86_imm_buf imb___40 ;
  unsigned char *tmp___486 ;
  unsigned char *tmp___487 ;
  unsigned char *tmp___488 ;
  unsigned char *tmp___489 ;
  unsigned char *tmp___490 ;
  unsigned char *tmp___491 ;
  unsigned char *tmp___492 ;
  x86_imm_buf imb___41 ;
  unsigned char *tmp___493 ;
  unsigned char *tmp___494 ;
  unsigned char *tmp___495 ;
  unsigned char *tmp___496 ;
  unsigned char *tmp___497 ;
  unsigned char *tmp___498 ;
  unsigned char *tmp___499 ;
  unsigned char *tmp___500 ;
  unsigned char *tmp___501 ;
  unsigned char *tmp___502 ;
  x86_imm_buf imb___42 ;
  unsigned char *tmp___503 ;
  unsigned char *tmp___504 ;
  unsigned char *tmp___505 ;
  unsigned char *tmp___506 ;
  x86_imm_buf imb___43 ;
  unsigned char *tmp___507 ;
  unsigned char *tmp___508 ;
  unsigned char *tmp___509 ;
  unsigned char *tmp___510 ;
  int tmp___511 ;
  int tmp___512 ;
  unsigned char _amd64_rex_bits___27 ;
  int tmp___513 ;
  int tmp___514 ;
  int tmp___515 ;
  unsigned char *tmp___516 ;
  unsigned char *tmp___517 ;
  unsigned char *tmp___518 ;
  unsigned char *tmp___519 ;
  x86_imm_buf imb___44 ;
  unsigned char *tmp___520 ;
  unsigned char *tmp___521 ;
  unsigned char *tmp___522 ;
  unsigned char *tmp___523 ;
  unsigned char *tmp___524 ;
  unsigned char *tmp___525 ;
  unsigned char *tmp___526 ;
  unsigned char *tmp___527 ;
  unsigned char *tmp___528 ;
  unsigned char *tmp___529 ;
  x86_imm_buf imb___45 ;
  unsigned char *tmp___530 ;
  unsigned char *tmp___531 ;
  unsigned char *tmp___532 ;
  unsigned char *tmp___533 ;
  unsigned char _amd64_rex_bits___28 ;
  int tmp___534 ;
  int tmp___535 ;
  unsigned char *tmp___536 ;
  unsigned char *tmp___537 ;
  unsigned char *tmp___538 ;
  unsigned char *tmp___539 ;
  x86_imm_buf imb___46 ;
  unsigned char *tmp___540 ;
  unsigned char *tmp___541 ;
  unsigned char *tmp___542 ;
  unsigned char *tmp___543 ;
  unsigned char *tmp___544 ;
  unsigned char *tmp___545 ;
  unsigned char *tmp___546 ;
  unsigned char *tmp___547 ;
  unsigned char *tmp___548 ;
  unsigned char *tmp___549 ;
  x86_imm_buf imb___47 ;
  unsigned char *tmp___550 ;
  unsigned char *tmp___551 ;
  unsigned char *tmp___552 ;
  unsigned char *tmp___553 ;
  jit_value tmp___554 ;
  unsigned long long tmp___555 ;
  unsigned char _amd64_rex_bits___29 ;
  int tmp___556 ;
  int tmp___557 ;
  int tmp___558 ;
  unsigned char *tmp___559 ;
  unsigned char *tmp___560 ;
  unsigned char *tmp___561 ;
  unsigned char *tmp___562 ;
  x86_imm_buf imb___48 ;
  unsigned char *tmp___563 ;
  unsigned char *tmp___564 ;
  unsigned char *tmp___565 ;
  unsigned char *tmp___566 ;
  unsigned char *tmp___567 ;
  unsigned char *tmp___568 ;
  unsigned char *tmp___569 ;
  unsigned char *tmp___570 ;
  unsigned char *tmp___571 ;
  unsigned char *tmp___572 ;
  x86_imm_buf imb___49 ;
  unsigned char *tmp___573 ;
  unsigned char *tmp___574 ;
  unsigned char *tmp___575 ;
  unsigned char *tmp___576 ;

  {
#line 4561
  a1 = op->r_arg[0];
#line 4562
  a2 = op->r_arg[1];
#line 4563
  a3 = op->r_arg[2];
#line 4564
  imm = (int )op->code & 0x02;
#line 4565
  sign = ! ((int )op->code & 0x04);
#line 4566
  found = 1;
#line 4567
  switch ((unsigned int )((jit_opcode )((int )op->code & 0xfff8))) {
  case 800U: 
#line 4569
  if (a1 != a2) {
#line 4569
    if (a1 != a3) {
#line 4570
      if (imm) {
#line 4570
        while (1) {
#line 4570
          while (1) {
#line 4570
            if (a1 > 7L) {
#line 4570
              tmp = 4;
            } else {
#line 4570
              tmp = 0;
            }
#line 4570
            if (a2 > 7L) {
#line 4570
              tmp___0 = 1;
            } else {
#line 4570
              tmp___0 = 0;
            }
#line 4570
            _amd64_rex_bits = (unsigned char )((8 | tmp) | tmp___0);
#line 4570
            if ((int )_amd64_rex_bits != 0) {
#line 4570
              tmp___1 = jit->ip;
#line 4570
              (jit->ip) ++;
#line 4570
              *tmp___1 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
            }
#line 4570
            break;
          }
#line 4570
          tmp___2 = jit->ip;
#line 4570
          (jit->ip) ++;
#line 4570
          *tmp___2 = (unsigned char)141;
#line 4570
          while (1) {
#line 4570
            if (a2 == 16L) {
#line 4570
              while (1) {
#line 4570
                tmp___3 = jit->ip;
#line 4570
                (jit->ip) ++;
#line 4570
                *tmp___3 = (unsigned char )((((a1 & 7L) & 7L) << 3) | 5L);
#line 4570
                break;
              }
#line 4570
              while (1) {
#line 4570
                imb.val = (int )a3;
#line 4570
                tmp___4 = jit->ip;
#line 4570
                (jit->ip) ++;
#line 4570
                *tmp___4 = imb.b[0];
#line 4570
                tmp___5 = jit->ip;
#line 4570
                (jit->ip) ++;
#line 4570
                *tmp___5 = imb.b[1];
#line 4570
                tmp___6 = jit->ip;
#line 4570
                (jit->ip) ++;
#line 4570
                *tmp___6 = imb.b[2];
#line 4570
                tmp___7 = jit->ip;
#line 4570
                (jit->ip) ++;
#line 4570
                *tmp___7 = imb.b[3];
#line 4570
                break;
              }
            } else {
#line 4570
              while (1) {
#line 4570
                if ((a2 & 7L) == 4L) {
#line 4570
                  if (a3 == 0L) {
#line 4570
                    while (1) {
#line 4570
                      tmp___8 = jit->ip;
#line 4570
                      (jit->ip) ++;
#line 4570
                      *tmp___8 = (unsigned char )((((a1 & 7L) & 7L) << 3) | 4L);
#line 4570
                      break;
                    }
#line 4570
                    while (1) {
#line 4570
                      tmp___9 = jit->ip;
#line 4570
                      (jit->ip) ++;
#line 4570
                      *tmp___9 = (unsigned char )((4 << 3) | 4);
#line 4570
                      break;
                    }
                  } else
#line 4570
                  if (a3 >= -128L) {
#line 4570
                    if (a3 <= 127L) {
#line 4570
                      while (1) {
#line 4570
                        tmp___10 = jit->ip;
#line 4570
                        (jit->ip) ++;
#line 4570
                        *tmp___10 = (unsigned char )(((long )(1 << 6) | (((a1 & 7L) & 7L) << 3)) | 4L);
#line 4570
                        break;
                      }
#line 4570
                      while (1) {
#line 4570
                        tmp___11 = jit->ip;
#line 4570
                        (jit->ip) ++;
#line 4570
                        *tmp___11 = (unsigned char )((4 << 3) | 4);
#line 4570
                        break;
                      }
#line 4570
                      while (1) {
#line 4570
                        *(jit->ip) = (unsigned char )(a3 & 255L);
#line 4570
                        (jit->ip) ++;
#line 4570
                        break;
                      }
                    } else {
#line 4570
                      goto _L;
                    }
                  } else {
                    _L: /* CIL Label */ 
#line 4570
                    while (1) {
#line 4570
                      tmp___12 = jit->ip;
#line 4570
                      (jit->ip) ++;
#line 4570
                      *tmp___12 = (unsigned char )(((long )(2 << 6) | (((a1 & 7L) & 7L) << 3)) | 4L);
#line 4570
                      break;
                    }
#line 4570
                    while (1) {
#line 4570
                      tmp___13 = jit->ip;
#line 4570
                      (jit->ip) ++;
#line 4570
                      *tmp___13 = (unsigned char )((4 << 3) | 4);
#line 4570
                      break;
                    }
#line 4570
                    while (1) {
#line 4570
                      imb___0.val = (int )a3;
#line 4570
                      tmp___14 = jit->ip;
#line 4570
                      (jit->ip) ++;
#line 4570
                      *tmp___14 = imb___0.b[0];
#line 4570
                      tmp___15 = jit->ip;
#line 4570
                      (jit->ip) ++;
#line 4570
                      *tmp___15 = imb___0.b[1];
#line 4570
                      tmp___16 = jit->ip;
#line 4570
                      (jit->ip) ++;
#line 4570
                      *tmp___16 = imb___0.b[2];
#line 4570
                      tmp___17 = jit->ip;
#line 4570
                      (jit->ip) ++;
#line 4570
                      *tmp___17 = imb___0.b[3];
#line 4570
                      break;
                    }
                  }
#line 4570
                  break;
                }
#line 4570
                if (a3 == 0L) {
#line 4570
                  if ((a2 & 7L) != 5L) {
#line 4570
                    while (1) {
#line 4570
                      tmp___18 = jit->ip;
#line 4570
                      (jit->ip) ++;
#line 4570
                      *tmp___18 = (unsigned char )((((a1 & 7L) & 7L) << 3) | ((a2 & 7L) & 7L));
#line 4570
                      break;
                    }
#line 4570
                    break;
                  }
                }
#line 4570
                if (a3 >= -128L) {
#line 4570
                  if (a3 <= 127L) {
#line 4570
                    while (1) {
#line 4570
                      tmp___19 = jit->ip;
#line 4570
                      (jit->ip) ++;
#line 4570
                      *tmp___19 = (unsigned char )(((long )(1 << 6) | (((a1 & 7L) & 7L) << 3)) | ((a2 & 7L) & 7L));
#line 4570
                      break;
                    }
#line 4570
                    while (1) {
#line 4570
                      *(jit->ip) = (unsigned char )(a3 & 255L);
#line 4570
                      (jit->ip) ++;
#line 4570
                      break;
                    }
                  } else {
#line 4570
                    goto _L___0;
                  }
                } else {
                  _L___0: /* CIL Label */ 
#line 4570
                  while (1) {
#line 4570
                    tmp___20 = jit->ip;
#line 4570
                    (jit->ip) ++;
#line 4570
                    *tmp___20 = (unsigned char )(((long )(2 << 6) | (((a1 & 7L) & 7L) << 3)) | ((a2 & 7L) & 7L));
#line 4570
                    break;
                  }
#line 4570
                  while (1) {
#line 4570
                    imb___1.val = (int )a3;
#line 4570
                    tmp___21 = jit->ip;
#line 4570
                    (jit->ip) ++;
#line 4570
                    *tmp___21 = imb___1.b[0];
#line 4570
                    tmp___22 = jit->ip;
#line 4570
                    (jit->ip) ++;
#line 4570
                    *tmp___22 = imb___1.b[1];
#line 4570
                    tmp___23 = jit->ip;
#line 4570
                    (jit->ip) ++;
#line 4570
                    *tmp___23 = imb___1.b[2];
#line 4570
                    tmp___24 = jit->ip;
#line 4570
                    (jit->ip) ++;
#line 4570
                    *tmp___24 = imb___1.b[3];
#line 4570
                    break;
                  }
                }
#line 4570
                break;
              }
            }
#line 4570
            break;
          }
#line 4570
          break;
        }
      } else {
#line 4571
        while (1) {
#line 4571
          while (1) {
#line 4571
            if (a1 > 7L) {
#line 4571
              tmp___25 = 4;
            } else {
#line 4571
              tmp___25 = 0;
            }
#line 4571
            if (a3 > 7L) {
#line 4571
              tmp___26 = 2;
            } else {
#line 4571
              tmp___26 = 0;
            }
#line 4571
            if (a2 > 7L) {
#line 4571
              tmp___27 = 1;
            } else {
#line 4571
              tmp___27 = 0;
            }
#line 4571
            _amd64_rex_bits___0 = (unsigned char )(((8 | tmp___25) | tmp___26) | tmp___27);
#line 4571
            if ((int )_amd64_rex_bits___0 != 0) {
#line 4571
              tmp___28 = jit->ip;
#line 4571
              (jit->ip) ++;
#line 4571
              *tmp___28 = (unsigned char )(0x40 | (int )_amd64_rex_bits___0);
            }
#line 4571
            break;
          }
#line 4571
          while (1) {
#line 4571
            tmp___29 = jit->ip;
#line 4571
            (jit->ip) ++;
#line 4571
            *tmp___29 = (unsigned char)141;
#line 4571
            while (1) {
#line 4571
              if (a2 == -1L) {
#line 4571
                while (1) {
#line 4571
                  tmp___30 = jit->ip;
#line 4571
                  (jit->ip) ++;
#line 4571
                  *tmp___30 = (unsigned char )((((a1 & 7L) & 7L) << 3) | 4L);
#line 4571
                  break;
                }
#line 4571
                while (1) {
#line 4571
                  tmp___31 = jit->ip;
#line 4571
                  (jit->ip) ++;
#line 4571
                  *tmp___31 = (unsigned char )((((a3 & 7L) & 7L) << 3) | 5L);
#line 4571
                  break;
                }
#line 4571
                while (1) {
#line 4571
                  imb___2.val = 0;
#line 4571
                  tmp___32 = jit->ip;
#line 4571
                  (jit->ip) ++;
#line 4571
                  *tmp___32 = imb___2.b[0];
#line 4571
                  tmp___33 = jit->ip;
#line 4571
                  (jit->ip) ++;
#line 4571
                  *tmp___33 = imb___2.b[1];
#line 4571
                  tmp___34 = jit->ip;
#line 4571
                  (jit->ip) ++;
#line 4571
                  *tmp___34 = imb___2.b[2];
#line 4571
                  tmp___35 = jit->ip;
#line 4571
                  (jit->ip) ++;
#line 4571
                  *tmp___35 = imb___2.b[3];
#line 4571
                  break;
                }
              } else
#line 4571
              if (a2 != 5L) {
#line 4571
                while (1) {
#line 4571
                  tmp___36 = jit->ip;
#line 4571
                  (jit->ip) ++;
#line 4571
                  *tmp___36 = (unsigned char )((((a1 & 7L) & 7L) << 3) | 4L);
#line 4571
                  break;
                }
#line 4571
                while (1) {
#line 4571
                  tmp___37 = jit->ip;
#line 4571
                  (jit->ip) ++;
#line 4571
                  *tmp___37 = (unsigned char )(((((a3 & 7L) & 7L) & 7L) << 3) | ((a2 & 7L) & 7L));
#line 4571
                  break;
                }
              } else {
#line 4571
                while (1) {
#line 4571
                  tmp___38 = jit->ip;
#line 4571
                  (jit->ip) ++;
#line 4571
                  *tmp___38 = (unsigned char )(((long )(1 << 6) | (((a1 & 7L) & 7L) << 3)) | 4L);
#line 4571
                  break;
                }
#line 4571
                while (1) {
#line 4571
                  tmp___39 = jit->ip;
#line 4571
                  (jit->ip) ++;
#line 4571
                  *tmp___39 = (unsigned char )(((((a3 & 7L) & 7L) & 7L) << 3) | ((a2 & 7L) & 7L));
#line 4571
                  break;
                }
#line 4571
                while (1) {
#line 4571
                  *(jit->ip) = (unsigned char)0;
#line 4571
                  (jit->ip) ++;
#line 4571
                  break;
                }
              }
#line 4571
              break;
            }
#line 4571
            break;
          }
#line 4571
          break;
        }
      }
    } else {
#line 4572
      emit_alu_op(jit, op, 0, imm);
    }
  } else {
#line 4572
    emit_alu_op(jit, op, 0, imm);
  }
#line 4573
  break;
  case 608U: 
#line 4574
  emit_alu_op(jit, op, 0, imm);
#line 4574
  break;
  case 480U: 
#line 4575
  emit_alu_op(jit, op, 2, imm);
#line 4575
  break;
  case 152U: 
#line 4576
  emit_sub_op(jit, op, imm);
#line 4576
  break;
  case 320U: 
#line 4577
  emit_subx_op(jit, op, 5, imm);
#line 4577
  break;
  case 8U: 
#line 4578
  emit_subx_op(jit, op, 3, imm);
#line 4578
  break;
  case 144U: 
#line 4579
  emit_rsb_op(jit, op, imm);
#line 4579
  break;
  case 48U: 
#line 4581
  if (a1 != a2) {
#line 4581
    while (1) {
#line 4581
      if ((int )sizeof(void *) == 2) {
#line 4581
        tmp___46 = jit->ip;
#line 4581
        (jit->ip) ++;
#line 4581
        *tmp___46 = (unsigned char)102;
      }
#line 4581
      while (1) {
#line 4581
        if ((int )sizeof(void *) > 4) {
#line 4581
          tmp___47 = 8;
        } else {
#line 4581
          tmp___47 = 0;
        }
#line 4581
        if (a1 > 7L) {
#line 4581
          tmp___48 = 4;
        } else {
#line 4581
          tmp___48 = 0;
        }
#line 4581
        if (a2 > 7L) {
#line 4581
          tmp___49 = 1;
        } else {
#line 4581
          tmp___49 = 0;
        }
#line 4581
        _amd64_rex_bits___1 = (unsigned char )((tmp___47 | tmp___48) | tmp___49);
#line 4581
        if ((int )_amd64_rex_bits___1 != 0) {
#line 4581
          tmp___50 = jit->ip;
#line 4581
          (jit->ip) ++;
#line 4581
          *tmp___50 = (unsigned char )(0x40 | (int )_amd64_rex_bits___1);
        } else
#line 4581
        if ((int )sizeof(void *) == 1) {
#line 4581
          tmp___50 = jit->ip;
#line 4581
          (jit->ip) ++;
#line 4581
          *tmp___50 = (unsigned char )(0x40 | (int )_amd64_rex_bits___1);
        }
#line 4581
        break;
      }
#line 4581
      switch ((int )sizeof(void *)) {
      case 1: 
#line 4581
      tmp___51 = jit->ip;
#line 4581
      (jit->ip) ++;
#line 4581
      *tmp___51 = (unsigned char)138;
#line 4581
      break;
      case 8: 
      case 4: 
      case 2: 
#line 4581
      tmp___52 = jit->ip;
#line 4581
      (jit->ip) ++;
#line 4581
      *tmp___52 = (unsigned char)139;
#line 4581
      break;
      default: 
#line 4581
      tmp___53 = __builtin_expect(1L, 0L);
#line 4581
      if (tmp___53) {
#line 4581
        __assert_rtn((char const   *)"jit_gen_op", (char const   *)"tmp/src.c", 3659,
                     (char const   *)"0");
      }
      }
#line 4581
      while (1) {
#line 4581
        while (1) {
#line 4581
          tmp___54 = jit->ip;
#line 4581
          (jit->ip) ++;
#line 4581
          *tmp___54 = (unsigned char )(((long )(3 << 6) | ((a1 & 7L) << 3)) | (a2 & 7L));
#line 4581
          break;
        }
#line 4581
        break;
      }
#line 4581
      break;
    }
  }
#line 4582
  while (1) {
#line 4582
    while (1) {
#line 4582
      if (a1 > 7L) {
#line 4582
        tmp___55 = 1;
      } else {
#line 4582
        tmp___55 = 0;
      }
#line 4582
      _amd64_rex_bits___2 = (unsigned char )(8 | tmp___55);
#line 4582
      if ((int )_amd64_rex_bits___2 != 0) {
#line 4582
        tmp___56 = jit->ip;
#line 4582
        (jit->ip) ++;
#line 4582
        *tmp___56 = (unsigned char )(0x40 | (int )_amd64_rex_bits___2);
      }
#line 4582
      break;
    }
#line 4582
    while (1) {
#line 4582
      tmp___57 = jit->ip;
#line 4582
      (jit->ip) ++;
#line 4582
      *tmp___57 = (unsigned char)247;
#line 4582
      while (1) {
#line 4582
        while (1) {
#line 4582
          tmp___58 = jit->ip;
#line 4582
          (jit->ip) ++;
#line 4582
          *tmp___58 = (unsigned char )((long )((3 << 6) | (3 << 3)) | ((a1 & 7L) & 7L));
#line 4582
          break;
        }
#line 4582
        break;
      }
#line 4582
      break;
    }
#line 4582
    break;
  }
#line 4583
  break;
  case 248U: 
#line 4584
  emit_alu_op(jit, op, 1, imm);
#line 4584
  break;
  case 640U: 
#line 4585
  emit_alu_op(jit, op, 6, imm);
#line 4585
  break;
  case 416U: 
#line 4586
  emit_alu_op(jit, op, 4, imm);
#line 4586
  break;
  case 400U: 
#line 4587
  if (a1 != a2) {
#line 4587
    while (1) {
#line 4587
      if ((int )sizeof(void *) == 2) {
#line 4587
        tmp___59 = jit->ip;
#line 4587
        (jit->ip) ++;
#line 4587
        *tmp___59 = (unsigned char)102;
      }
#line 4587
      while (1) {
#line 4587
        if ((int )sizeof(void *) > 4) {
#line 4587
          tmp___60 = 8;
        } else {
#line 4587
          tmp___60 = 0;
        }
#line 4587
        if (a1 > 7L) {
#line 4587
          tmp___61 = 4;
        } else {
#line 4587
          tmp___61 = 0;
        }
#line 4587
        if (a2 > 7L) {
#line 4587
          tmp___62 = 1;
        } else {
#line 4587
          tmp___62 = 0;
        }
#line 4587
        _amd64_rex_bits___3 = (unsigned char )((tmp___60 | tmp___61) | tmp___62);
#line 4587
        if ((int )_amd64_rex_bits___3 != 0) {
#line 4587
          tmp___63 = jit->ip;
#line 4587
          (jit->ip) ++;
#line 4587
          *tmp___63 = (unsigned char )(0x40 | (int )_amd64_rex_bits___3);
        } else
#line 4587
        if ((int )sizeof(void *) == 1) {
#line 4587
          tmp___63 = jit->ip;
#line 4587
          (jit->ip) ++;
#line 4587
          *tmp___63 = (unsigned char )(0x40 | (int )_amd64_rex_bits___3);
        }
#line 4587
        break;
      }
#line 4587
      switch ((int )sizeof(void *)) {
      case 1: 
#line 4587
      tmp___64 = jit->ip;
#line 4587
      (jit->ip) ++;
#line 4587
      *tmp___64 = (unsigned char)138;
#line 4587
      break;
      case 8: 
      case 4: 
      case 2: 
#line 4587
      tmp___65 = jit->ip;
#line 4587
      (jit->ip) ++;
#line 4587
      *tmp___65 = (unsigned char)139;
#line 4587
      break;
      default: 
#line 4587
      tmp___66 = __builtin_expect(1L, 0L);
#line 4587
      if (tmp___66) {
#line 4587
        __assert_rtn((char const   *)"jit_gen_op", (char const   *)"tmp/src.c", 3665,
                     (char const   *)"0");
      }
      }
#line 4587
      while (1) {
#line 4587
        while (1) {
#line 4587
          tmp___67 = jit->ip;
#line 4587
          (jit->ip) ++;
#line 4587
          *tmp___67 = (unsigned char )(((long )(3 << 6) | ((a1 & 7L) << 3)) | (a2 & 7L));
#line 4587
          break;
        }
#line 4587
        break;
      }
#line 4587
      break;
    }
  }
#line 4588
  while (1) {
#line 4588
    while (1) {
#line 4588
      if (a1 > 7L) {
#line 4588
        tmp___68 = 1;
      } else {
#line 4588
        tmp___68 = 0;
      }
#line 4588
      _amd64_rex_bits___4 = (unsigned char )(8 | tmp___68);
#line 4588
      if ((int )_amd64_rex_bits___4 != 0) {
#line 4588
        tmp___69 = jit->ip;
#line 4588
        (jit->ip) ++;
#line 4588
        *tmp___69 = (unsigned char )(0x40 | (int )_amd64_rex_bits___4);
      }
#line 4588
      break;
    }
#line 4588
    while (1) {
#line 4588
      tmp___70 = jit->ip;
#line 4588
      (jit->ip) ++;
#line 4588
      *tmp___70 = (unsigned char)247;
#line 4588
      while (1) {
#line 4588
        while (1) {
#line 4588
          tmp___71 = jit->ip;
#line 4588
          (jit->ip) ++;
#line 4588
          *tmp___71 = (unsigned char )((long )((3 << 6) | (2 << 3)) | ((a1 & 7L) & 7L));
#line 4588
          break;
        }
#line 4588
        break;
      }
#line 4588
      break;
    }
#line 4588
    break;
  }
#line 4589
  break;
  case 424U: 
#line 4590
  emit_shift_op(jit, op, 4, imm);
#line 4590
  break;
  case 32U: 
#line 4591
  if (sign) {
#line 4591
    tmp___72 = 7;
  } else {
#line 4591
    tmp___72 = 5;
  }
#line 4591
  emit_shift_op(jit, op, tmp___72, imm);
#line 4591
  break;
  case 656U: 
#line 4592
  emit_cond_op(jit, op, 2, imm, sign);
#line 4592
  break;
  case 904U: 
#line 4593
  emit_cond_op(jit, op, 3, imm, sign);
#line 4593
  break;
  case 536U: 
#line 4594
  emit_cond_op(jit, op, 4, imm, sign);
#line 4594
  break;
  case 672U: 
#line 4595
  emit_cond_op(jit, op, 5, imm, sign);
#line 4595
  break;
  case 328U: 
#line 4596
  emit_cond_op(jit, op, 0, imm, sign);
#line 4596
  break;
  case 312U: 
#line 4597
  emit_cond_op(jit, op, 1, imm, sign);
#line 4597
  break;
  case 760U: 
#line 4598
  emit_branch_op(jit, op, 2, imm, sign);
#line 4598
  break;
  case 288U: 
#line 4599
  emit_branch_op(jit, op, 3, imm, sign);
#line 4599
  break;
  case 448U: 
#line 4600
  emit_branch_op(jit, op, 4, imm, sign);
#line 4600
  break;
  case 96U: 
#line 4601
  emit_branch_op(jit, op, 5, imm, sign);
#line 4601
  break;
  case 496U: 
#line 4602
  emit_branch_op(jit, op, 0, imm, sign);
#line 4602
  break;
  case 336U: 
#line 4603
  emit_branch_op(jit, op, 1, imm, sign);
#line 4603
  break;
  case 584U: 
#line 4604
  emit_branch_mask_op(jit, op, 1, imm);
#line 4604
  break;
  case 488U: 
#line 4605
  emit_branch_mask_op(jit, op, 0, imm);
#line 4605
  break;
  case 384U: 
#line 4606
  emit_branch_overflow_op(jit, op, 0, imm, 0);
#line 4606
  break;
  case 272U: 
#line 4607
  emit_branch_overflow_op(jit, op, 5, imm, 0);
#line 4607
  break;
  case 304U: 
#line 4608
  emit_branch_overflow_op(jit, op, 0, imm, 1);
#line 4608
  break;
  case 600U: 
#line 4609
  emit_branch_overflow_op(jit, op, 5, imm, 1);
#line 4609
  break;
  case 528U: 
#line 4610
  emit_mul_op(jit, op, imm, sign, 0);
#line 4610
  break;
  case 112U: 
#line 4611
  emit_mul_op(jit, op, imm, sign, 1);
#line 4611
  break;
  case 0U: 
#line 4612
  emit_div_op(jit, op, imm, sign, 0);
#line 4612
  break;
  case 776U: 
#line 4613
  emit_div_op(jit, op, imm, sign, 1);
#line 4613
  break;
  case 232U: 
#line 4614
  emit_funcall(jit, op, imm);
#line 4614
  break;
  case 616U: 
#line 4615
  while (1) {
#line 4616
    target = (struct jit_op *)a1;
#line 4617
    if (! target->in_use) {
#line 4617
      break;
    }
#line 4618
    switch ((unsigned int )((jit_opcode )((int )target->code & 0xfff8))) {
    case 832U: 
    case 280U: 
#line 4621
    target->arg[1] = (jit_value )jit->ip - (jit_value )jit->buf;
#line 4622
    break;
    case 704U: 
    case 856U: 
#line 4625
    target->arg[0] = (jit_value )jit->ip - (jit_value )jit->buf;
#line 4626
    break;
    default: 
#line 4628
    pa = target->patch_addr;
#line 4629
    while (1) {
#line 4629
      rex_correction = (unsigned char)0;
#line 4629
      if (((int )*(jit->buf + pa) & 0xf0) == 0x40) {
#line 4629
        rex_correction = (unsigned char )((int )rex_correction + 1);
      }
#line 4629
      pos = ((jit->buf + pa) + 1) + (int )rex_correction;
#line 4629
      size = 0;
#line 4629
      switch ((int )*((jit->buf + pa) + (int )rex_correction)) {
      case 0xe9: 
      case 0xe8: 
#line 4629
      size ++;
#line 4629
      break;
      case 0x0f: 
#line 4629
      if ((int )*pos >= 0x70) {
#line 4629
        if (! ((int )*pos <= 0x8f)) {
#line 4629
          goto _L___1;
        }
      } else {
        _L___1: /* CIL Label */ 
#line 4629
        tmp___73 = __builtin_expect(1L, 0L);
#line 4629
        if (tmp___73) {
#line 4629
          __assert_rtn((char const   *)"jit_gen_op", (char const   *)"tmp/src.c",
                       3714, (char const   *)"0");
        }
      }
#line 4629
      size ++;
#line 4629
      pos ++;
#line 4629
      break;
      case 0x7f: 
      case 0x7e: 
      case 0x7d: 
      case 0x7c: 
      case 0x7b: 
      case 0x7a: 
      case 0x79: 
      case 0x78: 
      case 0x77: 
      case 0x76: 
      case 0x75: 
      case 0x74: 
      case 0x73: 
      case 0x72: 
      case 0x71: 
      case 0x70: 
      case 0xeb: 
      case 0xe2: 
      case 0xe1: 
      case 0xe0: 
#line 4629
      break;
      default: 
#line 4629
      tmp___74 = __builtin_expect(1L, 0L);
#line 4629
      if (tmp___74) {
#line 4629
        __assert_rtn((char const   *)"jit_gen_op", (char const   *)"tmp/src.c", 3714,
                     (char const   *)"0");
      }
      }
#line 4629
      disp = (int )(jit->ip - pos);
#line 4629
      if (size) {
#line 4629
        while (1) {
#line 4629
          imb___4.val = disp - 4;
#line 4629
          tmp___75 = pos;
#line 4629
          pos ++;
#line 4629
          *tmp___75 = imb___4.b[0];
#line 4629
          tmp___76 = pos;
#line 4629
          pos ++;
#line 4629
          *tmp___76 = imb___4.b[1];
#line 4629
          tmp___77 = pos;
#line 4629
          pos ++;
#line 4629
          *tmp___77 = imb___4.b[2];
#line 4629
          tmp___78 = pos;
#line 4629
          pos ++;
#line 4629
          *tmp___78 = imb___4.b[3];
#line 4629
          break;
        }
      } else
#line 4629
      if ((jit_value )(disp - 1) >= -128L) {
#line 4629
        if ((jit_value )(disp - 1) <= 127L) {
#line 4629
          while (1) {
#line 4629
            *pos = (unsigned char )((disp - 1) & 0xff);
#line 4629
            pos ++;
#line 4629
            break;
          }
        } else {
#line 4629
          goto _L___2;
        }
      } else {
        _L___2: /* CIL Label */ 
#line 4629
        tmp___79 = __builtin_expect(1L, 0L);
#line 4629
        if (tmp___79) {
#line 4629
          __assert_rtn((char const   *)"jit_gen_op", (char const   *)"tmp/src.c",
                       3714, (char const   *)"0");
        }
      }
#line 4629
      break;
    }
    }
#line 4615
    break;
  }
#line 4633
  break;
  case 624U: 
#line 4635
  op->patch_addr = (jit_value )jit->ip - (jit_value )jit->buf;
#line 4636
  if ((int )op->code & 0x01) {
#line 4636
    while (1) {
#line 4636
      while (1) {
#line 4636
        if (a1 > 7L) {
#line 4636
          tmp___80 = 1;
        } else {
#line 4636
          tmp___80 = 0;
        }
#line 4636
        _amd64_rex_bits___5 = (unsigned char )tmp___80;
#line 4636
        if ((int )_amd64_rex_bits___5 != 0) {
#line 4636
          tmp___81 = jit->ip;
#line 4636
          (jit->ip) ++;
#line 4636
          *tmp___81 = (unsigned char )(0x40 | (int )_amd64_rex_bits___5);
        }
#line 4636
        break;
      }
#line 4636
      while (1) {
#line 4636
        tmp___82 = jit->ip;
#line 4636
        (jit->ip) ++;
#line 4636
        *tmp___82 = (unsigned char)255;
#line 4636
        while (1) {
#line 4636
          while (1) {
#line 4636
            tmp___83 = jit->ip;
#line 4636
            (jit->ip) ++;
#line 4636
            *tmp___83 = (unsigned char )((long )((3 << 6) | (4 << 3)) | ((a1 & 7L) & 7L));
#line 4636
            break;
          }
#line 4636
          break;
        }
#line 4636
        break;
      }
#line 4636
      break;
    }
  } else {
#line 4637
    while (1) {
#line 4637
      while (1) {
#line 4637
        _amd64_rex_bits___6 = (unsigned char)0;
#line 4637
        if ((int )_amd64_rex_bits___6 != 0) {
#line 4637
          tmp___84 = jit->ip;
#line 4637
          (jit->ip) ++;
#line 4637
          *tmp___84 = (unsigned char )(0x40 | (int )_amd64_rex_bits___6);
        }
#line 4637
        break;
      }
#line 4637
      while (1) {
#line 4637
        tmp___87 = jit_is_label(jit, (void *)a1);
#line 4637
        if (tmp___87) {
#line 4637
          tmp___86 = ((size_t )((jit_value )jit->buf) + ((jit_label *)a1)->pos) - (size_t )((jit_value )jit->ip);
        } else {
#line 4637
          tmp___86 = (size_t )a1;
        }
#line 4637
        t = (int )(tmp___86 - 5UL);
#line 4637
        while (1) {
#line 4637
          tmp___88 = jit->ip;
#line 4637
          (jit->ip) ++;
#line 4637
          *tmp___88 = (unsigned char)233;
#line 4637
          while (1) {
#line 4637
            imb___5.val = t;
#line 4637
            tmp___89 = jit->ip;
#line 4637
            (jit->ip) ++;
#line 4637
            *tmp___89 = imb___5.b[0];
#line 4637
            tmp___90 = jit->ip;
#line 4637
            (jit->ip) ++;
#line 4637
            *tmp___90 = imb___5.b[1];
#line 4637
            tmp___91 = jit->ip;
#line 4637
            (jit->ip) ++;
#line 4637
            *tmp___91 = imb___5.b[2];
#line 4637
            tmp___92 = jit->ip;
#line 4637
            (jit->ip) ++;
#line 4637
            *tmp___92 = imb___5.b[3];
#line 4637
            break;
          }
#line 4637
          break;
        }
#line 4637
        break;
      }
#line 4637
      break;
    }
  }
#line 4638
  break;
  case 208U: 
#line 4640
  if (! imm) {
#line 4640
    if (a1 != 0L) {
#line 4640
      while (1) {
#line 4640
        if ((int )sizeof(void *) == 2) {
#line 4640
          tmp___93 = jit->ip;
#line 4640
          (jit->ip) ++;
#line 4640
          *tmp___93 = (unsigned char)102;
        }
#line 4640
        while (1) {
#line 4640
          if ((int )sizeof(void *) > 4) {
#line 4640
            tmp___94 = 8;
          } else {
#line 4640
            tmp___94 = 0;
          }
#line 4640
          if (a1 > 7L) {
#line 4640
            tmp___95 = 1;
          } else {
#line 4640
            tmp___95 = 0;
          }
#line 4640
          _amd64_rex_bits___7 = (unsigned char )(tmp___94 | tmp___95);
#line 4640
          if ((int )_amd64_rex_bits___7 != 0) {
#line 4640
            tmp___96 = jit->ip;
#line 4640
            (jit->ip) ++;
#line 4640
            *tmp___96 = (unsigned char )(0x40 | (int )_amd64_rex_bits___7);
          } else
#line 4640
          if ((int )sizeof(void *) == 1) {
#line 4640
            tmp___96 = jit->ip;
#line 4640
            (jit->ip) ++;
#line 4640
            *tmp___96 = (unsigned char )(0x40 | (int )_amd64_rex_bits___7);
          }
#line 4640
          break;
        }
#line 4640
        switch ((int )sizeof(void *)) {
        case 1: 
#line 4640
        tmp___97 = jit->ip;
#line 4640
        (jit->ip) ++;
#line 4640
        *tmp___97 = (unsigned char)138;
#line 4640
        break;
        case 8: 
        case 4: 
        case 2: 
#line 4640
        tmp___98 = jit->ip;
#line 4640
        (jit->ip) ++;
#line 4640
        *tmp___98 = (unsigned char)139;
#line 4640
        break;
        default: 
#line 4640
        tmp___99 = __builtin_expect(1L, 0L);
#line 4640
        if (tmp___99) {
#line 4640
          __assert_rtn((char const   *)"jit_gen_op", (char const   *)"tmp/src.c",
                       3726, (char const   *)"0");
        }
        }
#line 4640
        while (1) {
#line 4640
          while (1) {
#line 4640
            tmp___100 = jit->ip;
#line 4640
            (jit->ip) ++;
#line 4640
            *tmp___100 = (unsigned char )((long )(3 << 6) | (a1 & 7L));
#line 4640
            break;
          }
#line 4640
          break;
        }
#line 4640
        break;
      }
    }
  }
#line 4641
  if (imm) {
#line 4641
    while (1) {
#line 4641
      while (1) {
#line 4641
        if (sizeof(void *) > 4ULL) {
#line 4641
          tmp___101 = 8;
        } else {
#line 4641
          tmp___101 = 0;
        }
#line 4641
        _amd64_rex_bits___8 = (unsigned char )tmp___101;
#line 4641
        if ((int )_amd64_rex_bits___8 != 0) {
#line 4641
          tmp___102 = jit->ip;
#line 4641
          (jit->ip) ++;
#line 4641
          *tmp___102 = (unsigned char )(0x40 | (int )_amd64_rex_bits___8);
        } else
#line 4641
        if (sizeof(void *) == 1ULL) {
#line 4641
          tmp___102 = jit->ip;
#line 4641
          (jit->ip) ++;
#line 4641
          *tmp___102 = (unsigned char )(0x40 | (int )_amd64_rex_bits___8);
        }
#line 4641
        break;
      }
#line 4641
      tmp___103 = jit->ip;
#line 4641
      (jit->ip) ++;
#line 4641
      *tmp___103 = (unsigned char)184;
#line 4641
      if (sizeof(void *) == 8ULL) {
#line 4641
        while (1) {
#line 4641
          imb___6.val = (size_t )a1;
#line 4641
          tmp___104 = jit->ip;
#line 4641
          (jit->ip) ++;
#line 4641
          *tmp___104 = imb___6.b[0];
#line 4641
          tmp___105 = jit->ip;
#line 4641
          (jit->ip) ++;
#line 4641
          *tmp___105 = imb___6.b[1];
#line 4641
          tmp___106 = jit->ip;
#line 4641
          (jit->ip) ++;
#line 4641
          *tmp___106 = imb___6.b[2];
#line 4641
          tmp___107 = jit->ip;
#line 4641
          (jit->ip) ++;
#line 4641
          *tmp___107 = imb___6.b[3];
#line 4641
          tmp___108 = jit->ip;
#line 4641
          (jit->ip) ++;
#line 4641
          *tmp___108 = imb___6.b[4];
#line 4641
          tmp___109 = jit->ip;
#line 4641
          (jit->ip) ++;
#line 4641
          *tmp___109 = imb___6.b[5];
#line 4641
          tmp___110 = jit->ip;
#line 4641
          (jit->ip) ++;
#line 4641
          *tmp___110 = imb___6.b[6];
#line 4641
          tmp___111 = jit->ip;
#line 4641
          (jit->ip) ++;
#line 4641
          *tmp___111 = imb___6.b[7];
#line 4641
          break;
        }
      } else {
#line 4641
        while (1) {
#line 4641
          imb___7.val = (int )((size_t )a1);
#line 4641
          tmp___112 = jit->ip;
#line 4641
          (jit->ip) ++;
#line 4641
          *tmp___112 = imb___7.b[0];
#line 4641
          tmp___113 = jit->ip;
#line 4641
          (jit->ip) ++;
#line 4641
          *tmp___113 = imb___7.b[1];
#line 4641
          tmp___114 = jit->ip;
#line 4641
          (jit->ip) ++;
#line 4641
          *tmp___114 = imb___7.b[2];
#line 4641
          tmp___115 = jit->ip;
#line 4641
          (jit->ip) ++;
#line 4641
          *tmp___115 = imb___7.b[3];
#line 4641
          break;
        }
      }
#line 4641
      break;
    }
  }
#line 4642
  emit_pop_callee_saved_regs(jit);
#line 4643
  tmp___125 = jit_current_func_info(jit);
#line 4643
  if (tmp___125->has_prolog) {
#line 4644
    while (1) {
#line 4644
      if ((int )sizeof(void *) == 2) {
#line 4644
        tmp___116 = jit->ip;
#line 4644
        (jit->ip) ++;
#line 4644
        *tmp___116 = (unsigned char)102;
      }
#line 4644
      while (1) {
#line 4644
        if ((int )sizeof(void *) > 4) {
#line 4644
          tmp___117 = 8;
        } else {
#line 4644
          tmp___117 = 0;
        }
#line 4644
        _amd64_rex_bits___9 = (unsigned char )tmp___117;
#line 4644
        if ((int )_amd64_rex_bits___9 != 0) {
#line 4644
          tmp___118 = jit->ip;
#line 4644
          (jit->ip) ++;
#line 4644
          *tmp___118 = (unsigned char )(0x40 | (int )_amd64_rex_bits___9);
        } else
#line 4644
        if ((int )sizeof(void *) == 1) {
#line 4644
          tmp___118 = jit->ip;
#line 4644
          (jit->ip) ++;
#line 4644
          *tmp___118 = (unsigned char )(0x40 | (int )_amd64_rex_bits___9);
        }
#line 4644
        break;
      }
#line 4644
      switch ((int )sizeof(void *)) {
      case 1: 
#line 4644
      tmp___119 = jit->ip;
#line 4644
      (jit->ip) ++;
#line 4644
      *tmp___119 = (unsigned char)138;
#line 4644
      break;
      case 8: 
      case 4: 
      case 2: 
#line 4644
      tmp___120 = jit->ip;
#line 4644
      (jit->ip) ++;
#line 4644
      *tmp___120 = (unsigned char)139;
#line 4644
      break;
      default: 
#line 4644
      tmp___121 = __builtin_expect(1L, 0L);
#line 4644
      if (tmp___121) {
#line 4644
        __assert_rtn((char const   *)"jit_gen_op", (char const   *)"tmp/src.c", 3730,
                     (char const   *)"0");
      }
      }
#line 4644
      while (1) {
#line 4644
        while (1) {
#line 4644
          tmp___122 = jit->ip;
#line 4644
          (jit->ip) ++;
#line 4644
          *tmp___122 = (unsigned char )(((3 << 6) | (4 << 3)) | 5);
#line 4644
          break;
        }
#line 4644
        break;
      }
#line 4644
      break;
    }
#line 4645
    while (1) {
#line 4645
      while (1) {
#line 4645
        _amd64_rex_bits___10 = (unsigned char)0;
#line 4645
        if ((int )_amd64_rex_bits___10 != 0) {
#line 4645
          tmp___123 = jit->ip;
#line 4645
          (jit->ip) ++;
#line 4645
          *tmp___123 = (unsigned char )(0x40 | (int )_amd64_rex_bits___10);
        }
#line 4645
        break;
      }
#line 4645
      tmp___124 = jit->ip;
#line 4645
      (jit->ip) ++;
#line 4645
      *tmp___124 = (unsigned char)93;
#line 4645
      break;
    }
  }
#line 4647
  while (1) {
#line 4647
    tmp___126 = jit->ip;
#line 4647
    (jit->ip) ++;
#line 4647
    *tmp___126 = (unsigned char)195;
#line 4647
    break;
  }
#line 4648
  break;
  case 216U: 
#line 4649
  funcall_put_arg(jit, op);
#line 4649
  break;
  case 200U: 
#line 4650
  funcall_fput_arg(jit, op);
#line 4650
  break;
  case 224U: 
#line 4651
  emit_get_arg(jit, op);
#line 4651
  break;
  case 352U: 
#line 4652
  emit_msg_op(jit, op);
#line 4652
  break;
  case 264U: 
#line 4653
  emit_trace_op(jit, op);
#line 4654
  while ((unsigned long )jit->ip % 16UL) {
#line 4655
    while (1) {
#line 4655
      while (1) {
#line 4655
        tmp___127 = jit->ip;
#line 4655
        (jit->ip) ++;
#line 4655
        *tmp___127 = (unsigned char)144;
#line 4655
        break;
      }
#line 4655
      break;
    }
  }
#line 4656
  break;
  case 368U: 
#line 4657
  emit_ld_op(jit, op, a1, a2);
#line 4657
  break;
  case 744U: 
#line 4658
  emit_ldx_op(jit, op, a1, a2, a3);
#line 4658
  break;
  case 752U: 
#line 4659
  emit_sse_fst_op(jit, op, a1, a2);
#line 4659
  break;
  case 712U: 
#line 4660
  emit_sse_fstx_op(jit, op, a1, a2, a3);
#line 4660
  break;
  case 392U: 
#line 4661
  emit_sse_fld_op(jit, op, a1, a2);
#line 4661
  break;
  case 408U: 
#line 4662
  emit_sse_fldx_op(jit, op, a1, a2, a3);
#line 4662
  break;
  case 168U: 
#line 4663
  emit_memcpy(jit, op, a1, a2, a3);
#line 4663
  break;
  case 104U: 
#line 4664
  emit_memset(jit, op, a1, a2, a3, (int )op->arg_size);
#line 4664
  break;
  case 184U: 
#line 4665
  emit_transfer_init(jit, op, a1, a2, a3, (int )op->arg_size);
#line 4665
  break;
  case 456U: 
#line 4666
  emit_transfer_loop(jit, (jit_op *)a1);
#line 4666
  break;
  case 56U: 
#line 4667
  emit_transfer_op(jit, op, 6);
#line 4667
  break;
  case 728U: 
#line 4668
  emit_transfer_op(jit, op, 4);
#line 4668
  break;
  case 560U: 
#line 4669
  emit_transfer_op(jit, op, 1);
#line 4669
  break;
  case 552U: 
#line 4670
  emit_transfer_op(jit, op, 0);
#line 4670
  break;
  case 808U: 
#line 4671
  emit_transfer_op(jit, op, 5);
#line 4671
  break;
  case 440U: 
#line 4672
  break;
  case 520U: 
#line 4673
  break;
  case 472U: 
#line 4674
  break;
  case 136U: 
#line 4675
  ((jit_label *)a1)->pos = (size_t )((jit_value )jit->ip - (jit_value )jit->buf);
#line 4675
  break;
  case 872U: 
#line 4677
  while ((unsigned long )jit->ip % (unsigned long )op->arg[0]) {
#line 4678
    while (1) {
#line 4678
      while (1) {
#line 4678
        tmp___128 = jit->ip;
#line 4678
        (jit->ip) ++;
#line 4678
        *tmp___128 = (unsigned char)144;
#line 4678
        break;
      }
#line 4678
      break;
    }
  }
#line 4679
  break;
  case 832U: 
  case 280U: 
#line 4682
  op->patch_addr = (jit_value )jit->ip - (jit_value )jit->buf;
#line 4683
  while (1) {
#line 4683
    while (1) {
#line 4683
      if (sizeof(void *) > 4ULL) {
#line 4683
        tmp___129 = 8;
      } else {
#line 4683
        tmp___129 = 0;
      }
#line 4683
      if (a1 > 7L) {
#line 4683
        tmp___130 = 1;
      } else {
#line 4683
        tmp___130 = 0;
      }
#line 4683
      _amd64_rex_bits___11 = (unsigned char )(tmp___129 | tmp___130);
#line 4683
      if ((int )_amd64_rex_bits___11 != 0) {
#line 4683
        tmp___131 = jit->ip;
#line 4683
        (jit->ip) ++;
#line 4683
        *tmp___131 = (unsigned char )(0x40 | (int )_amd64_rex_bits___11);
      } else
#line 4683
      if (sizeof(void *) == 1ULL) {
#line 4683
        tmp___131 = jit->ip;
#line 4683
        (jit->ip) ++;
#line 4683
        *tmp___131 = (unsigned char )(0x40 | (int )_amd64_rex_bits___11);
      }
#line 4683
      break;
    }
#line 4683
    tmp___132 = jit->ip;
#line 4683
    (jit->ip) ++;
#line 4683
    *tmp___132 = (unsigned char )(184L + (a1 & 7L));
#line 4683
    if (sizeof(void *) == 8ULL) {
#line 4683
      while (1) {
#line 4683
        imb___8.val = 0xdeadbeefcafebabe;
#line 4683
        tmp___133 = jit->ip;
#line 4683
        (jit->ip) ++;
#line 4683
        *tmp___133 = imb___8.b[0];
#line 4683
        tmp___134 = jit->ip;
#line 4683
        (jit->ip) ++;
#line 4683
        *tmp___134 = imb___8.b[1];
#line 4683
        tmp___135 = jit->ip;
#line 4683
        (jit->ip) ++;
#line 4683
        *tmp___135 = imb___8.b[2];
#line 4683
        tmp___136 = jit->ip;
#line 4683
        (jit->ip) ++;
#line 4683
        *tmp___136 = imb___8.b[3];
#line 4683
        tmp___137 = jit->ip;
#line 4683
        (jit->ip) ++;
#line 4683
        *tmp___137 = imb___8.b[4];
#line 4683
        tmp___138 = jit->ip;
#line 4683
        (jit->ip) ++;
#line 4683
        *tmp___138 = imb___8.b[5];
#line 4683
        tmp___139 = jit->ip;
#line 4683
        (jit->ip) ++;
#line 4683
        *tmp___139 = imb___8.b[6];
#line 4683
        tmp___140 = jit->ip;
#line 4683
        (jit->ip) ++;
#line 4683
        *tmp___140 = imb___8.b[7];
#line 4683
        break;
      }
    } else {
#line 4683
      while (1) {
#line 4683
        imb___9.val = -889275714;
#line 4683
        tmp___141 = jit->ip;
#line 4683
        (jit->ip) ++;
#line 4683
        *tmp___141 = imb___9.b[0];
#line 4683
        tmp___142 = jit->ip;
#line 4683
        (jit->ip) ++;
#line 4683
        *tmp___142 = imb___9.b[1];
#line 4683
        tmp___143 = jit->ip;
#line 4683
        (jit->ip) ++;
#line 4683
        *tmp___143 = imb___9.b[2];
#line 4683
        tmp___144 = jit->ip;
#line 4683
        (jit->ip) ++;
#line 4683
        *tmp___144 = imb___9.b[3];
#line 4683
        break;
      }
    }
#line 4683
    break;
  }
#line 4684
  break;
  case 376U: 
#line 4685
  break;
  case 816U: 
#line 4686
  break;
  default: 
#line 4687
  found = 0;
  }
#line 4689
  if (found) {
#line 4689
    return;
  }
#line 4690
  switch ((int )op->code) {
  case 121: 
#line 4691
  if (a1 != a2) {
#line 4691
    while (1) {
#line 4691
      if ((int )sizeof(void *) == 2) {
#line 4691
        tmp___145 = jit->ip;
#line 4691
        (jit->ip) ++;
#line 4691
        *tmp___145 = (unsigned char)102;
      }
#line 4691
      while (1) {
#line 4691
        if ((int )sizeof(void *) > 4) {
#line 4691
          tmp___146 = 8;
        } else {
#line 4691
          tmp___146 = 0;
        }
#line 4691
        if (a1 > 7L) {
#line 4691
          tmp___147 = 4;
        } else {
#line 4691
          tmp___147 = 0;
        }
#line 4691
        if (a2 > 7L) {
#line 4691
          tmp___148 = 1;
        } else {
#line 4691
          tmp___148 = 0;
        }
#line 4691
        _amd64_rex_bits___12 = (unsigned char )((tmp___146 | tmp___147) | tmp___148);
#line 4691
        if ((int )_amd64_rex_bits___12 != 0) {
#line 4691
          tmp___149 = jit->ip;
#line 4691
          (jit->ip) ++;
#line 4691
          *tmp___149 = (unsigned char )(0x40 | (int )_amd64_rex_bits___12);
        } else
#line 4691
        if ((int )sizeof(void *) == 1) {
#line 4691
          tmp___149 = jit->ip;
#line 4691
          (jit->ip) ++;
#line 4691
          *tmp___149 = (unsigned char )(0x40 | (int )_amd64_rex_bits___12);
        }
#line 4691
        break;
      }
#line 4691
      switch ((int )sizeof(void *)) {
      case 1: 
#line 4691
      tmp___150 = jit->ip;
#line 4691
      (jit->ip) ++;
#line 4691
      *tmp___150 = (unsigned char)138;
#line 4691
      break;
      case 8: 
      case 4: 
      case 2: 
#line 4691
      tmp___151 = jit->ip;
#line 4691
      (jit->ip) ++;
#line 4691
      *tmp___151 = (unsigned char)139;
#line 4691
      break;
      default: 
#line 4691
      tmp___152 = __builtin_expect(1L, 0L);
#line 4691
      if (tmp___152) {
#line 4691
        __assert_rtn((char const   *)"jit_gen_op", (char const   *)"tmp/src.c", 3789,
                     (char const   *)"0");
      }
      }
#line 4691
      while (1) {
#line 4691
        while (1) {
#line 4691
          tmp___153 = jit->ip;
#line 4691
          (jit->ip) ++;
#line 4691
          *tmp___153 = (unsigned char )(((long )(3 << 6) | ((a1 & 7L) << 3)) | (a2 & 7L));
#line 4691
          break;
        }
#line 4691
        break;
      }
#line 4691
      break;
    }
  }
#line 4691
  break;
  case 122: 
#line 4693
  if (a2 == 0L) {
#line 4693
    while (1) {
#line 4693
      while (1) {
#line 4693
        if (a1 > 7L) {
#line 4693
          tmp___154 = 4;
        } else {
#line 4693
          tmp___154 = 0;
        }
#line 4693
        if (a1 > 7L) {
#line 4693
          tmp___155 = 1;
        } else {
#line 4693
          tmp___155 = 0;
        }
#line 4693
        _amd64_rex_bits___13 = (unsigned char )((8 | tmp___154) | tmp___155);
#line 4693
        if ((int )_amd64_rex_bits___13 != 0) {
#line 4693
          tmp___156 = jit->ip;
#line 4693
          (jit->ip) ++;
#line 4693
          *tmp___156 = (unsigned char )(0x40 | (int )_amd64_rex_bits___13);
        }
#line 4693
        break;
      }
#line 4693
      tmp___157 = jit->ip;
#line 4693
      (jit->ip) ++;
#line 4693
      *tmp___157 = (unsigned char )((6 << 3) + 3);
#line 4693
      while (1) {
#line 4693
        while (1) {
#line 4693
          tmp___158 = jit->ip;
#line 4693
          (jit->ip) ++;
#line 4693
          *tmp___158 = (unsigned char )(((long )(3 << 6) | ((a1 & 7L) << 3)) | (a1 & 7L));
#line 4693
          break;
        }
#line 4693
        break;
      }
#line 4693
      break;
    }
  } else {
#line 4694
    while (1) {
#line 4694
      while (1) {
#line 4694
        if (a1 > 7L) {
#line 4694
          tmp___159 = 1;
        } else {
#line 4694
          tmp___159 = 0;
        }
#line 4694
        _amd64_rex_bits___14 = (unsigned char )(8 | tmp___159);
#line 4694
        if ((int )_amd64_rex_bits___14 != 0) {
#line 4694
          tmp___160 = jit->ip;
#line 4694
          (jit->ip) ++;
#line 4694
          *tmp___160 = (unsigned char )(0x40 | (int )_amd64_rex_bits___14);
        }
#line 4694
        break;
      }
#line 4694
      tmp___161 = jit->ip;
#line 4694
      (jit->ip) ++;
#line 4694
      *tmp___161 = (unsigned char )(184L + (a1 & 7L));
#line 4694
      while (1) {
#line 4694
        imb___10.val = (size_t )a2;
#line 4694
        tmp___162 = jit->ip;
#line 4694
        (jit->ip) ++;
#line 4694
        *tmp___162 = imb___10.b[0];
#line 4694
        tmp___163 = jit->ip;
#line 4694
        (jit->ip) ++;
#line 4694
        *tmp___163 = imb___10.b[1];
#line 4694
        tmp___164 = jit->ip;
#line 4694
        (jit->ip) ++;
#line 4694
        *tmp___164 = imb___10.b[2];
#line 4694
        tmp___165 = jit->ip;
#line 4694
        (jit->ip) ++;
#line 4694
        *tmp___165 = imb___10.b[3];
#line 4694
        tmp___166 = jit->ip;
#line 4694
        (jit->ip) ++;
#line 4694
        *tmp___166 = imb___10.b[4];
#line 4694
        tmp___167 = jit->ip;
#line 4694
        (jit->ip) ++;
#line 4694
        *tmp___167 = imb___10.b[5];
#line 4694
        tmp___168 = jit->ip;
#line 4694
        (jit->ip) ++;
#line 4694
        *tmp___168 = imb___10.b[6];
#line 4694
        tmp___169 = jit->ip;
#line 4694
        (jit->ip) ++;
#line 4694
        *tmp___169 = imb___10.b[7];
#line 4694
        break;
      }
#line 4694
      break;
    }
  }
#line 4695
  break;
  case 784: 
#line 4696
  funcall_prepare(jit, op, (int )(a1 + a2));
#line 4697
  tmp___174 = emit_push_caller_saved_regs(jit, op);
#line 4697
  jit->push_count += tmp___174;
#line 4698
  break;
  case 848: 
#line 4699
  funcall_prepare_optional(jit);
#line 4699
  break;
  case 688: 
#line 4700
  emit_prolog_op(jit, op);
#line 4700
  break;
  case 914: 
#line 4701
  while (1) {
#line 4701
    if ((int )op->arg_size == 2) {
#line 4701
      tmp___175 = jit->ip;
#line 4701
      (jit->ip) ++;
#line 4701
      *tmp___175 = (unsigned char)102;
    }
#line 4701
    while (1) {
#line 4701
      if ((int )op->arg_size > 4) {
#line 4701
        tmp___176 = 8;
      } else {
#line 4701
        tmp___176 = 0;
      }
#line 4701
      if (a2 > 7L) {
#line 4701
        tmp___177 = 4;
      } else {
#line 4701
        tmp___177 = 0;
      }
#line 4701
      _amd64_rex_bits___15 = (unsigned char )(tmp___176 | tmp___177);
#line 4701
      if ((int )_amd64_rex_bits___15 != 0) {
#line 4701
        tmp___178 = jit->ip;
#line 4701
        (jit->ip) ++;
#line 4701
        *tmp___178 = (unsigned char )(0x40 | (int )_amd64_rex_bits___15);
      } else
#line 4701
      if ((int )op->arg_size == 1) {
#line 4701
        tmp___178 = jit->ip;
#line 4701
        (jit->ip) ++;
#line 4701
        *tmp___178 = (unsigned char )(0x40 | (int )_amd64_rex_bits___15);
      }
#line 4701
      break;
    }
#line 4701
    switch ((int )op->arg_size) {
    case 1: 
#line 4701
    tmp___179 = jit->ip;
#line 4701
    (jit->ip) ++;
#line 4701
    *tmp___179 = (unsigned char)136;
#line 4701
    break;
    case 8: 
    case 4: 
    case 2: 
#line 4701
    tmp___180 = jit->ip;
#line 4701
    (jit->ip) ++;
#line 4701
    *tmp___180 = (unsigned char)137;
#line 4701
    break;
    default: 
#line 4701
    tmp___181 = __builtin_expect(1L, 0L);
#line 4701
    if (tmp___181) {
#line 4701
      __assert_rtn((char const   *)"jit_gen_op", (char const   *)"tmp/src.c", 3802,
                   (char const   *)"0");
    }
    }
#line 4701
    while (1) {
#line 4701
      tmp___182 = jit->ip;
#line 4701
      (jit->ip) ++;
#line 4701
      *tmp___182 = (unsigned char )(((a2 & 7L) << 3) | 4L);
#line 4701
      break;
    }
#line 4701
    while (1) {
#line 4701
      tmp___183 = jit->ip;
#line 4701
      (jit->ip) ++;
#line 4701
      *tmp___183 = (unsigned char )((4 << 3) | 5);
#line 4701
      break;
    }
#line 4701
    while (1) {
#line 4701
      imb___12.val = (int )a1;
#line 4701
      tmp___184 = jit->ip;
#line 4701
      (jit->ip) ++;
#line 4701
      *tmp___184 = imb___12.b[0];
#line 4701
      tmp___185 = jit->ip;
#line 4701
      (jit->ip) ++;
#line 4701
      *tmp___185 = imb___12.b[1];
#line 4701
      tmp___186 = jit->ip;
#line 4701
      (jit->ip) ++;
#line 4701
      *tmp___186 = imb___12.b[2];
#line 4701
      tmp___187 = jit->ip;
#line 4701
      (jit->ip) ++;
#line 4701
      *tmp___187 = imb___12.b[3];
#line 4701
      break;
    }
#line 4701
    break;
  }
#line 4701
  break;
  case 913: 
#line 4702
  while (1) {
#line 4702
    if ((int )op->arg_size == 2) {
#line 4702
      tmp___188 = jit->ip;
#line 4702
      (jit->ip) ++;
#line 4702
      *tmp___188 = (unsigned char)102;
    }
#line 4702
    while (1) {
#line 4702
      if ((int )op->arg_size > 4) {
#line 4702
        tmp___189 = 8;
      } else {
#line 4702
        tmp___189 = 0;
      }
#line 4702
      if (a2 > 7L) {
#line 4702
        tmp___190 = 4;
      } else {
#line 4702
        tmp___190 = 0;
      }
#line 4702
      if (a1 > 7L) {
#line 4702
        tmp___191 = 1;
      } else {
#line 4702
        tmp___191 = 0;
      }
#line 4702
      _amd64_rex_bits___16 = (unsigned char )((tmp___189 | tmp___190) | tmp___191);
#line 4702
      if ((int )_amd64_rex_bits___16 != 0) {
#line 4702
        tmp___192 = jit->ip;
#line 4702
        (jit->ip) ++;
#line 4702
        *tmp___192 = (unsigned char )(0x40 | (int )_amd64_rex_bits___16);
      } else
#line 4702
      if ((int )op->arg_size == 1) {
#line 4702
        tmp___192 = jit->ip;
#line 4702
        (jit->ip) ++;
#line 4702
        *tmp___192 = (unsigned char )(0x40 | (int )_amd64_rex_bits___16);
      }
#line 4702
      break;
    }
#line 4702
    switch ((int )op->arg_size) {
    case 1: 
#line 4702
    tmp___193 = jit->ip;
#line 4702
    (jit->ip) ++;
#line 4702
    *tmp___193 = (unsigned char)136;
#line 4702
    break;
    case 8: 
    case 4: 
    case 2: 
#line 4702
    tmp___194 = jit->ip;
#line 4702
    (jit->ip) ++;
#line 4702
    *tmp___194 = (unsigned char)137;
#line 4702
    break;
    default: 
#line 4702
    tmp___195 = __builtin_expect(1L, 0L);
#line 4702
    if (tmp___195) {
#line 4702
      __assert_rtn((char const   *)"jit_gen_op", (char const   *)"tmp/src.c", 3803,
                   (char const   *)"0");
    }
    }
#line 4702
    while (1) {
#line 4702
      if ((a1 & 7L) == 4L) {
#line 4702
        while (1) {
#line 4702
          tmp___196 = jit->ip;
#line 4702
          (jit->ip) ++;
#line 4702
          *tmp___196 = (unsigned char )((((a2 & 7L) & 7L) << 3) | 4L);
#line 4702
          break;
        }
#line 4702
        while (1) {
#line 4702
          tmp___197 = jit->ip;
#line 4702
          (jit->ip) ++;
#line 4702
          *tmp___197 = (unsigned char )((4 << 3) | 4);
#line 4702
          break;
        }
#line 4702
        break;
      }
#line 4702
      if ((a1 & 7L) != 5L) {
#line 4702
        while (1) {
#line 4702
          tmp___206 = jit->ip;
#line 4702
          (jit->ip) ++;
#line 4702
          *tmp___206 = (unsigned char )((((a2 & 7L) & 7L) << 3) | ((a1 & 7L) & 7L));
#line 4702
          break;
        }
#line 4702
        break;
      }
#line 4702
      while (1) {
#line 4702
        tmp___207 = jit->ip;
#line 4702
        (jit->ip) ++;
#line 4702
        *tmp___207 = (unsigned char )(((long )(1 << 6) | (((a2 & 7L) & 7L) << 3)) | ((a1 & 7L) & 7L));
#line 4702
        break;
      }
#line 4702
      while (1) {
#line 4702
        *(jit->ip) = (unsigned char)0;
#line 4702
        (jit->ip) ++;
#line 4702
        break;
      }
#line 4702
      break;
    }
#line 4702
    break;
  }
#line 4702
  break;
  case 346: 
#line 4703
  while (1) {
#line 4703
    if ((int )op->arg_size == 2) {
#line 4703
      tmp___213 = jit->ip;
#line 4703
      (jit->ip) ++;
#line 4703
      *tmp___213 = (unsigned char)102;
    }
#line 4703
    while (1) {
#line 4703
      if ((int )op->arg_size > 4) {
#line 4703
        tmp___214 = 8;
      } else {
#line 4703
        tmp___214 = 0;
      }
#line 4703
      if (a3 > 7L) {
#line 4703
        tmp___215 = 4;
      } else {
#line 4703
        tmp___215 = 0;
      }
#line 4703
      if (a2 > 7L) {
#line 4703
        tmp___216 = 1;
      } else {
#line 4703
        tmp___216 = 0;
      }
#line 4703
      _amd64_rex_bits___17 = (unsigned char )((tmp___214 | tmp___215) | tmp___216);
#line 4703
      if ((int )_amd64_rex_bits___17 != 0) {
#line 4703
        tmp___217 = jit->ip;
#line 4703
        (jit->ip) ++;
#line 4703
        *tmp___217 = (unsigned char )(0x40 | (int )_amd64_rex_bits___17);
      } else
#line 4703
      if ((int )op->arg_size == 1) {
#line 4703
        tmp___217 = jit->ip;
#line 4703
        (jit->ip) ++;
#line 4703
        *tmp___217 = (unsigned char )(0x40 | (int )_amd64_rex_bits___17);
      }
#line 4703
      break;
    }
#line 4703
    switch ((int )op->arg_size) {
    case 1: 
#line 4703
    tmp___218 = jit->ip;
#line 4703
    (jit->ip) ++;
#line 4703
    *tmp___218 = (unsigned char)136;
#line 4703
    break;
    case 8: 
    case 4: 
    case 2: 
#line 4703
    tmp___219 = jit->ip;
#line 4703
    (jit->ip) ++;
#line 4703
    *tmp___219 = (unsigned char)137;
#line 4703
    break;
    default: 
#line 4703
    tmp___220 = __builtin_expect(1L, 0L);
#line 4703
    if (tmp___220) {
#line 4703
      __assert_rtn((char const   *)"jit_gen_op", (char const   *)"tmp/src.c", 3804,
                   (char const   *)"0");
    }
    }
#line 4703
    while (1) {
#line 4703
      if ((a2 & 7L) == 4L) {
#line 4703
        if (a1 == 0L) {
#line 4703
          while (1) {
#line 4703
            tmp___221 = jit->ip;
#line 4703
            (jit->ip) ++;
#line 4703
            *tmp___221 = (unsigned char )((((a3 & 7L) & 7L) << 3) | 4L);
#line 4703
            break;
          }
#line 4703
          while (1) {
#line 4703
            tmp___222 = jit->ip;
#line 4703
            (jit->ip) ++;
#line 4703
            *tmp___222 = (unsigned char )((4 << 3) | 4);
#line 4703
            break;
          }
        } else
#line 4703
        if (a1 >= -128L) {
#line 4703
          if (a1 <= 127L) {
#line 4703
            while (1) {
#line 4703
              tmp___223 = jit->ip;
#line 4703
              (jit->ip) ++;
#line 4703
              *tmp___223 = (unsigned char )(((long )(1 << 6) | (((a3 & 7L) & 7L) << 3)) | 4L);
#line 4703
              break;
            }
#line 4703
            while (1) {
#line 4703
              tmp___224 = jit->ip;
#line 4703
              (jit->ip) ++;
#line 4703
              *tmp___224 = (unsigned char )((4 << 3) | 4);
#line 4703
              break;
            }
#line 4703
            while (1) {
#line 4703
              *(jit->ip) = (unsigned char )(a1 & 255L);
#line 4703
              (jit->ip) ++;
#line 4703
              break;
            }
          } else {
#line 4703
            goto _L___3;
          }
        } else {
          _L___3: /* CIL Label */ 
#line 4703
          while (1) {
#line 4703
            tmp___225 = jit->ip;
#line 4703
            (jit->ip) ++;
#line 4703
            *tmp___225 = (unsigned char )(((long )(2 << 6) | (((a3 & 7L) & 7L) << 3)) | 4L);
#line 4703
            break;
          }
#line 4703
          while (1) {
#line 4703
            tmp___226 = jit->ip;
#line 4703
            (jit->ip) ++;
#line 4703
            *tmp___226 = (unsigned char )((4 << 3) | 4);
#line 4703
            break;
          }
#line 4703
          while (1) {
#line 4703
            imb___15.val = (int )a1;
#line 4703
            tmp___227 = jit->ip;
#line 4703
            (jit->ip) ++;
#line 4703
            *tmp___227 = imb___15.b[0];
#line 4703
            tmp___228 = jit->ip;
#line 4703
            (jit->ip) ++;
#line 4703
            *tmp___228 = imb___15.b[1];
#line 4703
            tmp___229 = jit->ip;
#line 4703
            (jit->ip) ++;
#line 4703
            *tmp___229 = imb___15.b[2];
#line 4703
            tmp___230 = jit->ip;
#line 4703
            (jit->ip) ++;
#line 4703
            *tmp___230 = imb___15.b[3];
#line 4703
            break;
          }
        }
#line 4703
        break;
      }
#line 4703
      if (a1 == 0L) {
#line 4703
        if ((a2 & 7L) != 5L) {
#line 4703
          while (1) {
#line 4703
            tmp___231 = jit->ip;
#line 4703
            (jit->ip) ++;
#line 4703
            *tmp___231 = (unsigned char )((((a3 & 7L) & 7L) << 3) | ((a2 & 7L) & 7L));
#line 4703
            break;
          }
#line 4703
          break;
        }
      }
#line 4703
      if (a1 >= -128L) {
#line 4703
        if (a1 <= 127L) {
#line 4703
          while (1) {
#line 4703
            tmp___232 = jit->ip;
#line 4703
            (jit->ip) ++;
#line 4703
            *tmp___232 = (unsigned char )(((long )(1 << 6) | (((a3 & 7L) & 7L) << 3)) | ((a2 & 7L) & 7L));
#line 4703
            break;
          }
#line 4703
          while (1) {
#line 4703
            *(jit->ip) = (unsigned char )(a1 & 255L);
#line 4703
            (jit->ip) ++;
#line 4703
            break;
          }
        } else {
#line 4703
          goto _L___4;
        }
      } else {
        _L___4: /* CIL Label */ 
#line 4703
        while (1) {
#line 4703
          tmp___233 = jit->ip;
#line 4703
          (jit->ip) ++;
#line 4703
          *tmp___233 = (unsigned char )(((long )(2 << 6) | (((a3 & 7L) & 7L) << 3)) | ((a2 & 7L) & 7L));
#line 4703
          break;
        }
#line 4703
        while (1) {
#line 4703
          imb___16.val = (int )a1;
#line 4703
          tmp___234 = jit->ip;
#line 4703
          (jit->ip) ++;
#line 4703
          *tmp___234 = imb___16.b[0];
#line 4703
          tmp___235 = jit->ip;
#line 4703
          (jit->ip) ++;
#line 4703
          *tmp___235 = imb___16.b[1];
#line 4703
          tmp___236 = jit->ip;
#line 4703
          (jit->ip) ++;
#line 4703
          *tmp___236 = imb___16.b[2];
#line 4703
          tmp___237 = jit->ip;
#line 4703
          (jit->ip) ++;
#line 4703
          *tmp___237 = imb___16.b[3];
#line 4703
          break;
        }
      }
#line 4703
      break;
    }
#line 4703
    break;
  }
#line 4703
  break;
  case 345: 
#line 4704
  while (1) {
#line 4704
    if ((int )op->arg_size == 2) {
#line 4704
      tmp___238 = jit->ip;
#line 4704
      (jit->ip) ++;
#line 4704
      *tmp___238 = (unsigned char)102;
    }
#line 4704
    while (1) {
#line 4704
      if ((int )op->arg_size > 4) {
#line 4704
        tmp___239 = 8;
      } else {
#line 4704
        tmp___239 = 0;
      }
#line 4704
      if (a3 > 7L) {
#line 4704
        tmp___240 = 4;
      } else {
#line 4704
        tmp___240 = 0;
      }
#line 4704
      if (a2 > 7L) {
#line 4704
        tmp___241 = 2;
      } else {
#line 4704
        tmp___241 = 0;
      }
#line 4704
      if (a1 > 7L) {
#line 4704
        tmp___242 = 1;
      } else {
#line 4704
        tmp___242 = 0;
      }
#line 4704
      _amd64_rex_bits___18 = (unsigned char )(((tmp___239 | tmp___240) | tmp___241) | tmp___242);
#line 4704
      if ((int )_amd64_rex_bits___18 != 0) {
#line 4704
        tmp___243 = jit->ip;
#line 4704
        (jit->ip) ++;
#line 4704
        *tmp___243 = (unsigned char )(0x40 | (int )_amd64_rex_bits___18);
      } else
#line 4704
      if ((int )op->arg_size == 1) {
#line 4704
        tmp___243 = jit->ip;
#line 4704
        (jit->ip) ++;
#line 4704
        *tmp___243 = (unsigned char )(0x40 | (int )_amd64_rex_bits___18);
      }
#line 4704
      break;
    }
#line 4704
    switch ((int )op->arg_size) {
    case 1: 
#line 4704
    tmp___244 = jit->ip;
#line 4704
    (jit->ip) ++;
#line 4704
    *tmp___244 = (unsigned char)136;
#line 4704
    break;
    case 8: 
    case 4: 
    case 2: 
#line 4704
    tmp___245 = jit->ip;
#line 4704
    (jit->ip) ++;
#line 4704
    *tmp___245 = (unsigned char)137;
#line 4704
    break;
    default: 
#line 4704
    tmp___246 = __builtin_expect(1L, 0L);
#line 4704
    if (tmp___246) {
#line 4704
      __assert_rtn((char const   *)"jit_gen_op", (char const   *)"tmp/src.c", 3805,
                   (char const   *)"0");
    }
    }
#line 4704
    while (1) {
#line 4704
      if ((a1 & 7L) == -1L) {
#line 4704
        while (1) {
#line 4704
          tmp___247 = jit->ip;
#line 4704
          (jit->ip) ++;
#line 4704
          *tmp___247 = (unsigned char )((((a3 & 7L) & 7L) << 3) | 4L);
#line 4704
          break;
        }
#line 4704
        while (1) {
#line 4704
          tmp___248 = jit->ip;
#line 4704
          (jit->ip) ++;
#line 4704
          *tmp___248 = (unsigned char )((((a2 & 7L) & 7L) << 3) | 5L);
#line 4704
          break;
        }
#line 4704
        while (1) {
#line 4704
          imb___17.val = 0;
#line 4704
          tmp___249 = jit->ip;
#line 4704
          (jit->ip) ++;
#line 4704
          *tmp___249 = imb___17.b[0];
#line 4704
          tmp___250 = jit->ip;
#line 4704
          (jit->ip) ++;
#line 4704
          *tmp___250 = imb___17.b[1];
#line 4704
          tmp___251 = jit->ip;
#line 4704
          (jit->ip) ++;
#line 4704
          *tmp___251 = imb___17.b[2];
#line 4704
          tmp___252 = jit->ip;
#line 4704
          (jit->ip) ++;
#line 4704
          *tmp___252 = imb___17.b[3];
#line 4704
          break;
        }
      } else
#line 4704
      if ((a1 & 7L) != 5L) {
#line 4704
        while (1) {
#line 4704
          tmp___253 = jit->ip;
#line 4704
          (jit->ip) ++;
#line 4704
          *tmp___253 = (unsigned char )((((a3 & 7L) & 7L) << 3) | 4L);
#line 4704
          break;
        }
#line 4704
        while (1) {
#line 4704
          tmp___254 = jit->ip;
#line 4704
          (jit->ip) ++;
#line 4704
          *tmp___254 = (unsigned char )(((((a2 & 7L) & 7L) & 7L) << 3) | (((a1 & 7L) & 7L) & 7L));
#line 4704
          break;
        }
      } else {
#line 4704
        while (1) {
#line 4704
          tmp___255 = jit->ip;
#line 4704
          (jit->ip) ++;
#line 4704
          *tmp___255 = (unsigned char )(((long )(1 << 6) | (((a3 & 7L) & 7L) << 3)) | 4L);
#line 4704
          break;
        }
#line 4704
        while (1) {
#line 4704
          tmp___256 = jit->ip;
#line 4704
          (jit->ip) ++;
#line 4704
          *tmp___256 = (unsigned char )(((((a2 & 7L) & 7L) & 7L) << 3) | (((a1 & 7L) & 7L) & 7L));
#line 4704
          break;
        }
#line 4704
        while (1) {
#line 4704
          *(jit->ip) = (unsigned char)0;
#line 4704
          (jit->ip) ++;
#line 4704
          break;
        }
      }
#line 4704
      break;
    }
#line 4704
    break;
  }
#line 4704
  break;
  case 545: 
#line 4705
  while (1) {
#line 4705
    tmp___263 = jit->ip;
#line 4705
    (jit->ip) ++;
#line 4705
    *tmp___263 = (unsigned char)242;
#line 4705
    while (1) {
#line 4705
      if (a1 > 7L) {
#line 4705
        tmp___264 = 4;
      } else {
#line 4705
        tmp___264 = 0;
      }
#line 4705
      if (a2 > 7L) {
#line 4705
        tmp___265 = 1;
      } else {
#line 4705
        tmp___265 = 0;
      }
#line 4705
      _amd64_rex_bits___19 = (unsigned char )(tmp___264 | tmp___265);
#line 4705
      if ((int )_amd64_rex_bits___19 != 0) {
#line 4705
        tmp___266 = jit->ip;
#line 4705
        (jit->ip) ++;
#line 4705
        *tmp___266 = (unsigned char )(0x40 | (int )_amd64_rex_bits___19);
      }
#line 4705
      break;
    }
#line 4705
    tmp___267 = jit->ip;
#line 4705
    (jit->ip) ++;
#line 4705
    *tmp___267 = (unsigned char)15;
#line 4705
    tmp___268 = jit->ip;
#line 4705
    (jit->ip) ++;
#line 4705
    *tmp___268 = (unsigned char)16;
#line 4705
    while (1) {
#line 4705
      while (1) {
#line 4705
        tmp___269 = jit->ip;
#line 4705
        (jit->ip) ++;
#line 4705
        *tmp___269 = (unsigned char )(((long )(3 << 6) | ((a1 & 7L) << 3)) | (a2 & 7L));
#line 4705
        break;
      }
#line 4705
      break;
    }
#line 4705
    break;
  }
#line 4705
  break;
  case 546: 
#line 4706
  sse_mov_reg_safeimm(jit, op, a1, & op->flt_imm);
#line 4706
  break;
  case 81: 
#line 4707
  emit_sse_alu_op(jit, op, 88);
#line 4707
  break;
  case 25: 
#line 4708
  emit_sse_sub_op(jit, op, a1, a2, a3);
#line 4708
  break;
  case 889: 
#line 4709
  emit_sse_sub_op(jit, op, a1, a3, a2);
#line 4709
  break;
  case 737: 
#line 4710
  emit_sse_alu_op(jit, op, 89);
#line 4710
  break;
  case 769: 
#line 4711
  emit_sse_div_op(jit, a1, a2, a3);
#line 4711
  break;
  case 681: 
#line 4712
  emit_sse_neg_op(jit, op, a1, a2);
#line 4712
  break;
  case 897: 
#line 4713
  emit_sse_branch(jit, op, a1, a2, a3, 2);
#line 4713
  break;
  case 697: 
#line 4714
  emit_sse_branch(jit, op, a1, a2, a3, 4);
#line 4714
  break;
  case 649: 
#line 4715
  emit_sse_branch(jit, op, a1, a2, a3, 5);
#line 4715
  break;
  case 505: 
#line 4716
  emit_sse_branch(jit, op, a1, a3, a2, 5);
#line 4716
  break;
  case 633: 
#line 4717
  emit_sse_branch(jit, op, a1, a3, a2, 0);
#line 4717
  break;
  case 793: 
#line 4718
  emit_sse_branch(jit, op, a1, a3, a2, 1);
#line 4718
  break;
  case 241: 
#line 4719
  while (1) {
#line 4719
    tmp___270 = jit->ip;
#line 4719
    (jit->ip) ++;
#line 4719
    *tmp___270 = (unsigned char)242;
#line 4719
    while (1) {
#line 4719
      if (a1 > 7L) {
#line 4719
        tmp___271 = 4;
      } else {
#line 4719
        tmp___271 = 0;
      }
#line 4719
      if (a2 > 7L) {
#line 4719
        tmp___272 = 1;
      } else {
#line 4719
        tmp___272 = 0;
      }
#line 4719
      _amd64_rex_bits___20 = (unsigned char )((8 | tmp___271) | tmp___272);
#line 4719
      if ((int )_amd64_rex_bits___20 != 0) {
#line 4719
        tmp___273 = jit->ip;
#line 4719
        (jit->ip) ++;
#line 4719
        *tmp___273 = (unsigned char )(0x40 | (int )_amd64_rex_bits___20);
      }
#line 4719
      break;
    }
#line 4719
    tmp___274 = jit->ip;
#line 4719
    (jit->ip) ++;
#line 4719
    *tmp___274 = (unsigned char)15;
#line 4719
    tmp___275 = jit->ip;
#line 4719
    (jit->ip) ++;
#line 4719
    *tmp___275 = (unsigned char)42;
#line 4719
    while (1) {
#line 4719
      while (1) {
#line 4719
        tmp___276 = jit->ip;
#line 4719
        (jit->ip) ++;
#line 4719
        *tmp___276 = (unsigned char )(((long )(3 << 6) | ((a1 & 7L) << 3)) | (a2 & 7L));
#line 4719
        break;
      }
#line 4719
      break;
    }
#line 4719
    break;
  }
#line 4719
  break;
  case 89: 
#line 4720
  while (1) {
#line 4720
    tmp___277 = jit->ip;
#line 4720
    (jit->ip) ++;
#line 4720
    *tmp___277 = (unsigned char)242;
#line 4720
    while (1) {
#line 4720
      if (a1 > 7L) {
#line 4720
        tmp___278 = 4;
      } else {
#line 4720
        tmp___278 = 0;
      }
#line 4720
      if (a2 > 7L) {
#line 4720
        tmp___279 = 1;
      } else {
#line 4720
        tmp___279 = 0;
      }
#line 4720
      _amd64_rex_bits___21 = (unsigned char )((8 | tmp___278) | tmp___279);
#line 4720
      if ((int )_amd64_rex_bits___21 != 0) {
#line 4720
        tmp___280 = jit->ip;
#line 4720
        (jit->ip) ++;
#line 4720
        *tmp___280 = (unsigned char )(0x40 | (int )_amd64_rex_bits___21);
      }
#line 4720
      break;
    }
#line 4720
    tmp___281 = jit->ip;
#line 4720
    (jit->ip) ++;
#line 4720
    *tmp___281 = (unsigned char)15;
#line 4720
    tmp___282 = jit->ip;
#line 4720
    (jit->ip) ++;
#line 4720
    *tmp___282 = (unsigned char)44;
#line 4720
    while (1) {
#line 4720
      while (1) {
#line 4720
        tmp___283 = jit->ip;
#line 4720
        (jit->ip) ++;
#line 4720
        *tmp___283 = (unsigned char )(((long )(3 << 6) | ((a1 & 7L) << 3)) | (a2 & 7L));
#line 4720
        break;
      }
#line 4720
      break;
    }
#line 4720
    break;
  }
#line 4720
  break;
  case 17: 
#line 4721
  emit_sse_floor(jit, a1, a2, 0);
#line 4721
  break;
  case 257: 
#line 4722
  emit_sse_floor(jit, a1, a2, 1);
#line 4722
  break;
  case 361: 
#line 4723
  emit_sse_round(jit, op, a1, a2);
#line 4723
  break;
  case 41: 
#line 4724
  emit_fret_op(jit, op);
#line 4724
  break;
  case 568: 
#line 4725
  emit_fretval_op(jit, op);
#line 4725
  break;
  case 464: 
#line 4726
  emit_ureg(jit, a1, (int )a2);
#line 4726
  break;
  case 512: 
#line 4727
  emit_lreg(jit, (int )a1, a2);
#line 4727
  break;
  case 592: 
#line 4728
  emit_ureg(jit, a1, (int )a2);
#line 4728
  break;
  case 432: 
#line 4729
  while (1) {
#line 4729
    if ((int )sizeof(void *) == 2) {
#line 4729
      tmp___284 = jit->ip;
#line 4729
      (jit->ip) ++;
#line 4729
      *tmp___284 = (unsigned char)102;
    }
#line 4729
    while (1) {
#line 4729
      if ((int )sizeof(void *) > 4) {
#line 4729
        tmp___285 = 8;
      } else {
#line 4729
        tmp___285 = 0;
      }
#line 4729
      if (a1 > 7L) {
#line 4729
        tmp___286 = 4;
      } else {
#line 4729
        tmp___286 = 0;
      }
#line 4729
      if (a2 > 7L) {
#line 4729
        tmp___287 = 1;
      } else {
#line 4729
        tmp___287 = 0;
      }
#line 4729
      _amd64_rex_bits___22 = (unsigned char )((tmp___285 | tmp___286) | tmp___287);
#line 4729
      if ((int )_amd64_rex_bits___22 != 0) {
#line 4729
        tmp___288 = jit->ip;
#line 4729
        (jit->ip) ++;
#line 4729
        *tmp___288 = (unsigned char )(0x40 | (int )_amd64_rex_bits___22);
      } else
#line 4729
      if ((int )sizeof(void *) == 1) {
#line 4729
        tmp___288 = jit->ip;
#line 4729
        (jit->ip) ++;
#line 4729
        *tmp___288 = (unsigned char )(0x40 | (int )_amd64_rex_bits___22);
      }
#line 4729
      break;
    }
#line 4729
    switch ((int )sizeof(void *)) {
    case 1: 
#line 4729
    tmp___289 = jit->ip;
#line 4729
    (jit->ip) ++;
#line 4729
    *tmp___289 = (unsigned char)138;
#line 4729
    break;
    case 8: 
    case 4: 
    case 2: 
#line 4729
    tmp___290 = jit->ip;
#line 4729
    (jit->ip) ++;
#line 4729
    *tmp___290 = (unsigned char)139;
#line 4729
    break;
    default: 
#line 4729
    tmp___291 = __builtin_expect(1L, 0L);
#line 4729
    if (tmp___291) {
#line 4729
      __assert_rtn((char const   *)"jit_gen_op", (char const   *)"tmp/src.c", 3837,
                   (char const   *)"0");
    }
    }
#line 4729
    while (1) {
#line 4729
      while (1) {
#line 4729
        tmp___292 = jit->ip;
#line 4729
        (jit->ip) ++;
#line 4729
        *tmp___292 = (unsigned char )(((long )(3 << 6) | ((a1 & 7L) << 3)) | (a2 & 7L));
#line 4729
        break;
      }
#line 4729
      break;
    }
#line 4729
    break;
  }
#line 4729
  break;
  case 720: 
#line 4730
  break;
  case 864: 
#line 4731
  break;
  case 842: 
#line 4732
  while (1) {
#line 4732
    while (1) {
#line 4732
      if ((int )op->arg_size > 4) {
#line 4732
        tmp___293 = 8;
      } else {
#line 4732
        tmp___293 = 0;
      }
#line 4732
      _amd64_rex_bits___23 = (unsigned char )tmp___293;
#line 4732
      if ((int )_amd64_rex_bits___23 != 0) {
#line 4732
        tmp___294 = jit->ip;
#line 4732
        (jit->ip) ++;
#line 4732
        *tmp___294 = (unsigned char )(0x40 | (int )_amd64_rex_bits___23);
      } else
#line 4732
      if ((int )op->arg_size == 1) {
#line 4732
        tmp___294 = jit->ip;
#line 4732
        (jit->ip) ++;
#line 4732
        *tmp___294 = (unsigned char )(0x40 | (int )_amd64_rex_bits___23);
      }
#line 4732
      break;
    }
#line 4732
    if ((int )op->arg_size == 1) {
#line 4732
      tmp___295 = jit->ip;
#line 4732
      (jit->ip) ++;
#line 4732
      *tmp___295 = (unsigned char)198;
#line 4732
      while (1) {
#line 4732
        tmp___296 = jit->ip;
#line 4732
        (jit->ip) ++;
#line 4732
        *tmp___296 = (unsigned char)4;
#line 4732
        tmp___297 = jit->ip;
#line 4732
        (jit->ip) ++;
#line 4732
        *tmp___297 = (unsigned char)37;
#line 4732
        while (1) {
#line 4732
          imb___19.val = (int )a1;
#line 4732
          tmp___298 = jit->ip;
#line 4732
          (jit->ip) ++;
#line 4732
          *tmp___298 = imb___19.b[0];
#line 4732
          tmp___299 = jit->ip;
#line 4732
          (jit->ip) ++;
#line 4732
          *tmp___299 = imb___19.b[1];
#line 4732
          tmp___300 = jit->ip;
#line 4732
          (jit->ip) ++;
#line 4732
          *tmp___300 = imb___19.b[2];
#line 4732
          tmp___301 = jit->ip;
#line 4732
          (jit->ip) ++;
#line 4732
          *tmp___301 = imb___19.b[3];
#line 4732
          break;
        }
#line 4732
        break;
      }
#line 4732
      while (1) {
#line 4732
        *(jit->ip) = (unsigned char )(a2 & 255L);
#line 4732
        (jit->ip) ++;
#line 4732
        break;
      }
    } else
#line 4732
    if ((int )op->arg_size == 2) {
#line 4732
      tmp___302 = jit->ip;
#line 4732
      (jit->ip) ++;
#line 4732
      *tmp___302 = (unsigned char)102;
#line 4732
      tmp___303 = jit->ip;
#line 4732
      (jit->ip) ++;
#line 4732
      *tmp___303 = (unsigned char)199;
#line 4732
      while (1) {
#line 4732
        tmp___304 = jit->ip;
#line 4732
        (jit->ip) ++;
#line 4732
        *tmp___304 = (unsigned char)4;
#line 4732
        tmp___305 = jit->ip;
#line 4732
        (jit->ip) ++;
#line 4732
        *tmp___305 = (unsigned char)37;
#line 4732
        while (1) {
#line 4732
          imb___20.val = (int )a1;
#line 4732
          tmp___306 = jit->ip;
#line 4732
          (jit->ip) ++;
#line 4732
          *tmp___306 = imb___20.b[0];
#line 4732
          tmp___307 = jit->ip;
#line 4732
          (jit->ip) ++;
#line 4732
          *tmp___307 = imb___20.b[1];
#line 4732
          tmp___308 = jit->ip;
#line 4732
          (jit->ip) ++;
#line 4732
          *tmp___308 = imb___20.b[2];
#line 4732
          tmp___309 = jit->ip;
#line 4732
          (jit->ip) ++;
#line 4732
          *tmp___309 = imb___20.b[3];
#line 4732
          break;
        }
#line 4732
        break;
      }
#line 4732
      while (1) {
#line 4732
        *((short *)jit->ip) = (short )a2;
#line 4732
        jit->ip += 2;
#line 4732
        break;
      }
    } else {
#line 4732
      tmp___310 = jit->ip;
#line 4732
      (jit->ip) ++;
#line 4732
      *tmp___310 = (unsigned char)199;
#line 4732
      while (1) {
#line 4732
        tmp___311 = jit->ip;
#line 4732
        (jit->ip) ++;
#line 4732
        *tmp___311 = (unsigned char)4;
#line 4732
        tmp___312 = jit->ip;
#line 4732
        (jit->ip) ++;
#line 4732
        *tmp___312 = (unsigned char)37;
#line 4732
        while (1) {
#line 4732
          imb___21.val = (int )a1;
#line 4732
          tmp___313 = jit->ip;
#line 4732
          (jit->ip) ++;
#line 4732
          *tmp___313 = imb___21.b[0];
#line 4732
          tmp___314 = jit->ip;
#line 4732
          (jit->ip) ++;
#line 4732
          *tmp___314 = imb___21.b[1];
#line 4732
          tmp___315 = jit->ip;
#line 4732
          (jit->ip) ++;
#line 4732
          *tmp___315 = imb___21.b[2];
#line 4732
          tmp___316 = jit->ip;
#line 4732
          (jit->ip) ++;
#line 4732
          *tmp___316 = imb___21.b[3];
#line 4732
          break;
        }
#line 4732
        break;
      }
#line 4732
      while (1) {
#line 4732
        imb___22.val = (int )a2;
#line 4732
        tmp___317 = jit->ip;
#line 4732
        (jit->ip) ++;
#line 4732
        *tmp___317 = imb___22.b[0];
#line 4732
        tmp___318 = jit->ip;
#line 4732
        (jit->ip) ++;
#line 4732
        *tmp___318 = imb___22.b[1];
#line 4732
        tmp___319 = jit->ip;
#line 4732
        (jit->ip) ++;
#line 4732
        *tmp___319 = imb___22.b[2];
#line 4732
        tmp___320 = jit->ip;
#line 4732
        (jit->ip) ++;
#line 4732
        *tmp___320 = imb___22.b[3];
#line 4732
        break;
      }
    }
#line 4732
    break;
  }
#line 4732
  break;
  case 841: 
#line 4733
  while (1) {
#line 4733
    if ((int )op->arg_size == 2) {
#line 4733
      tmp___321 = jit->ip;
#line 4733
      (jit->ip) ++;
#line 4733
      *tmp___321 = (unsigned char)102;
    }
#line 4733
    while (1) {
#line 4733
      if ((int )op->arg_size == 1) {
#line 4733
        tmp___324 = 0;
      } else {
#line 4733
        tmp___324 = (int )op->arg_size;
      }
#line 4733
      if (tmp___324 > 4) {
#line 4733
        tmp___323 = 8;
      } else {
#line 4733
        tmp___323 = 0;
      }
#line 4733
      if (a1 > 7L) {
#line 4733
        tmp___325 = 1;
      } else {
#line 4733
        tmp___325 = 0;
      }
#line 4733
      _amd64_rex_bits___24 = (unsigned char )(tmp___323 | tmp___325);
#line 4733
      if ((int )_amd64_rex_bits___24 != 0) {
#line 4733
        tmp___326 = jit->ip;
#line 4733
        (jit->ip) ++;
#line 4733
        *tmp___326 = (unsigned char )(0x40 | (int )_amd64_rex_bits___24);
      } else {
#line 4733
        if ((int )op->arg_size == 1) {
#line 4733
          tmp___327 = 0;
        } else {
#line 4733
          tmp___327 = (int )op->arg_size;
        }
#line 4733
        if (tmp___327 == 1) {
#line 4733
          tmp___326 = jit->ip;
#line 4733
          (jit->ip) ++;
#line 4733
          *tmp___326 = (unsigned char )(0x40 | (int )_amd64_rex_bits___24);
        }
      }
#line 4733
      break;
    }
#line 4733
    if ((int )op->arg_size == 1) {
#line 4733
      tmp___328 = jit->ip;
#line 4733
      (jit->ip) ++;
#line 4733
      *tmp___328 = (unsigned char)198;
#line 4733
      while (1) {
#line 4733
        if ((a1 & 7L) == 4L) {
#line 4733
          while (1) {
#line 4733
            tmp___329 = jit->ip;
#line 4733
            (jit->ip) ++;
#line 4733
            *tmp___329 = (unsigned char)4;
#line 4733
            break;
          }
#line 4733
          while (1) {
#line 4733
            tmp___330 = jit->ip;
#line 4733
            (jit->ip) ++;
#line 4733
            *tmp___330 = (unsigned char )((4 << 3) | 4);
#line 4733
            break;
          }
#line 4733
          break;
        }
#line 4733
        if ((a1 & 7L) != 5L) {
#line 4733
          while (1) {
#line 4733
            tmp___339 = jit->ip;
#line 4733
            (jit->ip) ++;
#line 4733
            *tmp___339 = (unsigned char )((a1 & 7L) & 7L);
#line 4733
            break;
          }
#line 4733
          break;
        }
#line 4733
        while (1) {
#line 4733
          tmp___340 = jit->ip;
#line 4733
          (jit->ip) ++;
#line 4733
          *tmp___340 = (unsigned char )((long )(1 << 6) | ((a1 & 7L) & 7L));
#line 4733
          break;
        }
#line 4733
        while (1) {
#line 4733
          *(jit->ip) = (unsigned char)0;
#line 4733
          (jit->ip) ++;
#line 4733
          break;
        }
#line 4733
        break;
      }
#line 4733
      while (1) {
#line 4733
        *(jit->ip) = (unsigned char )(a2 & 255L);
#line 4733
        (jit->ip) ++;
#line 4733
        break;
      }
    } else
#line 4733
    if ((int )op->arg_size == 2) {
#line 4733
      tmp___346 = jit->ip;
#line 4733
      (jit->ip) ++;
#line 4733
      *tmp___346 = (unsigned char)199;
#line 4733
      while (1) {
#line 4733
        if ((a1 & 7L) == 4L) {
#line 4733
          while (1) {
#line 4733
            tmp___347 = jit->ip;
#line 4733
            (jit->ip) ++;
#line 4733
            *tmp___347 = (unsigned char)4;
#line 4733
            break;
          }
#line 4733
          while (1) {
#line 4733
            tmp___348 = jit->ip;
#line 4733
            (jit->ip) ++;
#line 4733
            *tmp___348 = (unsigned char )((4 << 3) | 4);
#line 4733
            break;
          }
#line 4733
          break;
        }
#line 4733
        if ((a1 & 7L) != 5L) {
#line 4733
          while (1) {
#line 4733
            tmp___357 = jit->ip;
#line 4733
            (jit->ip) ++;
#line 4733
            *tmp___357 = (unsigned char )((a1 & 7L) & 7L);
#line 4733
            break;
          }
#line 4733
          break;
        }
#line 4733
        while (1) {
#line 4733
          tmp___358 = jit->ip;
#line 4733
          (jit->ip) ++;
#line 4733
          *tmp___358 = (unsigned char )((long )(1 << 6) | ((a1 & 7L) & 7L));
#line 4733
          break;
        }
#line 4733
        while (1) {
#line 4733
          *(jit->ip) = (unsigned char)0;
#line 4733
          (jit->ip) ++;
#line 4733
          break;
        }
#line 4733
        break;
      }
#line 4733
      while (1) {
#line 4733
        *((short *)jit->ip) = (short )a2;
#line 4733
        jit->ip += 2;
#line 4733
        break;
      }
    } else {
#line 4733
      tmp___364 = jit->ip;
#line 4733
      (jit->ip) ++;
#line 4733
      *tmp___364 = (unsigned char)199;
#line 4733
      while (1) {
#line 4733
        if ((a1 & 7L) == 4L) {
#line 4733
          while (1) {
#line 4733
            tmp___365 = jit->ip;
#line 4733
            (jit->ip) ++;
#line 4733
            *tmp___365 = (unsigned char)4;
#line 4733
            break;
          }
#line 4733
          while (1) {
#line 4733
            tmp___366 = jit->ip;
#line 4733
            (jit->ip) ++;
#line 4733
            *tmp___366 = (unsigned char )((4 << 3) | 4);
#line 4733
            break;
          }
#line 4733
          break;
        }
#line 4733
        if ((a1 & 7L) != 5L) {
#line 4733
          while (1) {
#line 4733
            tmp___375 = jit->ip;
#line 4733
            (jit->ip) ++;
#line 4733
            *tmp___375 = (unsigned char )((a1 & 7L) & 7L);
#line 4733
            break;
          }
#line 4733
          break;
        }
#line 4733
        while (1) {
#line 4733
          tmp___376 = jit->ip;
#line 4733
          (jit->ip) ++;
#line 4733
          *tmp___376 = (unsigned char )((long )(1 << 6) | ((a1 & 7L) & 7L));
#line 4733
          break;
        }
#line 4733
        while (1) {
#line 4733
          *(jit->ip) = (unsigned char)0;
#line 4733
          (jit->ip) ++;
#line 4733
          break;
        }
#line 4733
        break;
      }
#line 4733
      while (1) {
#line 4733
        imb___29.val = (int )a2;
#line 4733
        tmp___382 = jit->ip;
#line 4733
        (jit->ip) ++;
#line 4733
        *tmp___382 = imb___29.b[0];
#line 4733
        tmp___383 = jit->ip;
#line 4733
        (jit->ip) ++;
#line 4733
        *tmp___383 = imb___29.b[1];
#line 4733
        tmp___384 = jit->ip;
#line 4733
        (jit->ip) ++;
#line 4733
        *tmp___384 = imb___29.b[2];
#line 4733
        tmp___385 = jit->ip;
#line 4733
        (jit->ip) ++;
#line 4733
        *tmp___385 = imb___29.b[3];
#line 4733
        break;
      }
    }
#line 4733
    break;
  }
#line 4733
  break;
  case 826: 
#line 4734
  while (1) {
#line 4734
    if ((int )op->arg_size == 2) {
#line 4734
      tmp___386 = jit->ip;
#line 4734
      (jit->ip) ++;
#line 4734
      *tmp___386 = (unsigned char)102;
    }
#line 4734
    while (1) {
#line 4734
      if ((int )op->arg_size == 1) {
#line 4734
        tmp___389 = 0;
      } else {
#line 4734
        tmp___389 = (int )op->arg_size;
      }
#line 4734
      if (tmp___389 > 4) {
#line 4734
        tmp___388 = 8;
      } else {
#line 4734
        tmp___388 = 0;
      }
#line 4734
      if (a2 > 7L) {
#line 4734
        tmp___390 = 1;
      } else {
#line 4734
        tmp___390 = 0;
      }
#line 4734
      _amd64_rex_bits___25 = (unsigned char )(tmp___388 | tmp___390);
#line 4734
      if ((int )_amd64_rex_bits___25 != 0) {
#line 4734
        tmp___391 = jit->ip;
#line 4734
        (jit->ip) ++;
#line 4734
        *tmp___391 = (unsigned char )(0x40 | (int )_amd64_rex_bits___25);
      } else {
#line 4734
        if ((int )op->arg_size == 1) {
#line 4734
          tmp___392 = 0;
        } else {
#line 4734
          tmp___392 = (int )op->arg_size;
        }
#line 4734
        if (tmp___392 == 1) {
#line 4734
          tmp___391 = jit->ip;
#line 4734
          (jit->ip) ++;
#line 4734
          *tmp___391 = (unsigned char )(0x40 | (int )_amd64_rex_bits___25);
        }
      }
#line 4734
      break;
    }
#line 4734
    if ((int )op->arg_size == 1) {
#line 4734
      tmp___393 = jit->ip;
#line 4734
      (jit->ip) ++;
#line 4734
      *tmp___393 = (unsigned char)198;
#line 4734
      while (1) {
#line 4734
        if ((a2 & 7L) == 4L) {
#line 4734
          if (a1 == 0L) {
#line 4734
            while (1) {
#line 4734
              tmp___394 = jit->ip;
#line 4734
              (jit->ip) ++;
#line 4734
              *tmp___394 = (unsigned char)4;
#line 4734
              break;
            }
#line 4734
            while (1) {
#line 4734
              tmp___395 = jit->ip;
#line 4734
              (jit->ip) ++;
#line 4734
              *tmp___395 = (unsigned char )((4 << 3) | 4);
#line 4734
              break;
            }
          } else
#line 4734
          if (a1 >= -128L) {
#line 4734
            if (a1 <= 127L) {
#line 4734
              while (1) {
#line 4734
                tmp___396 = jit->ip;
#line 4734
                (jit->ip) ++;
#line 4734
                *tmp___396 = (unsigned char )((1 << 6) | 4);
#line 4734
                break;
              }
#line 4734
              while (1) {
#line 4734
                tmp___397 = jit->ip;
#line 4734
                (jit->ip) ++;
#line 4734
                *tmp___397 = (unsigned char )((4 << 3) | 4);
#line 4734
                break;
              }
#line 4734
              while (1) {
#line 4734
                *(jit->ip) = (unsigned char )(a1 & 255L);
#line 4734
                (jit->ip) ++;
#line 4734
                break;
              }
            } else {
#line 4734
              goto _L___5;
            }
          } else {
            _L___5: /* CIL Label */ 
#line 4734
            while (1) {
#line 4734
              tmp___398 = jit->ip;
#line 4734
              (jit->ip) ++;
#line 4734
              *tmp___398 = (unsigned char )((2 << 6) | 4);
#line 4734
              break;
            }
#line 4734
            while (1) {
#line 4734
              tmp___399 = jit->ip;
#line 4734
              (jit->ip) ++;
#line 4734
              *tmp___399 = (unsigned char )((4 << 3) | 4);
#line 4734
              break;
            }
#line 4734
            while (1) {
#line 4734
              imb___30.val = (int )a1;
#line 4734
              tmp___400 = jit->ip;
#line 4734
              (jit->ip) ++;
#line 4734
              *tmp___400 = imb___30.b[0];
#line 4734
              tmp___401 = jit->ip;
#line 4734
              (jit->ip) ++;
#line 4734
              *tmp___401 = imb___30.b[1];
#line 4734
              tmp___402 = jit->ip;
#line 4734
              (jit->ip) ++;
#line 4734
              *tmp___402 = imb___30.b[2];
#line 4734
              tmp___403 = jit->ip;
#line 4734
              (jit->ip) ++;
#line 4734
              *tmp___403 = imb___30.b[3];
#line 4734
              break;
            }
          }
#line 4734
          break;
        }
#line 4734
        if (a1 == 0L) {
#line 4734
          if ((a2 & 7L) != 5L) {
#line 4734
            while (1) {
#line 4734
              tmp___404 = jit->ip;
#line 4734
              (jit->ip) ++;
#line 4734
              *tmp___404 = (unsigned char )((a2 & 7L) & 7L);
#line 4734
              break;
            }
#line 4734
            break;
          }
        }
#line 4734
        if (a1 >= -128L) {
#line 4734
          if (a1 <= 127L) {
#line 4734
            while (1) {
#line 4734
              tmp___405 = jit->ip;
#line 4734
              (jit->ip) ++;
#line 4734
              *tmp___405 = (unsigned char )((long )(1 << 6) | ((a2 & 7L) & 7L));
#line 4734
              break;
            }
#line 4734
            while (1) {
#line 4734
              *(jit->ip) = (unsigned char )(a1 & 255L);
#line 4734
              (jit->ip) ++;
#line 4734
              break;
            }
          } else {
#line 4734
            goto _L___6;
          }
        } else {
          _L___6: /* CIL Label */ 
#line 4734
          while (1) {
#line 4734
            tmp___406 = jit->ip;
#line 4734
            (jit->ip) ++;
#line 4734
            *tmp___406 = (unsigned char )((long )(2 << 6) | ((a2 & 7L) & 7L));
#line 4734
            break;
          }
#line 4734
          while (1) {
#line 4734
            imb___31.val = (int )a1;
#line 4734
            tmp___407 = jit->ip;
#line 4734
            (jit->ip) ++;
#line 4734
            *tmp___407 = imb___31.b[0];
#line 4734
            tmp___408 = jit->ip;
#line 4734
            (jit->ip) ++;
#line 4734
            *tmp___408 = imb___31.b[1];
#line 4734
            tmp___409 = jit->ip;
#line 4734
            (jit->ip) ++;
#line 4734
            *tmp___409 = imb___31.b[2];
#line 4734
            tmp___410 = jit->ip;
#line 4734
            (jit->ip) ++;
#line 4734
            *tmp___410 = imb___31.b[3];
#line 4734
            break;
          }
        }
#line 4734
        break;
      }
#line 4734
      while (1) {
#line 4734
        *(jit->ip) = (unsigned char )(a3 & 255L);
#line 4734
        (jit->ip) ++;
#line 4734
        break;
      }
    } else
#line 4734
    if ((int )op->arg_size == 2) {
#line 4734
      tmp___411 = jit->ip;
#line 4734
      (jit->ip) ++;
#line 4734
      *tmp___411 = (unsigned char)199;
#line 4734
      while (1) {
#line 4734
        if ((a2 & 7L) == 4L) {
#line 4734
          if (a1 == 0L) {
#line 4734
            while (1) {
#line 4734
              tmp___412 = jit->ip;
#line 4734
              (jit->ip) ++;
#line 4734
              *tmp___412 = (unsigned char)4;
#line 4734
              break;
            }
#line 4734
            while (1) {
#line 4734
              tmp___413 = jit->ip;
#line 4734
              (jit->ip) ++;
#line 4734
              *tmp___413 = (unsigned char )((4 << 3) | 4);
#line 4734
              break;
            }
          } else
#line 4734
          if (a1 >= -128L) {
#line 4734
            if (a1 <= 127L) {
#line 4734
              while (1) {
#line 4734
                tmp___414 = jit->ip;
#line 4734
                (jit->ip) ++;
#line 4734
                *tmp___414 = (unsigned char )((1 << 6) | 4);
#line 4734
                break;
              }
#line 4734
              while (1) {
#line 4734
                tmp___415 = jit->ip;
#line 4734
                (jit->ip) ++;
#line 4734
                *tmp___415 = (unsigned char )((4 << 3) | 4);
#line 4734
                break;
              }
#line 4734
              while (1) {
#line 4734
                *(jit->ip) = (unsigned char )(a1 & 255L);
#line 4734
                (jit->ip) ++;
#line 4734
                break;
              }
            } else {
#line 4734
              goto _L___7;
            }
          } else {
            _L___7: /* CIL Label */ 
#line 4734
            while (1) {
#line 4734
              tmp___416 = jit->ip;
#line 4734
              (jit->ip) ++;
#line 4734
              *tmp___416 = (unsigned char )((2 << 6) | 4);
#line 4734
              break;
            }
#line 4734
            while (1) {
#line 4734
              tmp___417 = jit->ip;
#line 4734
              (jit->ip) ++;
#line 4734
              *tmp___417 = (unsigned char )((4 << 3) | 4);
#line 4734
              break;
            }
#line 4734
            while (1) {
#line 4734
              imb___32.val = (int )a1;
#line 4734
              tmp___418 = jit->ip;
#line 4734
              (jit->ip) ++;
#line 4734
              *tmp___418 = imb___32.b[0];
#line 4734
              tmp___419 = jit->ip;
#line 4734
              (jit->ip) ++;
#line 4734
              *tmp___419 = imb___32.b[1];
#line 4734
              tmp___420 = jit->ip;
#line 4734
              (jit->ip) ++;
#line 4734
              *tmp___420 = imb___32.b[2];
#line 4734
              tmp___421 = jit->ip;
#line 4734
              (jit->ip) ++;
#line 4734
              *tmp___421 = imb___32.b[3];
#line 4734
              break;
            }
          }
#line 4734
          break;
        }
#line 4734
        if (a1 == 0L) {
#line 4734
          if ((a2 & 7L) != 5L) {
#line 4734
            while (1) {
#line 4734
              tmp___422 = jit->ip;
#line 4734
              (jit->ip) ++;
#line 4734
              *tmp___422 = (unsigned char )((a2 & 7L) & 7L);
#line 4734
              break;
            }
#line 4734
            break;
          }
        }
#line 4734
        if (a1 >= -128L) {
#line 4734
          if (a1 <= 127L) {
#line 4734
            while (1) {
#line 4734
              tmp___423 = jit->ip;
#line 4734
              (jit->ip) ++;
#line 4734
              *tmp___423 = (unsigned char )((long )(1 << 6) | ((a2 & 7L) & 7L));
#line 4734
              break;
            }
#line 4734
            while (1) {
#line 4734
              *(jit->ip) = (unsigned char )(a1 & 255L);
#line 4734
              (jit->ip) ++;
#line 4734
              break;
            }
          } else {
#line 4734
            goto _L___8;
          }
        } else {
          _L___8: /* CIL Label */ 
#line 4734
          while (1) {
#line 4734
            tmp___424 = jit->ip;
#line 4734
            (jit->ip) ++;
#line 4734
            *tmp___424 = (unsigned char )((long )(2 << 6) | ((a2 & 7L) & 7L));
#line 4734
            break;
          }
#line 4734
          while (1) {
#line 4734
            imb___33.val = (int )a1;
#line 4734
            tmp___425 = jit->ip;
#line 4734
            (jit->ip) ++;
#line 4734
            *tmp___425 = imb___33.b[0];
#line 4734
            tmp___426 = jit->ip;
#line 4734
            (jit->ip) ++;
#line 4734
            *tmp___426 = imb___33.b[1];
#line 4734
            tmp___427 = jit->ip;
#line 4734
            (jit->ip) ++;
#line 4734
            *tmp___427 = imb___33.b[2];
#line 4734
            tmp___428 = jit->ip;
#line 4734
            (jit->ip) ++;
#line 4734
            *tmp___428 = imb___33.b[3];
#line 4734
            break;
          }
        }
#line 4734
        break;
      }
#line 4734
      while (1) {
#line 4734
        *((short *)jit->ip) = (short )a3;
#line 4734
        jit->ip += 2;
#line 4734
        break;
      }
    } else {
#line 4734
      tmp___429 = jit->ip;
#line 4734
      (jit->ip) ++;
#line 4734
      *tmp___429 = (unsigned char)199;
#line 4734
      while (1) {
#line 4734
        if ((a2 & 7L) == 4L) {
#line 4734
          if (a1 == 0L) {
#line 4734
            while (1) {
#line 4734
              tmp___430 = jit->ip;
#line 4734
              (jit->ip) ++;
#line 4734
              *tmp___430 = (unsigned char)4;
#line 4734
              break;
            }
#line 4734
            while (1) {
#line 4734
              tmp___431 = jit->ip;
#line 4734
              (jit->ip) ++;
#line 4734
              *tmp___431 = (unsigned char )((4 << 3) | 4);
#line 4734
              break;
            }
          } else
#line 4734
          if (a1 >= -128L) {
#line 4734
            if (a1 <= 127L) {
#line 4734
              while (1) {
#line 4734
                tmp___432 = jit->ip;
#line 4734
                (jit->ip) ++;
#line 4734
                *tmp___432 = (unsigned char )((1 << 6) | 4);
#line 4734
                break;
              }
#line 4734
              while (1) {
#line 4734
                tmp___433 = jit->ip;
#line 4734
                (jit->ip) ++;
#line 4734
                *tmp___433 = (unsigned char )((4 << 3) | 4);
#line 4734
                break;
              }
#line 4734
              while (1) {
#line 4734
                *(jit->ip) = (unsigned char )(a1 & 255L);
#line 4734
                (jit->ip) ++;
#line 4734
                break;
              }
            } else {
#line 4734
              goto _L___9;
            }
          } else {
            _L___9: /* CIL Label */ 
#line 4734
            while (1) {
#line 4734
              tmp___434 = jit->ip;
#line 4734
              (jit->ip) ++;
#line 4734
              *tmp___434 = (unsigned char )((2 << 6) | 4);
#line 4734
              break;
            }
#line 4734
            while (1) {
#line 4734
              tmp___435 = jit->ip;
#line 4734
              (jit->ip) ++;
#line 4734
              *tmp___435 = (unsigned char )((4 << 3) | 4);
#line 4734
              break;
            }
#line 4734
            while (1) {
#line 4734
              imb___34.val = (int )a1;
#line 4734
              tmp___436 = jit->ip;
#line 4734
              (jit->ip) ++;
#line 4734
              *tmp___436 = imb___34.b[0];
#line 4734
              tmp___437 = jit->ip;
#line 4734
              (jit->ip) ++;
#line 4734
              *tmp___437 = imb___34.b[1];
#line 4734
              tmp___438 = jit->ip;
#line 4734
              (jit->ip) ++;
#line 4734
              *tmp___438 = imb___34.b[2];
#line 4734
              tmp___439 = jit->ip;
#line 4734
              (jit->ip) ++;
#line 4734
              *tmp___439 = imb___34.b[3];
#line 4734
              break;
            }
          }
#line 4734
          break;
        }
#line 4734
        if (a1 == 0L) {
#line 4734
          if ((a2 & 7L) != 5L) {
#line 4734
            while (1) {
#line 4734
              tmp___440 = jit->ip;
#line 4734
              (jit->ip) ++;
#line 4734
              *tmp___440 = (unsigned char )((a2 & 7L) & 7L);
#line 4734
              break;
            }
#line 4734
            break;
          }
        }
#line 4734
        if (a1 >= -128L) {
#line 4734
          if (a1 <= 127L) {
#line 4734
            while (1) {
#line 4734
              tmp___441 = jit->ip;
#line 4734
              (jit->ip) ++;
#line 4734
              *tmp___441 = (unsigned char )((long )(1 << 6) | ((a2 & 7L) & 7L));
#line 4734
              break;
            }
#line 4734
            while (1) {
#line 4734
              *(jit->ip) = (unsigned char )(a1 & 255L);
#line 4734
              (jit->ip) ++;
#line 4734
              break;
            }
          } else {
#line 4734
            goto _L___10;
          }
        } else {
          _L___10: /* CIL Label */ 
#line 4734
          while (1) {
#line 4734
            tmp___442 = jit->ip;
#line 4734
            (jit->ip) ++;
#line 4734
            *tmp___442 = (unsigned char )((long )(2 << 6) | ((a2 & 7L) & 7L));
#line 4734
            break;
          }
#line 4734
          while (1) {
#line 4734
            imb___35.val = (int )a1;
#line 4734
            tmp___443 = jit->ip;
#line 4734
            (jit->ip) ++;
#line 4734
            *tmp___443 = imb___35.b[0];
#line 4734
            tmp___444 = jit->ip;
#line 4734
            (jit->ip) ++;
#line 4734
            *tmp___444 = imb___35.b[1];
#line 4734
            tmp___445 = jit->ip;
#line 4734
            (jit->ip) ++;
#line 4734
            *tmp___445 = imb___35.b[2];
#line 4734
            tmp___446 = jit->ip;
#line 4734
            (jit->ip) ++;
#line 4734
            *tmp___446 = imb___35.b[3];
#line 4734
            break;
          }
        }
#line 4734
        break;
      }
#line 4734
      while (1) {
#line 4734
        imb___36.val = (int )a3;
#line 4734
        tmp___447 = jit->ip;
#line 4734
        (jit->ip) ++;
#line 4734
        *tmp___447 = imb___36.b[0];
#line 4734
        tmp___448 = jit->ip;
#line 4734
        (jit->ip) ++;
#line 4734
        *tmp___448 = imb___36.b[1];
#line 4734
        tmp___449 = jit->ip;
#line 4734
        (jit->ip) ++;
#line 4734
        *tmp___449 = imb___36.b[2];
#line 4734
        tmp___450 = jit->ip;
#line 4734
        (jit->ip) ++;
#line 4734
        *tmp___450 = imb___36.b[3];
#line 4734
        break;
      }
    }
#line 4734
    break;
  }
#line 4734
  break;
  case 825: 
#line 4735
  while (1) {
#line 4735
    while (1) {
#line 4735
      if ((int )op->arg_size > 4) {
#line 4735
        tmp___451 = 8;
      } else {
#line 4735
        tmp___451 = 0;
      }
#line 4735
      if (a2 > 7L) {
#line 4735
        tmp___452 = 2;
      } else {
#line 4735
        tmp___452 = 0;
      }
#line 4735
      if (a1 > 7L) {
#line 4735
        tmp___453 = 1;
      } else {
#line 4735
        tmp___453 = 0;
      }
#line 4735
      _amd64_rex_bits___26 = (unsigned char )((tmp___451 | tmp___452) | tmp___453);
#line 4735
      if ((int )_amd64_rex_bits___26 != 0) {
#line 4735
        tmp___454 = jit->ip;
#line 4735
        (jit->ip) ++;
#line 4735
        *tmp___454 = (unsigned char )(0x40 | (int )_amd64_rex_bits___26);
      } else
#line 4735
      if ((int )op->arg_size == 1) {
#line 4735
        tmp___454 = jit->ip;
#line 4735
        (jit->ip) ++;
#line 4735
        *tmp___454 = (unsigned char )(0x40 | (int )_amd64_rex_bits___26);
      }
#line 4735
      break;
    }
#line 4735
    while (1) {
#line 4735
      if ((int )op->arg_size == 8) {
#line 4735
        tmp___512 = 4;
      } else {
#line 4735
        tmp___512 = (int )op->arg_size;
      }
#line 4735
      if (tmp___512 == 1) {
#line 4735
        tmp___455 = jit->ip;
#line 4735
        (jit->ip) ++;
#line 4735
        *tmp___455 = (unsigned char)198;
#line 4735
        while (1) {
#line 4735
          if ((a1 & 7L) == -1L) {
#line 4735
            while (1) {
#line 4735
              tmp___456 = jit->ip;
#line 4735
              (jit->ip) ++;
#line 4735
              *tmp___456 = (unsigned char)4;
#line 4735
              break;
            }
#line 4735
            while (1) {
#line 4735
              tmp___457 = jit->ip;
#line 4735
              (jit->ip) ++;
#line 4735
              *tmp___457 = (unsigned char )((((a2 & 7L) & 7L) << 3) | 5L);
#line 4735
              break;
            }
#line 4735
            while (1) {
#line 4735
              imb___37.val = 0;
#line 4735
              tmp___458 = jit->ip;
#line 4735
              (jit->ip) ++;
#line 4735
              *tmp___458 = imb___37.b[0];
#line 4735
              tmp___459 = jit->ip;
#line 4735
              (jit->ip) ++;
#line 4735
              *tmp___459 = imb___37.b[1];
#line 4735
              tmp___460 = jit->ip;
#line 4735
              (jit->ip) ++;
#line 4735
              *tmp___460 = imb___37.b[2];
#line 4735
              tmp___461 = jit->ip;
#line 4735
              (jit->ip) ++;
#line 4735
              *tmp___461 = imb___37.b[3];
#line 4735
              break;
            }
          } else
#line 4735
          if ((a1 & 7L) != 5L) {
#line 4735
            while (1) {
#line 4735
              tmp___462 = jit->ip;
#line 4735
              (jit->ip) ++;
#line 4735
              *tmp___462 = (unsigned char)4;
#line 4735
              break;
            }
#line 4735
            while (1) {
#line 4735
              tmp___463 = jit->ip;
#line 4735
              (jit->ip) ++;
#line 4735
              *tmp___463 = (unsigned char )(((((a2 & 7L) & 7L) & 7L) << 3) | (((a1 & 7L) & 7L) & 7L));
#line 4735
              break;
            }
          } else {
#line 4735
            while (1) {
#line 4735
              tmp___464 = jit->ip;
#line 4735
              (jit->ip) ++;
#line 4735
              *tmp___464 = (unsigned char )((1 << 6) | 4);
#line 4735
              break;
            }
#line 4735
            while (1) {
#line 4735
              tmp___465 = jit->ip;
#line 4735
              (jit->ip) ++;
#line 4735
              *tmp___465 = (unsigned char )(((((a2 & 7L) & 7L) & 7L) << 3) | (((a1 & 7L) & 7L) & 7L));
#line 4735
              break;
            }
#line 4735
            while (1) {
#line 4735
              *(jit->ip) = (unsigned char)0;
#line 4735
              (jit->ip) ++;
#line 4735
              break;
            }
          }
#line 4735
          break;
        }
#line 4735
        while (1) {
#line 4735
          *(jit->ip) = (unsigned char )(a3 & 255L);
#line 4735
          (jit->ip) ++;
#line 4735
          break;
        }
      } else {
#line 4735
        if ((int )op->arg_size == 8) {
#line 4735
          tmp___511 = 4;
        } else {
#line 4735
          tmp___511 = (int )op->arg_size;
        }
#line 4735
        if (tmp___511 == 2) {
#line 4735
          tmp___472 = jit->ip;
#line 4735
          (jit->ip) ++;
#line 4735
          *tmp___472 = (unsigned char)102;
#line 4735
          tmp___473 = jit->ip;
#line 4735
          (jit->ip) ++;
#line 4735
          *tmp___473 = (unsigned char)199;
#line 4735
          while (1) {
#line 4735
            if ((a1 & 7L) == -1L) {
#line 4735
              while (1) {
#line 4735
                tmp___474 = jit->ip;
#line 4735
                (jit->ip) ++;
#line 4735
                *tmp___474 = (unsigned char)4;
#line 4735
                break;
              }
#line 4735
              while (1) {
#line 4735
                tmp___475 = jit->ip;
#line 4735
                (jit->ip) ++;
#line 4735
                *tmp___475 = (unsigned char )((((a2 & 7L) & 7L) << 3) | 5L);
#line 4735
                break;
              }
#line 4735
              while (1) {
#line 4735
                imb___39.val = 0;
#line 4735
                tmp___476 = jit->ip;
#line 4735
                (jit->ip) ++;
#line 4735
                *tmp___476 = imb___39.b[0];
#line 4735
                tmp___477 = jit->ip;
#line 4735
                (jit->ip) ++;
#line 4735
                *tmp___477 = imb___39.b[1];
#line 4735
                tmp___478 = jit->ip;
#line 4735
                (jit->ip) ++;
#line 4735
                *tmp___478 = imb___39.b[2];
#line 4735
                tmp___479 = jit->ip;
#line 4735
                (jit->ip) ++;
#line 4735
                *tmp___479 = imb___39.b[3];
#line 4735
                break;
              }
            } else
#line 4735
            if ((a1 & 7L) != 5L) {
#line 4735
              while (1) {
#line 4735
                tmp___480 = jit->ip;
#line 4735
                (jit->ip) ++;
#line 4735
                *tmp___480 = (unsigned char)4;
#line 4735
                break;
              }
#line 4735
              while (1) {
#line 4735
                tmp___481 = jit->ip;
#line 4735
                (jit->ip) ++;
#line 4735
                *tmp___481 = (unsigned char )(((((a2 & 7L) & 7L) & 7L) << 3) | (((a1 & 7L) & 7L) & 7L));
#line 4735
                break;
              }
            } else {
#line 4735
              while (1) {
#line 4735
                tmp___482 = jit->ip;
#line 4735
                (jit->ip) ++;
#line 4735
                *tmp___482 = (unsigned char )((1 << 6) | 4);
#line 4735
                break;
              }
#line 4735
              while (1) {
#line 4735
                tmp___483 = jit->ip;
#line 4735
                (jit->ip) ++;
#line 4735
                *tmp___483 = (unsigned char )(((((a2 & 7L) & 7L) & 7L) << 3) | (((a1 & 7L) & 7L) & 7L));
#line 4735
                break;
              }
#line 4735
              while (1) {
#line 4735
                *(jit->ip) = (unsigned char)0;
#line 4735
                (jit->ip) ++;
#line 4735
                break;
              }
            }
#line 4735
            break;
          }
#line 4735
          while (1) {
#line 4735
            *((short *)jit->ip) = (short )a3;
#line 4735
            jit->ip += 2;
#line 4735
            break;
          }
        } else {
#line 4735
          tmp___490 = jit->ip;
#line 4735
          (jit->ip) ++;
#line 4735
          *tmp___490 = (unsigned char)199;
#line 4735
          while (1) {
#line 4735
            if ((a1 & 7L) == -1L) {
#line 4735
              while (1) {
#line 4735
                tmp___491 = jit->ip;
#line 4735
                (jit->ip) ++;
#line 4735
                *tmp___491 = (unsigned char)4;
#line 4735
                break;
              }
#line 4735
              while (1) {
#line 4735
                tmp___492 = jit->ip;
#line 4735
                (jit->ip) ++;
#line 4735
                *tmp___492 = (unsigned char )((((a2 & 7L) & 7L) << 3) | 5L);
#line 4735
                break;
              }
#line 4735
              while (1) {
#line 4735
                imb___41.val = 0;
#line 4735
                tmp___493 = jit->ip;
#line 4735
                (jit->ip) ++;
#line 4735
                *tmp___493 = imb___41.b[0];
#line 4735
                tmp___494 = jit->ip;
#line 4735
                (jit->ip) ++;
#line 4735
                *tmp___494 = imb___41.b[1];
#line 4735
                tmp___495 = jit->ip;
#line 4735
                (jit->ip) ++;
#line 4735
                *tmp___495 = imb___41.b[2];
#line 4735
                tmp___496 = jit->ip;
#line 4735
                (jit->ip) ++;
#line 4735
                *tmp___496 = imb___41.b[3];
#line 4735
                break;
              }
            } else
#line 4735
            if ((a1 & 7L) != 5L) {
#line 4735
              while (1) {
#line 4735
                tmp___497 = jit->ip;
#line 4735
                (jit->ip) ++;
#line 4735
                *tmp___497 = (unsigned char)4;
#line 4735
                break;
              }
#line 4735
              while (1) {
#line 4735
                tmp___498 = jit->ip;
#line 4735
                (jit->ip) ++;
#line 4735
                *tmp___498 = (unsigned char )(((((a2 & 7L) & 7L) & 7L) << 3) | (((a1 & 7L) & 7L) & 7L));
#line 4735
                break;
              }
            } else {
#line 4735
              while (1) {
#line 4735
                tmp___499 = jit->ip;
#line 4735
                (jit->ip) ++;
#line 4735
                *tmp___499 = (unsigned char )((1 << 6) | 4);
#line 4735
                break;
              }
#line 4735
              while (1) {
#line 4735
                tmp___500 = jit->ip;
#line 4735
                (jit->ip) ++;
#line 4735
                *tmp___500 = (unsigned char )(((((a2 & 7L) & 7L) & 7L) << 3) | (((a1 & 7L) & 7L) & 7L));
#line 4735
                break;
              }
#line 4735
              while (1) {
#line 4735
                *(jit->ip) = (unsigned char)0;
#line 4735
                (jit->ip) ++;
#line 4735
                break;
              }
            }
#line 4735
            break;
          }
#line 4735
          while (1) {
#line 4735
            imb___43.val = (int )a3;
#line 4735
            tmp___507 = jit->ip;
#line 4735
            (jit->ip) ++;
#line 4735
            *tmp___507 = imb___43.b[0];
#line 4735
            tmp___508 = jit->ip;
#line 4735
            (jit->ip) ++;
#line 4735
            *tmp___508 = imb___43.b[1];
#line 4735
            tmp___509 = jit->ip;
#line 4735
            (jit->ip) ++;
#line 4735
            *tmp___509 = imb___43.b[2];
#line 4735
            tmp___510 = jit->ip;
#line 4735
            (jit->ip) ++;
#line 4735
            *tmp___510 = imb___43.b[3];
#line 4735
            break;
          }
        }
      }
#line 4735
      break;
    }
#line 4735
    break;
  }
#line 4735
  break;
  case 65: 
#line 4736
  while (1) {
#line 4736
    while (1) {
#line 4736
      if (a1 > 7L) {
#line 4736
        tmp___513 = 4;
      } else {
#line 4736
        tmp___513 = 0;
      }
#line 4736
      if (a3 > 7L) {
#line 4736
        tmp___514 = 2;
      } else {
#line 4736
        tmp___514 = 0;
      }
#line 4736
      if (a2 > 7L) {
#line 4736
        tmp___515 = 1;
      } else {
#line 4736
        tmp___515 = 0;
      }
#line 4736
      _amd64_rex_bits___27 = (unsigned char )(((8 | tmp___513) | tmp___514) | tmp___515);
#line 4736
      if ((int )_amd64_rex_bits___27 != 0) {
#line 4736
        tmp___516 = jit->ip;
#line 4736
        (jit->ip) ++;
#line 4736
        *tmp___516 = (unsigned char )(0x40 | (int )_amd64_rex_bits___27);
      }
#line 4736
      break;
    }
#line 4736
    while (1) {
#line 4736
      tmp___517 = jit->ip;
#line 4736
      (jit->ip) ++;
#line 4736
      *tmp___517 = (unsigned char)141;
#line 4736
      while (1) {
#line 4736
        if (a2 == -1L) {
#line 4736
          while (1) {
#line 4736
            tmp___518 = jit->ip;
#line 4736
            (jit->ip) ++;
#line 4736
            *tmp___518 = (unsigned char )((((a1 & 7L) & 7L) << 3) | 4L);
#line 4736
            break;
          }
#line 4736
          while (1) {
#line 4736
            tmp___519 = jit->ip;
#line 4736
            (jit->ip) ++;
#line 4736
            *tmp___519 = (unsigned char )(((long )(((int )op->arg_size & 0x03) << 6) | (((a3 & 7L) & 7L) << 3)) | 5L);
#line 4736
            break;
          }
#line 4736
          while (1) {
#line 4736
            imb___44.val = 0;
#line 4736
            tmp___520 = jit->ip;
#line 4736
            (jit->ip) ++;
#line 4736
            *tmp___520 = imb___44.b[0];
#line 4736
            tmp___521 = jit->ip;
#line 4736
            (jit->ip) ++;
#line 4736
            *tmp___521 = imb___44.b[1];
#line 4736
            tmp___522 = jit->ip;
#line 4736
            (jit->ip) ++;
#line 4736
            *tmp___522 = imb___44.b[2];
#line 4736
            tmp___523 = jit->ip;
#line 4736
            (jit->ip) ++;
#line 4736
            *tmp___523 = imb___44.b[3];
#line 4736
            break;
          }
        } else
#line 4736
        if (a2 != 5L) {
#line 4736
          while (1) {
#line 4736
            tmp___524 = jit->ip;
#line 4736
            (jit->ip) ++;
#line 4736
            *tmp___524 = (unsigned char )((((a1 & 7L) & 7L) << 3) | 4L);
#line 4736
            break;
          }
#line 4736
          while (1) {
#line 4736
            tmp___525 = jit->ip;
#line 4736
            (jit->ip) ++;
#line 4736
            *tmp___525 = (unsigned char )(((long )(((int )op->arg_size & 0x03) << 6) | ((((a3 & 7L) & 7L) & 7L) << 3)) | ((a2 & 7L) & 7L));
#line 4736
            break;
          }
        } else {
#line 4736
          while (1) {
#line 4736
            tmp___526 = jit->ip;
#line 4736
            (jit->ip) ++;
#line 4736
            *tmp___526 = (unsigned char )(((long )(1 << 6) | (((a1 & 7L) & 7L) << 3)) | 4L);
#line 4736
            break;
          }
#line 4736
          while (1) {
#line 4736
            tmp___527 = jit->ip;
#line 4736
            (jit->ip) ++;
#line 4736
            *tmp___527 = (unsigned char )(((long )(((int )op->arg_size & 0x03) << 6) | ((((a3 & 7L) & 7L) & 7L) << 3)) | ((a2 & 7L) & 7L));
#line 4736
            break;
          }
#line 4736
          while (1) {
#line 4736
            *(jit->ip) = (unsigned char)0;
#line 4736
            (jit->ip) ++;
#line 4736
            break;
          }
        }
#line 4736
        break;
      }
#line 4736
      break;
    }
#line 4736
    break;
  }
#line 4736
  break;
  case 66: 
#line 4737
  while (1) {
#line 4737
    while (1) {
#line 4737
      if (a1 > 7L) {
#line 4737
        tmp___534 = 4;
      } else {
#line 4737
        tmp___534 = 0;
      }
#line 4737
      if (a2 > 7L) {
#line 4737
        tmp___535 = 2;
      } else {
#line 4737
        tmp___535 = 0;
      }
#line 4737
      _amd64_rex_bits___28 = (unsigned char )((8 | tmp___534) | tmp___535);
#line 4737
      if ((int )_amd64_rex_bits___28 != 0) {
#line 4737
        tmp___536 = jit->ip;
#line 4737
        (jit->ip) ++;
#line 4737
        *tmp___536 = (unsigned char )(0x40 | (int )_amd64_rex_bits___28);
      }
#line 4737
      break;
    }
#line 4737
    while (1) {
#line 4737
      tmp___537 = jit->ip;
#line 4737
      (jit->ip) ++;
#line 4737
      *tmp___537 = (unsigned char)141;
#line 4737
      while (1) {
#line 4737
        if (1) {
#line 4737
          while (1) {
#line 4737
            tmp___538 = jit->ip;
#line 4737
            (jit->ip) ++;
#line 4737
            *tmp___538 = (unsigned char )((((a1 & 7L) & 7L) << 3) | 4L);
#line 4737
            break;
          }
#line 4737
          while (1) {
#line 4737
            tmp___539 = jit->ip;
#line 4737
            (jit->ip) ++;
#line 4737
            *tmp___539 = (unsigned char )(((long )(((int )op->arg_size & 0x03) << 6) | (((a2 & 7L) & 7L) << 3)) | 5L);
#line 4737
            break;
          }
#line 4737
          while (1) {
#line 4737
            imb___46.val = (int )a3;
#line 4737
            tmp___540 = jit->ip;
#line 4737
            (jit->ip) ++;
#line 4737
            *tmp___540 = imb___46.b[0];
#line 4737
            tmp___541 = jit->ip;
#line 4737
            (jit->ip) ++;
#line 4737
            *tmp___541 = imb___46.b[1];
#line 4737
            tmp___542 = jit->ip;
#line 4737
            (jit->ip) ++;
#line 4737
            *tmp___542 = imb___46.b[2];
#line 4737
            tmp___543 = jit->ip;
#line 4737
            (jit->ip) ++;
#line 4737
            *tmp___543 = imb___46.b[3];
#line 4737
            break;
          }
        } else
#line 4737
        if (a3 == 0L) {
#line 4737
          while (1) {
#line 4737
            tmp___544 = jit->ip;
#line 4737
            (jit->ip) ++;
#line 4737
            *tmp___544 = (unsigned char )((((a1 & 7L) & 7L) << 3) | 4L);
#line 4737
            break;
          }
#line 4737
          while (1) {
#line 4737
            tmp___545 = jit->ip;
#line 4737
            (jit->ip) ++;
#line 4737
            *tmp___545 = (unsigned char )(((long )(((int )op->arg_size & 0x03) << 6) | ((((a2 & 7L) & 7L) & 7L) << 3)) | 7L);
#line 4737
            break;
          }
        } else
        _L___12: /* CIL Label */ 
#line 4737
        if (a3 >= -128L) {
#line 4737
          if (a3 <= 127L) {
#line 4737
            while (1) {
#line 4737
              tmp___546 = jit->ip;
#line 4737
              (jit->ip) ++;
#line 4737
              *tmp___546 = (unsigned char )(((long )(1 << 6) | (((a1 & 7L) & 7L) << 3)) | 4L);
#line 4737
              break;
            }
#line 4737
            while (1) {
#line 4737
              tmp___547 = jit->ip;
#line 4737
              (jit->ip) ++;
#line 4737
              *tmp___547 = (unsigned char )(((long )(((int )op->arg_size & 0x03) << 6) | ((((a2 & 7L) & 7L) & 7L) << 3)) | 7L);
#line 4737
              break;
            }
#line 4737
            while (1) {
#line 4737
              *(jit->ip) = (unsigned char )(a3 & 255L);
#line 4737
              (jit->ip) ++;
#line 4737
              break;
            }
          } else {
#line 4737
            goto _L___11;
          }
        } else {
          _L___11: /* CIL Label */ 
#line 4737
          while (1) {
#line 4737
            tmp___548 = jit->ip;
#line 4737
            (jit->ip) ++;
#line 4737
            *tmp___548 = (unsigned char )(((long )(2 << 6) | (((a1 & 7L) & 7L) << 3)) | 4L);
#line 4737
            break;
          }
#line 4737
          while (1) {
#line 4737
            tmp___549 = jit->ip;
#line 4737
            (jit->ip) ++;
#line 4737
            *tmp___549 = (unsigned char )(((long )(((int )op->arg_size & 0x03) << 6) | ((((a2 & 7L) & 7L) & 7L) << 3)) | 7L);
#line 4737
            break;
          }
#line 4737
          while (1) {
#line 4737
            imb___47.val = (int )a3;
#line 4737
            tmp___550 = jit->ip;
#line 4737
            (jit->ip) ++;
#line 4737
            *tmp___550 = imb___47.b[0];
#line 4737
            tmp___551 = jit->ip;
#line 4737
            (jit->ip) ++;
#line 4737
            *tmp___551 = imb___47.b[1];
#line 4737
            tmp___552 = jit->ip;
#line 4737
            (jit->ip) ++;
#line 4737
            *tmp___552 = imb___47.b[2];
#line 4737
            tmp___553 = jit->ip;
#line 4737
            (jit->ip) ++;
#line 4737
            *tmp___553 = imb___47.b[3];
#line 4737
            break;
          }
        }
#line 4737
        break;
      }
#line 4737
      break;
    }
#line 4737
    break;
  }
#line 4737
  break;
  case 664: 
#line 4740
  tmp___555 = __builtin_object_size((void *)(& tmp___554), 0);
#line 4740
  __builtin___memcpy_chk((void *)(& tmp___554), (void const   *)(& op->flt_imm), sizeof(jit_value ),
                         tmp___555);
#line 4741
  while (1) {
#line 4741
    while (1) {
#line 4741
      if (a1 > 7L) {
#line 4741
        tmp___556 = 4;
      } else {
#line 4741
        tmp___556 = 0;
      }
#line 4741
      if (a3 > 7L) {
#line 4741
        tmp___557 = 2;
      } else {
#line 4741
        tmp___557 = 0;
      }
#line 4741
      if (a2 > 7L) {
#line 4741
        tmp___558 = 1;
      } else {
#line 4741
        tmp___558 = 0;
      }
#line 4741
      _amd64_rex_bits___29 = (unsigned char )(((8 | tmp___556) | tmp___557) | tmp___558);
#line 4741
      if ((int )_amd64_rex_bits___29 != 0) {
#line 4741
        tmp___559 = jit->ip;
#line 4741
        (jit->ip) ++;
#line 4741
        *tmp___559 = (unsigned char )(0x40 | (int )_amd64_rex_bits___29);
      }
#line 4741
      break;
    }
#line 4741
    while (1) {
#line 4741
      tmp___560 = jit->ip;
#line 4741
      (jit->ip) ++;
#line 4741
      *tmp___560 = (unsigned char)141;
#line 4741
      while (1) {
#line 4741
        if (a2 == -1L) {
#line 4741
          while (1) {
#line 4741
            tmp___561 = jit->ip;
#line 4741
            (jit->ip) ++;
#line 4741
            *tmp___561 = (unsigned char )((((a1 & 7L) & 7L) << 3) | 4L);
#line 4741
            break;
          }
#line 4741
          while (1) {
#line 4741
            tmp___562 = jit->ip;
#line 4741
            (jit->ip) ++;
#line 4741
            *tmp___562 = (unsigned char )((((a3 & 7L) & 7L) << 3) | 5L);
#line 4741
            break;
          }
#line 4741
          while (1) {
#line 4741
            imb___48.val = (int )tmp___554;
#line 4741
            tmp___563 = jit->ip;
#line 4741
            (jit->ip) ++;
#line 4741
            *tmp___563 = imb___48.b[0];
#line 4741
            tmp___564 = jit->ip;
#line 4741
            (jit->ip) ++;
#line 4741
            *tmp___564 = imb___48.b[1];
#line 4741
            tmp___565 = jit->ip;
#line 4741
            (jit->ip) ++;
#line 4741
            *tmp___565 = imb___48.b[2];
#line 4741
            tmp___566 = jit->ip;
#line 4741
            (jit->ip) ++;
#line 4741
            *tmp___566 = imb___48.b[3];
#line 4741
            break;
          }
        } else
#line 4741
        if (tmp___554 == 0L) {
#line 4741
          if (a2 != 5L) {
#line 4741
            while (1) {
#line 4741
              tmp___567 = jit->ip;
#line 4741
              (jit->ip) ++;
#line 4741
              *tmp___567 = (unsigned char )((((a1 & 7L) & 7L) << 3) | 4L);
#line 4741
              break;
            }
#line 4741
            while (1) {
#line 4741
              tmp___568 = jit->ip;
#line 4741
              (jit->ip) ++;
#line 4741
              *tmp___568 = (unsigned char )(((((a3 & 7L) & 7L) & 7L) << 3) | ((a2 & 7L) & 7L));
#line 4741
              break;
            }
          } else {
#line 4741
            goto _L___14;
          }
        } else
        _L___14: /* CIL Label */ 
#line 4741
        if (tmp___554 >= -128L) {
#line 4741
          if (tmp___554 <= 127L) {
#line 4741
            while (1) {
#line 4741
              tmp___569 = jit->ip;
#line 4741
              (jit->ip) ++;
#line 4741
              *tmp___569 = (unsigned char )(((long )(1 << 6) | (((a1 & 7L) & 7L) << 3)) | 4L);
#line 4741
              break;
            }
#line 4741
            while (1) {
#line 4741
              tmp___570 = jit->ip;
#line 4741
              (jit->ip) ++;
#line 4741
              *tmp___570 = (unsigned char )(((((a3 & 7L) & 7L) & 7L) << 3) | ((a2 & 7L) & 7L));
#line 4741
              break;
            }
#line 4741
            while (1) {
#line 4741
              *(jit->ip) = (unsigned char )(tmp___554 & 255L);
#line 4741
              (jit->ip) ++;
#line 4741
              break;
            }
          } else {
#line 4741
            goto _L___13;
          }
        } else {
          _L___13: /* CIL Label */ 
#line 4741
          while (1) {
#line 4741
            tmp___571 = jit->ip;
#line 4741
            (jit->ip) ++;
#line 4741
            *tmp___571 = (unsigned char )(((long )(2 << 6) | (((a1 & 7L) & 7L) << 3)) | 4L);
#line 4741
            break;
          }
#line 4741
          while (1) {
#line 4741
            tmp___572 = jit->ip;
#line 4741
            (jit->ip) ++;
#line 4741
            *tmp___572 = (unsigned char )(((((a3 & 7L) & 7L) & 7L) << 3) | ((a2 & 7L) & 7L));
#line 4741
            break;
          }
#line 4741
          while (1) {
#line 4741
            imb___49.val = (int )tmp___554;
#line 4741
            tmp___573 = jit->ip;
#line 4741
            (jit->ip) ++;
#line 4741
            *tmp___573 = imb___49.b[0];
#line 4741
            tmp___574 = jit->ip;
#line 4741
            (jit->ip) ++;
#line 4741
            *tmp___574 = imb___49.b[1];
#line 4741
            tmp___575 = jit->ip;
#line 4741
            (jit->ip) ++;
#line 4741
            *tmp___575 = imb___49.b[2];
#line 4741
            tmp___576 = jit->ip;
#line 4741
            (jit->ip) ++;
#line 4741
            *tmp___576 = imb___49.b[3];
#line 4741
            break;
          }
        }
#line 4741
        break;
      }
#line 4741
      break;
    }
#line 4741
    break;
  }
#line 4741
  break;
  default: 
#line 4743
  printf((char const   */* __restrict  */)"common86: unknown operation (opcode: 0x%x)\n",
         (unsigned int )((jit_opcode )((int )op->code & 0xfff8)) >> 3);
  }
#line 4745
  return;
}
}
/* END FUNCTION-DEF jit_gen_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_init LOC=UNKNOWN */
struct jit *jit_init(void) 
{ 
  struct jit *r ;
  void *tmp ;

  {
#line 6355
  tmp = malloc((size_t )sizeof(struct jit ));
#line 6355
  r = (struct jit *)tmp;
#line 6356
  r->ops = jit_op_new((unsigned short)720, (unsigned char)0, (jit_value )0, (jit_value )0,
                      (jit_value )0, (unsigned char)0);
#line 6357
  r->last_op = r->ops;
#line 6358
  r->optimizations = 0U;
#line 6359
  r->buf = (unsigned char *)((void *)0);
#line 6360
  r->mmaped_buf = (struct jit_exec_mem *)0;
#line 6361
  r->labels = (jit_label *)((void *)0);
#line 6362
  r->reg_al = jit_reg_allocator_create();
#line 6363
  jit_enable_optimization(r, 13);
#line 6364
  return (r);
}
}
/* END FUNCTION-DEF jit_init LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF ob_assert_space LOC=UNKNOWN */
static void ob_assert_space(struct output_buf *ob , int len ) 
{ 
  void *tmp ;

  {
#line 4956
  if ((ob->size + (size_t )len) + 2UL > ob->capacity) {
#line 4957
    ob->capacity += (size_t )(len + 8192);
#line 4958
    tmp = realloc((void *)ob->buf, ob->capacity);
#line 4958
    ob->buf = (char *)tmp;
  }
#line 4960
  return;
}
}
/* END FUNCTION-DEF ob_assert_space LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF stack_reg_pos LOC=UNKNOWN */
__inline static int stack_reg_pos(struct jit *jit , int r ) 
{ 
  struct jit_func_info *info ;
  struct jit_func_info *tmp ;
  jit_value addr ;
  int arg_id ;
  struct jit_inp_arg *a ;
  struct jit_func_info *tmp___0 ;
  long tmp___1 ;

  {
#line 3223
  tmp = jit_current_func_info(jit);
#line 3223
  info = tmp;
#line 3224
  if (((r >> 1) & 0x03) == 0) {
#line 3225
    addr = info->allocai_mem;
#line 3226
    if ((r & 0x01) == 0) {
#line 3227
      return ((int )(- (addr + (jit_value )((((r >> 4) & 0xfffffff) + 1) * (int )sizeof(void *)))));
    } else {
#line 3229
      return ((int )(- (addr + (jit_value )(((info->gp_reg_count + ((r >> 4) & 0xfffffff)) + 1) * (int )sizeof(void *)))));
    }
  }
#line 3232
  if (((r >> 1) & 0x03) == 3) {
#line 3233
    arg_id = (r >> 4) & 0xfffffff;
#line 3234
    tmp___0 = jit_current_func_info(jit);
#line 3234
    a = tmp___0->args + arg_id;
#line 3235
    return (a->spill_pos);
  }
#line 3237
  tmp___1 = __builtin_expect(1L, 0L);
#line 3237
  if (tmp___1) {
#line 3237
    __assert_rtn((char const   *)"stack_reg_pos", (char const   *)"tmp/src.c", 1889,
                 (char const   *)"0");
  }
#line 3238
  return (0);
}
}
/* END FUNCTION-DEF stack_reg_pos LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF prepare_registers_for_call LOC=UNKNOWN */
static void prepare_registers_for_call(struct jit_reg_allocator *al , jit_op *op ) 
{ 
  jit_value r ;
  jit_value reg ;
  jit_hw_reg *hreg ;
  int alive ;
  int tmp ;
  int tmp___0 ;
  int tmp___1 ;
  int spill ;
  jit_value spill_reg ;
  jit_hw_reg *freereg ;
  jit_hw_reg *tmp___2 ;
  int args ;
  jit_value tmp___3 ;
  int q ;
  jit_hw_reg *hreg___0 ;
  jit_hw_reg *tmp___4 ;
  int tmp___5 ;
  int q___0 ;
  jit_hw_reg *hreg___1 ;
  jit_hw_reg *tmp___6 ;
  int tmp___7 ;

  {
#line 5951
  hreg = (jit_hw_reg *)((void *)0);
#line 5952
  if (al->ret_reg) {
#line 5952
    hreg = rmap_is_associated(op->regmap, (al->ret_reg)->id, 0, & r);
  }
#line 5953
  if (hreg) {
#line 5954
    tmp = jit_set_get(op->live_out, (int )r);
#line 5954
    if (tmp) {
#line 5954
      tmp___1 = 1;
    } else {
#line 5954
      tmp___0 = jit_set_get(op->live_in, (int )r);
#line 5954
      if (tmp___0) {
#line 5954
        tmp___1 = 1;
      } else {
#line 5954
        tmp___1 = 0;
      }
    }
#line 5954
    alive = tmp___1;
#line 5955
    if (! alive) {
#line 5955
      goto skip;
    }
#line 5958
    tmp___2 = rmap_spill_candidate(al, op, r, & spill, & spill_reg, 1);
#line 5958
    freereg = tmp___2;
#line 5959
    if (freereg) {
#line 5959
      if (! spill) {
#line 5960
        rename_reg(op, freereg->id, (al->ret_reg)->id);
#line 5961
        rmap_unassoc(op->regmap, r);
#line 5962
        rmap_assoc(op->regmap, r, freereg);
      } else {
#line 5964
        sync_reg(op, hreg, r);
      }
    } else {
#line 5964
      sync_reg(op, hreg, r);
    }
  }
  skip: 
#line 5968
  if (al->fpret_reg) {
#line 5969
    hreg = rmap_is_associated(op->regmap, (al->fpret_reg)->id, 1, & r);
#line 5970
    if (hreg) {
#line 5970
      sync_reg(op, hreg, r);
    }
  }
#line 5972
  if (op->arg[0] < (jit_value )al->gp_arg_reg_cnt) {
#line 5972
    tmp___3 = op->arg[0];
  } else {
#line 5972
    tmp___3 = (jit_value )al->gp_arg_reg_cnt;
  }
#line 5972
  args = (int )tmp___3;
#line 5973
  q = 0;
#line 5973
  while (q < args) {
#line 5974
    tmp___4 = rmap_is_associated(op->regmap, (*(al->gp_arg_regs + q))->id, 0, & reg);
#line 5974
    hreg___0 = tmp___4;
#line 5975
    if (hreg___0) {
#line 5976
      tmp___5 = jit_set_get(op->live_out, (int )reg);
#line 5976
      if (tmp___5) {
#line 5976
        unload_reg(op, hreg___0, reg);
      }
#line 5977
      rmap_unassoc(op->regmap, reg);
    }
#line 5973
    q ++;
  }
#line 5980
  if (op->arg[1] < (jit_value )al->fp_arg_reg_cnt) {
#line 5980
    args = (int )op->arg[1];
  } else {
#line 5980
    args = al->fp_arg_reg_cnt;
  }
#line 5981
  q___0 = 0;
#line 5981
  while (q___0 < args) {
#line 5982
    tmp___6 = rmap_is_associated(op->regmap, (*(al->fp_arg_regs + q___0))->id, 1,
                                 & reg);
#line 5982
    hreg___1 = tmp___6;
#line 5983
    if (hreg___1) {
#line 5984
      if (hreg___1->id != (al->fpret_reg)->id) {
#line 5984
        tmp___7 = jit_set_get(op->live_out, (int )reg);
#line 5984
        if (tmp___7) {
#line 5984
          unload_reg(op, hreg___1, reg);
        }
      }
#line 5985
      rmap_unassoc(op->regmap, reg);
    }
#line 5981
    q___0 ++;
  }
#line 5988
  return;
}
}
/* END FUNCTION-DEF prepare_registers_for_call LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_free_op LOC=UNKNOWN */
__inline static void jit_free_op(struct jit_op *op ) 
{ 
  struct jit_func_info *info ;

  {
#line 2494
  if (op->live_in) {
#line 2494
    jit_set_free(op->live_in);
  }
#line 2495
  if (op->live_out) {
#line 2495
    jit_set_free(op->live_out);
  }
#line 2496
  rmap_free(op->regmap);
#line 2497
  jit_allocator_hints_free(op->allocator_hints);
#line 2498
  if (op->debug_info) {
#line 2498
    free((void *)op->debug_info);
  }
#line 2499
  if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 688U) {
#line 2500
    info = (struct jit_func_info *)op->arg[1];
#line 2501
    free((void *)info->args);
#line 2502
    free((void *)info);
  }
#line 2504
  free((void *)op);
#line 2505
  return;
}
}
/* END FUNCTION-DEF jit_free_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_current_func_info LOC=UNKNOWN */
__inline static struct jit_func_info *jit_current_func_info(struct jit *jit ) 
{ 


  {
#line 2523
  return ((struct jit_func_info *)(jit->current_func)->arg[1]);
}
}
/* END FUNCTION-DEF jit_current_func_info LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF rmap_assoc LOC=UNKNOWN */
static void rmap_assoc(jit_rmap *rmap , jit_value reg , jit_hw_reg *hreg ) 
{ 


  {
#line 3271
  rmap->map = jit_tree_insert(rmap->map, reg, (jit_tree_value )hreg, (int *)((void *)0));
#line 3272
  return;
}
}
/* END FUNCTION-DEF rmap_assoc LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF join_muli_addi LOC=UNKNOWN */
static int join_muli_addi(jit_op *op , jit_op *nextop ) 
{ 
  int tmp ;
  int tmp___0 ;

  {
#line 3529
  if (nextop->arg[2] >= (-0x7FFFFFFF-1)) {
#line 3529
    if (! (nextop->arg[2] <= 2147483647L)) {
#line 3529
      return (0);
    }
  } else {
#line 3529
    return (0);
  }
#line 3530
  tmp = is_suitable_mul(op);
#line 3530
  if (! tmp) {
#line 3530
    return (0);
  }
#line 3531
  tmp___0 = make_addmuli(op, nextop);
#line 3531
  return (tmp___0);
}
}
/* END FUNCTION-DEF join_muli_addi LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF __darwin_check_fd_set LOC=UNKNOWN */
__inline int ( __attribute__((__always_inline__)) __darwin_check_fd_set)(int _a ,
                                                                         void const   *_b ) 
{ 
  int tmp ;

  {
#line 60
  if ((uintptr_t )(& __darwin_check_fd_set_overflow) != 0UL) {
#line 64
    tmp = __darwin_check_fd_set_overflow(_a, _b, 0);
#line 64
    return (tmp);
  } else {
#line 67 "/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_fd_def.h"
    return (1);
  }
}
}
/* END FUNCTION-DEF __darwin_check_fd_set LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_optimize_join_addmul LOC=UNKNOWN */
int jit_optimize_join_addmul(struct jit *jit ) 
{ 
  int change ;
  jit_op *op ;
  jit_op *tmp ;
  int tmp___0 ;
  int tmp___1 ;
  int tmp___2 ;
  int tmp___3 ;
  int tmp___4 ;
  int tmp___5 ;

  {
#line 3554 "<string>"
  change = 0;
#line 3555
  tmp = jit_op_first(jit->ops);
#line 3555
  op = tmp;
#line 3555
  while ((unsigned long )op != (unsigned long )((void *)0)) {
#line 3556
    tmp___0 = join_2ops(op, 530, 802, & join_muli_addi);
#line 3556
    change |= tmp___0;
#line 3557
    tmp___1 = join_2ops(op, 426, 802, & join_muli_addi);
#line 3557
    change |= tmp___1;
#line 3558
    tmp___2 = join_2ops(op, 530, 801, & join_muli_addr);
#line 3558
    change |= tmp___2;
#line 3559
    tmp___3 = join_2ops(op, 426, 801, & join_muli_addr);
#line 3559
    change |= tmp___3;
#line 3560
    tmp___4 = join_2ops(op, 530, 250, & join_muli_ori);
#line 3560
    change |= tmp___4;
#line 3561
    tmp___5 = join_2ops(op, 426, 250, & join_muli_ori);
#line 3561
    change |= tmp___5;
#line 3555
    op = op->next;
  }
#line 3563
  return (change);
}
}
/* END FUNCTION-DEF jit_optimize_join_addmul LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF compiler_based_debugger LOC=UNKNOWN */
static void compiler_based_debugger(struct jit *jit ) 
{ 
  char obj_file_name[12] ;
  int obj_file_fd ;
  int tmp ;
  char *cmd1_fmt ;
  char *cmd2_fmt ;
  size_t tmp___0 ;
  size_t tmp___1 ;
  size_t tmp___2 ;
  size_t tmp___3 ;
  size_t tmp___4 ;
  size_t tmp___5 ;
  size_t tmp___6 ;
  size_t tmp___7 ;
  size_t tmp___8 ;
  size_t tmp___9 ;
  size_t tmp___10 ;
  size_t tmp___11 ;
  unsigned long long tmp___12 ;
  FILE *f ;
  FILE *tmp___13 ;
  int size ;
  int i ;
  unsigned long long tmp___14 ;

  {
#line 4987
  obj_file_name[0] = (char )'m';
#line 4987
  obj_file_name[1] = (char )'y';
#line 4987
  obj_file_name[2] = (char )'j';
#line 4987
  obj_file_name[3] = (char )'i';
#line 4987
  obj_file_name[4] = (char )'t';
#line 4987
  obj_file_name[5] = (char )'X';
#line 4987
  obj_file_name[6] = (char )'X';
#line 4987
  obj_file_name[7] = (char )'X';
#line 4987
  obj_file_name[8] = (char )'X';
#line 4987
  obj_file_name[9] = (char )'X';
#line 4987
  obj_file_name[10] = (char )'X';
#line 4987
  obj_file_name[11] = (char )'\000';
#line 4988
  tmp = mkstemp(obj_file_name);
#line 4988
  obj_file_fd = tmp;
#line 4989
  cmd1_fmt = "cc -x assembler -c -o %s -";
#line 4990
  cmd2_fmt = "otool -tvVj %s";
#line 4991
  tmp___0 = strlen((char const   *)cmd1_fmt);
#line 4991
  tmp___1 = strlen((char const   *)(obj_file_name));
#line 4991
  char cmd1[(tmp___0 + tmp___1) + 1UL] ;
#line 4992
  tmp___6 = strlen((char const   *)cmd2_fmt);
#line 4992
  tmp___7 = strlen((char const   *)(obj_file_name));
#line 4992
  char cmd2[(tmp___6 + tmp___7) + 1UL] ;
#line 4993
  tmp___12 = __builtin_object_size((void *)(cmd1), 1);
#line 4993
  __builtin___sprintf_chk(cmd1, 0, tmp___12, (char const   *)cmd1_fmt, obj_file_name);
#line 4994
  tmp___13 = popen((char const   *)(cmd1), (char const   *)"w");
#line 4994
  f = tmp___13;
#line 4995
  size = (int )(jit->ip - jit->buf);
#line 4996
  fprintf((FILE */* __restrict  */)f, (char const   */* __restrict  */)".text\n.align 4\n.globl main\n\nmain:\n");
#line 4997
  i = 0;
#line 4997
  while (i < size) {
#line 4998
    fprintf((FILE */* __restrict  */)f, (char const   */* __restrict  */)".byte 0x%x\n",
            (unsigned int )*(jit->buf + i));
#line 4997
    i ++;
  }
#line 4999
  pclose(f);
#line 5000
  tmp___14 = __builtin_object_size((void *)(cmd2), 1);
#line 5000
  __builtin___sprintf_chk(cmd2, 0, tmp___14, (char const   *)cmd2_fmt, obj_file_name);
#line 5001
  system((char const   *)(cmd2));
#line 5002
  close(obj_file_fd);
#line 5003
  unlink((char const   *)(obj_file_name));
#line 5004
  return;
}
}
/* END FUNCTION-DEF compiler_based_debugger LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_op_append LOC=UNKNOWN */
__inline static void jit_op_append(jit_op *op , jit_op *appended ) 
{ 


  {
#line 2465
  appended->next = op->next;
#line 2466
  if ((unsigned long )op->next != (unsigned long )((void *)0)) {
#line 2466
    (op->next)->prev = appended;
  }
#line 2467
  appended->prev = op;
#line 2468
  op->next = appended;
#line 2469
  return;
}
}
/* END FUNCTION-DEF jit_op_append LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_op_new LOC=UNKNOWN */
static struct jit_op *jit_op_new(unsigned short code , unsigned char spec , jit_value arg1 ,
                                 jit_value arg2 , jit_value arg3 , unsigned char arg_size ) 
{ 
  struct jit_op *r ;
  void *tmp ;

  {
#line 2438
  tmp = malloc((size_t )sizeof(struct jit_op ));
#line 2438
  r = (struct jit_op *)tmp;
#line 2439
  r->code = code;
#line 2440
  r->spec = spec;
#line 2441
  r->fp = (unsigned char)0;
#line 2442
  r->arg[0] = arg1;
#line 2443
  r->arg[1] = arg2;
#line 2444
  r->arg[2] = arg3;
#line 2445
  r->r_arg[0] = (jit_value )-1;
#line 2446
  r->r_arg[1] = (jit_value )-1;
#line 2447
  r->r_arg[2] = (jit_value )-1;
#line 2448
  r->assigned = (unsigned char)0;
#line 2449
  r->in_use = (unsigned char)1;
#line 2450
  r->arg_size = arg_size;
#line 2451
  r->next = (struct jit_op *)((void *)0);
#line 2452
  r->prev = (struct jit_op *)((void *)0);
#line 2453
  r->patch_addr = (jit_value )0;
#line 2454
  r->jmp_addr = (struct jit_op *)((void *)0);
#line 2455
  r->regmap = (struct jit_rmap *)((void *)0);
#line 2456
  r->live_in = (struct jit_set *)((void *)0);
#line 2457
  r->live_out = (struct jit_set *)((void *)0);
#line 2458
  r->allocator_hints = (struct jit_tree *)((void *)0);
#line 2459
  r->debug_info = (struct jit_debug_info *)((void *)0);
#line 2460
  r->addendum = (void *)0;
#line 2461
  return (r);
}
}
/* END FUNCTION-DEF jit_op_new LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF emit_push_reg LOC=UNKNOWN */
static int emit_push_reg(struct jit *jit , jit_hw_reg *r , int stack_offset ) 
{ 
  unsigned char *tmp ;
  unsigned char _amd64_rex_bits ;
  int tmp___0 ;
  int tmp___1 ;
  unsigned char *tmp___2 ;
  unsigned char *tmp___3 ;
  unsigned char *tmp___4 ;
  long tmp___5 ;
  unsigned char *tmp___6 ;
  unsigned char *tmp___7 ;
  unsigned char *tmp___8 ;
  unsigned char *tmp___9 ;
  unsigned char *tmp___10 ;
  unsigned char *tmp___11 ;
  x86_imm_buf imb ;
  unsigned char *tmp___12 ;
  unsigned char *tmp___13 ;
  unsigned char *tmp___14 ;
  unsigned char *tmp___15 ;
  unsigned char *tmp___16 ;
  unsigned char *tmp___17 ;
  unsigned char *tmp___18 ;
  x86_imm_buf imb___0 ;
  unsigned char *tmp___19 ;
  unsigned char *tmp___20 ;
  unsigned char *tmp___21 ;
  unsigned char *tmp___22 ;
  unsigned char *tmp___23 ;
  unsigned char _amd64_rex_bits___0 ;
  int tmp___24 ;
  unsigned char *tmp___25 ;
  unsigned char *tmp___26 ;
  unsigned char *tmp___27 ;
  unsigned char *tmp___28 ;
  x86_imm_buf imb___1 ;
  unsigned char *tmp___29 ;
  unsigned char *tmp___30 ;
  unsigned char *tmp___31 ;
  unsigned char *tmp___32 ;
  unsigned char *tmp___33 ;
  unsigned char *tmp___34 ;
  unsigned char *tmp___35 ;
  unsigned char *tmp___36 ;
  unsigned char *tmp___37 ;
  unsigned char *tmp___38 ;
  x86_imm_buf imb___2 ;
  unsigned char *tmp___39 ;
  unsigned char *tmp___40 ;
  unsigned char *tmp___41 ;
  unsigned char *tmp___42 ;
  unsigned char *tmp___43 ;
  unsigned char *tmp___44 ;
  unsigned char *tmp___45 ;
  x86_imm_buf imb___3 ;
  unsigned char *tmp___46 ;
  unsigned char *tmp___47 ;
  unsigned char *tmp___48 ;
  unsigned char *tmp___49 ;

  {
#line 3888
  if (! r->fp) {
#line 3889
    while (1) {
#line 3889
      if ((int )sizeof(void *) == 2) {
#line 3889
        tmp = jit->ip;
#line 3889
        (jit->ip) ++;
#line 3889
        *tmp = (unsigned char)102;
      }
#line 3889
      while (1) {
#line 3889
        if ((int )sizeof(void *) > 4) {
#line 3889
          tmp___0 = 8;
        } else {
#line 3889
          tmp___0 = 0;
        }
#line 3889
        if (r->id > 7) {
#line 3889
          tmp___1 = 4;
        } else {
#line 3889
          tmp___1 = 0;
        }
#line 3889
        _amd64_rex_bits = (unsigned char )(tmp___0 | tmp___1);
#line 3889
        if ((int )_amd64_rex_bits != 0) {
#line 3889
          tmp___2 = jit->ip;
#line 3889
          (jit->ip) ++;
#line 3889
          *tmp___2 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
        } else
#line 3889
        if ((int )sizeof(void *) == 1) {
#line 3889
          tmp___2 = jit->ip;
#line 3889
          (jit->ip) ++;
#line 3889
          *tmp___2 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
        }
#line 3889
        break;
      }
#line 3889
      switch ((int )sizeof(void *)) {
      case 1: 
#line 3889
      tmp___3 = jit->ip;
#line 3889
      (jit->ip) ++;
#line 3889
      *tmp___3 = (unsigned char)136;
#line 3889
      break;
      case 8: 
      case 4: 
      case 2: 
#line 3889
      tmp___4 = jit->ip;
#line 3889
      (jit->ip) ++;
#line 3889
      *tmp___4 = (unsigned char)137;
#line 3889
      break;
      default: 
#line 3889
      tmp___5 = __builtin_expect(1L, 0L);
#line 3889
      if (tmp___5) {
#line 3889
        __assert_rtn((char const   *)"emit_push_reg", (char const   *)"tmp/src.c",
                     2781, (char const   *)"0");
      }
      }
#line 3889
      while (1) {
#line 3889
        if (stack_offset == 0) {
#line 3889
          while (1) {
#line 3889
            tmp___6 = jit->ip;
#line 3889
            (jit->ip) ++;
#line 3889
            *tmp___6 = (unsigned char )((((r->id & 0x7) & 0x07) << 3) | 4);
#line 3889
            break;
          }
#line 3889
          while (1) {
#line 3889
            tmp___7 = jit->ip;
#line 3889
            (jit->ip) ++;
#line 3889
            *tmp___7 = (unsigned char )((4 << 3) | 4);
#line 3889
            break;
          }
        } else
#line 3889
        if ((jit_value )stack_offset >= -128L) {
#line 3889
          if ((jit_value )stack_offset <= 127L) {
#line 3889
            while (1) {
#line 3889
              tmp___8 = jit->ip;
#line 3889
              (jit->ip) ++;
#line 3889
              *tmp___8 = (unsigned char )(((1 << 6) | (((r->id & 0x7) & 0x07) << 3)) | 4);
#line 3889
              break;
            }
#line 3889
            while (1) {
#line 3889
              tmp___9 = jit->ip;
#line 3889
              (jit->ip) ++;
#line 3889
              *tmp___9 = (unsigned char )((4 << 3) | 4);
#line 3889
              break;
            }
#line 3889
            while (1) {
#line 3889
              *(jit->ip) = (unsigned char )(stack_offset & 0xff);
#line 3889
              (jit->ip) ++;
#line 3889
              break;
            }
          } else {
#line 3889
            goto _L;
          }
        } else {
          _L: /* CIL Label */ 
#line 3889
          while (1) {
#line 3889
            tmp___10 = jit->ip;
#line 3889
            (jit->ip) ++;
#line 3889
            *tmp___10 = (unsigned char )(((2 << 6) | (((r->id & 0x7) & 0x07) << 3)) | 4);
#line 3889
            break;
          }
#line 3889
          while (1) {
#line 3889
            tmp___11 = jit->ip;
#line 3889
            (jit->ip) ++;
#line 3889
            *tmp___11 = (unsigned char )((4 << 3) | 4);
#line 3889
            break;
          }
#line 3889
          while (1) {
#line 3889
            imb.val = stack_offset;
#line 3889
            tmp___12 = jit->ip;
#line 3889
            (jit->ip) ++;
#line 3889
            *tmp___12 = imb.b[0];
#line 3889
            tmp___13 = jit->ip;
#line 3889
            (jit->ip) ++;
#line 3889
            *tmp___13 = imb.b[1];
#line 3889
            tmp___14 = jit->ip;
#line 3889
            (jit->ip) ++;
#line 3889
            *tmp___14 = imb.b[2];
#line 3889
            tmp___15 = jit->ip;
#line 3889
            (jit->ip) ++;
#line 3889
            *tmp___15 = imb.b[3];
#line 3889
            break;
          }
        }
#line 3889
        break;
#line 3889
        if (stack_offset == 0) {
#line 3889
          while (1) {
#line 3889
            tmp___16 = jit->ip;
#line 3889
            (jit->ip) ++;
#line 3889
            *tmp___16 = (unsigned char )((((r->id & 0x7) & 0x07) << 3) | 4);
#line 3889
            break;
          }
#line 3889
          break;
        }
#line 3889
        if ((jit_value )stack_offset >= -128L) {
#line 3889
          if ((jit_value )stack_offset <= 127L) {
#line 3889
            while (1) {
#line 3889
              tmp___17 = jit->ip;
#line 3889
              (jit->ip) ++;
#line 3889
              *tmp___17 = (unsigned char )(((1 << 6) | (((r->id & 0x7) & 0x07) << 3)) | 4);
#line 3889
              break;
            }
#line 3889
            while (1) {
#line 3889
              *(jit->ip) = (unsigned char )(stack_offset & 0xff);
#line 3889
              (jit->ip) ++;
#line 3889
              break;
            }
          } else {
#line 3889
            goto _L___0;
          }
        } else {
          _L___0: /* CIL Label */ 
#line 3889
          while (1) {
#line 3889
            tmp___18 = jit->ip;
#line 3889
            (jit->ip) ++;
#line 3889
            *tmp___18 = (unsigned char )(((2 << 6) | (((r->id & 0x7) & 0x07) << 3)) | 4);
#line 3889
            break;
          }
#line 3889
          while (1) {
#line 3889
            imb___0.val = stack_offset;
#line 3889
            tmp___19 = jit->ip;
#line 3889
            (jit->ip) ++;
#line 3889
            *tmp___19 = imb___0.b[0];
#line 3889
            tmp___20 = jit->ip;
#line 3889
            (jit->ip) ++;
#line 3889
            *tmp___20 = imb___0.b[1];
#line 3889
            tmp___21 = jit->ip;
#line 3889
            (jit->ip) ++;
#line 3889
            *tmp___21 = imb___0.b[2];
#line 3889
            tmp___22 = jit->ip;
#line 3889
            (jit->ip) ++;
#line 3889
            *tmp___22 = imb___0.b[3];
#line 3889
            break;
          }
        }
#line 3889
        break;
      }
#line 3889
      break;
    }
#line 3890
    return ((int )sizeof(void *));
  } else {
#line 3892
    while (1) {
#line 3892
      tmp___23 = jit->ip;
#line 3892
      (jit->ip) ++;
#line 3892
      *tmp___23 = (unsigned char)102;
#line 3892
      while (1) {
#line 3892
        if (r->id > 7) {
#line 3892
          tmp___24 = 4;
        } else {
#line 3892
          tmp___24 = 0;
        }
#line 3892
        _amd64_rex_bits___0 = (unsigned char )tmp___24;
#line 3892
        if ((int )_amd64_rex_bits___0 != 0) {
#line 3892
          tmp___25 = jit->ip;
#line 3892
          (jit->ip) ++;
#line 3892
          *tmp___25 = (unsigned char )(0x40 | (int )_amd64_rex_bits___0);
        }
#line 3892
        break;
      }
#line 3892
      tmp___26 = jit->ip;
#line 3892
      (jit->ip) ++;
#line 3892
      *tmp___26 = (unsigned char)15;
#line 3892
      tmp___27 = jit->ip;
#line 3892
      (jit->ip) ++;
#line 3892
      *tmp___27 = (unsigned char)19;
#line 3892
      while (1) {
#line 3892
        while (1) {
#line 3892
          if (stack_offset == 0) {
#line 3892
            while (1) {
#line 3892
              tmp___33 = jit->ip;
#line 3892
              (jit->ip) ++;
#line 3892
              *tmp___33 = (unsigned char )((((r->id & 0x7) & 0x07) << 3) | 4);
#line 3892
              break;
            }
#line 3892
            while (1) {
#line 3892
              tmp___34 = jit->ip;
#line 3892
              (jit->ip) ++;
#line 3892
              *tmp___34 = (unsigned char )((4 << 3) | 4);
#line 3892
              break;
            }
          } else
#line 3892
          if ((jit_value )stack_offset >= -128L) {
#line 3892
            if ((jit_value )stack_offset <= 127L) {
#line 3892
              while (1) {
#line 3892
                tmp___35 = jit->ip;
#line 3892
                (jit->ip) ++;
#line 3892
                *tmp___35 = (unsigned char )(((1 << 6) | (((r->id & 0x7) & 0x07) << 3)) | 4);
#line 3892
                break;
              }
#line 3892
              while (1) {
#line 3892
                tmp___36 = jit->ip;
#line 3892
                (jit->ip) ++;
#line 3892
                *tmp___36 = (unsigned char )((4 << 3) | 4);
#line 3892
                break;
              }
#line 3892
              while (1) {
#line 3892
                *(jit->ip) = (unsigned char )(stack_offset & 0xff);
#line 3892
                (jit->ip) ++;
#line 3892
                break;
              }
            } else {
#line 3892
              goto _L___1;
            }
          } else {
            _L___1: /* CIL Label */ 
#line 3892
            while (1) {
#line 3892
              tmp___37 = jit->ip;
#line 3892
              (jit->ip) ++;
#line 3892
              *tmp___37 = (unsigned char )(((2 << 6) | (((r->id & 0x7) & 0x07) << 3)) | 4);
#line 3892
              break;
            }
#line 3892
            while (1) {
#line 3892
              tmp___38 = jit->ip;
#line 3892
              (jit->ip) ++;
#line 3892
              *tmp___38 = (unsigned char )((4 << 3) | 4);
#line 3892
              break;
            }
#line 3892
            while (1) {
#line 3892
              imb___2.val = stack_offset;
#line 3892
              tmp___39 = jit->ip;
#line 3892
              (jit->ip) ++;
#line 3892
              *tmp___39 = imb___2.b[0];
#line 3892
              tmp___40 = jit->ip;
#line 3892
              (jit->ip) ++;
#line 3892
              *tmp___40 = imb___2.b[1];
#line 3892
              tmp___41 = jit->ip;
#line 3892
              (jit->ip) ++;
#line 3892
              *tmp___41 = imb___2.b[2];
#line 3892
              tmp___42 = jit->ip;
#line 3892
              (jit->ip) ++;
#line 3892
              *tmp___42 = imb___2.b[3];
#line 3892
              break;
            }
          }
#line 3892
          break;
#line 3892
          if (stack_offset == 0) {
#line 3892
            while (1) {
#line 3892
              tmp___43 = jit->ip;
#line 3892
              (jit->ip) ++;
#line 3892
              *tmp___43 = (unsigned char )((((r->id & 0x7) & 0x07) << 3) | 4);
#line 3892
              break;
            }
#line 3892
            break;
          }
#line 3892
          if ((jit_value )stack_offset >= -128L) {
#line 3892
            if ((jit_value )stack_offset <= 127L) {
#line 3892
              while (1) {
#line 3892
                tmp___44 = jit->ip;
#line 3892
                (jit->ip) ++;
#line 3892
                *tmp___44 = (unsigned char )(((1 << 6) | (((r->id & 0x7) & 0x07) << 3)) | 4);
#line 3892
                break;
              }
#line 3892
              while (1) {
#line 3892
                *(jit->ip) = (unsigned char )(stack_offset & 0xff);
#line 3892
                (jit->ip) ++;
#line 3892
                break;
              }
            } else {
#line 3892
              goto _L___2;
            }
          } else {
            _L___2: /* CIL Label */ 
#line 3892
            while (1) {
#line 3892
              tmp___45 = jit->ip;
#line 3892
              (jit->ip) ++;
#line 3892
              *tmp___45 = (unsigned char )(((2 << 6) | (((r->id & 0x7) & 0x07) << 3)) | 4);
#line 3892
              break;
            }
#line 3892
            while (1) {
#line 3892
              imb___3.val = stack_offset;
#line 3892
              tmp___46 = jit->ip;
#line 3892
              (jit->ip) ++;
#line 3892
              *tmp___46 = imb___3.b[0];
#line 3892
              tmp___47 = jit->ip;
#line 3892
              (jit->ip) ++;
#line 3892
              *tmp___47 = imb___3.b[1];
#line 3892
              tmp___48 = jit->ip;
#line 3892
              (jit->ip) ++;
#line 3892
              *tmp___48 = imb___3.b[2];
#line 3892
              tmp___49 = jit->ip;
#line 3892
              (jit->ip) ++;
#line 3892
              *tmp___49 = imb___3.b[3];
#line 3892
              break;
            }
          }
#line 3892
          break;
        }
#line 3892
        break;
      }
#line 3892
      break;
    }
#line 3893
    return ((int )sizeof(double ));
  }
}
}
/* END FUNCTION-DEF emit_push_reg LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_tree_search LOC=UNKNOWN */
static jit_tree *jit_tree_search(jit_tree *h , jit_tree_key key ) 
{ 
  jit_tree *tmp ;
  jit_tree *tmp___0 ;

  {
#line 2134
  if ((unsigned long )h == (unsigned long )((void *)0)) {
#line 2134
    return (h);
  } else
#line 2134
  if (h->key == key) {
#line 2134
    return (h);
  }
#line 2135
  if (h->key > key) {
#line 2135
    tmp = jit_tree_search(h->left, key);
#line 2135
    return (tmp);
  }
#line 2136
  tmp___0 = jit_tree_search(h->right, key);
#line 2136
  return (tmp___0);
}
}
/* END FUNCTION-DEF jit_tree_search LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF emit_transfer_init LOC=UNKNOWN */
static void emit_transfer_init(struct jit *jit , jit_op *op , jit_value destreg ,
                               jit_value srcreg , jit_value cnt , int block_size ) 
{ 
  struct transfer_info *tinf ;
  void *tmp ;
  jit_hw_reg *scrap ;
  jit_hw_reg *tmp___0 ;
  int i ;
  jit_hw_reg *r ;
  jit_hw_reg *counter ;
  jit_hw_reg *tmp___1 ;
  int i___0 ;
  jit_hw_reg *r___0 ;
  jit_hw_reg *counter___0 ;
  jit_hw_reg *tmp___2 ;
  int tmp___3 ;
  unsigned char *tmp___4 ;
  unsigned char _amd64_rex_bits ;
  int tmp___5 ;
  int tmp___6 ;
  unsigned char *tmp___7 ;
  unsigned char *tmp___8 ;
  unsigned char *tmp___9 ;
  long tmp___10 ;
  unsigned char *tmp___11 ;
  unsigned char *tmp___12 ;
  unsigned char *tmp___13 ;
  unsigned char *tmp___14 ;
  unsigned char *tmp___15 ;
  unsigned char *tmp___16 ;
  x86_imm_buf imb ;
  unsigned char *tmp___17 ;
  unsigned char *tmp___18 ;
  unsigned char *tmp___19 ;
  unsigned char *tmp___20 ;
  unsigned char *tmp___21 ;
  unsigned char *tmp___22 ;
  unsigned char *tmp___23 ;
  x86_imm_buf imb___0 ;
  unsigned char *tmp___24 ;
  unsigned char *tmp___25 ;
  unsigned char *tmp___26 ;
  unsigned char *tmp___27 ;
  unsigned char *tmp___28 ;
  unsigned char _amd64_rex_bits___0 ;
  int tmp___29 ;
  int tmp___30 ;
  unsigned char *tmp___31 ;
  unsigned char *tmp___32 ;
  unsigned char *tmp___33 ;
  long tmp___34 ;
  unsigned char *tmp___35 ;
  unsigned char *tmp___36 ;
  unsigned char *tmp___37 ;
  unsigned char *tmp___38 ;
  unsigned char *tmp___39 ;
  unsigned char *tmp___40 ;
  x86_imm_buf imb___1 ;
  unsigned char *tmp___41 ;
  unsigned char *tmp___42 ;
  unsigned char *tmp___43 ;
  unsigned char *tmp___44 ;
  unsigned char *tmp___45 ;
  unsigned char *tmp___46 ;
  unsigned char *tmp___47 ;
  x86_imm_buf imb___2 ;
  unsigned char *tmp___48 ;
  unsigned char *tmp___49 ;
  unsigned char *tmp___50 ;
  unsigned char *tmp___51 ;
  unsigned char _amd64_rex_bits___1 ;
  int tmp___52 ;
  int tmp___53 ;
  unsigned char *tmp___54 ;
  unsigned char *tmp___55 ;
  amd64_imm_buf imb___3 ;
  unsigned char *tmp___56 ;
  unsigned char *tmp___57 ;
  unsigned char *tmp___58 ;
  unsigned char *tmp___59 ;
  unsigned char *tmp___60 ;
  unsigned char *tmp___61 ;
  unsigned char *tmp___62 ;
  unsigned char *tmp___63 ;
  x86_imm_buf imb___4 ;
  unsigned char *tmp___64 ;
  unsigned char *tmp___65 ;
  unsigned char *tmp___66 ;
  unsigned char *tmp___67 ;
  int shift ;
  long tmp___68 ;
  unsigned char _amd64_rex_bits___2 ;
  int tmp___69 ;
  int tmp___70 ;
  unsigned char *tmp___71 ;
  unsigned char *tmp___72 ;
  unsigned char *tmp___73 ;
  unsigned char *tmp___74 ;
  x86_imm_buf imb___5 ;
  unsigned char *tmp___75 ;
  unsigned char *tmp___76 ;
  unsigned char *tmp___77 ;
  unsigned char *tmp___78 ;
  unsigned char *tmp___79 ;
  unsigned char *tmp___80 ;
  unsigned char *tmp___81 ;
  unsigned char *tmp___82 ;
  unsigned char *tmp___83 ;
  unsigned char *tmp___84 ;
  x86_imm_buf imb___6 ;
  unsigned char *tmp___85 ;
  unsigned char *tmp___86 ;
  unsigned char *tmp___87 ;
  unsigned char *tmp___88 ;
  unsigned char _amd64_rex_bits___3 ;
  int tmp___89 ;
  int tmp___90 ;
  int tmp___91 ;
  int tmp___92 ;
  unsigned char *tmp___93 ;
  int tmp___94 ;
  unsigned char *tmp___95 ;
  unsigned char *tmp___96 ;
  unsigned char *tmp___97 ;
  long tmp___98 ;
  unsigned char *tmp___99 ;
  unsigned char *tmp___100 ;
  x86_imm_buf imb___7 ;
  unsigned char *tmp___101 ;
  unsigned char *tmp___102 ;
  unsigned char *tmp___103 ;
  unsigned char *tmp___104 ;
  unsigned char *tmp___105 ;
  unsigned char *tmp___106 ;
  unsigned char *tmp___107 ;
  unsigned char *tmp___108 ;
  unsigned char *tmp___109 ;
  unsigned char *tmp___110 ;
  x86_imm_buf imb___8 ;
  unsigned char *tmp___111 ;
  unsigned char *tmp___112 ;
  unsigned char *tmp___113 ;
  unsigned char *tmp___114 ;
  unsigned char _amd64_rex_bits___4 ;
  int tmp___115 ;
  int tmp___116 ;
  int tmp___117 ;
  unsigned char *tmp___118 ;
  unsigned char *tmp___119 ;
  unsigned char *tmp___120 ;
  unsigned char *tmp___121 ;
  x86_imm_buf imb___9 ;
  unsigned char *tmp___122 ;
  unsigned char *tmp___123 ;
  unsigned char *tmp___124 ;
  unsigned char *tmp___125 ;
  unsigned char *tmp___126 ;
  unsigned char *tmp___127 ;
  unsigned char *tmp___128 ;
  unsigned char *tmp___129 ;
  unsigned char *tmp___130 ;
  unsigned char *tmp___131 ;
  x86_imm_buf imb___10 ;
  unsigned char *tmp___132 ;
  unsigned char *tmp___133 ;
  unsigned char *tmp___134 ;
  unsigned char *tmp___135 ;
  unsigned char _amd64_rex_bits___5 ;
  int tmp___136 ;
  int tmp___137 ;
  int tmp___138 ;
  unsigned char *tmp___139 ;
  unsigned char *tmp___140 ;
  unsigned char *tmp___141 ;
  unsigned char *tmp___142 ;
  long tmp___143 ;
  unsigned char *tmp___144 ;
  unsigned char *tmp___145 ;
  x86_imm_buf imb___11 ;
  unsigned char *tmp___146 ;
  unsigned char *tmp___147 ;
  unsigned char *tmp___148 ;
  unsigned char *tmp___149 ;
  unsigned char *tmp___150 ;
  unsigned char *tmp___151 ;
  unsigned char *tmp___152 ;
  unsigned char *tmp___153 ;
  unsigned char *tmp___154 ;
  unsigned char *tmp___155 ;
  x86_imm_buf imb___12 ;
  unsigned char *tmp___156 ;
  unsigned char *tmp___157 ;
  unsigned char *tmp___158 ;
  unsigned char *tmp___159 ;

  {
#line 4419
  tmp = malloc((size_t )sizeof(struct transfer_info ));
#line 4419
  tinf = (struct transfer_info *)tmp;
#line 4420
  tinf->sourcereg = (int )srcreg;
#line 4421
  tinf->destreg = (int )destreg;
#line 4422
  tinf->block_size = block_size;
#line 4423
  tmp___0 = jit_get_unused_reg_with_index(jit->reg_al, op, 0, 0);
#line 4423
  scrap = tmp___0;
#line 4424
  if (scrap) {
#line 4424
    tinf->scrapreg = scrap->id;
  } else {
#line 4426
    i = 0;
#line 4426
    while (i < (jit->reg_al)->gp_reg_cnt) {
#line 4427
      r = (jit->reg_al)->gp_regs + i;
#line 4428
      if ((jit_value )r->id != srcreg) {
#line 4428
        if ((jit_value )r->id != destreg) {
#line 4428
          if (! ((int )op->code & 0x02)) {
#line 4428
            if ((jit_value )r->id != cnt) {
#line 4429
              tinf->scrapreg = r->id;
#line 4430
              break;
            }
          }
        }
      }
#line 4426
      i ++;
    }
  }
#line 4434
  tinf->scrap_in_use = jit_reg_in_use(op, tinf->scrapreg, 0);
#line 4435
  if ((int )op->code & 0x02) {
#line 4436
    tmp___1 = jit_get_unused_reg_with_index(jit->reg_al, op, 0, 1);
#line 4436
    counter = tmp___1;
#line 4437
    if (counter) {
#line 4437
      tinf->counterreg = counter->id;
    } else {
#line 4439
      i___0 = 0;
#line 4439
      while (i___0 < (jit->reg_al)->gp_reg_cnt) {
#line 4440
        r___0 = (jit->reg_al)->gp_regs + i___0;
#line 4441
        if ((jit_value )r___0->id != srcreg) {
#line 4441
          if ((jit_value )r___0->id != destreg) {
#line 4441
            if (r___0->id != tinf->scrapreg) {
#line 4442
              tinf->counterreg = r___0->id;
#line 4443
              break;
            }
          }
        }
#line 4439
        i___0 ++;
      }
    }
#line 4447
    tinf->counter_in_use = jit_reg_in_use(op, tinf->counterreg, 0);
  } else {
#line 4449
    tmp___3 = jit_set_get(op->live_out, (int )op->arg[2]);
#line 4449
    if (tmp___3) {
#line 4450
      tmp___2 = jit_get_unused_reg_with_index(jit->reg_al, op, 0, 1);
#line 4450
      counter___0 = tmp___2;
#line 4451
      if (counter___0) {
#line 4451
        tinf->counterreg = counter___0->id;
      } else {
#line 4451
        tinf->counterreg = (int )cnt;
      }
#line 4452
      tinf->counter_in_use = jit_reg_in_use(op, tinf->counterreg, 0);
    } else {
#line 4454
      tinf->counterreg = (int )cnt;
#line 4455
      tinf->counter_in_use = 0;
    }
  }
#line 4458
  if (tinf->counter_in_use) {
#line 4458
    while (1) {
#line 4458
      if ((int )sizeof(void *) == 2) {
#line 4458
        tmp___4 = jit->ip;
#line 4458
        (jit->ip) ++;
#line 4458
        *tmp___4 = (unsigned char)102;
      }
#line 4458
      while (1) {
#line 4458
        if ((int )sizeof(void *) > 4) {
#line 4458
          tmp___5 = 8;
        } else {
#line 4458
          tmp___5 = 0;
        }
#line 4458
        if (tinf->counterreg > 7) {
#line 4458
          tmp___6 = 4;
        } else {
#line 4458
          tmp___6 = 0;
        }
#line 4458
        _amd64_rex_bits = (unsigned char )(tmp___5 | tmp___6);
#line 4458
        if ((int )_amd64_rex_bits != 0) {
#line 4458
          tmp___7 = jit->ip;
#line 4458
          (jit->ip) ++;
#line 4458
          *tmp___7 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
        } else
#line 4458
        if ((int )sizeof(void *) == 1) {
#line 4458
          tmp___7 = jit->ip;
#line 4458
          (jit->ip) ++;
#line 4458
          *tmp___7 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
        }
#line 4458
        break;
      }
#line 4458
      switch ((int )sizeof(void *)) {
      case 1: 
#line 4458
      tmp___8 = jit->ip;
#line 4458
      (jit->ip) ++;
#line 4458
      *tmp___8 = (unsigned char)136;
#line 4458
      break;
      case 8: 
      case 4: 
      case 2: 
#line 4458
      tmp___9 = jit->ip;
#line 4458
      (jit->ip) ++;
#line 4458
      *tmp___9 = (unsigned char)137;
#line 4458
      break;
      default: 
#line 4458
      tmp___10 = __builtin_expect(1L, 0L);
#line 4458
      if (tmp___10) {
#line 4458
        __assert_rtn((char const   *)"emit_transfer_init", (char const   *)"tmp/src.c",
                     3500, (char const   *)"0");
      }
      }
#line 4458
      while (1) {
#line 4458
        if (- ((int )sizeof(void *)) == 0) {
#line 4458
          while (1) {
#line 4458
            tmp___11 = jit->ip;
#line 4458
            (jit->ip) ++;
#line 4458
            *tmp___11 = (unsigned char )((((tinf->counterreg & 0x7) & 0x07) << 3) | 4);
#line 4458
            break;
          }
#line 4458
          while (1) {
#line 4458
            tmp___12 = jit->ip;
#line 4458
            (jit->ip) ++;
#line 4458
            *tmp___12 = (unsigned char )((4 << 3) | 4);
#line 4458
            break;
          }
        } else
#line 4458
        if ((jit_value )(- ((int )sizeof(void *))) >= -128L) {
#line 4458
          if ((jit_value )(- ((int )sizeof(void *))) <= 127L) {
#line 4458
            while (1) {
#line 4458
              tmp___13 = jit->ip;
#line 4458
              (jit->ip) ++;
#line 4458
              *tmp___13 = (unsigned char )(((1 << 6) | (((tinf->counterreg & 0x7) & 0x07) << 3)) | 4);
#line 4458
              break;
            }
#line 4458
            while (1) {
#line 4458
              tmp___14 = jit->ip;
#line 4458
              (jit->ip) ++;
#line 4458
              *tmp___14 = (unsigned char )((4 << 3) | 4);
#line 4458
              break;
            }
#line 4458
            while (1) {
#line 4458
              *(jit->ip) = (unsigned char )(- ((int )sizeof(void *)) & 0xff);
#line 4458
              (jit->ip) ++;
#line 4458
              break;
            }
          } else {
#line 4458
            goto _L;
          }
        } else {
          _L: /* CIL Label */ 
#line 4458
          while (1) {
#line 4458
            tmp___15 = jit->ip;
#line 4458
            (jit->ip) ++;
#line 4458
            *tmp___15 = (unsigned char )(((2 << 6) | (((tinf->counterreg & 0x7) & 0x07) << 3)) | 4);
#line 4458
            break;
          }
#line 4458
          while (1) {
#line 4458
            tmp___16 = jit->ip;
#line 4458
            (jit->ip) ++;
#line 4458
            *tmp___16 = (unsigned char )((4 << 3) | 4);
#line 4458
            break;
          }
#line 4458
          while (1) {
#line 4458
            imb.val = - ((int )sizeof(void *));
#line 4458
            tmp___17 = jit->ip;
#line 4458
            (jit->ip) ++;
#line 4458
            *tmp___17 = imb.b[0];
#line 4458
            tmp___18 = jit->ip;
#line 4458
            (jit->ip) ++;
#line 4458
            *tmp___18 = imb.b[1];
#line 4458
            tmp___19 = jit->ip;
#line 4458
            (jit->ip) ++;
#line 4458
            *tmp___19 = imb.b[2];
#line 4458
            tmp___20 = jit->ip;
#line 4458
            (jit->ip) ++;
#line 4458
            *tmp___20 = imb.b[3];
#line 4458
            break;
          }
        }
#line 4458
        break;
#line 4458
        if (- ((int )sizeof(void *)) == 0) {
#line 4458
          while (1) {
#line 4458
            tmp___21 = jit->ip;
#line 4458
            (jit->ip) ++;
#line 4458
            *tmp___21 = (unsigned char )((((tinf->counterreg & 0x7) & 0x07) << 3) | 4);
#line 4458
            break;
          }
#line 4458
          break;
        }
#line 4458
        if ((jit_value )(- ((int )sizeof(void *))) >= -128L) {
#line 4458
          if ((jit_value )(- ((int )sizeof(void *))) <= 127L) {
#line 4458
            while (1) {
#line 4458
              tmp___22 = jit->ip;
#line 4458
              (jit->ip) ++;
#line 4458
              *tmp___22 = (unsigned char )(((1 << 6) | (((tinf->counterreg & 0x7) & 0x07) << 3)) | 4);
#line 4458
              break;
            }
#line 4458
            while (1) {
#line 4458
              *(jit->ip) = (unsigned char )(- ((int )sizeof(void *)) & 0xff);
#line 4458
              (jit->ip) ++;
#line 4458
              break;
            }
          } else {
#line 4458
            goto _L___0;
          }
        } else {
          _L___0: /* CIL Label */ 
#line 4458
          while (1) {
#line 4458
            tmp___23 = jit->ip;
#line 4458
            (jit->ip) ++;
#line 4458
            *tmp___23 = (unsigned char )(((2 << 6) | (((tinf->counterreg & 0x7) & 0x07) << 3)) | 4);
#line 4458
            break;
          }
#line 4458
          while (1) {
#line 4458
            imb___0.val = - ((int )sizeof(void *));
#line 4458
            tmp___24 = jit->ip;
#line 4458
            (jit->ip) ++;
#line 4458
            *tmp___24 = imb___0.b[0];
#line 4458
            tmp___25 = jit->ip;
#line 4458
            (jit->ip) ++;
#line 4458
            *tmp___25 = imb___0.b[1];
#line 4458
            tmp___26 = jit->ip;
#line 4458
            (jit->ip) ++;
#line 4458
            *tmp___26 = imb___0.b[2];
#line 4458
            tmp___27 = jit->ip;
#line 4458
            (jit->ip) ++;
#line 4458
            *tmp___27 = imb___0.b[3];
#line 4458
            break;
          }
        }
#line 4458
        break;
      }
#line 4458
      break;
    }
  }
#line 4459
  if (tinf->scrap_in_use) {
#line 4459
    while (1) {
#line 4459
      if ((int )sizeof(void *) == 2) {
#line 4459
        tmp___28 = jit->ip;
#line 4459
        (jit->ip) ++;
#line 4459
        *tmp___28 = (unsigned char)102;
      }
#line 4459
      while (1) {
#line 4459
        if ((int )sizeof(void *) > 4) {
#line 4459
          tmp___29 = 8;
        } else {
#line 4459
          tmp___29 = 0;
        }
#line 4459
        if (tinf->scrapreg > 7) {
#line 4459
          tmp___30 = 4;
        } else {
#line 4459
          tmp___30 = 0;
        }
#line 4459
        _amd64_rex_bits___0 = (unsigned char )(tmp___29 | tmp___30);
#line 4459
        if ((int )_amd64_rex_bits___0 != 0) {
#line 4459
          tmp___31 = jit->ip;
#line 4459
          (jit->ip) ++;
#line 4459
          *tmp___31 = (unsigned char )(0x40 | (int )_amd64_rex_bits___0);
        } else
#line 4459
        if ((int )sizeof(void *) == 1) {
#line 4459
          tmp___31 = jit->ip;
#line 4459
          (jit->ip) ++;
#line 4459
          *tmp___31 = (unsigned char )(0x40 | (int )_amd64_rex_bits___0);
        }
#line 4459
        break;
      }
#line 4459
      switch ((int )sizeof(void *)) {
      case 1: 
#line 4459
      tmp___32 = jit->ip;
#line 4459
      (jit->ip) ++;
#line 4459
      *tmp___32 = (unsigned char)136;
#line 4459
      break;
      case 8: 
      case 4: 
      case 2: 
#line 4459
      tmp___33 = jit->ip;
#line 4459
      (jit->ip) ++;
#line 4459
      *tmp___33 = (unsigned char)137;
#line 4459
      break;
      default: 
#line 4459
      tmp___34 = __builtin_expect(1L, 0L);
#line 4459
      if (tmp___34) {
#line 4459
        __assert_rtn((char const   *)"emit_transfer_init", (char const   *)"tmp/src.c",
                     3501, (char const   *)"0");
      }
      }
#line 4459
      while (1) {
#line 4459
        if (- ((int )sizeof(void *)) * 2 == 0) {
#line 4459
          while (1) {
#line 4459
            tmp___35 = jit->ip;
#line 4459
            (jit->ip) ++;
#line 4459
            *tmp___35 = (unsigned char )((((tinf->scrapreg & 0x7) & 0x07) << 3) | 4);
#line 4459
            break;
          }
#line 4459
          while (1) {
#line 4459
            tmp___36 = jit->ip;
#line 4459
            (jit->ip) ++;
#line 4459
            *tmp___36 = (unsigned char )((4 << 3) | 4);
#line 4459
            break;
          }
        } else
#line 4459
        if ((jit_value )(- ((int )sizeof(void *)) * 2) >= -128L) {
#line 4459
          if ((jit_value )(- ((int )sizeof(void *)) * 2) <= 127L) {
#line 4459
            while (1) {
#line 4459
              tmp___37 = jit->ip;
#line 4459
              (jit->ip) ++;
#line 4459
              *tmp___37 = (unsigned char )(((1 << 6) | (((tinf->scrapreg & 0x7) & 0x07) << 3)) | 4);
#line 4459
              break;
            }
#line 4459
            while (1) {
#line 4459
              tmp___38 = jit->ip;
#line 4459
              (jit->ip) ++;
#line 4459
              *tmp___38 = (unsigned char )((4 << 3) | 4);
#line 4459
              break;
            }
#line 4459
            while (1) {
#line 4459
              *(jit->ip) = (unsigned char )(- ((int )sizeof(void *)) * 2 & 0xff);
#line 4459
              (jit->ip) ++;
#line 4459
              break;
            }
          } else {
#line 4459
            goto _L___1;
          }
        } else {
          _L___1: /* CIL Label */ 
#line 4459
          while (1) {
#line 4459
            tmp___39 = jit->ip;
#line 4459
            (jit->ip) ++;
#line 4459
            *tmp___39 = (unsigned char )(((2 << 6) | (((tinf->scrapreg & 0x7) & 0x07) << 3)) | 4);
#line 4459
            break;
          }
#line 4459
          while (1) {
#line 4459
            tmp___40 = jit->ip;
#line 4459
            (jit->ip) ++;
#line 4459
            *tmp___40 = (unsigned char )((4 << 3) | 4);
#line 4459
            break;
          }
#line 4459
          while (1) {
#line 4459
            imb___1.val = - ((int )sizeof(void *)) * 2;
#line 4459
            tmp___41 = jit->ip;
#line 4459
            (jit->ip) ++;
#line 4459
            *tmp___41 = imb___1.b[0];
#line 4459
            tmp___42 = jit->ip;
#line 4459
            (jit->ip) ++;
#line 4459
            *tmp___42 = imb___1.b[1];
#line 4459
            tmp___43 = jit->ip;
#line 4459
            (jit->ip) ++;
#line 4459
            *tmp___43 = imb___1.b[2];
#line 4459
            tmp___44 = jit->ip;
#line 4459
            (jit->ip) ++;
#line 4459
            *tmp___44 = imb___1.b[3];
#line 4459
            break;
          }
        }
#line 4459
        break;
#line 4459
        if (- ((int )sizeof(void *)) * 2 == 0) {
#line 4459
          while (1) {
#line 4459
            tmp___45 = jit->ip;
#line 4459
            (jit->ip) ++;
#line 4459
            *tmp___45 = (unsigned char )((((tinf->scrapreg & 0x7) & 0x07) << 3) | 4);
#line 4459
            break;
          }
#line 4459
          break;
        }
#line 4459
        if ((jit_value )(- ((int )sizeof(void *)) * 2) >= -128L) {
#line 4459
          if ((jit_value )(- ((int )sizeof(void *)) * 2) <= 127L) {
#line 4459
            while (1) {
#line 4459
              tmp___46 = jit->ip;
#line 4459
              (jit->ip) ++;
#line 4459
              *tmp___46 = (unsigned char )(((1 << 6) | (((tinf->scrapreg & 0x7) & 0x07) << 3)) | 4);
#line 4459
              break;
            }
#line 4459
            while (1) {
#line 4459
              *(jit->ip) = (unsigned char )(- ((int )sizeof(void *)) * 2 & 0xff);
#line 4459
              (jit->ip) ++;
#line 4459
              break;
            }
          } else {
#line 4459
            goto _L___2;
          }
        } else {
          _L___2: /* CIL Label */ 
#line 4459
          while (1) {
#line 4459
            tmp___47 = jit->ip;
#line 4459
            (jit->ip) ++;
#line 4459
            *tmp___47 = (unsigned char )(((2 << 6) | (((tinf->scrapreg & 0x7) & 0x07) << 3)) | 4);
#line 4459
            break;
          }
#line 4459
          while (1) {
#line 4459
            imb___2.val = - ((int )sizeof(void *)) * 2;
#line 4459
            tmp___48 = jit->ip;
#line 4459
            (jit->ip) ++;
#line 4459
            *tmp___48 = imb___2.b[0];
#line 4459
            tmp___49 = jit->ip;
#line 4459
            (jit->ip) ++;
#line 4459
            *tmp___49 = imb___2.b[1];
#line 4459
            tmp___50 = jit->ip;
#line 4459
            (jit->ip) ++;
#line 4459
            *tmp___50 = imb___2.b[2];
#line 4459
            tmp___51 = jit->ip;
#line 4459
            (jit->ip) ++;
#line 4459
            *tmp___51 = imb___2.b[3];
#line 4459
            break;
          }
        }
#line 4459
        break;
      }
#line 4459
      break;
    }
  }
#line 4460
  if ((int )op->code & 0x02) {
#line 4460
    while (1) {
#line 4460
      while (1) {
#line 4460
        if (sizeof(void *) > 4ULL) {
#line 4460
          tmp___52 = 8;
        } else {
#line 4460
          tmp___52 = 0;
        }
#line 4460
        if (tinf->counterreg > 7) {
#line 4460
          tmp___53 = 1;
        } else {
#line 4460
          tmp___53 = 0;
        }
#line 4460
        _amd64_rex_bits___1 = (unsigned char )(tmp___52 | tmp___53);
#line 4460
        if ((int )_amd64_rex_bits___1 != 0) {
#line 4460
          tmp___54 = jit->ip;
#line 4460
          (jit->ip) ++;
#line 4460
          *tmp___54 = (unsigned char )(0x40 | (int )_amd64_rex_bits___1);
        } else
#line 4460
        if (sizeof(void *) == 1ULL) {
#line 4460
          tmp___54 = jit->ip;
#line 4460
          (jit->ip) ++;
#line 4460
          *tmp___54 = (unsigned char )(0x40 | (int )_amd64_rex_bits___1);
        }
#line 4460
        break;
      }
#line 4460
      tmp___55 = jit->ip;
#line 4460
      (jit->ip) ++;
#line 4460
      *tmp___55 = (unsigned char )(184 + (tinf->counterreg & 0x7));
#line 4460
      if (sizeof(void *) == 8ULL) {
#line 4460
        while (1) {
#line 4460
          imb___3.val = (size_t )(cnt * (jit_value )block_size);
#line 4460
          tmp___56 = jit->ip;
#line 4460
          (jit->ip) ++;
#line 4460
          *tmp___56 = imb___3.b[0];
#line 4460
          tmp___57 = jit->ip;
#line 4460
          (jit->ip) ++;
#line 4460
          *tmp___57 = imb___3.b[1];
#line 4460
          tmp___58 = jit->ip;
#line 4460
          (jit->ip) ++;
#line 4460
          *tmp___58 = imb___3.b[2];
#line 4460
          tmp___59 = jit->ip;
#line 4460
          (jit->ip) ++;
#line 4460
          *tmp___59 = imb___3.b[3];
#line 4460
          tmp___60 = jit->ip;
#line 4460
          (jit->ip) ++;
#line 4460
          *tmp___60 = imb___3.b[4];
#line 4460
          tmp___61 = jit->ip;
#line 4460
          (jit->ip) ++;
#line 4460
          *tmp___61 = imb___3.b[5];
#line 4460
          tmp___62 = jit->ip;
#line 4460
          (jit->ip) ++;
#line 4460
          *tmp___62 = imb___3.b[6];
#line 4460
          tmp___63 = jit->ip;
#line 4460
          (jit->ip) ++;
#line 4460
          *tmp___63 = imb___3.b[7];
#line 4460
          break;
        }
      } else {
#line 4460
        while (1) {
#line 4460
          imb___4.val = (int )((size_t )(cnt * (jit_value )block_size));
#line 4460
          tmp___64 = jit->ip;
#line 4460
          (jit->ip) ++;
#line 4460
          *tmp___64 = imb___4.b[0];
#line 4460
          tmp___65 = jit->ip;
#line 4460
          (jit->ip) ++;
#line 4460
          *tmp___65 = imb___4.b[1];
#line 4460
          tmp___66 = jit->ip;
#line 4460
          (jit->ip) ++;
#line 4460
          *tmp___66 = imb___4.b[2];
#line 4460
          tmp___67 = jit->ip;
#line 4460
          (jit->ip) ++;
#line 4460
          *tmp___67 = imb___4.b[3];
#line 4460
          break;
        }
      }
#line 4460
      break;
    }
  } else
#line 4461
  if ((jit_value )tinf->counterreg != cnt) {
#line 4461
    goto _L___3;
  } else
#line 4461
  if (block_size > 1) {
    _L___3: /* CIL Label */ 
#line 4463
    if (block_size == 1) {
#line 4463
      shift = 0;
    } else
#line 4464
    if (block_size == 2) {
#line 4464
      shift = 1;
    } else
#line 4465
    if (block_size == 4) {
#line 4465
      shift = 2;
    } else
#line 4466
    if (block_size == 8) {
#line 4466
      shift = 3;
    } else {
#line 4467
      tmp___68 = __builtin_expect(1L, 0L);
#line 4467
      if (tmp___68) {
#line 4467
        __assert_rtn((char const   *)"emit_transfer_init", (char const   *)"tmp/src.c",
                     3510, (char const   *)"0");
      }
    }
#line 4468
    while (1) {
#line 4468
      while (1) {
#line 4468
        if (tinf->counterreg > 7) {
#line 4468
          tmp___69 = 4;
        } else {
#line 4468
          tmp___69 = 0;
        }
#line 4468
        if (cnt > 7L) {
#line 4468
          tmp___70 = 2;
        } else {
#line 4468
          tmp___70 = 0;
        }
#line 4468
        _amd64_rex_bits___2 = (unsigned char )((8 | tmp___69) | tmp___70);
#line 4468
        if ((int )_amd64_rex_bits___2 != 0) {
#line 4468
          tmp___71 = jit->ip;
#line 4468
          (jit->ip) ++;
#line 4468
          *tmp___71 = (unsigned char )(0x40 | (int )_amd64_rex_bits___2);
        }
#line 4468
        break;
      }
#line 4468
      while (1) {
#line 4468
        tmp___72 = jit->ip;
#line 4468
        (jit->ip) ++;
#line 4468
        *tmp___72 = (unsigned char)141;
#line 4468
        while (1) {
#line 4468
          while (1) {
#line 4468
            tmp___73 = jit->ip;
#line 4468
            (jit->ip) ++;
#line 4468
            *tmp___73 = (unsigned char )((((tinf->counterreg & 0x7) & 0x07) << 3) | 4);
#line 4468
            break;
          }
#line 4468
          while (1) {
#line 4468
            tmp___74 = jit->ip;
#line 4468
            (jit->ip) ++;
#line 4468
            *tmp___74 = (unsigned char )(((long )((shift & 0x03) << 6) | (((cnt & 7L) & 7L) << 3)) | 5L);
#line 4468
            break;
          }
#line 4468
          while (1) {
#line 4468
            imb___5.val = 0;
#line 4468
            tmp___75 = jit->ip;
#line 4468
            (jit->ip) ++;
#line 4468
            *tmp___75 = imb___5.b[0];
#line 4468
            tmp___76 = jit->ip;
#line 4468
            (jit->ip) ++;
#line 4468
            *tmp___76 = imb___5.b[1];
#line 4468
            tmp___77 = jit->ip;
#line 4468
            (jit->ip) ++;
#line 4468
            *tmp___77 = imb___5.b[2];
#line 4468
            tmp___78 = jit->ip;
#line 4468
            (jit->ip) ++;
#line 4468
            *tmp___78 = imb___5.b[3];
#line 4468
            break;
          }
#line 4468
          break;
        }
#line 4468
        break;
      }
#line 4468
      break;
    }
  }
#line 4470
  tinf->loop_addr = jit->ip;
#line 4471
  op->addendum = (void *)tinf;
#line 4472
  if (block_size == (int )sizeof(void *)) {
#line 4472
    while (1) {
#line 4472
      while (1) {
#line 4472
        if (block_size > 4) {
#line 4472
          tmp___89 = 8;
        } else {
#line 4472
          tmp___89 = 0;
        }
#line 4472
        if (tinf->scrapreg > 7) {
#line 4472
          tmp___90 = 4;
        } else {
#line 4472
          tmp___90 = 0;
        }
#line 4472
        if (tinf->counterreg > 7) {
#line 4472
          tmp___91 = 2;
        } else {
#line 4472
          tmp___91 = 0;
        }
#line 4472
        if (srcreg > 7L) {
#line 4472
          tmp___92 = 1;
        } else {
#line 4472
          tmp___92 = 0;
        }
#line 4472
        _amd64_rex_bits___3 = (unsigned char )(((tmp___89 | tmp___90) | tmp___91) | tmp___92);
#line 4472
        if ((int )_amd64_rex_bits___3 != 0) {
#line 4472
          tmp___93 = jit->ip;
#line 4472
          (jit->ip) ++;
#line 4472
          *tmp___93 = (unsigned char )(0x40 | (int )_amd64_rex_bits___3);
        } else
#line 4472
        if (block_size == 1) {
#line 4472
          tmp___93 = jit->ip;
#line 4472
          (jit->ip) ++;
#line 4472
          *tmp___93 = (unsigned char )(0x40 | (int )_amd64_rex_bits___3);
        }
#line 4472
        break;
      }
#line 4472
      while (1) {
#line 4472
        if (block_size == 8) {
#line 4472
          tmp___94 = 4;
        } else {
#line 4472
          tmp___94 = block_size;
        }
#line 4472
        switch (tmp___94) {
        case 1: 
#line 4472
        tmp___95 = jit->ip;
#line 4472
        (jit->ip) ++;
#line 4472
        *tmp___95 = (unsigned char)138;
#line 4472
        break;
        case 2: 
#line 4472
        tmp___96 = jit->ip;
#line 4472
        (jit->ip) ++;
#line 4472
        *tmp___96 = (unsigned char)102;
        case 4: 
#line 4472
        tmp___97 = jit->ip;
#line 4472
        (jit->ip) ++;
#line 4472
        *tmp___97 = (unsigned char)139;
#line 4472
        break;
        default: 
#line 4472
        tmp___98 = __builtin_expect(1L, 0L);
#line 4472
        if (tmp___98) {
#line 4472
          __assert_rtn((char const   *)"emit_transfer_init", (char const   *)"tmp/src.c",
                       3519, (char const   *)"0");
        }
        }
#line 4472
        while (1) {
#line 4472
          if ((srcreg & 7L) == -1L) {
#line 4472
            while (1) {
#line 4472
              tmp___99 = jit->ip;
#line 4472
              (jit->ip) ++;
#line 4472
              *tmp___99 = (unsigned char )((((tinf->scrapreg & 0x7) & 0x07) << 3) | 4);
#line 4472
              break;
            }
#line 4472
            while (1) {
#line 4472
              tmp___100 = jit->ip;
#line 4472
              (jit->ip) ++;
#line 4472
              *tmp___100 = (unsigned char )((((tinf->counterreg & 0x7) & 0x07) << 3) | 5);
#line 4472
              break;
            }
#line 4472
            while (1) {
#line 4472
              imb___7.val = - block_size;
#line 4472
              tmp___101 = jit->ip;
#line 4472
              (jit->ip) ++;
#line 4472
              *tmp___101 = imb___7.b[0];
#line 4472
              tmp___102 = jit->ip;
#line 4472
              (jit->ip) ++;
#line 4472
              *tmp___102 = imb___7.b[1];
#line 4472
              tmp___103 = jit->ip;
#line 4472
              (jit->ip) ++;
#line 4472
              *tmp___103 = imb___7.b[2];
#line 4472
              tmp___104 = jit->ip;
#line 4472
              (jit->ip) ++;
#line 4472
              *tmp___104 = imb___7.b[3];
#line 4472
              break;
            }
          } else
#line 4472
          if (- block_size == 0) {
#line 4472
            if ((srcreg & 7L) != 5L) {
#line 4472
              while (1) {
#line 4472
                tmp___105 = jit->ip;
#line 4472
                (jit->ip) ++;
#line 4472
                *tmp___105 = (unsigned char )((((tinf->scrapreg & 0x7) & 0x07) << 3) | 4);
#line 4472
                break;
              }
#line 4472
              while (1) {
#line 4472
                tmp___106 = jit->ip;
#line 4472
                (jit->ip) ++;
#line 4472
                *tmp___106 = (unsigned char )((long )((((tinf->counterreg & 0x7) & 0x7) & 0x07) << 3) | (((srcreg & 7L) & 7L) & 7L));
#line 4472
                break;
              }
            } else {
#line 4472
              goto _L___5;
            }
          } else
          _L___5: /* CIL Label */ 
#line 4472
          if ((jit_value )(- block_size) >= -128L) {
#line 4472
            if ((jit_value )(- block_size) <= 127L) {
#line 4472
              while (1) {
#line 4472
                tmp___107 = jit->ip;
#line 4472
                (jit->ip) ++;
#line 4472
                *tmp___107 = (unsigned char )(((1 << 6) | (((tinf->scrapreg & 0x7) & 0x07) << 3)) | 4);
#line 4472
                break;
              }
#line 4472
              while (1) {
#line 4472
                tmp___108 = jit->ip;
#line 4472
                (jit->ip) ++;
#line 4472
                *tmp___108 = (unsigned char )((long )((((tinf->counterreg & 0x7) & 0x7) & 0x07) << 3) | (((srcreg & 7L) & 7L) & 7L));
#line 4472
                break;
              }
#line 4472
              while (1) {
#line 4472
                *(jit->ip) = (unsigned char )(- block_size & 0xff);
#line 4472
                (jit->ip) ++;
#line 4472
                break;
              }
            } else {
#line 4472
              goto _L___4;
            }
          } else {
            _L___4: /* CIL Label */ 
#line 4472
            while (1) {
#line 4472
              tmp___109 = jit->ip;
#line 4472
              (jit->ip) ++;
#line 4472
              *tmp___109 = (unsigned char )(((2 << 6) | (((tinf->scrapreg & 0x7) & 0x07) << 3)) | 4);
#line 4472
              break;
            }
#line 4472
            while (1) {
#line 4472
              tmp___110 = jit->ip;
#line 4472
              (jit->ip) ++;
#line 4472
              *tmp___110 = (unsigned char )((long )((((tinf->counterreg & 0x7) & 0x7) & 0x07) << 3) | (((srcreg & 7L) & 7L) & 7L));
#line 4472
              break;
            }
#line 4472
            while (1) {
#line 4472
              imb___8.val = - block_size;
#line 4472
              tmp___111 = jit->ip;
#line 4472
              (jit->ip) ++;
#line 4472
              *tmp___111 = imb___8.b[0];
#line 4472
              tmp___112 = jit->ip;
#line 4472
              (jit->ip) ++;
#line 4472
              *tmp___112 = imb___8.b[1];
#line 4472
              tmp___113 = jit->ip;
#line 4472
              (jit->ip) ++;
#line 4472
              *tmp___113 = imb___8.b[2];
#line 4472
              tmp___114 = jit->ip;
#line 4472
              (jit->ip) ++;
#line 4472
              *tmp___114 = imb___8.b[3];
#line 4472
              break;
            }
          }
#line 4472
          break;
        }
#line 4472
        break;
      }
#line 4472
      break;
    }
  } else {
#line 4473
    while (1) {
#line 4473
      if (block_size == 4) {
#line 4473
        while (1) {
#line 4473
          while (1) {
#line 4473
            if (tinf->scrapreg > 7) {
#line 4473
              tmp___115 = 4;
            } else {
#line 4473
              tmp___115 = 0;
            }
#line 4473
            if (tinf->counterreg > 7) {
#line 4473
              tmp___116 = 2;
            } else {
#line 4473
              tmp___116 = 0;
            }
#line 4473
            if (srcreg > 7L) {
#line 4473
              tmp___117 = 1;
            } else {
#line 4473
              tmp___117 = 0;
            }
#line 4473
            _amd64_rex_bits___4 = (unsigned char )(((8 | tmp___115) | tmp___116) | tmp___117);
#line 4473
            if ((int )_amd64_rex_bits___4 != 0) {
#line 4473
              tmp___118 = jit->ip;
#line 4473
              (jit->ip) ++;
#line 4473
              *tmp___118 = (unsigned char )(0x40 | (int )_amd64_rex_bits___4);
            }
#line 4473
            break;
          }
#line 4473
          tmp___119 = jit->ip;
#line 4473
          (jit->ip) ++;
#line 4473
          *tmp___119 = (unsigned char)99;
#line 4473
          while (1) {
#line 4473
            if ((srcreg & 7L) == -1L) {
#line 4473
              while (1) {
#line 4473
                tmp___120 = jit->ip;
#line 4473
                (jit->ip) ++;
#line 4473
                *tmp___120 = (unsigned char )((((tinf->scrapreg & 0x7) & 0x07) << 3) | 4);
#line 4473
                break;
              }
#line 4473
              while (1) {
#line 4473
                tmp___121 = jit->ip;
#line 4473
                (jit->ip) ++;
#line 4473
                *tmp___121 = (unsigned char )((((tinf->counterreg & 0x7) & 0x07) << 3) | 5);
#line 4473
                break;
              }
#line 4473
              while (1) {
#line 4473
                imb___9.val = - block_size;
#line 4473
                tmp___122 = jit->ip;
#line 4473
                (jit->ip) ++;
#line 4473
                *tmp___122 = imb___9.b[0];
#line 4473
                tmp___123 = jit->ip;
#line 4473
                (jit->ip) ++;
#line 4473
                *tmp___123 = imb___9.b[1];
#line 4473
                tmp___124 = jit->ip;
#line 4473
                (jit->ip) ++;
#line 4473
                *tmp___124 = imb___9.b[2];
#line 4473
                tmp___125 = jit->ip;
#line 4473
                (jit->ip) ++;
#line 4473
                *tmp___125 = imb___9.b[3];
#line 4473
                break;
              }
            } else
#line 4473
            if (- block_size == 0) {
#line 4473
              if ((srcreg & 7L) != 5L) {
#line 4473
                while (1) {
#line 4473
                  tmp___126 = jit->ip;
#line 4473
                  (jit->ip) ++;
#line 4473
                  *tmp___126 = (unsigned char )((((tinf->scrapreg & 0x7) & 0x07) << 3) | 4);
#line 4473
                  break;
                }
#line 4473
                while (1) {
#line 4473
                  tmp___127 = jit->ip;
#line 4473
                  (jit->ip) ++;
#line 4473
                  *tmp___127 = (unsigned char )((long )((((tinf->counterreg & 0x7) & 0x7) & 0x07) << 3) | (((srcreg & 7L) & 7L) & 7L));
#line 4473
                  break;
                }
              } else {
#line 4473
                goto _L___7;
              }
            } else
            _L___7: /* CIL Label */ 
#line 4473
            if ((jit_value )(- block_size) >= -128L) {
#line 4473
              if ((jit_value )(- block_size) <= 127L) {
#line 4473
                while (1) {
#line 4473
                  tmp___128 = jit->ip;
#line 4473
                  (jit->ip) ++;
#line 4473
                  *tmp___128 = (unsigned char )(((1 << 6) | (((tinf->scrapreg & 0x7) & 0x07) << 3)) | 4);
#line 4473
                  break;
                }
#line 4473
                while (1) {
#line 4473
                  tmp___129 = jit->ip;
#line 4473
                  (jit->ip) ++;
#line 4473
                  *tmp___129 = (unsigned char )((long )((((tinf->counterreg & 0x7) & 0x7) & 0x07) << 3) | (((srcreg & 7L) & 7L) & 7L));
#line 4473
                  break;
                }
#line 4473
                while (1) {
#line 4473
                  *(jit->ip) = (unsigned char )(- block_size & 0xff);
#line 4473
                  (jit->ip) ++;
#line 4473
                  break;
                }
              } else {
#line 4473
                goto _L___6;
              }
            } else {
              _L___6: /* CIL Label */ 
#line 4473
              while (1) {
#line 4473
                tmp___130 = jit->ip;
#line 4473
                (jit->ip) ++;
#line 4473
                *tmp___130 = (unsigned char )(((2 << 6) | (((tinf->scrapreg & 0x7) & 0x07) << 3)) | 4);
#line 4473
                break;
              }
#line 4473
              while (1) {
#line 4473
                tmp___131 = jit->ip;
#line 4473
                (jit->ip) ++;
#line 4473
                *tmp___131 = (unsigned char )((long )((((tinf->counterreg & 0x7) & 0x7) & 0x07) << 3) | (((srcreg & 7L) & 7L) & 7L));
#line 4473
                break;
              }
#line 4473
              while (1) {
#line 4473
                imb___10.val = - block_size;
#line 4473
                tmp___132 = jit->ip;
#line 4473
                (jit->ip) ++;
#line 4473
                *tmp___132 = imb___10.b[0];
#line 4473
                tmp___133 = jit->ip;
#line 4473
                (jit->ip) ++;
#line 4473
                *tmp___133 = imb___10.b[1];
#line 4473
                tmp___134 = jit->ip;
#line 4473
                (jit->ip) ++;
#line 4473
                *tmp___134 = imb___10.b[2];
#line 4473
                tmp___135 = jit->ip;
#line 4473
                (jit->ip) ++;
#line 4473
                *tmp___135 = imb___10.b[3];
#line 4473
                break;
              }
            }
#line 4473
            break;
          }
#line 4473
          break;
        }
#line 4473
        break;
      }
#line 4473
      while (1) {
#line 4473
        if (tinf->scrapreg > 7) {
#line 4473
          tmp___136 = 4;
        } else {
#line 4473
          tmp___136 = 0;
        }
#line 4473
        if (tinf->counterreg > 7) {
#line 4473
          tmp___137 = 2;
        } else {
#line 4473
          tmp___137 = 0;
        }
#line 4473
        if (srcreg > 7L) {
#line 4473
          tmp___138 = 1;
        } else {
#line 4473
          tmp___138 = 0;
        }
#line 4473
        _amd64_rex_bits___5 = (unsigned char )(((8 | tmp___136) | tmp___137) | tmp___138);
#line 4473
        if ((int )_amd64_rex_bits___5 != 0) {
#line 4473
          tmp___139 = jit->ip;
#line 4473
          (jit->ip) ++;
#line 4473
          *tmp___139 = (unsigned char )(0x40 | (int )_amd64_rex_bits___5);
        }
#line 4473
        break;
      }
#line 4473
      tmp___140 = jit->ip;
#line 4473
      (jit->ip) ++;
#line 4473
      *tmp___140 = (unsigned char)15;
#line 4473
      switch (block_size) {
      case 1: 
#line 4473
      tmp___141 = jit->ip;
#line 4473
      (jit->ip) ++;
#line 4473
      *tmp___141 = (unsigned char)190;
#line 4473
      break;
      case 2: 
#line 4473
      tmp___142 = jit->ip;
#line 4473
      (jit->ip) ++;
#line 4473
      *tmp___142 = (unsigned char)191;
#line 4473
      break;
      default: 
#line 4473
      tmp___143 = __builtin_expect(1L, 0L);
#line 4473
      if (tmp___143) {
#line 4473
        __assert_rtn((char const   *)"emit_transfer_init", (char const   *)"tmp/src.c",
                     3520, (char const   *)"0");
      }
      }
#line 4473
      while (1) {
#line 4473
        if ((srcreg & 7L) == -1L) {
#line 4473
          while (1) {
#line 4473
            tmp___144 = jit->ip;
#line 4473
            (jit->ip) ++;
#line 4473
            *tmp___144 = (unsigned char )((((tinf->scrapreg & 0x7) & 0x07) << 3) | 4);
#line 4473
            break;
          }
#line 4473
          while (1) {
#line 4473
            tmp___145 = jit->ip;
#line 4473
            (jit->ip) ++;
#line 4473
            *tmp___145 = (unsigned char )((((tinf->counterreg & 0x7) & 0x07) << 3) | 5);
#line 4473
            break;
          }
#line 4473
          while (1) {
#line 4473
            imb___11.val = - block_size;
#line 4473
            tmp___146 = jit->ip;
#line 4473
            (jit->ip) ++;
#line 4473
            *tmp___146 = imb___11.b[0];
#line 4473
            tmp___147 = jit->ip;
#line 4473
            (jit->ip) ++;
#line 4473
            *tmp___147 = imb___11.b[1];
#line 4473
            tmp___148 = jit->ip;
#line 4473
            (jit->ip) ++;
#line 4473
            *tmp___148 = imb___11.b[2];
#line 4473
            tmp___149 = jit->ip;
#line 4473
            (jit->ip) ++;
#line 4473
            *tmp___149 = imb___11.b[3];
#line 4473
            break;
          }
        } else
#line 4473
        if (- block_size == 0) {
#line 4473
          if ((srcreg & 7L) != 5L) {
#line 4473
            while (1) {
#line 4473
              tmp___150 = jit->ip;
#line 4473
              (jit->ip) ++;
#line 4473
              *tmp___150 = (unsigned char )((((tinf->scrapreg & 0x7) & 0x07) << 3) | 4);
#line 4473
              break;
            }
#line 4473
            while (1) {
#line 4473
              tmp___151 = jit->ip;
#line 4473
              (jit->ip) ++;
#line 4473
              *tmp___151 = (unsigned char )((long )((((tinf->counterreg & 0x7) & 0x7) & 0x07) << 3) | (((srcreg & 7L) & 7L) & 7L));
#line 4473
              break;
            }
          } else {
#line 4473
            goto _L___9;
          }
        } else
        _L___9: /* CIL Label */ 
#line 4473
        if ((jit_value )(- block_size) >= -128L) {
#line 4473
          if ((jit_value )(- block_size) <= 127L) {
#line 4473
            while (1) {
#line 4473
              tmp___152 = jit->ip;
#line 4473
              (jit->ip) ++;
#line 4473
              *tmp___152 = (unsigned char )(((1 << 6) | (((tinf->scrapreg & 0x7) & 0x07) << 3)) | 4);
#line 4473
              break;
            }
#line 4473
            while (1) {
#line 4473
              tmp___153 = jit->ip;
#line 4473
              (jit->ip) ++;
#line 4473
              *tmp___153 = (unsigned char )((long )((((tinf->counterreg & 0x7) & 0x7) & 0x07) << 3) | (((srcreg & 7L) & 7L) & 7L));
#line 4473
              break;
            }
#line 4473
            while (1) {
#line 4473
              *(jit->ip) = (unsigned char )(- block_size & 0xff);
#line 4473
              (jit->ip) ++;
#line 4473
              break;
            }
          } else {
#line 4473
            goto _L___8;
          }
        } else {
          _L___8: /* CIL Label */ 
#line 4473
          while (1) {
#line 4473
            tmp___154 = jit->ip;
#line 4473
            (jit->ip) ++;
#line 4473
            *tmp___154 = (unsigned char )(((2 << 6) | (((tinf->scrapreg & 0x7) & 0x07) << 3)) | 4);
#line 4473
            break;
          }
#line 4473
          while (1) {
#line 4473
            tmp___155 = jit->ip;
#line 4473
            (jit->ip) ++;
#line 4473
            *tmp___155 = (unsigned char )((long )((((tinf->counterreg & 0x7) & 0x7) & 0x07) << 3) | (((srcreg & 7L) & 7L) & 7L));
#line 4473
            break;
          }
#line 4473
          while (1) {
#line 4473
            imb___12.val = - block_size;
#line 4473
            tmp___156 = jit->ip;
#line 4473
            (jit->ip) ++;
#line 4473
            *tmp___156 = imb___12.b[0];
#line 4473
            tmp___157 = jit->ip;
#line 4473
            (jit->ip) ++;
#line 4473
            *tmp___157 = imb___12.b[1];
#line 4473
            tmp___158 = jit->ip;
#line 4473
            (jit->ip) ++;
#line 4473
            *tmp___158 = imb___12.b[2];
#line 4473
            tmp___159 = jit->ip;
#line 4473
            (jit->ip) ++;
#line 4473
            *tmp___159 = imb___12.b[3];
#line 4473
            break;
          }
        }
#line 4473
        break;
      }
#line 4473
      break;
    }
  }
#line 4474
  return;
}
}
/* END FUNCTION-DEF emit_transfer_init LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF sync_reg LOC=UNKNOWN */
static void sync_reg(jit_op *op , jit_hw_reg *hreg , jit_value virt_reg ) 
{ 


  {
#line 5909
  insert_reg_op(592, op, virt_reg, (jit_value )hreg->id);
#line 5910
  return;
}
}
/* END FUNCTION-DEF sync_reg LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF emit_push_caller_saved_regs LOC=UNKNOWN */
static int emit_push_caller_saved_regs(struct jit *jit , jit_op *op ) 
{ 
  int gp_count ;
  int fp_count ;
  struct jit_reg_allocator *al ;
  jit_hw_reg *active_regs[32] ;
  int stack_offset ;
  int stack_space ;
  int tmp ;
  int tmp___0 ;
  unsigned char _amd64_rex_bits ;
  unsigned char *tmp___1 ;
  unsigned char *tmp___2 ;
  unsigned char *tmp___3 ;
  unsigned char _amd64_rex_bits___0 ;
  unsigned char *tmp___4 ;
  unsigned char *tmp___5 ;
  x86_imm_buf imb ;
  unsigned char *tmp___6 ;
  unsigned char *tmp___7 ;
  unsigned char *tmp___8 ;
  unsigned char *tmp___9 ;
  unsigned char _amd64_rex_bits___1 ;
  unsigned char *tmp___10 ;
  unsigned char *tmp___11 ;
  unsigned char *tmp___12 ;
  x86_imm_buf imb___0 ;
  unsigned char *tmp___13 ;
  unsigned char *tmp___14 ;
  unsigned char *tmp___15 ;
  unsigned char *tmp___16 ;
  int i ;
  int tmp___17 ;

  {
#line 3968
  al = jit->reg_al;
#line 3970
  while (op) {
#line 3971
    if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 232U) {
#line 3971
      break;
    }
#line 3972
    op = op->next;
  }
#line 3974
  stack_offset = 0;
#line 3975
  tmp = list_caller_saved_regs(jit, op, al->gp_regs, al->gp_reg_cnt, 0, al->ret_reg,
                               active_regs, & gp_count);
#line 3975
  stack_space = tmp;
#line 3976
  tmp___0 = list_caller_saved_regs(jit, op, al->fp_regs, al->fp_reg_cnt, 1, al->fpret_reg,
                                   active_regs + gp_count, & fp_count);
#line 3976
  stack_space += tmp___0;
#line 3977
  if (stack_space) {
#line 3977
    while (1) {
#line 3977
      if ((jit_value )stack_space >= -128L) {
#line 3977
        if ((jit_value )stack_space <= 127L) {
#line 3977
          while (1) {
#line 3977
            _amd64_rex_bits = (unsigned char)8;
#line 3977
            if ((int )_amd64_rex_bits != 0) {
#line 3977
              tmp___1 = jit->ip;
#line 3977
              (jit->ip) ++;
#line 3977
              *tmp___1 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
            }
#line 3977
            break;
          }
#line 3977
          tmp___2 = jit->ip;
#line 3977
          (jit->ip) ++;
#line 3977
          *tmp___2 = (unsigned char)131;
#line 3977
          while (1) {
#line 3977
            while (1) {
#line 3977
              tmp___3 = jit->ip;
#line 3977
              (jit->ip) ++;
#line 3977
              *tmp___3 = (unsigned char )(((3 << 6) | (5 << 3)) | 4);
#line 3977
              break;
            }
#line 3977
            break;
          }
#line 3977
          while (1) {
#line 3977
            *(jit->ip) = (unsigned char )(stack_space & 0xff);
#line 3977
            (jit->ip) ++;
#line 3977
            break;
          }
        } else {
#line 3977
          goto _L;
        }
      } else {
        _L: /* CIL Label */ 
#line 3977
        while (1) {
#line 3977
          _amd64_rex_bits___1 = (unsigned char)8;
#line 3977
          if ((int )_amd64_rex_bits___1 != 0) {
#line 3977
            tmp___10 = jit->ip;
#line 3977
            (jit->ip) ++;
#line 3977
            *tmp___10 = (unsigned char )(0x40 | (int )_amd64_rex_bits___1);
          }
#line 3977
          break;
        }
#line 3977
        tmp___11 = jit->ip;
#line 3977
        (jit->ip) ++;
#line 3977
        *tmp___11 = (unsigned char)129;
#line 3977
        while (1) {
#line 3977
          while (1) {
#line 3977
            tmp___12 = jit->ip;
#line 3977
            (jit->ip) ++;
#line 3977
            *tmp___12 = (unsigned char )(((3 << 6) | (5 << 3)) | 4);
#line 3977
            break;
          }
#line 3977
          break;
        }
#line 3977
        while (1) {
#line 3977
          imb___0.val = stack_space;
#line 3977
          tmp___13 = jit->ip;
#line 3977
          (jit->ip) ++;
#line 3977
          *tmp___13 = imb___0.b[0];
#line 3977
          tmp___14 = jit->ip;
#line 3977
          (jit->ip) ++;
#line 3977
          *tmp___14 = imb___0.b[1];
#line 3977
          tmp___15 = jit->ip;
#line 3977
          (jit->ip) ++;
#line 3977
          *tmp___15 = imb___0.b[2];
#line 3977
          tmp___16 = jit->ip;
#line 3977
          (jit->ip) ++;
#line 3977
          *tmp___16 = imb___0.b[3];
#line 3977
          break;
        }
      }
#line 3977
      break;
    }
  }
#line 3978
  i = 0;
#line 3978
  while (i < gp_count + fp_count) {
#line 3979
    tmp___17 = emit_push_reg(jit, active_regs[i], stack_offset);
#line 3979
    stack_offset += tmp___17;
#line 3978
    i ++;
  }
#line 3980
  return (stack_space / (int )sizeof(void *));
}
}
/* END FUNCTION-DEF emit_push_caller_saved_regs LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_prepare_spills_on_jmpr_targets LOC=UNKNOWN */
__inline static void jit_prepare_spills_on_jmpr_targets(struct jit *jit ) 
{ 
  jit_op *op ;
  jit_op *tmp ;
  jit_op *newop ;
  struct jit_op *tmp___0 ;

  {
#line 6577
  tmp = jit_op_first(jit->ops);
#line 6577
  op = tmp;
#line 6577
  while ((unsigned long )op != (unsigned long )((void *)0)) {
#line 6578
    if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 280U) {
#line 6579
      tmp___0 = jit_op_new((unsigned short)818, (unsigned char)0, (jit_value )0, (jit_value )0,
                           (jit_value )0, (unsigned char)0);
#line 6579
      newop = tmp___0;
#line 6580
      jit_op_prepend(op->jmp_addr, newop);
    } else
#line 6578
    if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 856U) {
#line 6579
      tmp___0 = jit_op_new((unsigned short)818, (unsigned char)0, (jit_value )0, (jit_value )0,
                           (jit_value )0, (unsigned char)0);
#line 6579
      newop = tmp___0;
#line 6580
      jit_op_prepend(op->jmp_addr, newop);
    }
#line 6577
    op = op->next;
  }
#line 6582
  return;
}
}
/* END FUNCTION-DEF jit_prepare_spills_on_jmpr_targets LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF emit_msg_op LOC=UNKNOWN */
static void emit_msg_op(struct jit *jit , jit_op *op ) 
{ 
  int fmt_reg ;
  int val_reg ;
  int fun_reg ;
  unsigned char _amd64_rex_bits ;
  int tmp ;
  int tmp___0 ;
  unsigned char *tmp___1 ;
  unsigned char *tmp___2 ;
  unsigned char *tmp___3 ;
  unsigned char *tmp___4 ;
  long tmp___5 ;
  unsigned char *tmp___6 ;
  unsigned char _amd64_rex_bits___0 ;
  int tmp___7 ;
  unsigned char *tmp___8 ;
  unsigned char *tmp___9 ;
  amd64_imm_buf imb ;
  unsigned char *tmp___10 ;
  unsigned char *tmp___11 ;
  unsigned char *tmp___12 ;
  unsigned char *tmp___13 ;
  unsigned char *tmp___14 ;
  unsigned char *tmp___15 ;
  unsigned char *tmp___16 ;
  unsigned char *tmp___17 ;
  x86_imm_buf imb___0 ;
  unsigned char *tmp___18 ;
  unsigned char *tmp___19 ;
  unsigned char *tmp___20 ;
  unsigned char *tmp___21 ;
  unsigned char _amd64_rex_bits___1 ;
  unsigned char *tmp___22 ;
  unsigned char *tmp___23 ;
  unsigned char *tmp___24 ;
  int _amd64_width_temp ;
  unsigned char _amd64_rex_bits___2 ;
  int tmp___25 ;
  int tmp___26 ;
  int tmp___27 ;
  int tmp___28 ;
  unsigned char *tmp___29 ;
  int tmp___30 ;
  unsigned char *tmp___31 ;
  amd64_imm_buf imb___1 ;
  unsigned char *tmp___32 ;
  unsigned char *tmp___33 ;
  unsigned char *tmp___34 ;
  unsigned char *tmp___35 ;
  unsigned char *tmp___36 ;
  unsigned char *tmp___37 ;
  unsigned char *tmp___38 ;
  unsigned char *tmp___39 ;
  x86_imm_buf imb___2 ;
  unsigned char *tmp___40 ;
  unsigned char *tmp___41 ;
  unsigned char *tmp___42 ;
  unsigned char *tmp___43 ;
  int tmp___44 ;
  unsigned char _amd64_rex_bits___3 ;
  int tmp___45 ;
  unsigned char *tmp___46 ;
  unsigned char *tmp___47 ;
  unsigned char *tmp___48 ;

  {
#line 3775
  emit_save_all_regs(jit, op);
#line 3776
  fmt_reg = 7;
#line 3777
  val_reg = 6;
#line 3778
  fun_reg = 2;
#line 3779
  if (! ((int )op->code & 0x02)) {
#line 3779
    while (1) {
#line 3779
      while (1) {
#line 3779
        if (val_reg > 7) {
#line 3779
          tmp = 4;
        } else {
#line 3779
          tmp = 0;
        }
#line 3779
        if (op->r_arg[1] > 7L) {
#line 3779
          tmp___0 = 1;
        } else {
#line 3779
          tmp___0 = 0;
        }
#line 3779
        _amd64_rex_bits = (unsigned char )((8 | tmp) | tmp___0);
#line 3779
        if ((int )_amd64_rex_bits != 0) {
#line 3779
          tmp___1 = jit->ip;
#line 3779
          (jit->ip) ++;
#line 3779
          *tmp___1 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
        }
#line 3779
        break;
      }
#line 3779
      while (1) {
#line 3779
        switch (4) {
        case 1: 
#line 3779
        tmp___2 = jit->ip;
#line 3779
        (jit->ip) ++;
#line 3779
        *tmp___2 = (unsigned char)138;
#line 3779
        break;
        case 2: 
#line 3779
        tmp___3 = jit->ip;
#line 3779
        (jit->ip) ++;
#line 3779
        *tmp___3 = (unsigned char)102;
        case 4: 
#line 3779
        tmp___4 = jit->ip;
#line 3779
        (jit->ip) ++;
#line 3779
        *tmp___4 = (unsigned char)139;
#line 3779
        break;
        default: 
#line 3779
        tmp___5 = __builtin_expect(1L, 0L);
#line 3779
        if (tmp___5) {
#line 3779
          __assert_rtn((char const   *)"emit_msg_op", (char const   *)"tmp/src.c",
                       2625, (char const   *)"0");
        }
        }
#line 3779
        while (1) {
#line 3779
          while (1) {
#line 3779
            tmp___6 = jit->ip;
#line 3779
            (jit->ip) ++;
#line 3779
            *tmp___6 = (unsigned char )((long )((3 << 6) | (((val_reg & 0x7) & 0x07) << 3)) | ((op->r_arg[1] & 7L) & 7L));
#line 3779
            break;
          }
#line 3779
          break;
        }
#line 3779
        break;
      }
#line 3779
      break;
    }
  }
#line 3780
  while (1) {
#line 3780
    while (1) {
#line 3780
      if (fmt_reg > 7) {
#line 3780
        tmp___7 = 1;
      } else {
#line 3780
        tmp___7 = 0;
      }
#line 3780
      _amd64_rex_bits___0 = (unsigned char )(8 | tmp___7);
#line 3780
      if ((int )_amd64_rex_bits___0 != 0) {
#line 3780
        tmp___8 = jit->ip;
#line 3780
        (jit->ip) ++;
#line 3780
        *tmp___8 = (unsigned char )(0x40 | (int )_amd64_rex_bits___0);
      }
#line 3780
      break;
    }
#line 3780
    tmp___9 = jit->ip;
#line 3780
    (jit->ip) ++;
#line 3780
    *tmp___9 = (unsigned char )(184 + (fmt_reg & 0x7));
#line 3780
    while (1) {
#line 3780
      imb.val = (size_t )op->r_arg[0];
#line 3780
      tmp___10 = jit->ip;
#line 3780
      (jit->ip) ++;
#line 3780
      *tmp___10 = imb.b[0];
#line 3780
      tmp___11 = jit->ip;
#line 3780
      (jit->ip) ++;
#line 3780
      *tmp___11 = imb.b[1];
#line 3780
      tmp___12 = jit->ip;
#line 3780
      (jit->ip) ++;
#line 3780
      *tmp___12 = imb.b[2];
#line 3780
      tmp___13 = jit->ip;
#line 3780
      (jit->ip) ++;
#line 3780
      *tmp___13 = imb.b[3];
#line 3780
      tmp___14 = jit->ip;
#line 3780
      (jit->ip) ++;
#line 3780
      *tmp___14 = imb.b[4];
#line 3780
      tmp___15 = jit->ip;
#line 3780
      (jit->ip) ++;
#line 3780
      *tmp___15 = imb.b[5];
#line 3780
      tmp___16 = jit->ip;
#line 3780
      (jit->ip) ++;
#line 3780
      *tmp___16 = imb.b[6];
#line 3780
      tmp___17 = jit->ip;
#line 3780
      (jit->ip) ++;
#line 3780
      *tmp___17 = imb.b[7];
#line 3780
      break;
    }
#line 3780
    break;
  }
#line 3781
  while (1) {
#line 3781
    while (1) {
#line 3781
      _amd64_rex_bits___1 = (unsigned char)8;
#line 3781
      if ((int )_amd64_rex_bits___1 != 0) {
#line 3781
        tmp___22 = jit->ip;
#line 3781
        (jit->ip) ++;
#line 3781
        *tmp___22 = (unsigned char )(0x40 | (int )_amd64_rex_bits___1);
      }
#line 3781
      break;
    }
#line 3781
    tmp___23 = jit->ip;
#line 3781
    (jit->ip) ++;
#line 3781
    *tmp___23 = (unsigned char )((6 << 3) + 3);
#line 3781
    while (1) {
#line 3781
      while (1) {
#line 3781
        tmp___24 = jit->ip;
#line 3781
        (jit->ip) ++;
#line 3781
        *tmp___24 = (unsigned char )(3 << 6);
#line 3781
        break;
      }
#line 3781
      break;
    }
#line 3781
    break;
  }
#line 3782
  while (1) {
#line 3782
    _amd64_width_temp = (size_t )(& printf) == (size_t )((int )((size_t )(& printf)));
#line 3782
    while (1) {
#line 3782
      while (1) {
#line 3782
        if (_amd64_width_temp) {
#line 3782
          tmp___27 = 4;
        } else {
#line 3782
          tmp___27 = 8;
        }
#line 3782
        if (tmp___27 > 4) {
#line 3782
          tmp___26 = 8;
        } else {
#line 3782
          tmp___26 = 0;
        }
#line 3782
        if (fun_reg > 7) {
#line 3782
          tmp___28 = 1;
        } else {
#line 3782
          tmp___28 = 0;
        }
#line 3782
        _amd64_rex_bits___2 = (unsigned char )(tmp___26 | tmp___28);
#line 3782
        if ((int )_amd64_rex_bits___2 != 0) {
#line 3782
          tmp___29 = jit->ip;
#line 3782
          (jit->ip) ++;
#line 3782
          *tmp___29 = (unsigned char )(0x40 | (int )_amd64_rex_bits___2);
        } else {
#line 3782
          if (_amd64_width_temp) {
#line 3782
            tmp___30 = 4;
          } else {
#line 3782
            tmp___30 = 8;
          }
#line 3782
          if (tmp___30 == 1) {
#line 3782
            tmp___29 = jit->ip;
#line 3782
            (jit->ip) ++;
#line 3782
            *tmp___29 = (unsigned char )(0x40 | (int )_amd64_rex_bits___2);
          }
        }
#line 3782
        break;
      }
#line 3782
      tmp___31 = jit->ip;
#line 3782
      (jit->ip) ++;
#line 3782
      *tmp___31 = (unsigned char )(184 + (fun_reg & 0x7));
#line 3782
      if (_amd64_width_temp) {
#line 3782
        tmp___44 = 4;
      } else {
#line 3782
        tmp___44 = 8;
      }
#line 3782
      if (tmp___44 == 8) {
#line 3782
        while (1) {
#line 3782
          imb___1.val = (size_t )(& printf);
#line 3782
          tmp___32 = jit->ip;
#line 3782
          (jit->ip) ++;
#line 3782
          *tmp___32 = imb___1.b[0];
#line 3782
          tmp___33 = jit->ip;
#line 3782
          (jit->ip) ++;
#line 3782
          *tmp___33 = imb___1.b[1];
#line 3782
          tmp___34 = jit->ip;
#line 3782
          (jit->ip) ++;
#line 3782
          *tmp___34 = imb___1.b[2];
#line 3782
          tmp___35 = jit->ip;
#line 3782
          (jit->ip) ++;
#line 3782
          *tmp___35 = imb___1.b[3];
#line 3782
          tmp___36 = jit->ip;
#line 3782
          (jit->ip) ++;
#line 3782
          *tmp___36 = imb___1.b[4];
#line 3782
          tmp___37 = jit->ip;
#line 3782
          (jit->ip) ++;
#line 3782
          *tmp___37 = imb___1.b[5];
#line 3782
          tmp___38 = jit->ip;
#line 3782
          (jit->ip) ++;
#line 3782
          *tmp___38 = imb___1.b[6];
#line 3782
          tmp___39 = jit->ip;
#line 3782
          (jit->ip) ++;
#line 3782
          *tmp___39 = imb___1.b[7];
#line 3782
          break;
        }
      } else {
#line 3782
        while (1) {
#line 3782
          imb___2.val = (int )((size_t )(& printf));
#line 3782
          tmp___40 = jit->ip;
#line 3782
          (jit->ip) ++;
#line 3782
          *tmp___40 = imb___2.b[0];
#line 3782
          tmp___41 = jit->ip;
#line 3782
          (jit->ip) ++;
#line 3782
          *tmp___41 = imb___2.b[1];
#line 3782
          tmp___42 = jit->ip;
#line 3782
          (jit->ip) ++;
#line 3782
          *tmp___42 = imb___2.b[2];
#line 3782
          tmp___43 = jit->ip;
#line 3782
          (jit->ip) ++;
#line 3782
          *tmp___43 = imb___2.b[3];
#line 3782
          break;
        }
      }
#line 3782
      break;
    }
#line 3782
    break;
  }
#line 3783
  while (1) {
#line 3783
    while (1) {
#line 3783
      if (fun_reg > 7) {
#line 3783
        tmp___45 = 1;
      } else {
#line 3783
        tmp___45 = 0;
      }
#line 3783
      _amd64_rex_bits___3 = (unsigned char )tmp___45;
#line 3783
      if ((int )_amd64_rex_bits___3 != 0) {
#line 3783
        tmp___46 = jit->ip;
#line 3783
        (jit->ip) ++;
#line 3783
        *tmp___46 = (unsigned char )(0x40 | (int )_amd64_rex_bits___3);
      }
#line 3783
      break;
    }
#line 3783
    tmp___47 = jit->ip;
#line 3783
    (jit->ip) ++;
#line 3783
    *tmp___47 = (unsigned char)255;
#line 3783
    while (1) {
#line 3783
      while (1) {
#line 3783
        tmp___48 = jit->ip;
#line 3783
        (jit->ip) ++;
#line 3783
        *tmp___48 = (unsigned char )(((3 << 6) | (2 << 3)) | ((fun_reg & 0x7) & 0x07));
#line 3783
        break;
      }
#line 3783
      break;
    }
#line 3783
    break;
  }
#line 3784
  emit_restore_all_regs(jit, op);
#line 3785
  return;
}
}
/* END FUNCTION-DEF emit_msg_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF print_combined_op LOC=UNKNOWN */
static jit_op *print_combined_op(FILE *f , struct jit *jit , struct jit_op *op , jit_tree *labels ) 
{ 
  jit_opcode opcode ;
  int i ;
  char *tmp ;

  {
#line 5564
  opcode = (jit_opcode )((int )op->code & 0xfff8);
#line 5565
  if ((unsigned int )opcode == 376U) {
#line 5565
    goto _L;
  } else
#line 5565
  if ((unsigned int )opcode == 160U) {
    _L: /* CIL Label */ 
#line 5566
    fprintf((FILE */* __restrict  */)f, (char const   */* __restrict  */)".text\n%s.byte\n",
            jit_disasm_general.indent_template);
#line 5567
    fprintf((FILE */* __restrict  */)f, (char const   */* __restrict  */)".data\n");
#line 5568
    while (1) {
#line 5568
      if (op) {
#line 5568
        if (! ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 376U)) {
#line 5568
          if (! ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 160U)) {
#line 5568
            break;
          }
        }
      } else {
#line 5568
        break;
      }
#line 5569
      if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 376U) {
#line 5569
        fprintf((FILE */* __restrict  */)f, (char const   */* __restrict  */)"%02x ",
                (int )((unsigned char )op->arg[0]));
      }
#line 5570
      if ((unsigned int )((jit_opcode )((int )op->code & 0xfff8)) == 160U) {
#line 5571
        i = 0;
#line 5571
        while ((jit_value )i < op->arg[0]) {
#line 5572
          fprintf((FILE */* __restrict  */)f, (char const   */* __restrict  */)"%02x ",
                  (int )*((unsigned char *)op->addendum + i));
#line 5571
          i ++;
        }
      }
#line 5574
      op = op->next;
    }
#line 5576
    fprintf((FILE */* __restrict  */)f, (char const   */* __restrict  */)"\n");
#line 5577
    if (! op) {
#line 5577
      return ((jit_op *)((void *)0));
    }
#line 5578
    op = op->prev;
#line 5579
    return (op);
  }
#line 5581
  if ((unsigned int )opcode == 192U) {
#line 5582
    fprintf((FILE */* __restrict  */)f, (char const   */* __restrict  */)".comment\n");
#line 5583
    print_op(f, & jit_disasm_general, op, labels, 0x100);
#line 5584
    fprintf((FILE */* __restrict  */)f, (char const   */* __restrict  */)"\n");
#line 5585
    return (op);
  }
#line 5587
  fprintf((FILE */* __restrict  */)f, (char const   */* __restrict  */)".text\n");
#line 5588
  print_op(f, & jit_disasm_general, op, labels, 0x100);
#line 5589
  fprintf((FILE */* __restrict  */)f, (char const   */* __restrict  */)"\n");
#line 5590
  switch ((unsigned int )opcode) {
  case 872U: 
#line 5592
  if (op->next) {
#line 5593
    fprintf((FILE */* __restrict  */)f, (char const   */* __restrict  */)"\n.nl\n");
#line 5594
    fprintf((FILE */* __restrict  */)f, (char const   */* __restrict  */)".addr=%lx\n",
            (unsigned long )(jit->buf + (op->next)->code_offset));
  }
#line 5596
  break;
  case 704U: 
  case 856U: 
#line 5599
  fprintf((FILE */* __restrict  */)f, (char const   */* __restrict  */)".data\n");
#line 5600
  print_op_bytes(f, jit, op);
#line 5601
  break;
  default: 
#line 5603
  if (! op->code_length) {
#line 5603
    break;
  }
#line 5604
  tmp = platform_id();
#line 5604
  fprintf((FILE */* __restrict  */)f, (char const   */* __restrict  */)".%s\n", tmp);
#line 5605
  print_op_bytes(f, jit, op);
  }
#line 5607
  return (op);
}
}
/* END FUNCTION-DEF print_combined_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF main LOC=UNKNOWN */
int main(int argc , char **argv , char **_TIG_IZ_tgVA_formal_envp ) 
{ 


  {
  {
  {
  {
  {
  _TIG_IZ_tgVA_envp = (char **)0;
  goto _TIG_IZ_tgVA_envp__INITINLINE__TIG_IZ_tgVA_envp__INIT;
  }
  _TIG_IZ_tgVA_envp__INITINLINE__TIG_IZ_tgVA_envp__INIT: /* CIL Label */ ;
  }
  {
  {
  _TIG_IZ_tgVA_argv = (char **)0;
  goto _TIG_IZ_tgVA_argv__INITINLINE__TIG_IZ_tgVA_argv__INIT;
  }
  _TIG_IZ_tgVA_argv__INITINLINE__TIG_IZ_tgVA_argv__INIT: /* CIL Label */ ;
  }
  {
  {
  _TIG_IZ_tgVA_argc = 0;
  goto _TIG_IZ_tgVA_argc__INITINLINE__TIG_IZ_tgVA_argc__INIT;
  }
  _TIG_IZ_tgVA_argc__INITINLINE__TIG_IZ_tgVA_argc__INIT: /* CIL Label */ ;
  }
  goto megaInitINLINE_megaInit;
  }
  megaInitINLINE_megaInit: /* CIL Label */ ;
  }
  while (1) {
    __asm__ volatile ("##_ANNOTATION_INITIALREGION_-TIG-IZ-tgVA--0":);
    _TIG_IZ_tgVA_argc = argc;
    _TIG_IZ_tgVA_argv = argv;
    _TIG_IZ_tgVA_envp = _TIG_IZ_tgVA_formal_envp;
    break;
  }
#line 49 "test-jit.c"
  init_tigress();
#line 50
  fac(10);
#line 51
  fib(10);
#line 52
  return (0);
}
}
/* END FUNCTION-DEF main LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF candidate_score LOC=UNKNOWN */
static int candidate_score(jit_op *op , jit_value virtreg , jit_hw_reg *hreg , int *spill ,
                           jit_value *associated_virtreg ) 
{ 
  int score ;
  jit_value x ;
  int hw_associated ;
  jit_hw_reg *tmp ;
  int alive ;
  int tmp___0 ;
  int tmp___1 ;
  int tmp___2 ;
  jit_tree *hint_node ;
  jit_tree *tmp___3 ;
  int is_to_be_used ;
  struct jit_allocator_hint *hint ;
  int used_in_steps ;
  jit_tree *hint_node___0 ;
  jit_tree *tmp___4 ;
  struct jit_allocator_hint *hint___0 ;

  {
#line 3322 "<string>"
  score = 0;
#line 3323
  score -= (int )hreg->priority;
#line 3325
  tmp = rmap_is_associated(op->regmap, hreg->id, (int )hreg->fp, & x);
#line 3325
  hw_associated = (unsigned long )tmp != (unsigned long )((void *)0);
#line 3326
  alive = 0;
#line 3327
  if (hw_associated) {
#line 3328
    tmp___0 = jit_set_get(op->live_in, (int )x);
#line 3328
    if (tmp___0) {
#line 3328
      tmp___2 = 1;
    } else {
#line 3328
      tmp___1 = jit_set_get(op->live_out, (int )x);
#line 3328
      if (tmp___1) {
#line 3328
        tmp___2 = 1;
      } else {
#line 3328
        tmp___2 = 0;
      }
    }
#line 3328
    alive = tmp___2;
  }
#line 3330
  if (! alive) {
#line 3330
    score += 10000;
  }
#line 3331
  *spill = 0;
#line 3332
  if (hw_associated) {
#line 3333
    score -= 100000;
#line 3334
    *spill = 1;
#line 3335
    *associated_virtreg = x;
#line 3336
    tmp___3 = jit_tree_search(op->allocator_hints, x);
#line 3336
    hint_node = tmp___3;
#line 3337
    is_to_be_used = (unsigned long )hint_node != (unsigned long )((void *)0);
#line 3338
    if (! is_to_be_used) {
#line 3338
      score += 50000;
    } else {
#line 3340
      hint = (struct jit_allocator_hint *)hint_node->value;
#line 3341
      used_in_steps = - (hint->last_pos - op->normalized_pos);
#line 3342
      if (hw_associated) {
#line 3342
        if (used_in_steps == 0) {
#line 3342
          return ((-0x7FFFFFFF-1));
        } else {
#line 3343
          score += used_in_steps * 5;
        }
      } else {
#line 3343
        score += used_in_steps * 5;
      }
    }
  }
#line 3346
  tmp___4 = jit_tree_search(op->allocator_hints, virtreg);
#line 3346
  hint_node___0 = tmp___4;
#line 3347
  if (hint_node___0) {
#line 3348
    hint___0 = (struct jit_allocator_hint *)hint_node___0->value;
#line 3349
    if ((int )hreg->fp == 0) {
#line 3349
      if (hreg->id == 0) {
#line 3350
        score += hint___0->should_be_eax * 5;
      }
    }
#line 3352
    if (hreg->callee_saved) {
#line 3352
      score += (hint___0->should_be_calleesaved - 1) * 15;
    }
  }
#line 3354
  return (score);
}
}
/* END FUNCTION-DEF candidate_score LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_set_get LOC=UNKNOWN */
__inline static int jit_set_get(jit_set *s , int value ) 
{ 
  jit_tree *tmp ;

  {
#line 2282
  tmp = jit_tree_search(s->root, (jit_tree_key )value);
#line 2282
  return ((unsigned long )tmp != (unsigned long )((void *)0));
}
}
/* END FUNCTION-DEF jit_set_get LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_is_label LOC=UNKNOWN */
__inline static int jit_is_label(struct jit *jit , void *ptr ) 
{ 
  jit_label *lab ;

  {
#line 2514
  lab = jit->labels;
#line 2515
  while (1) {
#line 2516
    if ((unsigned long )lab == (unsigned long )((void *)0)) {
#line 2516
      return (0);
    }
#line 2517
    if ((unsigned long )lab == (unsigned long )ptr) {
#line 2517
      return (1);
    }
#line 2518
    lab = lab->next;
  }
}
}
/* END FUNCTION-DEF jit_is_label LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF emit_ld_op LOC=UNKNOWN */
static void emit_ld_op(struct jit *jit , jit_op *op , jit_value a1 , jit_value a2 ) 
{ 
  unsigned char *tmp ;
  unsigned char _amd64_rex_bits ;
  int tmp___0 ;
  int tmp___1 ;
  unsigned char *tmp___2 ;
  unsigned char *tmp___3 ;
  unsigned char *tmp___4 ;
  long tmp___5 ;
  unsigned char *tmp___6 ;
  unsigned char *tmp___7 ;
  x86_imm_buf imb ;
  unsigned char *tmp___8 ;
  unsigned char *tmp___9 ;
  unsigned char *tmp___10 ;
  unsigned char *tmp___11 ;
  unsigned char *tmp___12 ;
  unsigned char _amd64_rex_bits___0 ;
  int tmp___13 ;
  int tmp___14 ;
  int tmp___15 ;
  unsigned char *tmp___16 ;
  unsigned char *tmp___17 ;
  unsigned char *tmp___18 ;
  long tmp___19 ;
  unsigned char *tmp___20 ;
  x86_imm_buf imb___0 ;
  unsigned char *tmp___21 ;
  unsigned char *tmp___22 ;
  unsigned char *tmp___23 ;
  unsigned char *tmp___24 ;
  unsigned char *tmp___25 ;
  unsigned char *tmp___26 ;
  unsigned char *tmp___27 ;
  unsigned char *tmp___28 ;
  unsigned char *tmp___29 ;
  unsigned char *tmp___30 ;
  x86_imm_buf imb___1 ;
  unsigned char *tmp___31 ;
  unsigned char *tmp___32 ;
  unsigned char *tmp___33 ;
  unsigned char *tmp___34 ;
  unsigned char *tmp___35 ;
  unsigned char *tmp___36 ;
  unsigned char *tmp___37 ;
  x86_imm_buf imb___2 ;
  unsigned char *tmp___38 ;
  unsigned char *tmp___39 ;
  unsigned char *tmp___40 ;
  unsigned char *tmp___41 ;
  unsigned char _amd64_rex_bits___1 ;
  int tmp___42 ;
  unsigned char *tmp___43 ;
  unsigned char *tmp___44 ;
  unsigned char *tmp___45 ;
  unsigned char *tmp___46 ;
  x86_imm_buf imb___3 ;
  unsigned char *tmp___47 ;
  unsigned char *tmp___48 ;
  unsigned char *tmp___49 ;
  unsigned char *tmp___50 ;
  unsigned char _amd64_rex_bits___2 ;
  int tmp___51 ;
  unsigned char *tmp___52 ;
  unsigned char *tmp___53 ;
  unsigned char *tmp___54 ;
  unsigned char *tmp___55 ;
  long tmp___56 ;
  unsigned char *tmp___57 ;
  unsigned char *tmp___58 ;
  x86_imm_buf imb___4 ;
  unsigned char *tmp___59 ;
  unsigned char *tmp___60 ;
  unsigned char *tmp___61 ;
  unsigned char *tmp___62 ;
  unsigned char *tmp___63 ;
  unsigned char _amd64_rex_bits___3 ;
  int tmp___64 ;
  int tmp___65 ;
  unsigned char *tmp___66 ;
  unsigned char *tmp___67 ;
  unsigned char *tmp___68 ;
  long tmp___69 ;
  unsigned char *tmp___70 ;
  unsigned char *tmp___71 ;
  x86_imm_buf imb___5 ;
  unsigned char *tmp___72 ;
  unsigned char *tmp___73 ;
  unsigned char *tmp___74 ;
  unsigned char *tmp___75 ;
  unsigned char _amd64_rex_bits___4 ;
  int tmp___76 ;
  unsigned char *tmp___77 ;
  unsigned char *tmp___78 ;
  unsigned char *tmp___79 ;
  unsigned char *tmp___80 ;
  long tmp___81 ;
  unsigned char *tmp___82 ;
  unsigned char *tmp___83 ;
  x86_imm_buf imb___6 ;
  unsigned char *tmp___84 ;
  unsigned char *tmp___85 ;
  unsigned char *tmp___86 ;
  unsigned char *tmp___87 ;
  unsigned char _amd64_rex_bits___5 ;
  int tmp___88 ;
  int tmp___89 ;
  unsigned char *tmp___90 ;
  unsigned char *tmp___91 ;
  unsigned char *tmp___92 ;
  unsigned char *tmp___93 ;
  unsigned char *tmp___94 ;
  unsigned char *tmp___95 ;
  unsigned char *tmp___96 ;
  unsigned char *tmp___97 ;
  x86_imm_buf imb___7 ;
  unsigned char *tmp___98 ;
  unsigned char *tmp___99 ;
  unsigned char *tmp___100 ;
  unsigned char *tmp___101 ;
  unsigned char *tmp___102 ;
  unsigned char *tmp___103 ;
  unsigned char *tmp___104 ;
  x86_imm_buf imb___8 ;
  unsigned char *tmp___105 ;
  unsigned char *tmp___106 ;
  unsigned char *tmp___107 ;
  unsigned char *tmp___108 ;
  unsigned char _amd64_rex_bits___6 ;
  int tmp___109 ;
  int tmp___110 ;
  unsigned char *tmp___111 ;
  unsigned char *tmp___112 ;
  unsigned char *tmp___113 ;
  unsigned char *tmp___114 ;
  long tmp___115 ;
  unsigned char *tmp___116 ;
  unsigned char *tmp___117 ;
  unsigned char *tmp___118 ;
  unsigned char *tmp___119 ;
  unsigned char *tmp___120 ;
  unsigned char *tmp___121 ;
  x86_imm_buf imb___9 ;
  unsigned char *tmp___122 ;
  unsigned char *tmp___123 ;
  unsigned char *tmp___124 ;
  unsigned char *tmp___125 ;
  unsigned char *tmp___126 ;
  unsigned char *tmp___127 ;
  unsigned char *tmp___128 ;
  x86_imm_buf imb___10 ;
  unsigned char *tmp___129 ;
  unsigned char *tmp___130 ;
  unsigned char *tmp___131 ;
  unsigned char *tmp___132 ;
  unsigned char *tmp___133 ;
  unsigned char _amd64_rex_bits___7 ;
  int tmp___134 ;
  int tmp___135 ;
  int tmp___136 ;
  unsigned char *tmp___137 ;
  unsigned char *tmp___138 ;
  unsigned char *tmp___139 ;
  long tmp___140 ;
  unsigned char *tmp___141 ;
  x86_imm_buf imb___11 ;
  unsigned char *tmp___142 ;
  unsigned char *tmp___143 ;
  unsigned char *tmp___144 ;
  unsigned char *tmp___145 ;
  unsigned char *tmp___146 ;
  unsigned char *tmp___147 ;
  unsigned char *tmp___148 ;
  unsigned char *tmp___149 ;
  unsigned char *tmp___150 ;
  unsigned char *tmp___151 ;
  x86_imm_buf imb___12 ;
  unsigned char *tmp___152 ;
  unsigned char *tmp___153 ;
  unsigned char *tmp___154 ;
  unsigned char *tmp___155 ;
  unsigned char *tmp___156 ;
  unsigned char *tmp___157 ;
  unsigned char *tmp___158 ;
  x86_imm_buf imb___13 ;
  unsigned char *tmp___159 ;
  unsigned char *tmp___160 ;
  unsigned char *tmp___161 ;
  unsigned char *tmp___162 ;
  unsigned char _amd64_rex_bits___8 ;
  int tmp___163 ;
  int tmp___164 ;
  unsigned char *tmp___165 ;
  unsigned char *tmp___166 ;
  unsigned char *tmp___167 ;
  unsigned char *tmp___168 ;
  long tmp___169 ;
  unsigned char *tmp___170 ;
  unsigned char *tmp___171 ;
  unsigned char *tmp___172 ;
  unsigned char *tmp___173 ;
  unsigned char *tmp___174 ;
  unsigned char *tmp___175 ;
  x86_imm_buf imb___14 ;
  unsigned char *tmp___176 ;
  unsigned char *tmp___177 ;
  unsigned char *tmp___178 ;
  unsigned char *tmp___179 ;
  unsigned char *tmp___180 ;
  unsigned char *tmp___181 ;
  unsigned char *tmp___182 ;
  x86_imm_buf imb___15 ;
  unsigned char *tmp___183 ;
  unsigned char *tmp___184 ;
  unsigned char *tmp___185 ;
  unsigned char *tmp___186 ;
  long tmp___187 ;

  {
#line 4379
  if ((int )op->arg_size == (int )sizeof(void *)) {
#line 4380
    if ((int )op->code & 0x02) {
#line 4380
      while (1) {
#line 4380
        if ((int )op->arg_size == 2) {
#line 4380
          tmp = jit->ip;
#line 4380
          (jit->ip) ++;
#line 4380
          *tmp = (unsigned char)102;
        }
#line 4380
        while (1) {
#line 4380
          if ((int )op->arg_size > 4) {
#line 4380
            tmp___0 = 8;
          } else {
#line 4380
            tmp___0 = 0;
          }
#line 4380
          if (a1 > 7L) {
#line 4380
            tmp___1 = 4;
          } else {
#line 4380
            tmp___1 = 0;
          }
#line 4380
          _amd64_rex_bits = (unsigned char )(tmp___0 | tmp___1);
#line 4380
          if ((int )_amd64_rex_bits != 0) {
#line 4380
            tmp___2 = jit->ip;
#line 4380
            (jit->ip) ++;
#line 4380
            *tmp___2 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
          } else
#line 4380
          if ((int )op->arg_size == 1) {
#line 4380
            tmp___2 = jit->ip;
#line 4380
            (jit->ip) ++;
#line 4380
            *tmp___2 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
          }
#line 4380
          break;
        }
#line 4380
        switch ((int )op->arg_size) {
        case 1: 
#line 4380
        tmp___3 = jit->ip;
#line 4380
        (jit->ip) ++;
#line 4380
        *tmp___3 = (unsigned char)138;
#line 4380
        break;
        case 8: 
        case 4: 
        case 2: 
#line 4380
        tmp___4 = jit->ip;
#line 4380
        (jit->ip) ++;
#line 4380
        *tmp___4 = (unsigned char)139;
#line 4380
        break;
        default: 
#line 4380
        tmp___5 = __builtin_expect(1L, 0L);
#line 4380
        if (tmp___5) {
#line 4380
          __assert_rtn((char const   *)"emit_ld_op", (char const   *)"tmp/src.c",
                       3409, (char const   *)"0");
        }
        }
#line 4380
        while (1) {
#line 4380
          tmp___6 = jit->ip;
#line 4380
          (jit->ip) ++;
#line 4380
          *tmp___6 = (unsigned char )(((a1 & 7L) << 3) | 4L);
#line 4380
          break;
        }
#line 4380
        while (1) {
#line 4380
          tmp___7 = jit->ip;
#line 4380
          (jit->ip) ++;
#line 4380
          *tmp___7 = (unsigned char )((4 << 3) | 5);
#line 4380
          break;
        }
#line 4380
        while (1) {
#line 4380
          imb.val = (int )a2;
#line 4380
          tmp___8 = jit->ip;
#line 4380
          (jit->ip) ++;
#line 4380
          *tmp___8 = imb.b[0];
#line 4380
          tmp___9 = jit->ip;
#line 4380
          (jit->ip) ++;
#line 4380
          *tmp___9 = imb.b[1];
#line 4380
          tmp___10 = jit->ip;
#line 4380
          (jit->ip) ++;
#line 4380
          *tmp___10 = imb.b[2];
#line 4380
          tmp___11 = jit->ip;
#line 4380
          (jit->ip) ++;
#line 4380
          *tmp___11 = imb.b[3];
#line 4380
          break;
        }
#line 4380
        break;
      }
    } else {
#line 4381
      while (1) {
#line 4381
        if ((int )op->arg_size == 2) {
#line 4381
          tmp___12 = jit->ip;
#line 4381
          (jit->ip) ++;
#line 4381
          *tmp___12 = (unsigned char)102;
        }
#line 4381
        while (1) {
#line 4381
          if ((int )op->arg_size > 4) {
#line 4381
            tmp___13 = 8;
          } else {
#line 4381
            tmp___13 = 0;
          }
#line 4381
          if (a1 > 7L) {
#line 4381
            tmp___14 = 4;
          } else {
#line 4381
            tmp___14 = 0;
          }
#line 4381
          if (a2 > 7L) {
#line 4381
            tmp___15 = 1;
          } else {
#line 4381
            tmp___15 = 0;
          }
#line 4381
          _amd64_rex_bits___0 = (unsigned char )((tmp___13 | tmp___14) | tmp___15);
#line 4381
          if ((int )_amd64_rex_bits___0 != 0) {
#line 4381
            tmp___16 = jit->ip;
#line 4381
            (jit->ip) ++;
#line 4381
            *tmp___16 = (unsigned char )(0x40 | (int )_amd64_rex_bits___0);
          } else
#line 4381
          if ((int )op->arg_size == 1) {
#line 4381
            tmp___16 = jit->ip;
#line 4381
            (jit->ip) ++;
#line 4381
            *tmp___16 = (unsigned char )(0x40 | (int )_amd64_rex_bits___0);
          }
#line 4381
          break;
        }
#line 4381
        switch ((int )op->arg_size) {
        case 1: 
#line 4381
        tmp___17 = jit->ip;
#line 4381
        (jit->ip) ++;
#line 4381
        *tmp___17 = (unsigned char)138;
#line 4381
        break;
        case 8: 
        case 4: 
        case 2: 
#line 4381
        tmp___18 = jit->ip;
#line 4381
        (jit->ip) ++;
#line 4381
        *tmp___18 = (unsigned char)139;
#line 4381
        break;
        default: 
#line 4381
        tmp___19 = __builtin_expect(1L, 0L);
#line 4381
        if (tmp___19) {
#line 4381
          __assert_rtn((char const   *)"emit_ld_op", (char const   *)"tmp/src.c",
                       3410, (char const   *)"0");
        }
        }
#line 4381
        while (1) {
#line 4381
          if (a2 == 16L) {
#line 4381
            while (1) {
#line 4381
              tmp___20 = jit->ip;
#line 4381
              (jit->ip) ++;
#line 4381
              *tmp___20 = (unsigned char )((((a1 & 7L) & 7L) << 3) | 5L);
#line 4381
              break;
            }
#line 4381
            while (1) {
#line 4381
              imb___0.val = 0;
#line 4381
              tmp___21 = jit->ip;
#line 4381
              (jit->ip) ++;
#line 4381
              *tmp___21 = imb___0.b[0];
#line 4381
              tmp___22 = jit->ip;
#line 4381
              (jit->ip) ++;
#line 4381
              *tmp___22 = imb___0.b[1];
#line 4381
              tmp___23 = jit->ip;
#line 4381
              (jit->ip) ++;
#line 4381
              *tmp___23 = imb___0.b[2];
#line 4381
              tmp___24 = jit->ip;
#line 4381
              (jit->ip) ++;
#line 4381
              *tmp___24 = imb___0.b[3];
#line 4381
              break;
            }
          } else {
#line 4381
            while (1) {
#line 4381
              if ((a2 & 7L) == 4L) {
#line 4381
                while (1) {
#line 4381
                  tmp___25 = jit->ip;
#line 4381
                  (jit->ip) ++;
#line 4381
                  *tmp___25 = (unsigned char )((((a1 & 7L) & 7L) << 3) | 4L);
#line 4381
                  break;
                }
#line 4381
                while (1) {
#line 4381
                  tmp___26 = jit->ip;
#line 4381
                  (jit->ip) ++;
#line 4381
                  *tmp___26 = (unsigned char )((4 << 3) | 4);
#line 4381
                  break;
                }
#line 4381
                break;
              }
#line 4381
              if ((a2 & 7L) != 5L) {
#line 4381
                while (1) {
#line 4381
                  tmp___35 = jit->ip;
#line 4381
                  (jit->ip) ++;
#line 4381
                  *tmp___35 = (unsigned char )((((a1 & 7L) & 7L) << 3) | ((a2 & 7L) & 7L));
#line 4381
                  break;
                }
#line 4381
                break;
              }
#line 4381
              while (1) {
#line 4381
                tmp___36 = jit->ip;
#line 4381
                (jit->ip) ++;
#line 4381
                *tmp___36 = (unsigned char )(((long )(1 << 6) | (((a1 & 7L) & 7L) << 3)) | ((a2 & 7L) & 7L));
#line 4381
                break;
              }
#line 4381
              while (1) {
#line 4381
                *(jit->ip) = (unsigned char)0;
#line 4381
                (jit->ip) ++;
#line 4381
                break;
              }
#line 4381
              break;
            }
          }
#line 4381
          break;
        }
#line 4381
        break;
      }
    }
#line 4382
    return;
  }
#line 4384
  switch ((int )op->code) {
  case 370: 
#line 4385
  while (1) {
#line 4385
    if ((int )op->arg_size == 4) {
#line 4385
      while (1) {
#line 4385
        while (1) {
#line 4385
          if (a1 > 7L) {
#line 4385
            tmp___42 = 4;
          } else {
#line 4385
            tmp___42 = 0;
          }
#line 4385
          _amd64_rex_bits___1 = (unsigned char )(8 | tmp___42);
#line 4385
          if ((int )_amd64_rex_bits___1 != 0) {
#line 4385
            tmp___43 = jit->ip;
#line 4385
            (jit->ip) ++;
#line 4385
            *tmp___43 = (unsigned char )(0x40 | (int )_amd64_rex_bits___1);
          }
#line 4385
          break;
        }
#line 4385
        tmp___44 = jit->ip;
#line 4385
        (jit->ip) ++;
#line 4385
        *tmp___44 = (unsigned char)99;
#line 4385
        while (1) {
#line 4385
          tmp___45 = jit->ip;
#line 4385
          (jit->ip) ++;
#line 4385
          *tmp___45 = (unsigned char )(((a1 & 7L) << 3) | 4L);
#line 4385
          break;
        }
#line 4385
        while (1) {
#line 4385
          tmp___46 = jit->ip;
#line 4385
          (jit->ip) ++;
#line 4385
          *tmp___46 = (unsigned char )((4 << 3) | 5);
#line 4385
          break;
        }
#line 4385
        while (1) {
#line 4385
          imb___3.val = (int )a2;
#line 4385
          tmp___47 = jit->ip;
#line 4385
          (jit->ip) ++;
#line 4385
          *tmp___47 = imb___3.b[0];
#line 4385
          tmp___48 = jit->ip;
#line 4385
          (jit->ip) ++;
#line 4385
          *tmp___48 = imb___3.b[1];
#line 4385
          tmp___49 = jit->ip;
#line 4385
          (jit->ip) ++;
#line 4385
          *tmp___49 = imb___3.b[2];
#line 4385
          tmp___50 = jit->ip;
#line 4385
          (jit->ip) ++;
#line 4385
          *tmp___50 = imb___3.b[3];
#line 4385
          break;
        }
#line 4385
        break;
      }
#line 4385
      break;
    }
#line 4385
    while (1) {
#line 4385
      if (a1 > 7L) {
#line 4385
        tmp___51 = 4;
      } else {
#line 4385
        tmp___51 = 0;
      }
#line 4385
      _amd64_rex_bits___2 = (unsigned char )(8 | tmp___51);
#line 4385
      if ((int )_amd64_rex_bits___2 != 0) {
#line 4385
        tmp___52 = jit->ip;
#line 4385
        (jit->ip) ++;
#line 4385
        *tmp___52 = (unsigned char )(0x40 | (int )_amd64_rex_bits___2);
      }
#line 4385
      break;
    }
#line 4385
    tmp___53 = jit->ip;
#line 4385
    (jit->ip) ++;
#line 4385
    *tmp___53 = (unsigned char)15;
#line 4385
    switch ((int )op->arg_size) {
    case 1: 
#line 4385
    tmp___54 = jit->ip;
#line 4385
    (jit->ip) ++;
#line 4385
    *tmp___54 = (unsigned char)190;
#line 4385
    break;
    case 2: 
#line 4385
    tmp___55 = jit->ip;
#line 4385
    (jit->ip) ++;
#line 4385
    *tmp___55 = (unsigned char)191;
#line 4385
    break;
    default: 
#line 4385
    tmp___56 = __builtin_expect(1L, 0L);
#line 4385
    if (tmp___56) {
#line 4385
      __assert_rtn((char const   *)"emit_ld_op", (char const   *)"tmp/src.c", 3415,
                   (char const   *)"0");
    }
    }
#line 4385
    while (1) {
#line 4385
      tmp___57 = jit->ip;
#line 4385
      (jit->ip) ++;
#line 4385
      *tmp___57 = (unsigned char )(((a1 & 7L) << 3) | 4L);
#line 4385
      break;
    }
#line 4385
    while (1) {
#line 4385
      tmp___58 = jit->ip;
#line 4385
      (jit->ip) ++;
#line 4385
      *tmp___58 = (unsigned char )((4 << 3) | 5);
#line 4385
      break;
    }
#line 4385
    while (1) {
#line 4385
      imb___4.val = (int )a2;
#line 4385
      tmp___59 = jit->ip;
#line 4385
      (jit->ip) ++;
#line 4385
      *tmp___59 = imb___4.b[0];
#line 4385
      tmp___60 = jit->ip;
#line 4385
      (jit->ip) ++;
#line 4385
      *tmp___60 = imb___4.b[1];
#line 4385
      tmp___61 = jit->ip;
#line 4385
      (jit->ip) ++;
#line 4385
      *tmp___61 = imb___4.b[2];
#line 4385
      tmp___62 = jit->ip;
#line 4385
      (jit->ip) ++;
#line 4385
      *tmp___62 = imb___4.b[3];
#line 4385
      break;
    }
#line 4385
    break;
  }
#line 4385
  break;
  case 374: 
#line 4386
  while (1) {
#line 4386
    if ((int )op->arg_size == 8) {
#line 4386
      goto _L;
    } else
#line 4386
    if ((int )op->arg_size == 4) {
      _L: /* CIL Label */ 
#line 4386
      while (1) {
#line 4386
        if ((int )op->arg_size == 2) {
#line 4386
          tmp___63 = jit->ip;
#line 4386
          (jit->ip) ++;
#line 4386
          *tmp___63 = (unsigned char)102;
        }
#line 4386
        while (1) {
#line 4386
          if ((int )op->arg_size > 4) {
#line 4386
            tmp___64 = 8;
          } else {
#line 4386
            tmp___64 = 0;
          }
#line 4386
          if (a1 > 7L) {
#line 4386
            tmp___65 = 4;
          } else {
#line 4386
            tmp___65 = 0;
          }
#line 4386
          _amd64_rex_bits___3 = (unsigned char )(tmp___64 | tmp___65);
#line 4386
          if ((int )_amd64_rex_bits___3 != 0) {
#line 4386
            tmp___66 = jit->ip;
#line 4386
            (jit->ip) ++;
#line 4386
            *tmp___66 = (unsigned char )(0x40 | (int )_amd64_rex_bits___3);
          } else
#line 4386
          if ((int )op->arg_size == 1) {
#line 4386
            tmp___66 = jit->ip;
#line 4386
            (jit->ip) ++;
#line 4386
            *tmp___66 = (unsigned char )(0x40 | (int )_amd64_rex_bits___3);
          }
#line 4386
          break;
        }
#line 4386
        switch ((int )op->arg_size) {
        case 1: 
#line 4386
        tmp___67 = jit->ip;
#line 4386
        (jit->ip) ++;
#line 4386
        *tmp___67 = (unsigned char)138;
#line 4386
        break;
        case 8: 
        case 4: 
        case 2: 
#line 4386
        tmp___68 = jit->ip;
#line 4386
        (jit->ip) ++;
#line 4386
        *tmp___68 = (unsigned char)139;
#line 4386
        break;
        default: 
#line 4386
        tmp___69 = __builtin_expect(1L, 0L);
#line 4386
        if (tmp___69) {
#line 4386
          __assert_rtn((char const   *)"emit_ld_op", (char const   *)"tmp/src.c",
                       3416, (char const   *)"0");
        }
        }
#line 4386
        while (1) {
#line 4386
          tmp___70 = jit->ip;
#line 4386
          (jit->ip) ++;
#line 4386
          *tmp___70 = (unsigned char )(((a1 & 7L) << 3) | 4L);
#line 4386
          break;
        }
#line 4386
        while (1) {
#line 4386
          tmp___71 = jit->ip;
#line 4386
          (jit->ip) ++;
#line 4386
          *tmp___71 = (unsigned char )((4 << 3) | 5);
#line 4386
          break;
        }
#line 4386
        while (1) {
#line 4386
          imb___5.val = (int )a2;
#line 4386
          tmp___72 = jit->ip;
#line 4386
          (jit->ip) ++;
#line 4386
          *tmp___72 = imb___5.b[0];
#line 4386
          tmp___73 = jit->ip;
#line 4386
          (jit->ip) ++;
#line 4386
          *tmp___73 = imb___5.b[1];
#line 4386
          tmp___74 = jit->ip;
#line 4386
          (jit->ip) ++;
#line 4386
          *tmp___74 = imb___5.b[2];
#line 4386
          tmp___75 = jit->ip;
#line 4386
          (jit->ip) ++;
#line 4386
          *tmp___75 = imb___5.b[3];
#line 4386
          break;
        }
#line 4386
        break;
      }
#line 4386
      break;
    }
#line 4386
    while (1) {
#line 4386
      if (a1 > 7L) {
#line 4386
        tmp___76 = 4;
      } else {
#line 4386
        tmp___76 = 0;
      }
#line 4386
      _amd64_rex_bits___4 = (unsigned char )(8 | tmp___76);
#line 4386
      if ((int )_amd64_rex_bits___4 != 0) {
#line 4386
        tmp___77 = jit->ip;
#line 4386
        (jit->ip) ++;
#line 4386
        *tmp___77 = (unsigned char )(0x40 | (int )_amd64_rex_bits___4);
      }
#line 4386
      break;
    }
#line 4386
    tmp___78 = jit->ip;
#line 4386
    (jit->ip) ++;
#line 4386
    *tmp___78 = (unsigned char)15;
#line 4386
    switch ((int )op->arg_size) {
    case 1: 
#line 4386
    tmp___79 = jit->ip;
#line 4386
    (jit->ip) ++;
#line 4386
    *tmp___79 = (unsigned char)182;
#line 4386
    break;
    case 2: 
#line 4386
    tmp___80 = jit->ip;
#line 4386
    (jit->ip) ++;
#line 4386
    *tmp___80 = (unsigned char)183;
#line 4386
    break;
    default: 
#line 4386
    tmp___81 = __builtin_expect(1L, 0L);
#line 4386
    if (tmp___81) {
#line 4386
      __assert_rtn((char const   *)"emit_ld_op", (char const   *)"tmp/src.c", 3416,
                   (char const   *)"0");
    }
    }
#line 4386
    while (1) {
#line 4386
      tmp___82 = jit->ip;
#line 4386
      (jit->ip) ++;
#line 4386
      *tmp___82 = (unsigned char )((((a1 & 7L) & 7L) << 3) | 4L);
#line 4386
      break;
    }
#line 4386
    while (1) {
#line 4386
      tmp___83 = jit->ip;
#line 4386
      (jit->ip) ++;
#line 4386
      *tmp___83 = (unsigned char )((4 << 3) | 5);
#line 4386
      break;
    }
#line 4386
    while (1) {
#line 4386
      imb___6.val = (int )a2;
#line 4386
      tmp___84 = jit->ip;
#line 4386
      (jit->ip) ++;
#line 4386
      *tmp___84 = imb___6.b[0];
#line 4386
      tmp___85 = jit->ip;
#line 4386
      (jit->ip) ++;
#line 4386
      *tmp___85 = imb___6.b[1];
#line 4386
      tmp___86 = jit->ip;
#line 4386
      (jit->ip) ++;
#line 4386
      *tmp___86 = imb___6.b[2];
#line 4386
      tmp___87 = jit->ip;
#line 4386
      (jit->ip) ++;
#line 4386
      *tmp___87 = imb___6.b[3];
#line 4386
      break;
    }
#line 4386
    break;
  }
#line 4386
  break;
  case 369: 
#line 4387
  while (1) {
#line 4387
    if ((int )op->arg_size == 4) {
#line 4387
      while (1) {
#line 4387
        while (1) {
#line 4387
          if (a1 > 7L) {
#line 4387
            tmp___88 = 4;
          } else {
#line 4387
            tmp___88 = 0;
          }
#line 4387
          if (a2 > 7L) {
#line 4387
            tmp___89 = 1;
          } else {
#line 4387
            tmp___89 = 0;
          }
#line 4387
          _amd64_rex_bits___5 = (unsigned char )((8 | tmp___88) | tmp___89);
#line 4387
          if ((int )_amd64_rex_bits___5 != 0) {
#line 4387
            tmp___90 = jit->ip;
#line 4387
            (jit->ip) ++;
#line 4387
            *tmp___90 = (unsigned char )(0x40 | (int )_amd64_rex_bits___5);
          }
#line 4387
          break;
        }
#line 4387
        tmp___91 = jit->ip;
#line 4387
        (jit->ip) ++;
#line 4387
        *tmp___91 = (unsigned char)99;
#line 4387
        while (1) {
#line 4387
          if ((a2 & 7L) == 4L) {
#line 4387
            while (1) {
#line 4387
              tmp___92 = jit->ip;
#line 4387
              (jit->ip) ++;
#line 4387
              *tmp___92 = (unsigned char )((((a1 & 7L) & 7L) << 3) | 4L);
#line 4387
              break;
            }
#line 4387
            while (1) {
#line 4387
              tmp___93 = jit->ip;
#line 4387
              (jit->ip) ++;
#line 4387
              *tmp___93 = (unsigned char )((4 << 3) | 4);
#line 4387
              break;
            }
#line 4387
            break;
          }
#line 4387
          if ((a2 & 7L) != 5L) {
#line 4387
            while (1) {
#line 4387
              tmp___102 = jit->ip;
#line 4387
              (jit->ip) ++;
#line 4387
              *tmp___102 = (unsigned char )((((a1 & 7L) & 7L) << 3) | ((a2 & 7L) & 7L));
#line 4387
              break;
            }
#line 4387
            break;
          }
#line 4387
          while (1) {
#line 4387
            tmp___103 = jit->ip;
#line 4387
            (jit->ip) ++;
#line 4387
            *tmp___103 = (unsigned char )(((long )(1 << 6) | (((a1 & 7L) & 7L) << 3)) | ((a2 & 7L) & 7L));
#line 4387
            break;
          }
#line 4387
          while (1) {
#line 4387
            *(jit->ip) = (unsigned char)0;
#line 4387
            (jit->ip) ++;
#line 4387
            break;
          }
#line 4387
          break;
        }
#line 4387
        break;
      }
#line 4387
      break;
    }
#line 4387
    while (1) {
#line 4387
      if (a1 > 7L) {
#line 4387
        tmp___109 = 4;
      } else {
#line 4387
        tmp___109 = 0;
      }
#line 4387
      if (a2 > 7L) {
#line 4387
        tmp___110 = 1;
      } else {
#line 4387
        tmp___110 = 0;
      }
#line 4387
      _amd64_rex_bits___6 = (unsigned char )((8 | tmp___109) | tmp___110);
#line 4387
      if ((int )_amd64_rex_bits___6 != 0) {
#line 4387
        tmp___111 = jit->ip;
#line 4387
        (jit->ip) ++;
#line 4387
        *tmp___111 = (unsigned char )(0x40 | (int )_amd64_rex_bits___6);
      }
#line 4387
      break;
    }
#line 4387
    tmp___112 = jit->ip;
#line 4387
    (jit->ip) ++;
#line 4387
    *tmp___112 = (unsigned char)15;
#line 4387
    switch ((int )op->arg_size) {
    case 1: 
#line 4387
    tmp___113 = jit->ip;
#line 4387
    (jit->ip) ++;
#line 4387
    *tmp___113 = (unsigned char)190;
#line 4387
    break;
    case 2: 
#line 4387
    tmp___114 = jit->ip;
#line 4387
    (jit->ip) ++;
#line 4387
    *tmp___114 = (unsigned char)191;
#line 4387
    break;
    default: 
#line 4387
    tmp___115 = __builtin_expect(1L, 0L);
#line 4387
    if (tmp___115) {
#line 4387
      __assert_rtn((char const   *)"emit_ld_op", (char const   *)"tmp/src.c", 3417,
                   (char const   *)"0");
    }
    }
#line 4387
    while (1) {
#line 4387
      if ((a2 & 7L) == 4L) {
#line 4387
        while (1) {
#line 4387
          tmp___116 = jit->ip;
#line 4387
          (jit->ip) ++;
#line 4387
          *tmp___116 = (unsigned char )((((a1 & 7L) & 7L) << 3) | 4L);
#line 4387
          break;
        }
#line 4387
        while (1) {
#line 4387
          tmp___117 = jit->ip;
#line 4387
          (jit->ip) ++;
#line 4387
          *tmp___117 = (unsigned char )((4 << 3) | 4);
#line 4387
          break;
        }
#line 4387
        break;
      }
#line 4387
      if ((a2 & 7L) != 5L) {
#line 4387
        while (1) {
#line 4387
          tmp___126 = jit->ip;
#line 4387
          (jit->ip) ++;
#line 4387
          *tmp___126 = (unsigned char )((((a1 & 7L) & 7L) << 3) | ((a2 & 7L) & 7L));
#line 4387
          break;
        }
#line 4387
        break;
      }
#line 4387
      while (1) {
#line 4387
        tmp___127 = jit->ip;
#line 4387
        (jit->ip) ++;
#line 4387
        *tmp___127 = (unsigned char )(((long )(1 << 6) | (((a1 & 7L) & 7L) << 3)) | ((a2 & 7L) & 7L));
#line 4387
        break;
      }
#line 4387
      while (1) {
#line 4387
        *(jit->ip) = (unsigned char)0;
#line 4387
        (jit->ip) ++;
#line 4387
        break;
      }
#line 4387
      break;
    }
#line 4387
    break;
  }
#line 4387
  break;
  case 373: 
#line 4388
  while (1) {
#line 4388
    if ((int )op->arg_size == 8) {
#line 4388
      goto _L___0;
    } else
#line 4388
    if ((int )op->arg_size == 4) {
      _L___0: /* CIL Label */ 
#line 4388
      while (1) {
#line 4388
        if ((int )op->arg_size == 2) {
#line 4388
          tmp___133 = jit->ip;
#line 4388
          (jit->ip) ++;
#line 4388
          *tmp___133 = (unsigned char)102;
        }
#line 4388
        while (1) {
#line 4388
          if ((int )op->arg_size > 4) {
#line 4388
            tmp___134 = 8;
          } else {
#line 4388
            tmp___134 = 0;
          }
#line 4388
          if (a1 > 7L) {
#line 4388
            tmp___135 = 4;
          } else {
#line 4388
            tmp___135 = 0;
          }
#line 4388
          if (a2 > 7L) {
#line 4388
            tmp___136 = 1;
          } else {
#line 4388
            tmp___136 = 0;
          }
#line 4388
          _amd64_rex_bits___7 = (unsigned char )((tmp___134 | tmp___135) | tmp___136);
#line 4388
          if ((int )_amd64_rex_bits___7 != 0) {
#line 4388
            tmp___137 = jit->ip;
#line 4388
            (jit->ip) ++;
#line 4388
            *tmp___137 = (unsigned char )(0x40 | (int )_amd64_rex_bits___7);
          } else
#line 4388
          if ((int )op->arg_size == 1) {
#line 4388
            tmp___137 = jit->ip;
#line 4388
            (jit->ip) ++;
#line 4388
            *tmp___137 = (unsigned char )(0x40 | (int )_amd64_rex_bits___7);
          }
#line 4388
          break;
        }
#line 4388
        switch ((int )op->arg_size) {
        case 1: 
#line 4388
        tmp___138 = jit->ip;
#line 4388
        (jit->ip) ++;
#line 4388
        *tmp___138 = (unsigned char)138;
#line 4388
        break;
        case 8: 
        case 4: 
        case 2: 
#line 4388
        tmp___139 = jit->ip;
#line 4388
        (jit->ip) ++;
#line 4388
        *tmp___139 = (unsigned char)139;
#line 4388
        break;
        default: 
#line 4388
        tmp___140 = __builtin_expect(1L, 0L);
#line 4388
        if (tmp___140) {
#line 4388
          __assert_rtn((char const   *)"emit_ld_op", (char const   *)"tmp/src.c",
                       3418, (char const   *)"0");
        }
        }
#line 4388
        while (1) {
#line 4388
          if (a2 == 16L) {
#line 4388
            while (1) {
#line 4388
              tmp___141 = jit->ip;
#line 4388
              (jit->ip) ++;
#line 4388
              *tmp___141 = (unsigned char )((((a1 & 7L) & 7L) << 3) | 5L);
#line 4388
              break;
            }
#line 4388
            while (1) {
#line 4388
              imb___11.val = 0;
#line 4388
              tmp___142 = jit->ip;
#line 4388
              (jit->ip) ++;
#line 4388
              *tmp___142 = imb___11.b[0];
#line 4388
              tmp___143 = jit->ip;
#line 4388
              (jit->ip) ++;
#line 4388
              *tmp___143 = imb___11.b[1];
#line 4388
              tmp___144 = jit->ip;
#line 4388
              (jit->ip) ++;
#line 4388
              *tmp___144 = imb___11.b[2];
#line 4388
              tmp___145 = jit->ip;
#line 4388
              (jit->ip) ++;
#line 4388
              *tmp___145 = imb___11.b[3];
#line 4388
              break;
            }
          } else {
#line 4388
            while (1) {
#line 4388
              if ((a2 & 7L) == 4L) {
#line 4388
                while (1) {
#line 4388
                  tmp___146 = jit->ip;
#line 4388
                  (jit->ip) ++;
#line 4388
                  *tmp___146 = (unsigned char )((((a1 & 7L) & 7L) << 3) | 4L);
#line 4388
                  break;
                }
#line 4388
                while (1) {
#line 4388
                  tmp___147 = jit->ip;
#line 4388
                  (jit->ip) ++;
#line 4388
                  *tmp___147 = (unsigned char )((4 << 3) | 4);
#line 4388
                  break;
                }
#line 4388
                break;
              }
#line 4388
              if ((a2 & 7L) != 5L) {
#line 4388
                while (1) {
#line 4388
                  tmp___156 = jit->ip;
#line 4388
                  (jit->ip) ++;
#line 4388
                  *tmp___156 = (unsigned char )((((a1 & 7L) & 7L) << 3) | ((a2 & 7L) & 7L));
#line 4388
                  break;
                }
#line 4388
                break;
              }
#line 4388
              while (1) {
#line 4388
                tmp___157 = jit->ip;
#line 4388
                (jit->ip) ++;
#line 4388
                *tmp___157 = (unsigned char )(((long )(1 << 6) | (((a1 & 7L) & 7L) << 3)) | ((a2 & 7L) & 7L));
#line 4388
                break;
              }
#line 4388
              while (1) {
#line 4388
                *(jit->ip) = (unsigned char)0;
#line 4388
                (jit->ip) ++;
#line 4388
                break;
              }
#line 4388
              break;
            }
          }
#line 4388
          break;
        }
#line 4388
        break;
      }
#line 4388
      break;
    }
#line 4388
    while (1) {
#line 4388
      if (a1 > 7L) {
#line 4388
        tmp___163 = 4;
      } else {
#line 4388
        tmp___163 = 0;
      }
#line 4388
      if (a2 > 7L) {
#line 4388
        tmp___164 = 1;
      } else {
#line 4388
        tmp___164 = 0;
      }
#line 4388
      _amd64_rex_bits___8 = (unsigned char )((8 | tmp___163) | tmp___164);
#line 4388
      if ((int )_amd64_rex_bits___8 != 0) {
#line 4388
        tmp___165 = jit->ip;
#line 4388
        (jit->ip) ++;
#line 4388
        *tmp___165 = (unsigned char )(0x40 | (int )_amd64_rex_bits___8);
      }
#line 4388
      break;
    }
#line 4388
    tmp___166 = jit->ip;
#line 4388
    (jit->ip) ++;
#line 4388
    *tmp___166 = (unsigned char)15;
#line 4388
    switch ((int )op->arg_size) {
    case 1: 
#line 4388
    tmp___167 = jit->ip;
#line 4388
    (jit->ip) ++;
#line 4388
    *tmp___167 = (unsigned char)182;
#line 4388
    break;
    case 2: 
#line 4388
    tmp___168 = jit->ip;
#line 4388
    (jit->ip) ++;
#line 4388
    *tmp___168 = (unsigned char)183;
#line 4388
    break;
    default: 
#line 4388
    tmp___169 = __builtin_expect(1L, 0L);
#line 4388
    if (tmp___169) {
#line 4388
      __assert_rtn((char const   *)"emit_ld_op", (char const   *)"tmp/src.c", 3418,
                   (char const   *)"0");
    }
    }
#line 4388
    while (1) {
#line 4388
      if ((a2 & 7L) == 4L) {
#line 4388
        while (1) {
#line 4388
          tmp___170 = jit->ip;
#line 4388
          (jit->ip) ++;
#line 4388
          *tmp___170 = (unsigned char )((((a1 & 7L) & 7L) << 3) | 4L);
#line 4388
          break;
        }
#line 4388
        while (1) {
#line 4388
          tmp___171 = jit->ip;
#line 4388
          (jit->ip) ++;
#line 4388
          *tmp___171 = (unsigned char )((4 << 3) | 4);
#line 4388
          break;
        }
#line 4388
        break;
      }
#line 4388
      if ((a2 & 7L) != 5L) {
#line 4388
        while (1) {
#line 4388
          tmp___180 = jit->ip;
#line 4388
          (jit->ip) ++;
#line 4388
          *tmp___180 = (unsigned char )((((a1 & 7L) & 7L) << 3) | ((a2 & 7L) & 7L));
#line 4388
          break;
        }
#line 4388
        break;
      }
#line 4388
      while (1) {
#line 4388
        tmp___181 = jit->ip;
#line 4388
        (jit->ip) ++;
#line 4388
        *tmp___181 = (unsigned char )(((long )(1 << 6) | (((a1 & 7L) & 7L) << 3)) | ((a2 & 7L) & 7L));
#line 4388
        break;
      }
#line 4388
      while (1) {
#line 4388
        *(jit->ip) = (unsigned char)0;
#line 4388
        (jit->ip) ++;
#line 4388
        break;
      }
#line 4388
      break;
    }
#line 4388
    break;
  }
#line 4388
  break;
  default: 
#line 4389
  tmp___187 = __builtin_expect(1L, 0L);
#line 4389
  if (tmp___187) {
#line 4389
    __assert_rtn((char const   *)"emit_ld_op", (char const   *)"tmp/src.c", 3419,
                 (char const   *)"0");
  }
  }
#line 4391
  return;
}
}
/* END FUNCTION-DEF emit_ld_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF emit_sub_op LOC=UNKNOWN */
static void emit_sub_op(struct jit *jit , struct jit_op *op , int imm ) 
{ 
  unsigned char _amd64_rex_bits ;
  int tmp ;
  int tmp___0 ;
  unsigned char *tmp___1 ;
  unsigned char *tmp___2 ;
  unsigned char *tmp___3 ;
  x86_imm_buf imb ;
  unsigned char *tmp___4 ;
  unsigned char *tmp___5 ;
  unsigned char *tmp___6 ;
  unsigned char *tmp___7 ;
  unsigned char *tmp___8 ;
  unsigned char *tmp___9 ;
  unsigned char *tmp___10 ;
  unsigned char *tmp___11 ;
  unsigned char *tmp___12 ;
  unsigned char *tmp___13 ;
  x86_imm_buf imb___0 ;
  unsigned char *tmp___14 ;
  unsigned char *tmp___15 ;
  unsigned char *tmp___16 ;
  unsigned char *tmp___17 ;
  unsigned char *tmp___18 ;
  unsigned char *tmp___19 ;
  unsigned char *tmp___20 ;
  x86_imm_buf imb___1 ;
  unsigned char *tmp___21 ;
  unsigned char *tmp___22 ;
  unsigned char *tmp___23 ;
  unsigned char *tmp___24 ;
  unsigned char _amd64_rex_bits___0 ;
  int tmp___25 ;
  unsigned char *tmp___26 ;
  unsigned char *tmp___27 ;
  unsigned char *tmp___28 ;
  unsigned char _amd64_rex_bits___1 ;
  unsigned char *tmp___29 ;
  unsigned char *tmp___30 ;
  x86_imm_buf imb___2 ;
  unsigned char *tmp___31 ;
  unsigned char *tmp___32 ;
  unsigned char *tmp___33 ;
  unsigned char *tmp___34 ;
  unsigned char _amd64_rex_bits___2 ;
  int tmp___35 ;
  unsigned char *tmp___36 ;
  unsigned char *tmp___37 ;
  unsigned char *tmp___38 ;
  x86_imm_buf imb___3 ;
  unsigned char *tmp___39 ;
  unsigned char *tmp___40 ;
  unsigned char *tmp___41 ;
  unsigned char *tmp___42 ;
  unsigned char _amd64_rex_bits___3 ;
  int tmp___43 ;
  int tmp___44 ;
  unsigned char *tmp___45 ;
  unsigned char *tmp___46 ;
  unsigned char *tmp___47 ;
  unsigned char _amd64_rex_bits___4 ;
  int tmp___48 ;
  int tmp___49 ;
  unsigned char *tmp___50 ;
  unsigned char *tmp___51 ;
  unsigned char *tmp___52 ;
  unsigned char _amd64_rex_bits___5 ;
  int tmp___53 ;
  unsigned char *tmp___54 ;
  unsigned char *tmp___55 ;
  unsigned char *tmp___56 ;
  unsigned char *tmp___57 ;
  unsigned char _amd64_rex_bits___6 ;
  int tmp___58 ;
  int tmp___59 ;
  int tmp___60 ;
  unsigned char *tmp___61 ;
  unsigned char *tmp___62 ;
  unsigned char *tmp___63 ;
  long tmp___64 ;
  unsigned char *tmp___65 ;
  unsigned char _amd64_rex_bits___7 ;
  int tmp___66 ;
  int tmp___67 ;
  unsigned char *tmp___68 ;
  unsigned char *tmp___69 ;
  unsigned char *tmp___70 ;

  {
#line 4145
  if (imm) {
#line 4146
    if (op->r_arg[0] != op->r_arg[1]) {
#line 4146
      while (1) {
#line 4146
        while (1) {
#line 4146
          if (op->r_arg[0] > 7L) {
#line 4146
            tmp = 4;
          } else {
#line 4146
            tmp = 0;
          }
#line 4146
          if (op->r_arg[1] > 7L) {
#line 4146
            tmp___0 = 1;
          } else {
#line 4146
            tmp___0 = 0;
          }
#line 4146
          _amd64_rex_bits = (unsigned char )((8 | tmp) | tmp___0);
#line 4146
          if ((int )_amd64_rex_bits != 0) {
#line 4146
            tmp___1 = jit->ip;
#line 4146
            (jit->ip) ++;
#line 4146
            *tmp___1 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
          }
#line 4146
          break;
        }
#line 4146
        tmp___2 = jit->ip;
#line 4146
        (jit->ip) ++;
#line 4146
        *tmp___2 = (unsigned char)141;
#line 4146
        while (1) {
#line 4146
          if (op->r_arg[1] == 16L) {
#line 4146
            while (1) {
#line 4146
              tmp___3 = jit->ip;
#line 4146
              (jit->ip) ++;
#line 4146
              *tmp___3 = (unsigned char )((((op->r_arg[0] & 7L) & 7L) << 3) | 5L);
#line 4146
              break;
            }
#line 4146
            while (1) {
#line 4146
              imb.val = (int )(- op->r_arg[2]);
#line 4146
              tmp___4 = jit->ip;
#line 4146
              (jit->ip) ++;
#line 4146
              *tmp___4 = imb.b[0];
#line 4146
              tmp___5 = jit->ip;
#line 4146
              (jit->ip) ++;
#line 4146
              *tmp___5 = imb.b[1];
#line 4146
              tmp___6 = jit->ip;
#line 4146
              (jit->ip) ++;
#line 4146
              *tmp___6 = imb.b[2];
#line 4146
              tmp___7 = jit->ip;
#line 4146
              (jit->ip) ++;
#line 4146
              *tmp___7 = imb.b[3];
#line 4146
              break;
            }
          } else {
#line 4146
            while (1) {
#line 4146
              if ((op->r_arg[1] & 7L) == 4L) {
#line 4146
                if (- op->r_arg[2] == 0L) {
#line 4146
                  while (1) {
#line 4146
                    tmp___8 = jit->ip;
#line 4146
                    (jit->ip) ++;
#line 4146
                    *tmp___8 = (unsigned char )((((op->r_arg[0] & 7L) & 7L) << 3) | 4L);
#line 4146
                    break;
                  }
#line 4146
                  while (1) {
#line 4146
                    tmp___9 = jit->ip;
#line 4146
                    (jit->ip) ++;
#line 4146
                    *tmp___9 = (unsigned char )((4 << 3) | 4);
#line 4146
                    break;
                  }
                } else
#line 4146
                if (- op->r_arg[2] >= -128L) {
#line 4146
                  if (- op->r_arg[2] <= 127L) {
#line 4146
                    while (1) {
#line 4146
                      tmp___10 = jit->ip;
#line 4146
                      (jit->ip) ++;
#line 4146
                      *tmp___10 = (unsigned char )(((long )(1 << 6) | (((op->r_arg[0] & 7L) & 7L) << 3)) | 4L);
#line 4146
                      break;
                    }
#line 4146
                    while (1) {
#line 4146
                      tmp___11 = jit->ip;
#line 4146
                      (jit->ip) ++;
#line 4146
                      *tmp___11 = (unsigned char )((4 << 3) | 4);
#line 4146
                      break;
                    }
#line 4146
                    while (1) {
#line 4146
                      *(jit->ip) = (unsigned char )(- op->r_arg[2] & 255L);
#line 4146
                      (jit->ip) ++;
#line 4146
                      break;
                    }
                  } else {
#line 4146
                    goto _L;
                  }
                } else {
                  _L: /* CIL Label */ 
#line 4146
                  while (1) {
#line 4146
                    tmp___12 = jit->ip;
#line 4146
                    (jit->ip) ++;
#line 4146
                    *tmp___12 = (unsigned char )(((long )(2 << 6) | (((op->r_arg[0] & 7L) & 7L) << 3)) | 4L);
#line 4146
                    break;
                  }
#line 4146
                  while (1) {
#line 4146
                    tmp___13 = jit->ip;
#line 4146
                    (jit->ip) ++;
#line 4146
                    *tmp___13 = (unsigned char )((4 << 3) | 4);
#line 4146
                    break;
                  }
#line 4146
                  while (1) {
#line 4146
                    imb___0.val = (int )(- op->r_arg[2]);
#line 4146
                    tmp___14 = jit->ip;
#line 4146
                    (jit->ip) ++;
#line 4146
                    *tmp___14 = imb___0.b[0];
#line 4146
                    tmp___15 = jit->ip;
#line 4146
                    (jit->ip) ++;
#line 4146
                    *tmp___15 = imb___0.b[1];
#line 4146
                    tmp___16 = jit->ip;
#line 4146
                    (jit->ip) ++;
#line 4146
                    *tmp___16 = imb___0.b[2];
#line 4146
                    tmp___17 = jit->ip;
#line 4146
                    (jit->ip) ++;
#line 4146
                    *tmp___17 = imb___0.b[3];
#line 4146
                    break;
                  }
                }
#line 4146
                break;
              }
#line 4146
              if (- op->r_arg[2] == 0L) {
#line 4146
                if ((op->r_arg[1] & 7L) != 5L) {
#line 4146
                  while (1) {
#line 4146
                    tmp___18 = jit->ip;
#line 4146
                    (jit->ip) ++;
#line 4146
                    *tmp___18 = (unsigned char )((((op->r_arg[0] & 7L) & 7L) << 3) | ((op->r_arg[1] & 7L) & 7L));
#line 4146
                    break;
                  }
#line 4146
                  break;
                }
              }
#line 4146
              if (- op->r_arg[2] >= -128L) {
#line 4146
                if (- op->r_arg[2] <= 127L) {
#line 4146
                  while (1) {
#line 4146
                    tmp___19 = jit->ip;
#line 4146
                    (jit->ip) ++;
#line 4146
                    *tmp___19 = (unsigned char )(((long )(1 << 6) | (((op->r_arg[0] & 7L) & 7L) << 3)) | ((op->r_arg[1] & 7L) & 7L));
#line 4146
                    break;
                  }
#line 4146
                  while (1) {
#line 4146
                    *(jit->ip) = (unsigned char )(- op->r_arg[2] & 255L);
#line 4146
                    (jit->ip) ++;
#line 4146
                    break;
                  }
                } else {
#line 4146
                  goto _L___0;
                }
              } else {
                _L___0: /* CIL Label */ 
#line 4146
                while (1) {
#line 4146
                  tmp___20 = jit->ip;
#line 4146
                  (jit->ip) ++;
#line 4146
                  *tmp___20 = (unsigned char )(((long )(2 << 6) | (((op->r_arg[0] & 7L) & 7L) << 3)) | ((op->r_arg[1] & 7L) & 7L));
#line 4146
                  break;
                }
#line 4146
                while (1) {
#line 4146
                  imb___1.val = (int )(- op->r_arg[2]);
#line 4146
                  tmp___21 = jit->ip;
#line 4146
                  (jit->ip) ++;
#line 4146
                  *tmp___21 = imb___1.b[0];
#line 4146
                  tmp___22 = jit->ip;
#line 4146
                  (jit->ip) ++;
#line 4146
                  *tmp___22 = imb___1.b[1];
#line 4146
                  tmp___23 = jit->ip;
#line 4146
                  (jit->ip) ++;
#line 4146
                  *tmp___23 = imb___1.b[2];
#line 4146
                  tmp___24 = jit->ip;
#line 4146
                  (jit->ip) ++;
#line 4146
                  *tmp___24 = imb___1.b[3];
#line 4146
                  break;
                }
              }
#line 4146
              break;
            }
          }
#line 4146
          break;
        }
#line 4146
        break;
      }
    } else {
#line 4147
      while (1) {
#line 4147
        if (op->r_arg[2] >= -128L) {
#line 4147
          if (op->r_arg[2] <= 127L) {
#line 4147
            while (1) {
#line 4147
              if (op->r_arg[0] > 7L) {
#line 4147
                tmp___25 = 1;
              } else {
#line 4147
                tmp___25 = 0;
              }
#line 4147
              _amd64_rex_bits___0 = (unsigned char )(8 | tmp___25);
#line 4147
              if ((int )_amd64_rex_bits___0 != 0) {
#line 4147
                tmp___26 = jit->ip;
#line 4147
                (jit->ip) ++;
#line 4147
                *tmp___26 = (unsigned char )(0x40 | (int )_amd64_rex_bits___0);
              }
#line 4147
              break;
            }
#line 4147
            tmp___27 = jit->ip;
#line 4147
            (jit->ip) ++;
#line 4147
            *tmp___27 = (unsigned char)131;
#line 4147
            while (1) {
#line 4147
              while (1) {
#line 4147
                tmp___28 = jit->ip;
#line 4147
                (jit->ip) ++;
#line 4147
                *tmp___28 = (unsigned char )((long )((3 << 6) | (5 << 3)) | (op->r_arg[0] & 7L));
#line 4147
                break;
              }
#line 4147
              break;
            }
#line 4147
            while (1) {
#line 4147
              *(jit->ip) = (unsigned char )(op->r_arg[2] & 255L);
#line 4147
              (jit->ip) ++;
#line 4147
              break;
            }
          } else {
#line 4147
            goto _L___1;
          }
        } else
        _L___1: /* CIL Label */ 
#line 4147
        if (op->r_arg[0] == 0L) {
#line 4147
          while (1) {
#line 4147
            _amd64_rex_bits___1 = (unsigned char)8;
#line 4147
            if ((int )_amd64_rex_bits___1 != 0) {
#line 4147
              tmp___29 = jit->ip;
#line 4147
              (jit->ip) ++;
#line 4147
              *tmp___29 = (unsigned char )(0x40 | (int )_amd64_rex_bits___1);
            }
#line 4147
            break;
          }
#line 4147
          tmp___30 = jit->ip;
#line 4147
          (jit->ip) ++;
#line 4147
          *tmp___30 = (unsigned char )((5 << 3) + 5);
#line 4147
          while (1) {
#line 4147
            imb___2.val = (int )op->r_arg[2];
#line 4147
            tmp___31 = jit->ip;
#line 4147
            (jit->ip) ++;
#line 4147
            *tmp___31 = imb___2.b[0];
#line 4147
            tmp___32 = jit->ip;
#line 4147
            (jit->ip) ++;
#line 4147
            *tmp___32 = imb___2.b[1];
#line 4147
            tmp___33 = jit->ip;
#line 4147
            (jit->ip) ++;
#line 4147
            *tmp___33 = imb___2.b[2];
#line 4147
            tmp___34 = jit->ip;
#line 4147
            (jit->ip) ++;
#line 4147
            *tmp___34 = imb___2.b[3];
#line 4147
            break;
          }
        } else {
#line 4147
          while (1) {
#line 4147
            if (op->r_arg[0] > 7L) {
#line 4147
              tmp___35 = 1;
            } else {
#line 4147
              tmp___35 = 0;
            }
#line 4147
            _amd64_rex_bits___2 = (unsigned char )(8 | tmp___35);
#line 4147
            if ((int )_amd64_rex_bits___2 != 0) {
#line 4147
              tmp___36 = jit->ip;
#line 4147
              (jit->ip) ++;
#line 4147
              *tmp___36 = (unsigned char )(0x40 | (int )_amd64_rex_bits___2);
            }
#line 4147
            break;
          }
#line 4147
          tmp___37 = jit->ip;
#line 4147
          (jit->ip) ++;
#line 4147
          *tmp___37 = (unsigned char)129;
#line 4147
          while (1) {
#line 4147
            while (1) {
#line 4147
              tmp___38 = jit->ip;
#line 4147
              (jit->ip) ++;
#line 4147
              *tmp___38 = (unsigned char )((long )((3 << 6) | (5 << 3)) | (op->r_arg[0] & 7L));
#line 4147
              break;
            }
#line 4147
            break;
          }
#line 4147
          while (1) {
#line 4147
            imb___3.val = (int )op->r_arg[2];
#line 4147
            tmp___39 = jit->ip;
#line 4147
            (jit->ip) ++;
#line 4147
            *tmp___39 = imb___3.b[0];
#line 4147
            tmp___40 = jit->ip;
#line 4147
            (jit->ip) ++;
#line 4147
            *tmp___40 = imb___3.b[1];
#line 4147
            tmp___41 = jit->ip;
#line 4147
            (jit->ip) ++;
#line 4147
            *tmp___41 = imb___3.b[2];
#line 4147
            tmp___42 = jit->ip;
#line 4147
            (jit->ip) ++;
#line 4147
            *tmp___42 = imb___3.b[3];
#line 4147
            break;
          }
        }
#line 4147
        break;
      }
    }
#line 4148
    return;
  }
#line 4150
  if (op->r_arg[0] == op->r_arg[1]) {
#line 4151
    while (1) {
#line 4151
      while (1) {
#line 4151
        if (op->r_arg[0] > 7L) {
#line 4151
          tmp___43 = 4;
        } else {
#line 4151
          tmp___43 = 0;
        }
#line 4151
        if (op->r_arg[2] > 7L) {
#line 4151
          tmp___44 = 1;
        } else {
#line 4151
          tmp___44 = 0;
        }
#line 4151
        _amd64_rex_bits___3 = (unsigned char )((8 | tmp___43) | tmp___44);
#line 4151
        if ((int )_amd64_rex_bits___3 != 0) {
#line 4151
          tmp___45 = jit->ip;
#line 4151
          (jit->ip) ++;
#line 4151
          *tmp___45 = (unsigned char )(0x40 | (int )_amd64_rex_bits___3);
        }
#line 4151
        break;
      }
#line 4151
      tmp___46 = jit->ip;
#line 4151
      (jit->ip) ++;
#line 4151
      *tmp___46 = (unsigned char )((5 << 3) + 3);
#line 4151
      while (1) {
#line 4151
        while (1) {
#line 4151
          tmp___47 = jit->ip;
#line 4151
          (jit->ip) ++;
#line 4151
          *tmp___47 = (unsigned char )(((long )(3 << 6) | ((op->r_arg[0] & 7L) << 3)) | (op->r_arg[2] & 7L));
#line 4151
          break;
        }
#line 4151
        break;
      }
#line 4151
      break;
    }
  } else
#line 4152
  if (op->r_arg[0] == op->r_arg[2]) {
#line 4153
    while (1) {
#line 4153
      while (1) {
#line 4153
        if (op->r_arg[0] > 7L) {
#line 4153
          tmp___48 = 4;
        } else {
#line 4153
          tmp___48 = 0;
        }
#line 4153
        if (op->r_arg[1] > 7L) {
#line 4153
          tmp___49 = 1;
        } else {
#line 4153
          tmp___49 = 0;
        }
#line 4153
        _amd64_rex_bits___4 = (unsigned char )((8 | tmp___48) | tmp___49);
#line 4153
        if ((int )_amd64_rex_bits___4 != 0) {
#line 4153
          tmp___50 = jit->ip;
#line 4153
          (jit->ip) ++;
#line 4153
          *tmp___50 = (unsigned char )(0x40 | (int )_amd64_rex_bits___4);
        }
#line 4153
        break;
      }
#line 4153
      tmp___51 = jit->ip;
#line 4153
      (jit->ip) ++;
#line 4153
      *tmp___51 = (unsigned char )((5 << 3) + 3);
#line 4153
      while (1) {
#line 4153
        while (1) {
#line 4153
          tmp___52 = jit->ip;
#line 4153
          (jit->ip) ++;
#line 4153
          *tmp___52 = (unsigned char )(((long )(3 << 6) | ((op->r_arg[0] & 7L) << 3)) | (op->r_arg[1] & 7L));
#line 4153
          break;
        }
#line 4153
        break;
      }
#line 4153
      break;
    }
#line 4154
    while (1) {
#line 4154
      while (1) {
#line 4154
        if (op->r_arg[0] > 7L) {
#line 4154
          tmp___53 = 1;
        } else {
#line 4154
          tmp___53 = 0;
        }
#line 4154
        _amd64_rex_bits___5 = (unsigned char )(8 | tmp___53);
#line 4154
        if ((int )_amd64_rex_bits___5 != 0) {
#line 4154
          tmp___54 = jit->ip;
#line 4154
          (jit->ip) ++;
#line 4154
          *tmp___54 = (unsigned char )(0x40 | (int )_amd64_rex_bits___5);
        }
#line 4154
        break;
      }
#line 4154
      while (1) {
#line 4154
        tmp___55 = jit->ip;
#line 4154
        (jit->ip) ++;
#line 4154
        *tmp___55 = (unsigned char)247;
#line 4154
        while (1) {
#line 4154
          while (1) {
#line 4154
            tmp___56 = jit->ip;
#line 4154
            (jit->ip) ++;
#line 4154
            *tmp___56 = (unsigned char )((long )((3 << 6) | (3 << 3)) | ((op->r_arg[0] & 7L) & 7L));
#line 4154
            break;
          }
#line 4154
          break;
        }
#line 4154
        break;
      }
#line 4154
      break;
    }
  } else {
#line 4156
    while (1) {
#line 4156
      if ((int )sizeof(void *) == 2) {
#line 4156
        tmp___57 = jit->ip;
#line 4156
        (jit->ip) ++;
#line 4156
        *tmp___57 = (unsigned char)102;
      }
#line 4156
      while (1) {
#line 4156
        if ((int )sizeof(void *) > 4) {
#line 4156
          tmp___58 = 8;
        } else {
#line 4156
          tmp___58 = 0;
        }
#line 4156
        if (op->r_arg[0] > 7L) {
#line 4156
          tmp___59 = 4;
        } else {
#line 4156
          tmp___59 = 0;
        }
#line 4156
        if (op->r_arg[1] > 7L) {
#line 4156
          tmp___60 = 1;
        } else {
#line 4156
          tmp___60 = 0;
        }
#line 4156
        _amd64_rex_bits___6 = (unsigned char )((tmp___58 | tmp___59) | tmp___60);
#line 4156
        if ((int )_amd64_rex_bits___6 != 0) {
#line 4156
          tmp___61 = jit->ip;
#line 4156
          (jit->ip) ++;
#line 4156
          *tmp___61 = (unsigned char )(0x40 | (int )_amd64_rex_bits___6);
        } else
#line 4156
        if ((int )sizeof(void *) == 1) {
#line 4156
          tmp___61 = jit->ip;
#line 4156
          (jit->ip) ++;
#line 4156
          *tmp___61 = (unsigned char )(0x40 | (int )_amd64_rex_bits___6);
        }
#line 4156
        break;
      }
#line 4156
      switch ((int )sizeof(void *)) {
      case 1: 
#line 4156
      tmp___62 = jit->ip;
#line 4156
      (jit->ip) ++;
#line 4156
      *tmp___62 = (unsigned char)138;
#line 4156
      break;
      case 8: 
      case 4: 
      case 2: 
#line 4156
      tmp___63 = jit->ip;
#line 4156
      (jit->ip) ++;
#line 4156
      *tmp___63 = (unsigned char)139;
#line 4156
      break;
      default: 
#line 4156
      tmp___64 = __builtin_expect(1L, 0L);
#line 4156
      if (tmp___64) {
#line 4156
        __assert_rtn((char const   *)"emit_sub_op", (char const   *)"tmp/src.c", 3119,
                     (char const   *)"0");
      }
      }
#line 4156
      while (1) {
#line 4156
        while (1) {
#line 4156
          tmp___65 = jit->ip;
#line 4156
          (jit->ip) ++;
#line 4156
          *tmp___65 = (unsigned char )(((long )(3 << 6) | ((op->r_arg[0] & 7L) << 3)) | (op->r_arg[1] & 7L));
#line 4156
          break;
        }
#line 4156
        break;
      }
#line 4156
      break;
    }
#line 4157
    while (1) {
#line 4157
      while (1) {
#line 4157
        if (op->r_arg[0] > 7L) {
#line 4157
          tmp___66 = 4;
        } else {
#line 4157
          tmp___66 = 0;
        }
#line 4157
        if (op->r_arg[2] > 7L) {
#line 4157
          tmp___67 = 1;
        } else {
#line 4157
          tmp___67 = 0;
        }
#line 4157
        _amd64_rex_bits___7 = (unsigned char )((8 | tmp___66) | tmp___67);
#line 4157
        if ((int )_amd64_rex_bits___7 != 0) {
#line 4157
          tmp___68 = jit->ip;
#line 4157
          (jit->ip) ++;
#line 4157
          *tmp___68 = (unsigned char )(0x40 | (int )_amd64_rex_bits___7);
        }
#line 4157
        break;
      }
#line 4157
      tmp___69 = jit->ip;
#line 4157
      (jit->ip) ++;
#line 4157
      *tmp___69 = (unsigned char )((5 << 3) + 3);
#line 4157
      while (1) {
#line 4157
        while (1) {
#line 4157
          tmp___70 = jit->ip;
#line 4157
          (jit->ip) ++;
#line 4157
          *tmp___70 = (unsigned char )(((long )(3 << 6) | ((op->r_arg[0] & 7L) << 3)) | (op->r_arg[2] & 7L));
#line 4157
          break;
        }
#line 4157
        break;
      }
#line 4157
      break;
    }
  }
#line 4159
  return;
}
}
/* END FUNCTION-DEF emit_sub_op LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF fib LOC=UNKNOWN */
void fib(int n ) 
{ 
  static struct jit *p20  = (struct jit *)0;
  static void (*_TIG_JD_tgVA_4_fib___foo)(int n ) ;
  int localSize22 ;
  unsigned int KEY_1494878675_538327513_1893549042_1808446567[4]  = {1494878675U,
                                                                     538327513U, 1893549042U,
                                                                     1808446567U};
  unsigned int _TIG_JD_tgVA_4_fib_block_50_362[4]  = {1444080428U, 1810969561U, 1487389103U,
                                                      2989609030U};
  unsigned int _TIG_JD_tgVA_4_fib_block_15_363[54]  = {3865797297U, 3760891365U, 761558494U,
                                                       522395450U, 1526277045U, 1882151377U,
                                                       3457709525U, 3107598410U, 1465759862U,
                                                       1029219087U, 1858616483U, 81869482U,
                                                       2076120487U, 2292022325U, 3366769101U,
                                                       3508836953U, 4090355843U, 2708521218U,
                                                       2350869097U, 2464386636U, 188510432U,
                                                       1700858715U, 1028085647U, 269730501U,
                                                       3843530221U, 1726252080U, 4053607345U,
                                                       4056946771U, 3532174769U, 2561271905U,
                                                       3815749639U, 3581645820U, 1949698010U,
                                                       3232014597U, 4281811494U, 1363023094U,
                                                       1795185181U, 224071490U, 3101847575U,
                                                       756771728U, 294538421U, 4064989444U,
                                                       1432271430U, 710928989U, 1651729196U,
                                                       1240040863U, 185950207U, 3880805153U,
                                                       2337757917U, 832498083U, 3651700240U,
                                                       3673228229U, 2895187267U, 691264721U};
  unsigned int _TIG_JD_tgVA_4_fib_block_8_364[62]  = {3865797297U, 3760891365U, 761558494U,
                                                      522395450U, 1526277045U, 1882151377U,
                                                      3457709525U, 3107598410U, 1465759862U,
                                                      1029219087U, 1858616483U, 81869482U,
                                                      3454081999U, 2597673017U, 200363617U,
                                                      2562688756U, 4090355843U, 2708521218U,
                                                      2350869097U, 2464386636U, 2582019990U,
                                                      1569007058U, 4092598785U, 1165392865U,
                                                      3203902000U, 2612081203U, 4090355843U,
                                                      2708521218U, 165166150U, 1062991189U,
                                                      366944322U, 4040064371U, 539312246U,
                                                      3440173831U, 2102169762U, 1151175671U,
                                                      2889765177U, 3056537090U, 3985140965U,
                                                      2711517693U, 2784173030U, 2154055888U,
                                                      685951863U, 816404079U, 397797121U,
                                                      824613667U, 274738467U, 1807000045U,
                                                      2402421675U, 965908417U, 2647148688U,
                                                      2909351605U, 1062093895U, 3594036299U,
                                                      1765112844U, 2993033847U, 3023753826U,
                                                      2739226783U, 406849208U, 276185752U,
                                                      2935676902U, 1502408300U};
  unsigned int _TIG_JD_tgVA_4_fib_block_3_365[22]  = {3865797297U, 3760891365U, 761558494U,
                                                      522395450U, 1526277045U, 1882151377U,
                                                      3457709525U, 3107598410U, 1465759862U,
                                                      1029219087U, 1858616483U, 81869482U,
                                                      748308417U, 1743382048U, 1412371038U,
                                                      3227713196U, 14687428U, 1150780574U,
                                                      3649725867U, 1098209001U, 3052689886U,
                                                      1853679747U};
  unsigned int _TIG_JD_tgVA_4_fib_block_16_366[32]  = {3865797297U, 3760891365U, 761558494U,
                                                       522395450U, 1526277045U, 1882151377U,
                                                       3457709525U, 3107598410U, 1465759862U,
                                                       1029219087U, 1858616483U, 81869482U,
                                                       748308417U, 1743382048U, 1412371038U,
                                                       3227713196U, 14687428U, 1150780574U,
                                                       4121967146U, 792657600U, 4124960505U,
                                                       1456797105U, 1663984152U, 364170003U,
                                                       2343519458U, 242645394U, 14687428U,
                                                       1150780574U, 2553242030U, 789900243U,
                                                       1168109153U, 3645623787U};
  unsigned int _TIG_JD_tgVA_4_fib_block_36_367[4]  = {3015308295U, 2456679650U, 382995624U,
                                                      3991129455U};
  unsigned int _TIG_JD_tgVA_4_fib_block_26_368[10]  = {3865797297U, 3760891365U, 761558494U,
                                                       522395450U, 1526277045U, 1882151377U,
                                                       3457709525U, 3107598410U, 1784858941U,
                                                       668240381U};
  unsigned int _TIG_JD_tgVA_4_fib_block_19_369[44]  = {2089457311U, 2981884288U, 957859296U,
                                                       889449031U, 3306186640U, 1280531807U,
                                                       2214459479U, 2822463662U, 2114374844U,
                                                       4215843651U, 3128631854U, 69032297U,
                                                       1080600346U, 3005565344U, 4290476190U,
                                                       3816306826U, 4027559976U, 2869328999U,
                                                       2224705390U, 281423291U, 701075140U,
                                                       683806833U, 1188589004U, 3671883122U,
                                                       1832300069U, 3101423687U, 1756273354U,
                                                       4099144994U, 1306796457U, 2292308454U,
                                                       3642241971U, 1560060493U, 1772185333U,
                                                       3405698512U, 3357729287U, 89674792U,
                                                       2282796092U, 1676309847U, 2813450783U,
                                                       3504434609U, 31602387U, 3504531306U,
                                                       1494600203U, 3184256714U};
  unsigned int _TIG_JD_tgVA_4_fib_block_17_370[32]  = {3865797297U, 3760891365U, 761558494U,
                                                       522395450U, 1526277045U, 1882151377U,
                                                       3457709525U, 3107598410U, 1465759862U,
                                                       1029219087U, 1858616483U, 81869482U,
                                                       748308417U, 1743382048U, 1412371038U,
                                                       3227713196U, 14687428U, 1150780574U,
                                                       4121967146U, 792657600U, 4124960505U,
                                                       1456797105U, 4285735600U, 3259001333U,
                                                       1412371038U, 3227713196U, 14687428U,
                                                       1150780574U, 2553242030U, 789900243U,
                                                       3615615965U, 747923792U};
  unsigned int _TIG_JD_tgVA_4_fib_block_27_371[52]  = {3865797297U, 3760891365U, 761558494U,
                                                       522395450U, 1480491644U, 2891198548U,
                                                       1519005496U, 1530496939U, 2403941728U,
                                                       1442483633U, 1858616483U, 81869482U,
                                                       2076120487U, 2292022325U, 3366769101U,
                                                       3508836953U, 4090355843U, 2708521218U,
                                                       1511374732U, 3446476188U, 2960654237U,
                                                       1678555805U, 3086385990U, 368225042U,
                                                       2433331070U, 4109670214U, 3169314791U,
                                                       2202104145U, 1302102285U, 4044365254U,
                                                       1350085867U, 2327042791U, 3270327190U,
                                                       428958051U, 3535311860U, 3975813057U,
                                                       1505435969U, 231646484U, 2293674092U,
                                                       3011685368U, 2403941728U, 1442483633U,
                                                       2065122346U, 2811423260U, 2237122875U,
                                                       1579259482U, 2543888468U, 1215684332U,
                                                       1814671273U, 109164422U, 3284762216U,
                                                       348721987U};
  unsigned int _TIG_JD_tgVA_4_fib_block_34_372[4]  = {3015308295U, 2456679650U, 382995624U,
                                                      3991129455U};
  unsigned int _TIG_JD_tgVA_4_fib_block_28_373[48]  = {3865797297U, 3760891365U, 761558494U,
                                                       522395450U, 1480491644U, 2891198548U,
                                                       1519005496U, 1530496939U, 2403941728U,
                                                       1442483633U, 1858616483U, 81869482U,
                                                       2076120487U, 2292022325U, 3366769101U,
                                                       3508836953U, 4090355843U, 2708521218U,
                                                       1511374732U, 3446476188U, 988951805U,
                                                       2662194866U, 1407920468U, 1474966984U,
                                                       2477253014U, 3396225271U, 2402421675U,
                                                       965908417U, 185950207U, 3880805153U,
                                                       2433500196U, 48674455U, 3824796436U,
                                                       2288612145U, 3023753826U, 2739226783U,
                                                       3286810522U, 353811158U, 3865797297U,
                                                       3760891365U, 761558494U, 522395450U,
                                                       1480491644U, 2891198548U, 1519005496U,
                                                       1530496939U, 2717629007U, 1143989579U};
  unsigned int _TIG_JD_tgVA_4_fib_block_5_374[10]  = {3865797297U, 3760891365U, 2173171270U,
                                                      2018706490U, 3006385897U, 2682043074U,
                                                      2591059234U, 562243003U, 1965739915U,
                                                      3286638776U};
  unsigned int _TIG_JD_tgVA_4_fib_block_10_375[48]  = {3865797297U, 3760891365U, 761558494U,
                                                       522395450U, 1480491644U, 2891198548U,
                                                       1519005496U, 1530496939U, 2403941728U,
                                                       1442483633U, 1858616483U, 81869482U,
                                                       748308417U, 1743382048U, 1412371038U,
                                                       3227713196U, 14687428U, 1150780574U,
                                                       3926256925U, 3205123961U, 4135459984U,
                                                       3626901977U, 1412826086U, 1194919999U,
                                                       3370495442U, 293214133U, 2398795273U,
                                                       510527512U, 2784173030U, 2154055888U,
                                                       3055650927U, 1072354517U, 321865409U,
                                                       863377019U, 3245285980U, 374708606U,
                                                       2445156191U, 2929247318U, 4066325132U,
                                                       957222925U, 2860284462U, 1175157140U,
                                                       2480511193U, 508811278U, 3914638065U,
                                                       1986211332U, 3992696035U, 832714832U};
  unsigned int _TIG_JD_tgVA_4_fib_block_39_376[4]  = {3015308295U, 2456679650U, 382995624U,
                                                      3991129455U};
  unsigned int _TIG_JD_tgVA_4_fib_block_7_377[14]  = {2858941721U, 1289223576U, 567593275U,
                                                      866621778U, 2872122042U, 3596291017U,
                                                      629949489U, 2725296509U, 2370440710U,
                                                      2339357110U, 2447140425U, 1606200693U,
                                                      1706025681U, 1154092196U};
  unsigned int _TIG_JD_tgVA_4_fib_block_12_378[20]  = {3865797297U, 3760891365U, 761558494U,
                                                       522395450U, 1480491644U, 2891198548U,
                                                       1519005496U, 1530496939U, 2403941728U,
                                                       1442483633U, 2065122346U, 2811423260U,
                                                       493693162U, 3790098226U, 1390699531U,
                                                       757701913U, 3852417292U, 3793516835U,
                                                       4244255285U, 1168273524U};
  unsigned int _TIG_JD_tgVA_4_fib_block_45_379[4]  = {3015308295U, 2456679650U, 382995624U,
                                                      3991129455U};
  unsigned int _TIG_JD_tgVA_4_fib_block_11_380[64]  = {3865797297U, 3760891365U, 761558494U,
                                                       522395450U, 1480491644U, 2891198548U,
                                                       1519005496U, 1530496939U, 2403941728U,
                                                       1442483633U, 1858616483U, 81869482U,
                                                       3454081999U, 2597673017U, 200363617U,
                                                       2562688756U, 4090355843U, 2708521218U,
                                                       1511374732U, 3446476188U, 3614067952U,
                                                       2435222532U, 388395449U, 912476982U,
                                                       3547968886U, 3173653027U, 871305017U,
                                                       3259154193U, 3101847575U, 756771728U,
                                                       2327104970U, 1019452678U, 442815909U,
                                                       700069472U, 1095519425U, 1768387736U,
                                                       1818192604U, 4236198370U, 3814031360U,
                                                       1189757590U, 3023753826U, 2739226783U,
                                                       2156124722U, 3477832816U, 1435206690U,
                                                       851526480U, 288826703U, 2295426325U,
                                                       765364733U, 314182458U, 1302102285U,
                                                       4044365254U, 1350085867U, 2327042791U,
                                                       2646364860U, 685302043U, 2393284064U,
                                                       2818684551U, 1505435969U, 231646484U,
                                                       2293674092U, 3011685368U, 2717629007U,
                                                       1143989579U};
  unsigned int _TIG_JD_tgVA_4_fib_block_9_381[52]  = {3865797297U, 3760891365U, 761558494U,
                                                      522395450U, 1480491644U, 2891198548U,
                                                      1519005496U, 1530496939U, 2403941728U,
                                                      1442483633U, 1858616483U, 81869482U,
                                                      2076120487U, 2292022325U, 3366769101U,
                                                      3508836953U, 4090355843U, 2708521218U,
                                                      1511374732U, 3446476188U, 1876910925U,
                                                      536463251U, 2197550066U, 3501948937U,
                                                      547583834U, 3623775089U, 1981748454U,
                                                      1063841909U, 4271294509U, 225703631U,
                                                      2958159265U, 2645632558U, 2559317737U,
                                                      1588016446U, 2231691452U, 2354989324U,
                                                      2169634577U, 358377711U, 1069402571U,
                                                      1662752816U, 3830892764U, 1689755131U,
                                                      2851650795U, 3909011913U, 1897854345U,
                                                      830458887U, 463361367U, 3769071849U,
                                                      1692392660U, 2129805510U, 392103132U,
                                                      173460717U};
  unsigned int _TIG_JD_tgVA_4_fib_block_13_382[10]  = {3865797297U, 3760891365U, 761558494U,
                                                       522395450U, 1480491644U, 2891198548U,
                                                       1519005496U, 1530496939U, 2717629007U,
                                                       1143989579U};
  unsigned int _TIG_JD_tgVA_4_fib_block_51_383[4]  = {3015308295U, 2456679650U, 382995624U,
                                                      3991129455U};
  unsigned int _TIG_JD_tgVA_4_fib_block_40_384[4]  = {3015308295U, 2456679650U, 382995624U,
                                                      3991129455U};
  unsigned int _TIG_JD_tgVA_4_fib_block_6_385[10]  = {3865797297U, 3760891365U, 761558494U,
                                                      522395450U, 1480491644U, 2891198548U,
                                                      1519005496U, 1530496939U, 2717629007U,
                                                      1143989579U};
  unsigned int _TIG_JD_tgVA_4_fib_block_38_386[4]  = {3015308295U, 2456679650U, 382995624U,
                                                      3991129455U};
  unsigned int _TIG_JD_tgVA_4_fib_block_48_387[4]  = {3015308295U, 2456679650U, 382995624U,
                                                      3991129455U};
  unsigned int _TIG_JD_tgVA_4_fib_block_47_388[4]  = {3015308295U, 2456679650U, 382995624U,
                                                      3991129455U};
  unsigned int _TIG_JD_tgVA_4_fib_block_37_389[4]  = {3015308295U, 2456679650U, 382995624U,
                                                      3991129455U};
  unsigned int _TIG_JD_tgVA_4_fib_block_46_390[4]  = {3015308295U, 2456679650U, 382995624U,
                                                      3991129455U};
  unsigned int _TIG_JD_tgVA_4_fib_block_35_391[4]  = {3015308295U, 2456679650U, 382995624U,
                                                      3991129455U};
  unsigned int _TIG_JD_tgVA_4_fib_block_29_392[48]  = {3865797297U, 3760891365U, 761558494U,
                                                       522395450U, 1480491644U, 2891198548U,
                                                       1519005496U, 1530496939U, 2403941728U,
                                                       1442483633U, 1858616483U, 81869482U,
                                                       748308417U, 1743382048U, 1412371038U,
                                                       3227713196U, 14687428U, 1150780574U,
                                                       3926256925U, 3205123961U, 1432412270U,
                                                       2094769909U, 3485264083U, 779957132U,
                                                       2402032157U, 617753438U, 2398795273U,
                                                       510527512U, 2784173030U, 2154055888U,
                                                       3306381074U, 3628436678U, 197948139U,
                                                       3400525342U, 3815749639U, 3581645820U,
                                                       1949698010U, 3232014597U, 4011323351U,
                                                       2161825555U, 2686584926U, 3283896859U,
                                                       3101847575U, 756771728U, 3827806865U,
                                                       2818977076U, 3284762216U, 348721987U};
  unsigned int _TIG_JD_tgVA_4_fib_block_43_393[4]  = {3015308295U, 2456679650U, 382995624U,
                                                      3991129455U};
  jit_label *self394 ;
  struct jit_op *op395 ;
  jit_label *label396 ;
  struct jit_op *op397 ;
  jit_label *label398 ;
  jit_label *label399 ;
  struct jit_op *op400 ;
  struct jit_op *op401 ;
  jit_label *label402 ;
  struct jit_op *op403 ;
  jit_label *label404 ;
  struct jit_op *op405 ;
  struct jit_op *op406 ;
  jit_label *label407 ;
  struct jit_op *op408 ;
  jit_label *label409 ;
  struct jit_op *op410 ;
  jit_label *label411 ;
  struct jit_op *op412 ;
  struct jit_op *op413 ;
  jit_label *label414 ;
  struct jit_op *op415 ;
  jit_label *label416 ;
  struct jit_op *op417 ;
  jit_label *label418 ;
  struct jit_op *op419 ;
  struct jit_op *op420 ;
  jit_label *label421 ;
  struct jit_op *op422 ;
  struct jit_op *op423 ;
  struct jit_op *op424 ;
  struct jit_op *op425 ;
  struct jit_op *op426 ;
  struct jit_op *op427 ;
  struct jit_op *op428 ;
  struct jit_op *op429 ;
  struct jit_op *op430 ;
  struct jit_op *op431 ;
  struct jit_op *op432 ;
  struct jit_op *op433 ;
  struct jit_op *op434 ;
  struct jit_op *op435 ;
  struct jit_op *op436 ;
  struct jit_op *op437 ;
  struct jit_op *op438 ;
  struct jit_op *op439 ;
  struct jit_op *op440 ;
  struct jit_op *op441 ;
  struct jit_op *op442 ;
  struct jit_op *op443 ;
  struct jit_op *op444 ;
  struct jit_op *op445 ;
  struct jit_op *op446 ;
  struct jit_op *op447 ;
  struct jit_op *op448 ;
  struct jit_op *op449 ;
  struct jit_op *op450 ;
  struct jit_op *op451 ;
  struct jit_op *op452 ;
  struct jit_op *op453 ;
  struct jit_op *op454 ;
  struct jit_op *op455 ;
  struct jit_op *op456 ;
  struct jit_op *op457 ;
  struct jit_op *op458 ;
  struct jit_op *op459 ;
  struct jit_op *op460 ;
  struct jit_op *op461 ;
  struct jit_op *op462 ;
  struct jit_op *op463 ;
  struct jit_op *op464 ;
  struct jit_op *op465 ;
  struct jit_op *op466 ;
  struct jit_op *op467 ;
  struct jit_op *op468 ;
  struct jit_op *op469 ;
  struct jit_op *op470 ;
  struct jit_op *op471 ;
  struct jit_op *op472 ;
  struct jit_op *op473 ;
  jit_label *label474 ;
  struct jit_op *op475 ;
  struct jit_op *op476 ;
  jit_label *label477 ;
  struct jit_op *op478 ;
  jit_label *label479 ;
  struct jit_op *op480 ;
  jit_label *label481 ;
  jit_label *label482 ;
  struct jit_op *op483 ;
  struct jit_op *op484 ;
  jit_label *label485 ;
  struct jit_op *op486 ;
  jit_label *label487 ;
  struct jit_op *op488 ;
  struct jit_op *op489 ;
  jit_label *label490 ;
  struct jit_op *op491 ;
  struct jit_op *op492 ;
  jit_label *label493 ;
  struct jit_op *op494 ;
  jit_label *label495 ;
  struct jit_op *op496 ;
  struct jit_op *op497 ;
  jit_label *label498 ;
  struct jit_op *op499 ;
  struct jit_op *op500 ;
  jit_label *label501 ;
  jit_label *label502 ;
  struct jit_op *op503 ;
  jit_label *label504 ;
  struct jit_op *op505 ;
  jit_label *label506 ;
  struct jit_op *op507 ;
  jit_label *label508 ;
  jit_label *label509 ;
  jit_label *label510 ;
  struct jit_op *op511 ;
  struct jit_op *op512 ;
  jit_label *label513 ;
  jit_label *label514 ;
  struct jit_op *op515 ;
  jit_label *label516 ;
  struct jit_op *op517 ;
  jit_label *label518 ;
  struct jit_op *op519 ;
  jit_label *label520 ;
  struct jit_op *op521 ;
  jit_label *label522 ;
  struct jit_op *op523 ;
  jit_label *label524 ;
  struct jit_op *op525 ;
  jit_label *label526 ;
  struct jit_op *op527 ;
  struct jit_op *op528 ;
  jit_label *label529 ;
  struct jit_op *op530 ;
  jit_label *label531 ;
  struct jit_op *op532 ;
  jit_label *label533 ;
  struct jit_op *op534 ;
  struct jit_op *op535 ;
  jit_label *label536 ;
  struct jit_op *op537 ;
  jit_label *label538 ;
  jit_label *label539 ;
  jit_label *label540 ;
  struct jit_op *op541 ;
  jit_label *label542 ;
  struct jit_op *op543 ;
  jit_label *label544 ;
  struct jit_op *op545 ;
  jit_label *label546 ;
  struct jit_op *op547 ;
  jit_label *label548 ;
  struct jit_op *op549 ;
  jit_label *label550 ;
  jit_label *label551 ;
  jit_label *label552 ;
  jit_label *label553 ;
  jit_label *label554 ;
  struct jit_op *op555 ;
  jit_label *label556 ;
  struct jit_op *op557 ;
  struct jit_op *op558 ;
  jit_label *label559 ;
  struct jit_op *op560 ;
  jit_label *label561 ;
  jit_label *label562 ;
  struct jit_op *op563 ;
  jit_label *label564 ;
  jit_label *label565 ;
  struct jit_op *op566 ;
  jit_label *label567 ;
  struct jit_op *op568 ;
  jit_label *label569 ;
  struct jit_op *op570 ;
  jit_label *label571 ;
  jit_label *label572 ;
  jit_label *label573 ;
  struct jit_op *op574 ;
  jit_label *label575 ;
  struct jit_op *op576 ;
  jit_label *label577 ;
  struct jit_op *op578 ;
  struct jit_op *op579 ;
  jit_label *label580 ;
  struct jit_op *op581 ;
  jit_label *label582 ;
  jit_label *label583 ;
  struct jit_op *op584 ;
  struct jit_op *op585 ;
  jit_label *label586 ;
  jit_label *label587 ;
  struct jit_op *op588 ;
  struct jit_op *op589 ;
  jit_label *label590 ;
  struct jit_op *op591 ;
  jit_label *label592 ;
  struct jit_op *op593 ;
  struct jit_op *op594 ;
  jit_label *label595 ;
  struct jit_op *op596 ;
  jit_label *label597 ;
  struct jit_op *op598 ;
  jit_label *label599 ;
  struct jit_op *op600 ;
  jit_label *label601 ;
  struct jit_op *op602 ;
  jit_label *label603 ;
  struct jit_op *op604 ;
  jit_label *label605 ;
  jit_label *label606 ;
  jit_label *label607 ;
  jit_label *label608 ;
  jit_label *label609 ;
  jit_label *label610 ;
  jit_label *label611 ;
  jit_label *label612 ;
  jit_label *label613 ;
  jit_label *label614 ;
  jit_label *label615 ;
  jit_label *label616 ;
  jit_label *label617 ;
  struct jit_op *op618 ;
  jit_label *label619 ;
  struct jit_op *op620 ;
  jit_label *label621 ;
  jit_label *label622 ;
  struct jit_op *op623 ;
  jit_label *label624 ;
  jit_label *label625 ;
  jit_label *label626 ;
  jit_label *label627 ;
  jit_label *label628 ;
  jit_label *label629 ;
  jit_label *label630 ;
  jit_label *label631 ;
  jit_label *label632 ;
  jit_label *label633 ;
  struct jit_op *op634 ;
  jit_label *label635 ;
  jit_label *label636 ;
  struct jit_op *op637 ;
  jit_label *label638 ;
  jit_label *label639 ;
  jit_label *label640 ;
  jit_label *label641 ;
  jit_label *label642 ;
  jit_label *label643 ;
  jit_label *label644 ;
  jit_label *label645 ;
  jit_label *label646 ;
  jit_label *label647 ;
  jit_label *label648 ;
  jit_label *label649 ;
  int measure_iter650 ;
  unsigned int low651 ;
  unsigned int high652 ;
  unsigned int low653 ;
  unsigned int high654 ;
  struct timeval __cil_tmp655 ;
  int __cil_tmp656 ;
  struct timeval __cil_tmp657 ;
  int __cil_tmp658 ;
  struct timeval res659 ;
  struct timeval t0660 ;
  struct timeval t1661 ;
  struct timeval t0662 ;

  {
  __cil_tmp656 = gettimeofday(& __cil_tmp655, 0);
  __asm__ volatile ("cpuid\n"
                    "rdtsc\n": "=a" (low651), "=d" (high652));
  measure_iter650 = 0;
  while (measure_iter650 < 100) {
    if (p20 != 0) {
      jit_free(p20);
      p20 = 0;
    } else {

    }
    p20 = jit_init();
    jit_enable_optimization(p20, 1L);
    jit_enable_optimization(p20, 2L);
    jit_enable_optimization(p20, 4L);
    jit_enable_optimization(p20, 8L);
    self394 = jit_get_label(p20);
    jit_add_prolog(p20, & _TIG_JD_tgVA_4_fib___foo, 0);
    localSize22 = jit_allocai(p20, 1396L);
    jit_add_op(p20, JIT_DECL_ARG, ((0 << 4) | (2 << 2)) | 2, 0, 4, 0L, 0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 1336),
               0L, 0);
    jit_add_op(p20, JIT_GETARG, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)), 0L, 4, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 1360),
               0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)),
               (jit_value )(& _TIG_VZ_tgVA_3_fib_$strings), 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((5 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 1376),
               0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((6 & 268435455) << 4)),
               (jit_value )(& printf), 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((5 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((6 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((7 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 1384),
               0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((8 & 268435455) << 4)),
               (jit_value )(& _TIG_JD_tgVA_4_fib___t), 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((7 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((8 & 268435455) << 4)), 0L, 8, 0);
    op395 = jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, 0, 0L, 0L, 0L,
                       0);
    label396 = jit_get_label(p20);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 1320),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 1320),
               0L, 0);
    jit_add_op(p20, JIT_LD | (1 | 4), ((0 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)),
               1L, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 1, ((0 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((5 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)), 0L, 0L, 0);
    jit_add_op(p20, JIT_MUL | (2 | 4), ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((6 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((5 & 268435455) << 4)), 8L, 0L, 0);
    jit_add_op(p20, JIT_ADD | 1, ((1 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((7 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), (0 & 1) | (((0 & 3) << 1) | ((6 & 268435455) << 4)),
               0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((7 & 268435455) << 4)), 0L, 8, 0);
    op397 = jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, 0, 0L, 0L, 0L,
                       0);
    jit_add_op(p20, JIT_CODE_ALIGN | 2, ((0 << 4) | (0 << 2)) | 2, 8L, 0L, 0L, 0L,
               0);
    label398 = jit_get_label(p20);
    jit_data_bytes(p20, 16L, (unsigned char *)(_TIG_JD_tgVA_4_fib_block_50_362));
    label399 = jit_get_label(p20);
    op400 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               (jit_value )(KEY_1494878675_538327513_1893549042_1808446567), 0L, 0L,
               0);
    jit_add_op(p20, JIT_PREPARE, ((0 << 4) | (2 << 2)) | 2, 0L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 51L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 32L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 16L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CALL | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )(& _cipher$_xtea_encipher),
               0L, 0L, 0L, 0);
    op401 = jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, 0, 0L, 0L, 0L,
                       0);
    label402 = jit_get_label(p20);
    op403 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               (jit_value )(KEY_1494878675_538327513_1893549042_1808446567), 0L, 0L,
               0);
    jit_add_op(p20, JIT_PREPARE, ((0 << 4) | (2 << 2)) | 2, 0L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 19L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 32L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 176L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CALL | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )(& _cipher$_xtea_encipher),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )label399,
               0L, 0L, 0L, 0);
    label404 = jit_get_label(p20);
    op405 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               (jit_value )(KEY_1494878675_538327513_1893549042_1808446567), 0L, 0L,
               0);
    jit_add_op(p20, JIT_PREPARE, ((0 << 4) | (2 << 2)) | 2, 0L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 19L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 32L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 176L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CALL | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )(& _cipher$_xtea_decipher),
               0L, 0L, 0L, 0);
    op406 = jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, 0, 0L, 0L, 0L,
                       0);
    label407 = jit_get_label(p20);
    jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               (jit_value )label398, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               (jit_value )(KEY_1494878675_538327513_1893549042_1808446567), 0L, 0L,
               0);
    jit_add_op(p20, JIT_PREPARE, ((0 << 4) | (2 << 2)) | 2, 0L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 50L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 32L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 16L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CALL | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )(& _cipher$_xtea_encipher),
               0L, 0L, 0L, 0);
    op408 = jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, 0, 0L, 0L, 0L,
                       0);
    jit_add_op(p20, JIT_CODE_ALIGN | 2, ((0 << 4) | (0 << 2)) | 2, 8L, 0L, 0L, 0L,
               0);
    label409 = jit_get_label(p20);
    jit_data_bytes(p20, 216L, (unsigned char *)(_TIG_JD_tgVA_4_fib_block_15_363));
    jit_add_op(p20, JIT_TOUCH, ((0 << 4) | (0 << 2)) | 3, 4L, 0L, 0L, 0L, 0);
    op410 = jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, 0, 0L, 0L, 0L,
                       0);
    label411 = jit_get_label(p20);
    op412 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               (jit_value )(KEY_1494878675_538327513_1893549042_1808446567), 0L, 0L,
               0);
    jit_add_op(p20, JIT_PREPARE, ((0 << 4) | (2 << 2)) | 2, 0L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 43L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 32L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 16L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CALL | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )(& _cipher$_xtea_decipher),
               0L, 0L, 0L, 0);
    op413 = jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, 0, 0L, 0L, 0L,
                       0);
    jit_add_op(p20, JIT_CODE_ALIGN | 2, ((0 << 4) | (0 << 2)) | 2, 8L, 0L, 0L, 0L,
               0);
    label414 = jit_get_label(p20);
    jit_data_bytes(p20, 248L, (unsigned char *)(_TIG_JD_tgVA_4_fib_block_8_364));
    jit_add_op(p20, JIT_TOUCH, ((0 << 4) | (0 << 2)) | 3, 4L, 0L, 0L, 0L, 0);
    op415 = jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, 0, 0L, 0L, 0L,
                       0);
    label416 = jit_get_label(p20);
    op417 = jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, 0, 0L, 0L, 0L,
                       0);
    label418 = jit_get_label(p20);
    op419 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               (jit_value )(KEY_1494878675_538327513_1893549042_1808446567), 0L, 0L,
               0);
    jit_add_op(p20, JIT_PREPARE, ((0 << 4) | (2 << 2)) | 2, 0L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 40L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 32L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 16L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CALL | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )(& _cipher$_xtea_encipher),
               0L, 0L, 0L, 0);
    op420 = jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, 0, 0L, 0L, 0L,
                       0);
    label421 = jit_get_label(p20);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 752L, 0L, 0);
    op422 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 744L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
               1L, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 1, ((0 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 736L, 0L, 0);
    op423 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 728L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
               1L, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 1, ((0 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 720L, 0L, 0);
    op424 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 712L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
               1L, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 1, ((0 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 704L, 0L, 0);
    op425 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 696L, 0L, 0);
    op426 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 688L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
               548L, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 1, ((0 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 680L, 0L, 0);
    op427 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 672L, 0L, 0);
    jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
               (jit_value )label416, 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 664L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
               528L, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 1, ((0 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 656L, 0L, 0);
    op428 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 648L, 0L, 0);
    op429 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 640L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
               544L, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 1, ((0 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 632L, 0L, 0);
    op430 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 624L, 0L, 0);
    jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
               (jit_value )label416, 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 616L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 1, ((0 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 608L, 0L, 0);
    op431 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 600L, 0L, 0);
    op432 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 592L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
               536L, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 1, ((0 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 584L, 0L, 0);
    op433 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 576L, 0L, 0);
    op434 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 568L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 1, ((0 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 560L, 0L, 0);
    op435 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 552L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
               4294967249L, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 1, ((0 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 544L, 0L, 0);
    op436 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 536L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
               4294967251L, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 1, ((0 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 528L, 0L, 0);
    op437 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 520L, 0L, 0);
    op438 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 512L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
               532L, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 1, ((0 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 504L, 0L, 0);
    op439 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 496L, 0L, 0);
    op440 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 488L, 0L, 0);
    jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
               (jit_value )label416, 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 480L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
               532L, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 1, ((0 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 472L, 0L, 0);
    op441 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 464L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
               1L, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 1, ((0 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 456L, 0L, 0);
    op442 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 448L, 0L, 0);
    op443 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 440L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
               524L, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 1, ((0 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 432L, 0L, 0);
    op444 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 424L, 0L, 0);
    jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
               (jit_value )label416, 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 416L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
               528L, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 1, ((0 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 408L, 0L, 0);
    op445 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 400L, 0L, 0);
    op446 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 392L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
               520L, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 1, ((0 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 384L, 0L, 0);
    op447 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 376L, 0L, 0);
    jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
               (jit_value )label416, 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 368L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
               524L, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 1, ((0 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 360L, 0L, 0);
    op448 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 352L, 0L, 0);
    op449 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 344L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
               528L, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 1, ((0 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 336L, 0L, 0);
    op450 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 328L, 0L, 0);
    op451 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 320L, 0L, 0);
    jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
               (jit_value )label416, 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 312L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
               520L, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 1, ((0 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 304L, 0L, 0);
    op452 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 296L, 0L, 0);
    jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
               (jit_value )label416, 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 288L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
               524L, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 1, ((0 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 280L, 0L, 0);
    op453 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 272L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
               36L, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 1, ((0 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 264L, 0L, 0);
    op454 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 256L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
               1L, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 1, ((0 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 248L, 0L, 0);
    op455 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 240L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
               5L, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 1, ((0 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 232L, 0L, 0);
    op456 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 224L, 0L, 0);
    op457 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 216L, 0L, 0);
    jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
               (jit_value )label416, 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 208L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 1, ((0 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 200L, 0L, 0);
    op458 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 192L, 0L, 0);
    jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
               (jit_value )label416, 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 184L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
               532L, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 1, ((0 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 176L, 0L, 0);
    op459 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 168L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
               1L, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 1, ((0 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 160L, 0L, 0);
    op460 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 152L, 0L, 0);
    op461 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 144L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
               532L, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 1, ((0 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 136L, 0L, 0);
    op462 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 128L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
               1L, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 1, ((0 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 120L, 0L, 0);
    op463 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 112L, 0L, 0);
    op464 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 104L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
               528L, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 1, ((0 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 96L, 0L, 0);
    op465 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 88L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
               1L, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 1, ((0 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 80L, 0L, 0);
    op466 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 72L, 0L, 0);
    op467 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 64L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
               524L, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 1, ((0 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 56L, 0L, 0);
    op468 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 48L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
               1L, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 1, ((0 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 40L, 0L, 0);
    op469 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 32L, 0L, 0);
    op470 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 24L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
               520L, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 1, ((0 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 16L, 0L, 0);
    op471 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 8L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 1, ((0 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    op472 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 760),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 768),
               0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
               8L, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 1, ((0 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 0L, 0);
    jit_add_op(p20, JIT_ADD | 1, ((1 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((5 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)), (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)),
               0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((5 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 1320),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 0),
               0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 1328),
               0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 768),
               0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 1, ((0 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 0L, 0);
    jit_add_op(p20, JIT_ADD | 1, ((1 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((5 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)), (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)),
               0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((5 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 1328),
               0L, 0);
    jit_add_op(p20, JIT_LD | (1 | 4), ((0 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 1336),
               0L, 0);
    jit_add_op(p20, JIT_MOV | 1, ((0 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 0L, 0);
    jit_add_op(p20, JIT_ST | 1, ((0 << 4) | (1 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)), 0L, 8, 0);
    op473 = jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, 0, 0L, 0L, 0L,
                       0);
    label474 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op417, 0L,
               0L, 0L, 0);
    op475 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               (jit_value )(KEY_1494878675_538327513_1893549042_1808446567), 0L, 0L,
               0);
    jit_add_op(p20, JIT_PREPARE, ((0 << 4) | (2 << 2)) | 2, 0L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 17L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 32L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 128L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CALL | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )(& _cipher$_xtea_decipher),
               0L, 0L, 0L, 0);
    op476 = jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, 0, 0L, 0L, 0L,
                       0);
    jit_add_op(p20, JIT_CODE_ALIGN | 2, ((0 << 4) | (0 << 2)) | 2, 8L, 0L, 0L, 0L,
               0);
    label477 = jit_get_label(p20);
    jit_data_bytes(p20, 88L, (unsigned char *)(_TIG_JD_tgVA_4_fib_block_3_365));
    jit_add_op(p20, JIT_TOUCH, ((0 << 4) | (0 << 2)) | 3, 4L, 0L, 0L, 0L, 0);
    op478 = jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, 0, 0L, 0L, 0L,
                       0);
    jit_add_op(p20, JIT_CODE_ALIGN | 2, ((0 << 4) | (0 << 2)) | 2, 8L, 0L, 0L, 0L,
               0);
    label479 = jit_get_label(p20);
    jit_data_bytes(p20, 128L, (unsigned char *)(_TIG_JD_tgVA_4_fib_block_16_366));
    jit_add_op(p20, JIT_TOUCH, ((0 << 4) | (0 << 2)) | 3, 4L, 0L, 0L, 0L, 0);
    op480 = jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, 0, 0L, 0L, 0L,
                       0);
    jit_add_op(p20, JIT_CODE_ALIGN | 2, ((0 << 4) | (0 << 2)) | 2, 8L, 0L, 0L, 0L,
               0);
    label481 = jit_get_label(p20);
    jit_data_bytes(p20, 16L, (unsigned char *)(_TIG_JD_tgVA_4_fib_block_36_367));
    jit_add_op(p20, JIT_TOUCH, ((0 << 4) | (0 << 2)) | 3, 4L, 0L, 0L, 0L, 0);
    label482 = jit_get_label(p20);
    op483 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               (jit_value )(KEY_1494878675_538327513_1893549042_1808446567), 0L, 0L,
               0);
    jit_add_op(p20, JIT_PREPARE, ((0 << 4) | (2 << 2)) | 2, 0L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 28L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 32L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 192L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CALL | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )(& _cipher$_xtea_decipher),
               0L, 0L, 0L, 0);
    op484 = jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, 0, 0L, 0L, 0L,
                       0);
    label485 = jit_get_label(p20);
    op486 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               (jit_value )(KEY_1494878675_538327513_1893549042_1808446567), 0L, 0L,
               0);
    jit_add_op(p20, JIT_PREPARE, ((0 << 4) | (2 << 2)) | 2, 0L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 43L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 32L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 16L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CALL | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )(& _cipher$_xtea_encipher),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )label418,
               0L, 0L, 0L, 0);
    label487 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op406, 0L,
               0L, 0L, 0);
    op488 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               (jit_value )(KEY_1494878675_538327513_1893549042_1808446567), 0L, 0L,
               0);
    jit_add_op(p20, JIT_PREPARE, ((0 << 4) | (2 << 2)) | 2, 0L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 47L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 32L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 16L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CALL | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )(& _cipher$_xtea_decipher),
               0L, 0L, 0L, 0);
    op489 = jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, 0, 0L, 0L, 0L,
                       0);
    label490 = jit_get_label(p20);
    op491 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               (jit_value )(KEY_1494878675_538327513_1893549042_1808446567), 0L, 0L,
               0);
    jit_add_op(p20, JIT_PREPARE, ((0 << 4) | (2 << 2)) | 2, 0L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 10L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 32L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 192L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CALL | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )(& _cipher$_xtea_encipher),
               0L, 0L, 0L, 0);
    op492 = jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, 0, 0L, 0L, 0L,
                       0);
    jit_add_op(p20, JIT_CODE_ALIGN | 2, ((0 << 4) | (0 << 2)) | 2, 8L, 0L, 0L, 0L,
               0);
    label493 = jit_get_label(p20);
    jit_data_bytes(p20, 40L, (unsigned char *)(_TIG_JD_tgVA_4_fib_block_26_368));
    jit_add_op(p20, JIT_TOUCH, ((0 << 4) | (0 << 2)) | 3, 4L, 0L, 0L, 0L, 0);
    op494 = jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, 0, 0L, 0L, 0L,
                       0);
    label495 = jit_get_label(p20);
    op496 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               (jit_value )(KEY_1494878675_538327513_1893549042_1808446567), 0L, 0L,
               0);
    jit_add_op(p20, JIT_PREPARE, ((0 << 4) | (2 << 2)) | 2, 0L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 5L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 32L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 40L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CALL | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )(& _cipher$_xtea_decipher),
               0L, 0L, 0L, 0);
    op497 = jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, 0, 0L, 0L, 0L,
                       0);
    label498 = jit_get_label(p20);
    op499 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               (jit_value )(KEY_1494878675_538327513_1893549042_1808446567), 0L, 0L,
               0);
    jit_add_op(p20, JIT_PREPARE, ((0 << 4) | (2 << 2)) | 2, 0L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 38L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 32L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 16L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CALL | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )(& _cipher$_xtea_decipher),
               0L, 0L, 0L, 0);
    op500 = jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, 0, 0L, 0L, 0L,
                       0);
    jit_add_op(p20, JIT_CODE_ALIGN | 2, ((0 << 4) | (0 << 2)) | 2, 8L, 0L, 0L, 0L,
               0);
    label501 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op405, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op403, 0L,
               0L, 0L, 0);
    jit_data_bytes(p20, 176L, (unsigned char *)(_TIG_JD_tgVA_4_fib_block_19_369));
    jit_add_op(p20, JIT_TOUCH, ((0 << 4) | (0 << 2)) | 3, 4L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )label493,
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CODE_ALIGN | 2, ((0 << 4) | (0 << 2)) | 2, 8L, 0L, 0L, 0L,
               0);
    label502 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op476, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op475, 0L,
               0L, 0L, 0);
    jit_data_bytes(p20, 128L, (unsigned char *)(_TIG_JD_tgVA_4_fib_block_17_370));
    jit_add_op(p20, JIT_TOUCH, ((0 << 4) | (0 << 2)) | 3, 4L, 0L, 0L, 0L, 0);
    op503 = jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, 0, 0L, 0L, 0L,
                       0);
    label504 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op497, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               (jit_value )label409, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               (jit_value )(KEY_1494878675_538327513_1893549042_1808446567), 0L, 0L,
               0);
    jit_add_op(p20, JIT_PREPARE, ((0 << 4) | (2 << 2)) | 2, 0L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 15L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 32L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 216L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CALL | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )(& _cipher$_xtea_decipher),
               0L, 0L, 0L, 0);
    op505 = jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, 0, 0L, 0L, 0L,
                       0);
    label506 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op456, 0L,
               0L, 0L, 0);
    op507 = jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, 0, 0L, 0L, 0L,
                       0);
    jit_add_op(p20, JIT_CODE_ALIGN | 2, ((0 << 4) | (0 << 2)) | 2, 8L, 0L, 0L, 0L,
               0);
    label508 = jit_get_label(p20);
    jit_data_bytes(p20, 208L, (unsigned char *)(_TIG_JD_tgVA_4_fib_block_27_371));
    jit_add_op(p20, JIT_TOUCH, ((0 << 4) | (0 << 2)) | 3, 4L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )label481,
               0L, 0L, 0L, 0);
    label509 = jit_get_label(p20);
    jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               (jit_value )label414, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               (jit_value )(KEY_1494878675_538327513_1893549042_1808446567), 0L, 0L,
               0);
    jit_add_op(p20, JIT_PREPARE, ((0 << 4) | (2 << 2)) | 2, 0L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 8L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 32L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 248L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CALL | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )(& _cipher$_xtea_decipher),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )label414,
               0L, 0L, 0L, 0);
    label510 = jit_get_label(p20);
    op511 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               (jit_value )(KEY_1494878675_538327513_1893549042_1808446567), 0L, 0L,
               0);
    jit_add_op(p20, JIT_PREPARE, ((0 << 4) | (2 << 2)) | 2, 0L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 13L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 32L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 40L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CALL | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )(& _cipher$_xtea_encipher),
               0L, 0L, 0L, 0);
    op512 = jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, 0, 0L, 0L, 0L,
                       0);
    jit_add_op(p20, JIT_CODE_ALIGN | 2, ((0 << 4) | (0 << 2)) | 2, 8L, 0L, 0L, 0L,
               0);
    label513 = jit_get_label(p20);
    jit_data_bytes(p20, 16L, (unsigned char *)(_TIG_JD_tgVA_4_fib_block_34_372));
    jit_add_op(p20, JIT_TOUCH, ((0 << 4) | (0 << 2)) | 3, 4L, 0L, 0L, 0L, 0);
    label514 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op500, 0L,
               0L, 0L, 0);
    op515 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               (jit_value )(KEY_1494878675_538327513_1893549042_1808446567), 0L, 0L,
               0);
    jit_add_op(p20, JIT_PREPARE, ((0 << 4) | (2 << 2)) | 2, 0L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 48L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 32L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 16L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CALL | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )(& _cipher$_xtea_decipher),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )label482,
               0L, 0L, 0L, 0);
    label516 = jit_get_label(p20);
    op517 = jit_add_op(p20, JIT_DATA_REF_CODE | 2, ((0 << 4) | (0 << 2)) | 2, 0, 0L,
                       0L, 0L, 0);
    jit_add_op(p20, JIT_CODE_ALIGN | 2, ((0 << 4) | (0 << 2)) | 2, 8L, 0L, 0L, 0L,
               0);
    label518 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op483, 0L,
               0L, 0L, 0);
    jit_data_bytes(p20, 192L, (unsigned char *)(_TIG_JD_tgVA_4_fib_block_28_373));
    jit_add_op(p20, JIT_TOUCH, ((0 << 4) | (0 << 2)) | 3, 4L, 0L, 0L, 0L, 0);
    op519 = jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, 0, 0L, 0L, 0L,
                       0);
    label520 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op457, 0L,
               0L, 0L, 0);
    op521 = jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, 0, 0L, 0L, 0L,
                       0);
    jit_add_op(p20, JIT_CODE_ALIGN | 2, ((0 << 4) | (0 << 2)) | 2, 8L, 0L, 0L, 0L,
               0);
    label522 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op496, 0L,
               0L, 0L, 0);
    jit_data_bytes(p20, 40L, (unsigned char *)(_TIG_JD_tgVA_4_fib_block_5_374));
    jit_add_op(p20, JIT_TOUCH, ((0 << 4) | (0 << 2)) | 3, 4L, 0L, 0L, 0L, 0);
    op523 = jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, 0, 0L, 0L, 0L,
                       0);
    label524 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op420, 0L,
               0L, 0L, 0);
    op525 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               (jit_value )(KEY_1494878675_538327513_1893549042_1808446567), 0L, 0L,
               0);
    jit_add_op(p20, JIT_PREPARE, ((0 << 4) | (2 << 2)) | 2, 0L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 11L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 32L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 256L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CALL | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )(& _cipher$_xtea_encipher),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )label510,
               0L, 0L, 0L, 0);
    label526 = jit_get_label(p20);
    op527 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               (jit_value )(KEY_1494878675_538327513_1893549042_1808446567), 0L, 0L,
               0);
    jit_add_op(p20, JIT_PREPARE, ((0 << 4) | (2 << 2)) | 2, 0L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 12L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 32L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 80L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CALL | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )(& _cipher$_xtea_encipher),
               0L, 0L, 0L, 0);
    op528 = jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, 0, 0L, 0L, 0L,
                       0);
    label529 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op470, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op467, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op464, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op461, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op449, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op446, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op443, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op438, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op429, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op426, 0L,
               0L, 0L, 0);
    op530 = jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, 0, 0L, 0L, 0L,
                       0);
    label531 = jit_get_label(p20);
    op532 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               (jit_value )(KEY_1494878675_538327513_1893549042_1808446567), 0L, 0L,
               0);
    jit_add_op(p20, JIT_PREPARE, ((0 << 4) | (2 << 2)) | 2, 0L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 35L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 32L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 16L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CALL | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )(& _cipher$_xtea_decipher),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )label498,
               0L, 0L, 0L, 0);
    label533 = jit_get_label(p20);
    op534 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               (jit_value )(KEY_1494878675_538327513_1893549042_1808446567), 0L, 0L,
               0);
    jit_add_op(p20, JIT_PREPARE, ((0 << 4) | (2 << 2)) | 2, 0L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 11L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 32L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 256L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CALL | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )(& _cipher$_xtea_decipher),
               0L, 0L, 0L, 0);
    op535 = jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, 0, 0L, 0L, 0L,
                       0);
    label536 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op480, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               (jit_value )label479, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               (jit_value )(KEY_1494878675_538327513_1893549042_1808446567), 0L, 0L,
               0);
    jit_add_op(p20, JIT_PREPARE, ((0 << 4) | (2 << 2)) | 2, 0L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 16L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 32L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 128L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CALL | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )(& _cipher$_xtea_encipher),
               0L, 0L, 0L, 0);
    op537 = jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, 0, 0L, 0L, 0L,
                       0);
    jit_add_op(p20, JIT_CODE_ALIGN | 2, ((0 << 4) | (0 << 2)) | 2, 8L, 0L, 0L, 0L,
               0);
    label538 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op491, 0L,
               0L, 0L, 0);
    jit_data_bytes(p20, 192L, (unsigned char *)(_TIG_JD_tgVA_4_fib_block_10_375));
    jit_add_op(p20, JIT_TOUCH, ((0 << 4) | (0 << 2)) | 3, 4L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )label490,
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CODE_ALIGN | 2, ((0 << 4) | (0 << 2)) | 2, 8L, 0L, 0L, 0L,
               0);
    label539 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op473, 0L,
               0L, 0L, 0);
    jit_data_bytes(p20, 16L, (unsigned char *)(_TIG_JD_tgVA_4_fib_block_39_376));
    jit_add_op(p20, JIT_TOUCH, ((0 << 4) | (0 << 2)) | 3, 4L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CODE_ALIGN | 2, ((0 << 4) | (0 << 2)) | 2, 8L, 0L, 0L, 0L,
               0);
    label540 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op523, 0L,
               0L, 0L, 0);
    jit_data_bytes(p20, 56L, (unsigned char *)(_TIG_JD_tgVA_4_fib_block_7_377));
    jit_add_op(p20, JIT_TOUCH, ((0 << 4) | (0 << 2)) | 3, 4L, 0L, 0L, 0L, 0);
    op541 = jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, 0, 0L, 0L, 0L,
                       0);
    label542 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op415, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               (jit_value )label414, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               (jit_value )(KEY_1494878675_538327513_1893549042_1808446567), 0L, 0L,
               0);
    jit_add_op(p20, JIT_PREPARE, ((0 << 4) | (2 << 2)) | 2, 0L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 8L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 32L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 248L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CALL | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )(& _cipher$_xtea_encipher),
               0L, 0L, 0L, 0);
    op543 = jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, 0, 0L, 0L, 0L,
                       0);
    label544 = jit_get_label(p20);
    op545 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               (jit_value )(KEY_1494878675_538327513_1893549042_1808446567), 0L, 0L,
               0);
    jit_add_op(p20, JIT_PREPARE, ((0 << 4) | (2 << 2)) | 2, 0L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 38L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 32L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 16L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CALL | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )(& _cipher$_xtea_encipher),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )label407,
               0L, 0L, 0L, 0);
    label546 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op505, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               (jit_value )label539, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               (jit_value )(KEY_1494878675_538327513_1893549042_1808446567), 0L, 0L,
               0);
    jit_add_op(p20, JIT_PREPARE, ((0 << 4) | (2 << 2)) | 2, 0L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 39L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 32L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 16L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CALL | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )(& _cipher$_xtea_decipher),
               0L, 0L, 0L, 0);
    op547 = jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, 0, 0L, 0L, 0L,
                       0);
    label548 = jit_get_label(p20);
    jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               (jit_value )label508, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               (jit_value )(KEY_1494878675_538327513_1893549042_1808446567), 0L, 0L,
               0);
    jit_add_op(p20, JIT_PREPARE, ((0 << 4) | (2 << 2)) | 2, 0L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 27L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 32L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 208L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CALL | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )(& _cipher$_xtea_encipher),
               0L, 0L, 0L, 0);
    op549 = jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, 0, 0L, 0L, 0L,
                       0);
    label550 = jit_get_label(p20);
    jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               (jit_value )label539, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               (jit_value )(KEY_1494878675_538327513_1893549042_1808446567), 0L, 0L,
               0);
    jit_add_op(p20, JIT_PREPARE, ((0 << 4) | (2 << 2)) | 2, 0L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 39L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 32L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 16L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CALL | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )(& _cipher$_xtea_encipher),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )label548,
               0L, 0L, 0L, 0);
    label551 = jit_get_label(p20);
    jit_add_op(p20, JIT_REF_DATA, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((5 & 268435455) << 4)),
               (jit_value )label516, 0L, 0L, 0);
    jit_add_op(p20, JIT_SUB | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)), 1L, 0L, 0);
    jit_add_op(p20, JIT_MUL | (2 | 0), ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)), 8L, 0L, 0);
    jit_add_op(p20, JIT_LDX | (1 | 4), ((1 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((6 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((5 & 268435455) << 4)), (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)),
               8, 0);
    jit_add_op(p20, JIT_JMP | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((6 & 268435455) << 4)),
               0, 0L, 0L, 0);
    label552 = jit_get_label(p20);
    jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               (jit_value )label522, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               (jit_value )(KEY_1494878675_538327513_1893549042_1808446567), 0L, 0L,
               0);
    jit_add_op(p20, JIT_PREPARE, ((0 << 4) | (2 << 2)) | 2, 0L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 5L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 32L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 40L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CALL | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )(& _cipher$_xtea_encipher),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )label402,
               0L, 0L, 0L, 0);
    label553 = jit_get_label(p20);
    jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               (jit_value )label540, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               (jit_value )(KEY_1494878675_538327513_1893549042_1808446567), 0L, 0L,
               0);
    jit_add_op(p20, JIT_PREPARE, ((0 << 4) | (2 << 2)) | 2, 0L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 7L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 32L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 56L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CALL | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )(& _cipher$_xtea_decipher),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )label495,
               0L, 0L, 0L, 0);
    label554 = jit_get_label(p20);
    op555 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               (jit_value )(KEY_1494878675_538327513_1893549042_1808446567), 0L, 0L,
               0);
    jit_add_op(p20, JIT_PREPARE, ((0 << 4) | (2 << 2)) | 2, 0L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 46L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 32L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 16L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CALL | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )(& _cipher$_xtea_encipher),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )label552,
               0L, 0L, 0L, 0);
    label556 = jit_get_label(p20);
    op557 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               (jit_value )(KEY_1494878675_538327513_1893549042_1808446567), 0L, 0L,
               0);
    jit_add_op(p20, JIT_PREPARE, ((0 << 4) | (2 << 2)) | 2, 0L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 9L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 32L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 208L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CALL | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )(& _cipher$_xtea_decipher),
               0L, 0L, 0L, 0);
    op558 = jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, 0, 0L, 0L, 0L,
                       0);
    label559 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op535, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               (jit_value )label481, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               (jit_value )(KEY_1494878675_538327513_1893549042_1808446567), 0L, 0L,
               0);
    jit_add_op(p20, JIT_PREPARE, ((0 << 4) | (2 << 2)) | 2, 0L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 36L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 32L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 16L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CALL | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )(& _cipher$_xtea_decipher),
               0L, 0L, 0L, 0);
    op560 = jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, 0, 0L, 0L, 0L,
                       0);
    label561 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op471, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op468, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op465, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op462, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op459, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op453, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op452, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op450, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op448, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op447, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op445, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op444, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op441, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op439, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op433, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op430, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op428, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op427, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )label508,
               0L, 0L, 0L, 0);
    label562 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op395, 0L,
               0L, 0L, 0);
    op563 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               (jit_value )(KEY_1494878675_538327513_1893549042_1808446567), 0L, 0L,
               0);
    jit_add_op(p20, JIT_PREPARE, ((0 << 4) | (2 << 2)) | 2, 0L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 51L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 32L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 16L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CALL | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )(& _cipher$_xtea_decipher),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )label533,
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CODE_ALIGN | 2, ((0 << 4) | (0 << 2)) | 2, 8L, 0L, 0L, 0L,
               0);
    label564 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op527, 0L,
               0L, 0L, 0);
    jit_data_bytes(p20, 80L, (unsigned char *)(_TIG_JD_tgVA_4_fib_block_12_378));
    jit_add_op(p20, JIT_TOUCH, ((0 << 4) | (0 << 2)) | 3, 4L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )label526,
               0L, 0L, 0L, 0);
    label565 = jit_get_label(p20);
    jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               (jit_value )label398, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               (jit_value )(KEY_1494878675_538327513_1893549042_1808446567), 0L, 0L,
               0);
    jit_add_op(p20, JIT_PREPARE, ((0 << 4) | (2 << 2)) | 2, 0L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 50L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 32L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 16L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CALL | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )(& _cipher$_xtea_decipher),
               0L, 0L, 0L, 0);
    op566 = jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, 0, 0L, 0L, 0L,
                       0);
    label567 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op432, 0L,
               0L, 0L, 0);
    op568 = jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, 0, 0L, 0L, 0L,
                       0);
    label569 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op512, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               (jit_value )label493, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               (jit_value )(KEY_1494878675_538327513_1893549042_1808446567), 0L, 0L,
               0);
    jit_add_op(p20, JIT_PREPARE, ((0 << 4) | (2 << 2)) | 2, 0L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 26L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 32L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 40L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CALL | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )(& _cipher$_xtea_encipher),
               0L, 0L, 0L, 0);
    op570 = jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, 0, 0L, 0L, 0L,
                       0);
    jit_add_op(p20, JIT_CODE_ALIGN | 2, ((0 << 4) | (0 << 2)) | 2, 8L, 0L, 0L, 0L,
               0);
    label571 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op494, 0L,
               0L, 0L, 0);
    jit_data_bytes(p20, 16L, (unsigned char *)(_TIG_JD_tgVA_4_fib_block_45_379));
    jit_add_op(p20, JIT_TOUCH, ((0 << 4) | (0 << 2)) | 3, 4L, 0L, 0L, 0L, 0);
    label572 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op503, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               (jit_value )label502, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               (jit_value )(KEY_1494878675_538327513_1893549042_1808446567), 0L, 0L,
               0);
    jit_add_op(p20, JIT_PREPARE, ((0 << 4) | (2 << 2)) | 2, 0L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 17L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 32L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 128L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CALL | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )(& _cipher$_xtea_encipher),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )label513,
               0L, 0L, 0L, 0);
    label573 = jit_get_label(p20);
    jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               (jit_value )label409, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               (jit_value )(KEY_1494878675_538327513_1893549042_1808446567), 0L, 0L,
               0);
    jit_add_op(p20, JIT_PREPARE, ((0 << 4) | (2 << 2)) | 2, 0L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 15L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 32L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 216L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CALL | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )(& _cipher$_xtea_encipher),
               0L, 0L, 0L, 0);
    op574 = jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, 0, 0L, 0L, 0L,
                       0);
    label575 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op484, 0L,
               0L, 0L, 0);
    op576 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               (jit_value )(KEY_1494878675_538327513_1893549042_1808446567), 0L, 0L,
               0);
    jit_add_op(p20, JIT_PREPARE, ((0 << 4) | (2 << 2)) | 2, 0L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 46L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 32L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 16L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CALL | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )(& _cipher$_xtea_decipher),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )label404,
               0L, 0L, 0L, 0);
    label577 = jit_get_label(p20);
    op578 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               (jit_value )(KEY_1494878675_538327513_1893549042_1808446567), 0L, 0L,
               0);
    jit_add_op(p20, JIT_PREPARE, ((0 << 4) | (2 << 2)) | 2, 0L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 48L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 32L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 16L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CALL | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )(& _cipher$_xtea_encipher),
               0L, 0L, 0L, 0);
    op579 = jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, 0, 0L, 0L, 0L,
                       0);
    label580 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op397, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 1320),
               0L, 0);
    jit_add_op(p20, JIT_LD | (1 | 4), ((0 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((1 & 268435455) << 4)), 0L, 8, 0);
    jit_add_op(p20, JIT_LD | (1 | 0), ((0 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((2 & 268435455) << 4)), 0L, 4, 0);
    jit_add_op(p20, JIT_MOV | 1, ((0 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((3 & 268435455) << 4)), 0L, 0L, 0);
    jit_add_op(p20, JIT_BLT | (2 | 0), ((2 << 4) | (1 << 2)) | 2, (jit_value )label493,
               (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)), 1L, 0L, 0);
    op581 = jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, 0, 0L, 0L, 0L,
                       0);
    label582 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op517, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )label501,
               0L, 0L, 0L, 0);
    label583 = jit_get_label(p20);
    op584 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               (jit_value )(KEY_1494878675_538327513_1893549042_1808446567), 0L, 0L,
               0);
    jit_add_op(p20, JIT_PREPARE, ((0 << 4) | (2 << 2)) | 2, 0L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 9L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 32L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 208L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CALL | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )(& _cipher$_xtea_encipher),
               0L, 0L, 0L, 0);
    op585 = jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, 0, 0L, 0L, 0L,
                       0);
    label586 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op581, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_BGT | (2 | 0), ((2 << 4) | (1 << 2)) | 2, (jit_value )label493,
               (0 & 1) | (((0 & 3) << 1) | ((4 & 268435455) << 4)), 1L, 0L, 0);
    jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )label551,
               0L, 0L, 0L, 0);
    label587 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op549, 0L,
               0L, 0L, 0);
    op588 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               (jit_value )(KEY_1494878675_538327513_1893549042_1808446567), 0L, 0L,
               0);
    jit_add_op(p20, JIT_PREPARE, ((0 << 4) | (2 << 2)) | 2, 0L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 35L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 32L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 16L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CALL | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )(& _cipher$_xtea_encipher),
               0L, 0L, 0L, 0);
    op589 = jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, 0, 0L, 0L, 0L,
                       0);
    label590 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op507, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               (jit_value )label477, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               (jit_value )(KEY_1494878675_538327513_1893549042_1808446567), 0L, 0L,
               0);
    jit_add_op(p20, JIT_PREPARE, ((0 << 4) | (2 << 2)) | 2, 0L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 3L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 32L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 88L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CALL | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )(& _cipher$_xtea_decipher),
               0L, 0L, 0L, 0);
    op591 = jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, 0, 0L, 0L, 0L,
                       0);
    label592 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op541, 0L,
               0L, 0L, 0);
    op593 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               (jit_value )(KEY_1494878675_538327513_1893549042_1808446567), 0L, 0L,
               0);
    jit_add_op(p20, JIT_PREPARE, ((0 << 4) | (2 << 2)) | 2, 0L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 6L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 32L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 40L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CALL | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )(& _cipher$_xtea_encipher),
               0L, 0L, 0L, 0);
    op594 = jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, 0, 0L, 0L, 0L,
                       0);
    label595 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op460, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op455, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op454, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op437, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op436, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op424, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op423, 0L,
               0L, 0L, 0);
    op596 = jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, 0, 0L, 0L, 0L,
                       0);
    label597 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op570, 0L,
               0L, 0L, 0);
    op598 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               (jit_value )(KEY_1494878675_538327513_1893549042_1808446567), 0L, 0L,
               0);
    jit_add_op(p20, JIT_PREPARE, ((0 << 4) | (2 << 2)) | 2, 0L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 29L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 32L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 192L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CALL | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )(& _cipher$_xtea_encipher),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )label554,
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CODE_ALIGN | 2, ((0 << 4) | (0 << 2)) | 2, 8L, 0L, 0L, 0L,
               0);
    label599 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op534, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op525, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op521, 0L,
               0L, 0L, 0);
    jit_data_bytes(p20, 256L, (unsigned char *)(_TIG_JD_tgVA_4_fib_block_11_380));
    jit_add_op(p20, JIT_TOUCH, ((0 << 4) | (0 << 2)) | 3, 4L, 0L, 0L, 0L, 0);
    op600 = jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, 0, 0L, 0L, 0L,
                       0);
    jit_add_op(p20, JIT_CODE_ALIGN | 2, ((0 << 4) | (0 << 2)) | 2, 8L, 0L, 0L, 0L,
               0);
    label601 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op584, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op557, 0L,
               0L, 0L, 0);
    jit_data_bytes(p20, 208L, (unsigned char *)(_TIG_JD_tgVA_4_fib_block_9_381));
    jit_add_op(p20, JIT_TOUCH, ((0 << 4) | (0 << 2)) | 3, 4L, 0L, 0L, 0L, 0);
    op602 = jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, 0, 0L, 0L, 0L,
                       0);
    jit_add_op(p20, JIT_CODE_ALIGN | 2, ((0 << 4) | (0 << 2)) | 2, 8L, 0L, 0L, 0L,
               0);
    label603 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op511, 0L,
               0L, 0L, 0);
    jit_data_bytes(p20, 40L, (unsigned char *)(_TIG_JD_tgVA_4_fib_block_13_382));
    op604 = jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, 0, 0L, 0L, 0L,
                       0);
    jit_add_op(p20, JIT_CODE_ALIGN | 2, ((0 << 4) | (0 << 2)) | 2, 8L, 0L, 0L, 0L,
               0);
    label605 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op563, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op400, 0L,
               0L, 0L, 0);
    jit_data_bytes(p20, 16L, (unsigned char *)(_TIG_JD_tgVA_4_fib_block_51_383));
    jit_add_op(p20, JIT_TOUCH, ((0 << 4) | (0 << 2)) | 3, 4L, 0L, 0L, 0L, 0);
    label606 = jit_get_label(p20);
    jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               (jit_value )label508, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               (jit_value )(KEY_1494878675_538327513_1893549042_1808446567), 0L, 0L,
               0);
    jit_add_op(p20, JIT_PREPARE, ((0 << 4) | (2 << 2)) | 2, 0L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 27L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 32L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 208L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CALL | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )(& _cipher$_xtea_decipher),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )label553,
               0L, 0L, 0L, 0);
    label607 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op604, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               (jit_value )label481, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               (jit_value )(KEY_1494878675_538327513_1893549042_1808446567), 0L, 0L,
               0);
    jit_add_op(p20, JIT_PREPARE, ((0 << 4) | (2 << 2)) | 2, 0L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 36L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 32L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 16L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CALL | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )(& _cipher$_xtea_encipher),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )label485,
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CODE_ALIGN | 2, ((0 << 4) | (0 << 2)) | 2, 8L, 0L, 0L, 0L,
               0);
    label608 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op519, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op419, 0L,
               0L, 0L, 0);
    jit_data_bytes(p20, 16L, (unsigned char *)(_TIG_JD_tgVA_4_fib_block_40_384));
    jit_add_op(p20, JIT_TOUCH, ((0 << 4) | (0 << 2)) | 3, 4L, 0L, 0L, 0L, 0);
    label609 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op422, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )label603,
               0L, 0L, 0L, 0);
    label610 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op458, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op431, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )label409,
               0L, 0L, 0L, 0);
    label611 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op401, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               (jit_value )label518, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               (jit_value )(KEY_1494878675_538327513_1893549042_1808446567), 0L, 0L,
               0);
    jit_add_op(p20, JIT_PREPARE, ((0 << 4) | (2 << 2)) | 2, 0L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 28L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 32L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 192L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CALL | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )(& _cipher$_xtea_encipher),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )label550,
               0L, 0L, 0L, 0);
    label612 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op594, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               (jit_value )label477, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               (jit_value )(KEY_1494878675_538327513_1893549042_1808446567), 0L, 0L,
               0);
    jit_add_op(p20, JIT_PREPARE, ((0 << 4) | (2 << 2)) | 2, 0L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 3L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 32L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 88L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CALL | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )(& _cipher$_xtea_encipher),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )label398,
               0L, 0L, 0L, 0);
    label613 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op472, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op469, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op466, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op463, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op442, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )label518,
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CODE_ALIGN | 2, ((0 << 4) | (0 << 2)) | 2, 8L, 0L, 0L, 0L,
               0);
    label614 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op593, 0L,
               0L, 0L, 0);
    jit_data_bytes(p20, 40L, (unsigned char *)(_TIG_JD_tgVA_4_fib_block_6_385));
    jit_add_op(p20, JIT_TOUCH, ((0 << 4) | (0 << 2)) | 3, 4L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )label540,
               0L, 0L, 0L, 0);
    label615 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op408, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               (jit_value )label513, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               (jit_value )(KEY_1494878675_538327513_1893549042_1808446567), 0L, 0L,
               0);
    jit_add_op(p20, JIT_PREPARE, ((0 << 4) | (2 << 2)) | 2, 0L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 34L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 32L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 16L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CALL | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )(& _cipher$_xtea_encipher),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )label573,
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CODE_ALIGN | 2, ((0 << 4) | (0 << 2)) | 2, 8L, 0L, 0L, 0L,
               0);
    label616 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op545, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op543, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op499, 0L,
               0L, 0L, 0);
    jit_data_bytes(p20, 16L, (unsigned char *)(_TIG_JD_tgVA_4_fib_block_38_386));
    jit_add_op(p20, JIT_TOUCH, ((0 << 4) | (0 << 2)) | 3, 4L, 0L, 0L, 0L, 0);
    label617 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op434, 0L,
               0L, 0L, 0);
    op618 = jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, 0, 0L, 0L, 0L,
                       0);
    label619 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op558, 0L,
               0L, 0L, 0);
    op620 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               (jit_value )(KEY_1494878675_538327513_1893549042_1808446567), 0L, 0L,
               0);
    jit_add_op(p20, JIT_PREPARE, ((0 << 4) | (2 << 2)) | 2, 0L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 37L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 32L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 16L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CALL | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )(& _cipher$_xtea_decipher),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )label565,
               0L, 0L, 0L, 0);
    label621 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op451, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op440, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )label509,
               0L, 0L, 0L, 0);
    label622 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op585, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               (jit_value )label571, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               (jit_value )(KEY_1494878675_538327513_1893549042_1808446567), 0L, 0L,
               0);
    jit_add_op(p20, JIT_PREPARE, ((0 << 4) | (2 << 2)) | 2, 0L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 45L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 32L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 16L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CALL | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )(& _cipher$_xtea_encipher),
               0L, 0L, 0L, 0);
    op623 = jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, 0, 0L, 0L, 0L,
                       0);
    label624 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op579, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               (jit_value )label540, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               (jit_value )(KEY_1494878675_538327513_1893549042_1808446567), 0L, 0L,
               0);
    jit_add_op(p20, JIT_PREPARE, ((0 << 4) | (2 << 2)) | 2, 0L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 7L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 32L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 56L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CALL | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )(& _cipher$_xtea_encipher),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )label544,
               0L, 0L, 0L, 0);
    label625 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op591, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               (jit_value )label614, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               (jit_value )(KEY_1494878675_538327513_1893549042_1808446567), 0L, 0L,
               0);
    jit_add_op(p20, JIT_PREPARE, ((0 << 4) | (2 << 2)) | 2, 0L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 6L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 32L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 40L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CALL | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )(& _cipher$_xtea_decipher),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )label477,
               0L, 0L, 0L, 0);
    label626 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op413, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               (jit_value )label608, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               (jit_value )(KEY_1494878675_538327513_1893549042_1808446567), 0L, 0L,
               0);
    jit_add_op(p20, JIT_PREPARE, ((0 << 4) | (2 << 2)) | 2, 0L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 40L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 32L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 16L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CALL | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )(& _cipher$_xtea_decipher),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )label531,
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CODE_ALIGN | 2, ((0 << 4) | (0 << 2)) | 2, 8L, 0L, 0L, 0L,
               0);
    label627 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op602, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op578, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op515, 0L,
               0L, 0L, 0);
    jit_data_bytes(p20, 16L, (unsigned char *)(_TIG_JD_tgVA_4_fib_block_48_387));
    jit_add_op(p20, JIT_TOUCH, ((0 << 4) | (0 << 2)) | 3, 4L, 0L, 0L, 0L, 0);
    label628 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op596, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               (jit_value )label564, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               (jit_value )(KEY_1494878675_538327513_1893549042_1808446567), 0L, 0L,
               0);
    jit_add_op(p20, JIT_PREPARE, ((0 << 4) | (2 << 2)) | 2, 0L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 12L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 32L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 80L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CALL | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )(& _cipher$_xtea_decipher),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )label564,
               0L, 0L, 0L, 0);
    label629 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op425, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )label396,
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CODE_ALIGN | 2, ((0 << 4) | (0 << 2)) | 2, 8L, 0L, 0L, 0L,
               0);
    label630 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op600, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op488, 0L,
               0L, 0L, 0);
    jit_data_bytes(p20, 16L, (unsigned char *)(_TIG_JD_tgVA_4_fib_block_47_388));
    jit_add_op(p20, JIT_TOUCH, ((0 << 4) | (0 << 2)) | 3, 4L, 0L, 0L, 0L, 0);
    label631 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op489, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               (jit_value )label571, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               (jit_value )(KEY_1494878675_538327513_1893549042_1808446567), 0L, 0L,
               0);
    jit_add_op(p20, JIT_PREPARE, ((0 << 4) | (2 << 2)) | 2, 0L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 45L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 32L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 16L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CALL | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )(& _cipher$_xtea_decipher),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )label606,
               0L, 0L, 0L, 0);
    label632 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op618, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               (jit_value )label479, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               (jit_value )(KEY_1494878675_538327513_1893549042_1808446567), 0L, 0L,
               0);
    jit_add_op(p20, JIT_PREPARE, ((0 << 4) | (2 << 2)) | 2, 0L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 16L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 32L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 128L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CALL | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )(& _cipher$_xtea_decipher),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )label479,
               0L, 0L, 0L, 0);
    label633 = jit_get_label(p20);
    op634 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               (jit_value )(KEY_1494878675_538327513_1893549042_1808446567), 0L, 0L,
               0);
    jit_add_op(p20, JIT_PREPARE, ((0 << 4) | (2 << 2)) | 2, 0L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 29L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 32L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 192L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CALL | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )(& _cipher$_xtea_decipher),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )label411,
               0L, 0L, 0L, 0);
    label635 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op530, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               (jit_value )label538, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               (jit_value )(KEY_1494878675_538327513_1893549042_1808446567), 0L, 0L,
               0);
    jit_add_op(p20, JIT_PREPARE, ((0 << 4) | (2 << 2)) | 2, 0L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 10L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 32L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 192L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CALL | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )(& _cipher$_xtea_decipher),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )label538,
               0L, 0L, 0L, 0);
    label636 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op623, 0L,
               0L, 0L, 0);
    op637 = jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
                       0, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               (jit_value )(KEY_1494878675_538327513_1893549042_1808446567), 0L, 0L,
               0);
    jit_add_op(p20, JIT_PREPARE, ((0 << 4) | (2 << 2)) | 2, 0L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 37L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 32L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 16L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CALL | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )(& _cipher$_xtea_encipher),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )label577,
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CODE_ALIGN | 2, ((0 << 4) | (0 << 2)) | 2, 8L, 0L, 0L, 0L,
               0);
    label638 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op637, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op620, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op528, 0L,
               0L, 0L, 0);
    jit_data_bytes(p20, 16L, (unsigned char *)(_TIG_JD_tgVA_4_fib_block_37_389));
    jit_add_op(p20, JIT_TOUCH, ((0 << 4) | (0 << 2)) | 3, 4L, 0L, 0L, 0L, 0);
    label639 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op566, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               (jit_value )label493, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               (jit_value )(KEY_1494878675_538327513_1893549042_1808446567), 0L, 0L,
               0);
    jit_add_op(p20, JIT_PREPARE, ((0 << 4) | (2 << 2)) | 2, 0L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 26L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 32L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 40L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CALL | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )(& _cipher$_xtea_decipher),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )label633,
               0L, 0L, 0L, 0);
    label640 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op547, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               (jit_value )label513, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               (jit_value )(KEY_1494878675_538327513_1893549042_1808446567), 0L, 0L,
               0);
    jit_add_op(p20, JIT_PREPARE, ((0 << 4) | (2 << 2)) | 2, 0L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 34L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 32L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 16L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CALL | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )(& _cipher$_xtea_decipher),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )label421,
               0L, 0L, 0L, 0);
    label641 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op478, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_ADD | 2, ((2 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((9 & 268435455) << 4)),
               (0 & 1) | (((2 & 3) << 1) | ((0 & 268435455) << 4)), (jit_value )(localSize22 + 1392),
               0L, 0);
    jit_add_op(p20, JIT_LD | (1 | 0), ((0 << 4) | (1 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((10 & 268435455) << 4)),
               (0 & 1) | (((0 & 3) << 1) | ((9 & 268435455) << 4)), 0L, 4, 0);
    jit_add_op(p20, JIT_BNE | 2, ((2 << 4) | (1 << 2)) | 2, (jit_value )label522,
               (0 & 1) | (((0 & 3) << 1) | ((10 & 268435455) << 4)), 0L, 0L, 0);
    jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )label614,
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CODE_ALIGN | 2, ((0 << 4) | (0 << 2)) | 2, 8L, 0L, 0L, 0L,
               0);
    label642 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op576, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op555, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op492, 0L,
               0L, 0L, 0);
    jit_data_bytes(p20, 16L, (unsigned char *)(_TIG_JD_tgVA_4_fib_block_46_390));
    jit_add_op(p20, JIT_TOUCH, ((0 << 4) | (0 << 2)) | 3, 4L, 0L, 0L, 0L, 0);
    label643 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op435, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )label601,
               0L, 0L, 0L, 0);
    label644 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op560, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               (jit_value )label603, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               (jit_value )(KEY_1494878675_538327513_1893549042_1808446567), 0L, 0L,
               0);
    jit_add_op(p20, JIT_PREPARE, ((0 << 4) | (2 << 2)) | 2, 0L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 13L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 32L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 40L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CALL | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )(& _cipher$_xtea_decipher),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )label556,
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CODE_ALIGN | 2, ((0 << 4) | (0 << 2)) | 2, 8L, 0L, 0L, 0L,
               0);
    label645 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op588, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op532, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op410, 0L,
               0L, 0L, 0);
    jit_data_bytes(p20, 16L, (unsigned char *)(_TIG_JD_tgVA_4_fib_block_35_391));
    jit_add_op(p20, JIT_TOUCH, ((0 << 4) | (0 << 2)) | 3, 4L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CODE_ALIGN | 2, ((0 << 4) | (0 << 2)) | 2, 8L, 0L, 0L, 0L,
               0);
    label646 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op634, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op598, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op568, 0L,
               0L, 0L, 0);
    jit_data_bytes(p20, 192L, (unsigned char *)(_TIG_JD_tgVA_4_fib_block_29_392));
    jit_add_op(p20, JIT_TOUCH, ((0 << 4) | (0 << 2)) | 3, 4L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )label605,
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CODE_ALIGN | 2, ((0 << 4) | (0 << 2)) | 2, 8L, 0L, 0L, 0L,
               0);
    label647 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op537, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op486, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op412, 0L,
               0L, 0L, 0);
    jit_data_bytes(p20, 16L, (unsigned char *)(_TIG_JD_tgVA_4_fib_block_43_393));
    label648 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op589, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_REF_CODE, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               (jit_value )label630, 0L, 0L, 0);
    jit_add_op(p20, JIT_MOV | 2, ((0 << 4) | (2 << 2)) | 3, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               (jit_value )(KEY_1494878675_538327513_1893549042_1808446567), 0L, 0L,
               0);
    jit_add_op(p20, JIT_PREPARE, ((0 << 4) | (2 << 2)) | 2, 0L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 47L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 32L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((22 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 1, ((0 << 4) | (0 << 2)) | 1, (0 & 1) | (((0 & 3) << 1) | ((23 & 268435455) << 4)),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_PUTARG | 2, ((0 << 4) | (0 << 2)) | 2, 16L, 0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_CALL | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )(& _cipher$_xtea_encipher),
               0L, 0L, 0L, 0);
    jit_add_op(p20, JIT_JMP | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )label583,
               0L, 0L, 0L, 0);
    label649 = jit_get_label(p20);
    jit_add_op(p20, JIT_PATCH | 2, ((0 << 4) | (0 << 2)) | 2, (jit_value )op574, 0L,
               0L, 0L, 0);
    jit_add_op(p20, JIT_RET | 2, ((0 << 4) | (0 << 2)) | 2, 0L, 0L, 0L, 0L, 0);
    jit_generate_code(p20);
    (*_TIG_JD_tgVA_4_fib___foo)(n);


    measure_iter650 ++;
  }
  __asm__ volatile ("cpuid\n"
                    "rdtsc\n": "=a" (low653), "=d" (high654));
  printf("MEASURE,fib,timingCounter,%f\n", (double )((((unsigned long )high654 << 32) | (unsigned long )low653) - (((unsigned long )high652 << 32) | (unsigned long )low651)));
  __cil_tmp658 = gettimeofday(& __cil_tmp657, 0);
  t0660 = __cil_tmp657;
  t1661 = __cil_tmp655;
  res659.tv_sec = t0660.tv_sec - t1661.tv_sec;
  res659.tv_usec = t0660.tv_usec - t1661.tv_usec;
  if (res659.tv_usec < 0) {
    (res659.tv_sec) --;
    res659.tv_usec += 1000000;
  } else {

  }
  t0662 = res659;
  printf("MEASURE,fib,timingGetTimeOfDay,%f\n", (double )t0662.tv_sec + (double )t0662.tv_usec / 1000000.);
  return;
}
}
/* END FUNCTION-DEF fib LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_set_add LOC=UNKNOWN */
__inline static void jit_set_add(jit_set *s , int value ) 
{ 


  {
#line 2286
  s->root = jit_tree_insert(s->root, (jit_tree_key )value, (void *)1, (int *)((void *)0));
#line 2287
  return;
}
}
/* END FUNCTION-DEF jit_set_add LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF rmap_equal LOC=UNKNOWN */
static int rmap_equal(jit_op *op , jit_rmap *current , jit_rmap *target ) 
{ 
  int tmp ;
  int tmp___0 ;
  int tmp___1 ;

  {
#line 3295
  tmp = rmap_subset(op, current->map, target->map);
#line 3295
  if (tmp) {
#line 3295
    tmp___0 = rmap_subset(op, target->map, current->map);
#line 3295
    if (tmp___0) {
#line 3295
      tmp___1 = 1;
    } else {
#line 3295
      tmp___1 = 0;
    }
  } else {
#line 3295
    tmp___1 = 0;
  }
#line 3295
  return (tmp___1);
}
}
/* END FUNCTION-DEF rmap_equal LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF emit_memset LOC=UNKNOWN */
static void emit_memset(struct jit *jit , jit_op *op , jit_value a1 , jit_value a2 ,
                        jit_value a3 , int block_size ) 
{ 
  jit_hw_reg *counter ;
  jit_hw_reg *tmp ;
  int counterreg ;
  int i ;
  jit_hw_reg *r ;
  int counter_in_use ;
  int tmp___0 ;
  unsigned char _amd64_rex_bits ;
  int tmp___1 ;
  unsigned char *tmp___2 ;
  unsigned char *tmp___3 ;
  unsigned char *tmp___4 ;
  unsigned char _amd64_rex_bits___0 ;
  int tmp___5 ;
  int tmp___6 ;
  int tmp___7 ;
  unsigned char *tmp___8 ;
  unsigned char *tmp___9 ;
  unsigned char *tmp___10 ;
  long tmp___11 ;
  unsigned char *tmp___12 ;
  unsigned char _amd64_rex_bits___1 ;
  int tmp___13 ;
  unsigned char *tmp___14 ;
  unsigned char *tmp___15 ;
  unsigned char *tmp___16 ;
  unsigned char *tmp___17 ;
  unsigned char *tmp___18 ;
  unsigned char _amd64_rex_bits___2 ;
  int tmp___19 ;
  unsigned char *tmp___20 ;
  unsigned char *tmp___21 ;
  unsigned char *tmp___22 ;
  unsigned char *tmp___23 ;
  unsigned char *tmp___24 ;
  unsigned char _amd64_rex_bits___3 ;
  int tmp___25 ;
  unsigned char *tmp___26 ;
  unsigned char *tmp___27 ;
  unsigned char *tmp___28 ;
  unsigned char *tmp___29 ;
  unsigned char *tmp___30 ;
  jit_value loop ;
  unsigned char _amd64_rex_bits___4 ;
  int tmp___31 ;
  int tmp___32 ;
  int tmp___33 ;
  unsigned char *tmp___34 ;
  unsigned char *tmp___35 ;
  unsigned char *tmp___36 ;
  unsigned char *tmp___37 ;
  x86_imm_buf imb ;
  unsigned char *tmp___38 ;
  unsigned char *tmp___39 ;
  unsigned char *tmp___40 ;
  unsigned char *tmp___41 ;
  unsigned char *tmp___42 ;
  unsigned char *tmp___43 ;
  unsigned char *tmp___44 ;
  unsigned char *tmp___45 ;
  unsigned char *tmp___46 ;
  unsigned char *tmp___47 ;
  x86_imm_buf imb___0 ;
  unsigned char *tmp___48 ;
  unsigned char *tmp___49 ;
  unsigned char *tmp___50 ;
  unsigned char *tmp___51 ;
  unsigned char *tmp___52 ;
  unsigned char *tmp___53 ;
  unsigned char *tmp___54 ;
  unsigned char *tmp___55 ;
  x86_imm_buf imb___1 ;
  unsigned char *tmp___56 ;
  unsigned char *tmp___57 ;
  unsigned char *tmp___58 ;
  unsigned char *tmp___59 ;
  unsigned char *tmp___60 ;
  unsigned char *tmp___61 ;
  unsigned char *tmp___62 ;
  unsigned char *tmp___63 ;
  unsigned char *tmp___64 ;
  unsigned char *tmp___65 ;
  x86_imm_buf imb___2 ;
  unsigned char *tmp___66 ;
  unsigned char *tmp___67 ;
  unsigned char *tmp___68 ;
  unsigned char *tmp___69 ;
  unsigned char *tmp___70 ;
  unsigned char *tmp___71 ;
  unsigned char *tmp___72 ;
  x86_imm_buf imb___3 ;
  unsigned char *tmp___73 ;
  unsigned char *tmp___74 ;
  unsigned char *tmp___75 ;
  unsigned char *tmp___76 ;
  unsigned char *tmp___77 ;
  unsigned char *tmp___78 ;
  unsigned char *tmp___79 ;
  unsigned char *tmp___80 ;
  unsigned char *tmp___81 ;
  unsigned char *tmp___82 ;
  x86_imm_buf imb___4 ;
  unsigned char *tmp___83 ;
  unsigned char *tmp___84 ;
  unsigned char *tmp___85 ;
  unsigned char *tmp___86 ;
  x86_imm_buf imb___5 ;
  unsigned char *tmp___87 ;
  unsigned char *tmp___88 ;
  unsigned char *tmp___89 ;
  unsigned char *tmp___90 ;
  int tmp___91 ;
  int tmp___92 ;
  unsigned char *tmp___93 ;
  unsigned char _amd64_rex_bits___5 ;
  int tmp___94 ;
  int tmp___95 ;
  int tmp___96 ;
  int tmp___97 ;
  unsigned char *tmp___98 ;
  unsigned char *tmp___99 ;
  unsigned char *tmp___100 ;
  long tmp___101 ;
  unsigned char *tmp___102 ;
  unsigned char *tmp___103 ;
  x86_imm_buf imb___6 ;
  unsigned char *tmp___104 ;
  unsigned char *tmp___105 ;
  unsigned char *tmp___106 ;
  unsigned char *tmp___107 ;
  unsigned char *tmp___108 ;
  unsigned char *tmp___109 ;
  unsigned char *tmp___110 ;
  unsigned char *tmp___111 ;
  unsigned char *tmp___112 ;
  unsigned char *tmp___113 ;
  x86_imm_buf imb___7 ;
  unsigned char *tmp___114 ;
  unsigned char *tmp___115 ;
  unsigned char *tmp___116 ;
  unsigned char *tmp___117 ;
  unsigned char _amd64_rex_bits___6 ;
  int tmp___118 ;
  unsigned char *tmp___119 ;
  unsigned char *tmp___120 ;
  unsigned char *tmp___121 ;
  unsigned char _amd64_rex_bits___7 ;
  unsigned char *tmp___122 ;
  unsigned char *tmp___123 ;
  x86_imm_buf imb___8 ;
  unsigned char *tmp___124 ;
  unsigned char *tmp___125 ;
  unsigned char *tmp___126 ;
  unsigned char *tmp___127 ;
  unsigned char _amd64_rex_bits___8 ;
  int tmp___128 ;
  unsigned char *tmp___129 ;
  unsigned char *tmp___130 ;
  unsigned char *tmp___131 ;
  x86_imm_buf imb___9 ;
  unsigned char *tmp___132 ;
  unsigned char *tmp___133 ;
  unsigned char *tmp___134 ;
  unsigned char *tmp___135 ;
  unsigned char _amd64_rex_bits___9 ;
  unsigned char *tmp___136 ;
  int offset ;
  unsigned char *tmp___137 ;
  unsigned char *tmp___138 ;
  unsigned char *tmp___139 ;
  unsigned char *tmp___140 ;
  unsigned char *tmp___141 ;
  x86_imm_buf imb___10 ;
  unsigned char *tmp___142 ;
  unsigned char *tmp___143 ;
  unsigned char *tmp___144 ;
  unsigned char *tmp___145 ;
  unsigned char _amd64_rex_bits___10 ;
  int tmp___146 ;
  unsigned char *tmp___147 ;
  unsigned char *tmp___148 ;

  {
#line 4510
  tmp = jit_get_unused_reg_with_index(jit->reg_al, op, 0, 0);
#line 4510
  counter = tmp;
#line 4511
  counterreg = 0;
#line 4512
  if (counter) {
#line 4512
    counterreg = counter->id;
  } else {
#line 4514
    i = 0;
#line 4514
    while (i < (jit->reg_al)->gp_reg_cnt) {
#line 4515
      r = (jit->reg_al)->gp_regs + i;
#line 4516
      if ((jit_value )r->id != a1) {
#line 4516
        if ((jit_value )r->id != a2) {
#line 4516
          if (! ((int )op->code & 0x02)) {
#line 4516
            if ((jit_value )r->id != a3) {
#line 4517
              counterreg = r->id;
#line 4518
              break;
            }
          }
        }
      }
#line 4514
      i ++;
    }
  }
#line 4522
  tmp___0 = jit_reg_in_use(op, counterreg, 0);
#line 4522
  counter_in_use = tmp___0;
#line 4523
  if (counter_in_use) {
#line 4523
    while (1) {
#line 4523
      while (1) {
#line 4523
        if (counterreg > 7) {
#line 4523
          tmp___1 = 1;
        } else {
#line 4523
          tmp___1 = 0;
        }
#line 4523
        _amd64_rex_bits = (unsigned char )tmp___1;
#line 4523
        if ((int )_amd64_rex_bits != 0) {
#line 4523
          tmp___2 = jit->ip;
#line 4523
          (jit->ip) ++;
#line 4523
          *tmp___2 = (unsigned char )(0x40 | (int )_amd64_rex_bits);
        }
#line 4523
        break;
      }
#line 4523
      tmp___3 = jit->ip;
#line 4523
      (jit->ip) ++;
#line 4523
      *tmp___3 = (unsigned char )(80 + (counterreg & 0x7));
#line 4523
      break;
    }
  }
#line 4524
  while (1) {
#line 4524
    if ((int )sizeof(void *) == 2) {
#line 4524
      tmp___4 = jit->ip;
#line 4524
      (jit->ip) ++;
#line 4524
      *tmp___4 = (unsigned char)102;
    }
#line 4524
    while (1) {
#line 4524
      if ((int )sizeof(void *) > 4) {
#line 4524
        tmp___5 = 8;
      } else {
#line 4524
        tmp___5 = 0;
      }
#line 4524
      if (counterreg > 7) {
#line 4524
        tmp___6 = 4;
      } else {
#line 4524
        tmp___6 = 0;
      }
#line 4524
      if (a2 > 7L) {
#line 4524
        tmp___7 = 1;
      } else {
#line 4524
        tmp___7 = 0;
      }
#line 4524
      _amd64_rex_bits___0 = (unsigned char )((tmp___5 | tmp___6) | tmp___7);
#line 4524
      if ((int )_amd64_rex_bits___0 != 0) {
#line 4524
        tmp___8 = jit->ip;
#line 4524
        (jit->ip) ++;
#line 4524
        *tmp___8 = (unsigned char )(0x40 | (int )_amd64_rex_bits___0);
      } else
#line 4524
      if ((int )sizeof(void *) == 1) {
#line 4524
        tmp___8 = jit->ip;
#line 4524
        (jit->ip) ++;
#line 4524
        *tmp___8 = (unsigned char )(0x40 | (int )_amd64_rex_bits___0);
      }
#line 4524
      break;
    }
#line 4524
    switch ((int )sizeof(void *)) {
    case 1: 
#line 4524
    tmp___9 = jit->ip;
#line 4524
    (jit->ip) ++;
#line 4524
    *tmp___9 = (unsigned char)138;
#line 4524
    break;
    case 8: 
    case 4: 
    case 2: 
#line 4524
    tmp___10 = jit->ip;
#line 4524
    (jit->ip) ++;
#line 4524
    *tmp___10 = (unsigned char)139;
#line 4524
    break;
    default: 
#line 4524
    tmp___11 = __builtin_expect(1L, 0L);
#line 4524
    if (tmp___11) {
#line 4524
      __assert_rtn((char const   *)"emit_memset", (char const   *)"tmp/src.c", 3583,
                   (char const   *)"0");
    }
    }
#line 4524
    while (1) {
#line 4524
      while (1) {
#line 4524
        tmp___12 = jit->ip;
#line 4524
        (jit->ip) ++;
#line 4524
        *tmp___12 = (unsigned char )((long )((3 << 6) | ((counterreg & 0x07) << 3)) | (a2 & 7L));
#line 4524
        break;
      }
#line 4524
      break;
    }
#line 4524
    break;
  }
#line 4525
  if (block_size == 2) {
#line 4525
    while (1) {
#line 4525
      while (1) {
#line 4525
        if (counterreg > 7) {
#line 4525
          tmp___13 = 1;
        } else {
#line 4525
          tmp___13 = 0;
        }
#line 4525
        _amd64_rex_bits___1 = (unsigned char )(8 | tmp___13);
#line 4525
        if ((int )_amd64_rex_bits___1 != 0) {
#line 4525
          tmp___14 = jit->ip;
#line 4525
          (jit->ip) ++;
#line 4525
          *tmp___14 = (unsigned char )(0x40 | (int )_amd64_rex_bits___1);
        }
#line 4525
        break;
      }
#line 4525
      while (1) {
#line 4525
        tmp___15 = jit->ip;
#line 4525
        (jit->ip) ++;
#line 4525
        *tmp___15 = (unsigned char)209;
#line 4525
        while (1) {
#line 4525
          while (1) {
#line 4525
            tmp___16 = jit->ip;
#line 4525
            (jit->ip) ++;
#line 4525
            *tmp___16 = (unsigned char )(((3 << 6) | (4 << 3)) | ((counterreg & 0x7) & 0x07));
#line 4525
            break;
          }
#line 4525
          break;
        }
#line 4525
        break;
      }
#line 4525
      break;
    }
  }
#line 4526
  if (block_size == 4) {
#line 4526
    while (1) {
#line 4526
      while (1) {
#line 4526
        if (counterreg > 7) {
#line 4526
          tmp___19 = 1;
        } else {
#line 4526
          tmp___19 = 0;
        }
#line 4526
        _amd64_rex_bits___2 = (unsigned char )(8 | tmp___19);
#line 4526
        if ((int )_amd64_rex_bits___2 != 0) {
#line 4526
          tmp___20 = jit->ip;
#line 4526
          (jit->ip) ++;
#line 4526
          *tmp___20 = (unsigned char )(0x40 | (int )_amd64_rex_bits___2);
        }
#line 4526
        break;
      }
#line 4526
      while (1) {
#line 4526
        tmp___23 = jit->ip;
#line 4526
        (jit->ip) ++;
#line 4526
        *tmp___23 = (unsigned char)193;
#line 4526
        while (1) {
#line 4526
          while (1) {
#line 4526
            tmp___24 = jit->ip;
#line 4526
            (jit->ip) ++;
#line 4526
            *tmp___24 = (unsigned char )(((3 << 6) | (4 << 3)) | ((counterreg & 0x7) & 0x07));
#line 4526
            break;
          }
#line 4526
          break;
        }
#line 4526
        while (1) {
#line 4526
          *(jit->ip) = (unsigned char)2;
#line 4526
          (jit->ip) ++;
#line 4526
          break;
        }
#line 4526
        break;
      }
#line 4526
      break;
    }
  }
#line 4527
  if (block_size == 8) {
#line 4527
    while (1) {
#line 4527
      while (1) {
#line 4527
        if (counterreg > 7) {
#line 4527
          tmp___25 = 1;
        } else {
#line 4527
          tmp___25 = 0;
        }
#line 4527
        _amd64_rex_bits___3 = (unsigned char )(8 | tmp___25);
#line 4527
        if ((int )_amd64_rex_bits___3 != 0) {
#line 4527
          tmp___26 = jit->ip;
#line 4527
          (jit->ip) ++;
#line 4527
          *tmp___26 = (unsigned char )(0x40 | (int )_amd64_rex_bits___3);
        }
#line 4527
        break;
      }
#line 4527
      while (1) {
#line 4527
        tmp___29 = jit->ip;
#line 4527
        (jit->ip) ++;
#line 4527
        *tmp___29 = (unsigned char)193;
#line 4527
        while (1) {
#line 4527
          while (1) {
#line 4527
            tmp___30 = jit->ip;
#line 4527
            (jit->ip) ++;
#line 4527
            *tmp___30 = (unsigned char )(((3 << 6) | (4 << 3)) | ((counterreg & 0x7) & 0x07));
#line 4527
            break;
          }
#line 4527
          break;
        }
#line 4527
        while (1) {
#line 4527
          *(jit->ip) = (unsigned char)3;
#line 4527
          (jit->ip) ++;
#line 4527
          break;
        }
#line 4527
        break;
      }
#line 4527
      break;
    }
  }
#line 4528
  loop = (jit_value )jit->ip;
#line 4529
  if ((int )op->code & 0x02) {
#line 4530
    while (1) {
#line 4530
      while (1) {
#line 4530
        if (block_size > 4) {
#line 4530
          tmp___31 = 8;
        } else {
#line 4530
          tmp___31 = 0;
        }
#line 4530
        if (counterreg > 7) {
#line 4530
          tmp___32 = 2;
        } else {
#line 4530
          tmp___32 = 0;
        }
#line 4530
        if (a1 > 7L) {
#line 4530
          tmp___33 = 1;
        } else {
#line 4530
          tmp___33 = 0;
        }
#line 4530
        _amd64_rex_bits___4 = (unsigned char )((tmp___31 | tmp___32) | tmp___33);
#line 4530
        if ((int )_amd64_rex_bits___4 != 0) {
#line 4530
          tmp___34 = jit->ip;
#line 4530
          (jit->ip) ++;
#line 4530
          *tmp___34 = (unsigned char )(0x40 | (int )_amd64_rex_bits___4);
        } else
#line 4530
        if (block_size == 1) {
#line 4530
          tmp___34 = jit->ip;
#line 4530
          (jit->ip) ++;
#line 4530
          *tmp___34 = (unsigned char )(0x40 | (int )_amd64_rex_bits___4);
        }
#line 4530
        break;
      }
#line 4530
      while (1) {
#line 4530
        if (block_size == 8) {
#line 4530
          tmp___92 = 4;
        } else {
#line 4530
          tmp___92 = block_size;
        }
#line 4530
        if (tmp___92 == 1) {
#line 4530
          tmp___35 = jit->ip;
#line 4530
          (jit->ip) ++;
#line 4530
          *tmp___35 = (unsigned char)198;
#line 4530
          while (1) {
#line 4530
            if ((a1 & 7L) == -1L) {
#line 4530
              while (1) {
#line 4530
                tmp___36 = jit->ip;
#line 4530
                (jit->ip) ++;
#line 4530
                *tmp___36 = (unsigned char)4;
#line 4530
                break;
              }
#line 4530
              while (1) {
#line 4530
                tmp___37 = jit->ip;
#line 4530
                (jit->ip) ++;
#line 4530
                *tmp___37 = (unsigned char )((((counterreg & 0x7) & 0x07) << 3) | 5);
#line 4530
                break;
              }
#line 4530
              while (1) {
#line 4530
                imb.val = - block_size;
#line 4530
                tmp___38 = jit->ip;
#line 4530
                (jit->ip) ++;
#line 4530
                *tmp___38 = imb.b[0];
#line 4530
                tmp___39 = jit->ip;
#line 4530
                (jit->ip) ++;
#line 4530
                *tmp___39 = imb.b[1];
#line 4530
                tmp___40 = jit->ip;
#line 4530
                (jit->ip) ++;
#line 4530
                *tmp___40 = imb.b[2];
#line 4530
                tmp___41 = jit->ip;
#line 4530
                (jit->ip) ++;
#line 4530
                *tmp___41 = imb.b[3];
#line 4530
                break;
              }
            } else
#line 4530
            if (- block_size == 0) {
#line 4530
              if ((a1 & 7L) != 5L) {
#line 4530
                while (1) {
#line 4530
                  tmp___42 = jit->ip;
#line 4530
                  (jit->ip) ++;
#line 4530
                  *tmp___42 = (unsigned char)4;
#line 4530
                  break;
                }
#line 4530
                while (1) {
#line 4530
                  tmp___43 = jit->ip;
#line 4530
                  (jit->ip) ++;
#line 4530
                  *tmp___43 = (unsigned char )((long )((((counterreg & 0x7) & 0x7) & 0x07) << 3) | (((a1 & 7L) & 7L) & 7L));
#line 4530
                  break;
                }
              } else {
#line 4530
                goto _L___0;
              }
            } else
            _L___0: /* CIL Label */ 
#line 4530
            if ((jit_value )(- block_size) >= -128L) {
#line 4530
              if ((jit_value )(- block_size) <= 127L) {
#line 4530
                while (1) {
#line 4530
                  tmp___44 = jit->ip;
#line 4530
                  (jit->ip) ++;
#line 4530
                  *tmp___44 = (unsigned char )((1 << 6) | 4);
#line 4530
                  break;
                }
#line 4530
                while (1) {
#line 4530
                  tmp___45 = jit->ip;
#line 4530
                  (jit->ip) ++;
#line 4530
                  *tmp___45 = (unsigned char )((long )((((counterreg & 0x7) & 0x7) & 0x07) << 3) | (((a1 & 7L) & 7L) & 7L));
#line 4530
                  break;
                }
#line 4530
                while (1) {
#line 4530
                  *(jit->ip) = (unsigned char )(- block_size & 0xff);
#line 4530
                  (jit->ip) ++;
#line 4530
                  break;
                }
              } else {
#line 4530
                goto _L;
              }
            } else {
              _L: /* CIL Label */ 
#line 4530
              while (1) {
#line 4530
                tmp___46 = jit->ip;
#line 4530
                (jit->ip) ++;
#line 4530
                *tmp___46 = (unsigned char )((2 << 6) | 4);
#line 4530
                break;
              }
#line 4530
              while (1) {
#line 4530
                tmp___47 = jit->ip;
#line 4530
                (jit->ip) ++;
#line 4530
                *tmp___47 = (unsigned char )((long )((((counterreg & 0x7) & 0x7) & 0x07) << 3) | (((a1 & 7L) & 7L) & 7L));
#line 4530
                break;
              }
#line 4530
              while (1) {
#line 4530
                imb___0.val = - block_size;
#line 4530
                tmp___48 = jit->ip;
#line 4530
                (jit->ip) ++;
#line 4530
                *tmp___48 = imb___0.b[0];
#line 4530
                tmp___49 = jit->ip;
#line 4530
                (jit->ip) ++;
#line 4530
                *tmp___49 = imb___0.b[1];
#line 4530
                tmp___50 = jit->ip;
#line 4530
                (jit->ip) ++;
#line 4530
                *tmp___50 = imb___0.b[2];
#line 4530
                tmp___51 = jit->ip;
#line 4530
                (jit->ip) ++;
#line 4530
                *tmp___51 = imb___0.b[3];
#line 4530
                break;
              }
            }
#line 4530
            break;
          }
#line 4530
          while (1) {
#line 4530
            *(jit->ip) = (unsigned char )(a3 & 255L);
#line 4530
            (jit->ip) ++;
#line 4530
            break;
          }
        } else {
#line 4530
          if (block_size == 8) {
#line 4530
            tmp___91 = 4;
          } else {
#line 4530
            tmp___91 = block_size;
          }
#line 4530
          if (tmp___91 == 2) {
#line 4530
            tmp___52 = jit->ip;
#line 4530
            (jit->ip) ++;
#line 4530
            *tmp___52 = (unsigned char)102;
#line 4530
            tmp___53 = jit->ip;
#line 4530
            (jit->ip) ++;
#line 4530
            *tmp___53 = (unsigned char)199;
#line 4530
            while (1) {
#line 4530
              if ((a1 & 7L) == -1L) {
#line 4530
                while (1) {
#line 4530
                  tmp___54 = jit->ip;
#line 4530
                  (jit->ip) ++;
#line 4530
                  *tmp___54 = (unsigned char)4;
#line 4530
                  break;
                }
#line 4530
                while (1) {
#line 4530
                  tmp___55 = jit->ip;
#line 4530
                  (jit->ip) ++;
#line 4530
                  *tmp___55 = (unsigned char )((((counterreg & 0x7) & 0x07) << 3) | 5);
#line 4530
                  break;
                }
#line 4530
                while (1) {
#line 4530
                  imb___1.val = - block_size;
#line 4530
                  tmp___56 = jit->ip;
#line 4530
                  (jit->ip) ++;
#line 4530
                  *tmp___56 = imb___1.b[0];
#line 4530
                  tmp___57 = jit->ip;
#line 4530
                  (jit->ip) ++;
#line 4530
                  *tmp___57 = imb___1.b[1];
#line 4530
                  tmp___58 = jit->ip;
#line 4530
                  (jit->ip) ++;
#line 4530
                  *tmp___58 = imb___1.b[2];
#line 4530
                  tmp___59 = jit->ip;
#line 4530
                  (jit->ip) ++;
#line 4530
                  *tmp___59 = imb___1.b[3];
#line 4530
                  break;
                }
              } else
#line 4530
              if (- block_size == 0) {
#line 4530
                if ((a1 & 7L) != 5L) {
#line 4530
                  while (1) {
#line 4530
                    tmp___60 = jit->ip;
#line 4530
                    (jit->ip) ++;
#line 4530
                    *tmp___60 = (unsigned char)4;
#line 4530
                    break;
                  }
#line 4530
                  while (1) {
#line 4530
                    tmp___61 = jit->ip;
#line 4530
                    (jit->ip) ++;
#line 4530
                    *tmp___61 = (unsigned char )((long )((((counterreg & 0x7) & 0x7) & 0x07) << 3) | (((a1 & 7L) & 7L) & 7L));
#line 4530
                    break;
                  }
                } else {
#line 4530
                  goto _L___2;
                }
              } else
              _L___2: /* CIL Label */ 
#line 4530
              if ((jit_value )(- block_size) >= -128L) {
#line 4530
                if ((jit_value )(- block_size) <= 127L) {
#line 4530
                  while (1) {
#line 4530
                    tmp___62 = jit->ip;
#line 4530
                    (jit->ip) ++;
#line 4530
                    *tmp___62 = (unsigned char )((1 << 6) | 4);
#line 4530
                    break;
                  }
#line 4530
                  while (1) {
#line 4530
                    tmp___63 = jit->ip;
#line 4530
                    (jit->ip) ++;
#line 4530
                    *tmp___63 = (unsigned char )((long )((((counterreg & 0x7) & 0x7) & 0x07) << 3) | (((a1 & 7L) & 7L) & 7L));
#line 4530
                    break;
                  }
#line 4530
                  while (1) {
#line 4530
                    *(jit->ip) = (unsigned char )(- block_size & 0xff);
#line 4530
                    (jit->ip) ++;
#line 4530
                    break;
                  }
                } else {
#line 4530
                  goto _L___1;
                }
              } else {
                _L___1: /* CIL Label */ 
#line 4530
                while (1) {
#line 4530
                  tmp___64 = jit->ip;
#line 4530
                  (jit->ip) ++;
#line 4530
                  *tmp___64 = (unsigned char )((2 << 6) | 4);
#line 4530
                  break;
                }
#line 4530
                while (1) {
#line 4530
                  tmp___65 = jit->ip;
#line 4530
                  (jit->ip) ++;
#line 4530
                  *tmp___65 = (unsigned char )((long )((((counterreg & 0x7) & 0x7) & 0x07) << 3) | (((a1 & 7L) & 7L) & 7L));
#line 4530
                  break;
                }
#line 4530
                while (1) {
#line 4530
                  imb___2.val = - block_size;
#line 4530
                  tmp___66 = jit->ip;
#line 4530
                  (jit->ip) ++;
#line 4530
                  *tmp___66 = imb___2.b[0];
#line 4530
                  tmp___67 = jit->ip;
#line 4530
                  (jit->ip) ++;
#line 4530
                  *tmp___67 = imb___2.b[1];
#line 4530
                  tmp___68 = jit->ip;
#line 4530
                  (jit->ip) ++;
#line 4530
                  *tmp___68 = imb___2.b[2];
#line 4530
                  tmp___69 = jit->ip;
#line 4530
                  (jit->ip) ++;
#line 4530
                  *tmp___69 = imb___2.b[3];
#line 4530
                  break;
                }
              }
#line 4530
              break;
            }
#line 4530
            while (1) {
#line 4530
              *((short *)jit->ip) = (short )a3;
#line 4530
              jit->ip += 2;
#line 4530
              break;
            }
          } else {
#line 4530
            tmp___70 = jit->ip;
#line 4530
            (jit->ip) ++;
#line 4530
            *tmp___70 = (unsigned char)199;
#line 4530
            while (1) {
#line 4530
              if ((a1 & 7L) == -1L) {
#line 4530
                while (1) {
#line 4530
                  tmp___71 = jit->ip;
#line 4530
                  (jit->ip) ++;
#line 4530
                  *tmp___71 = (unsigned char)4;
#line 4530
                  break;
                }
#line 4530
                while (1) {
#line 4530
                  tmp___72 = jit->ip;
#line 4530
                  (jit->ip) ++;
#line 4530
                  *tmp___72 = (unsigned char )((((counterreg & 0x7) & 0x07) << 3) | 5);
#line 4530
                  break;
                }
#line 4530
                while (1) {
#line 4530
                  imb___3.val = - block_size;
#line 4530
                  tmp___73 = jit->ip;
#line 4530
                  (jit->ip) ++;
#line 4530
                  *tmp___73 = imb___3.b[0];
#line 4530
                  tmp___74 = jit->ip;
#line 4530
                  (jit->ip) ++;
#line 4530
                  *tmp___74 = imb___3.b[1];
#line 4530
                  tmp___75 = jit->ip;
#line 4530
                  (jit->ip) ++;
#line 4530
                  *tmp___75 = imb___3.b[2];
#line 4530
                  tmp___76 = jit->ip;
#line 4530
                  (jit->ip) ++;
#line 4530
                  *tmp___76 = imb___3.b[3];
#line 4530
                  break;
                }
              } else
#line 4530
              if (- block_size == 0) {
#line 4530
                if ((a1 & 7L) != 5L) {
#line 4530
                  while (1) {
#line 4530
                    tmp___77 = jit->ip;
#line 4530
                    (jit->ip) ++;
#line 4530
                    *tmp___77 = (unsigned char)4;
#line 4530
                    break;
                  }
#line 4530
                  while (1) {
#line 4530
                    tmp___78 = jit->ip;
#line 4530
                    (jit->ip) ++;
#line 4530
                    *tmp___78 = (unsigned char )((long )((((counterreg & 0x7) & 0x7) & 0x07) << 3) | (((a1 & 7L) & 7L) & 7L));
#line 4530
                    break;
                  }
                } else {
#line 4530
                  goto _L___4;
                }
              } else
              _L___4: /* CIL Label */ 
#line 4530
              if ((jit_value )(- block_size) >= -128L) {
#line 4530
                if ((jit_value )(- block_size) <= 127L) {
#line 4530
                  while (1) {
#line 4530
                    tmp___79 = jit->ip;
#line 4530
                    (jit->ip) ++;
#line 4530
                    *tmp___79 = (unsigned char )((1 << 6) | 4);
#line 4530
                    break;
                  }
#line 4530
                  while (1) {
#line 4530
                    tmp___80 = jit->ip;
#line 4530
                    (jit->ip) ++;
#line 4530
                    *tmp___80 = (unsigned char )((long )((((counterreg & 0x7) & 0x7) & 0x07) << 3) | (((a1 & 7L) & 7L) & 7L));
#line 4530
                    break;
                  }
#line 4530
                  while (1) {
#line 4530
                    *(jit->ip) = (unsigned char )(- block_size & 0xff);
#line 4530
                    (jit->ip) ++;
#line 4530
                    break;
                  }
                } else {
#line 4530
                  goto _L___3;
                }
              } else {
                _L___3: /* CIL Label */ 
#line 4530
                while (1) {
#line 4530
                  tmp___81 = jit->ip;
#line 4530
                  (jit->ip) ++;
#line 4530
                  *tmp___81 = (unsigned char )((2 << 6) | 4);
#line 4530
                  break;
                }
#line 4530
                while (1) {
#line 4530
                  tmp___82 = jit->ip;
#line 4530
                  (jit->ip) ++;
#line 4530
                  *tmp___82 = (unsigned char )((long )((((counterreg & 0x7) & 0x7) & 0x07) << 3) | (((a1 & 7L) & 7L) & 7L));
#line 4530
                  break;
                }
#line 4530
                while (1) {
#line 4530
                  imb___4.val = - block_size;
#line 4530
                  tmp___83 = jit->ip;
#line 4530
                  (jit->ip) ++;
#line 4530
                  *tmp___83 = imb___4.b[0];
#line 4530
                  tmp___84 = jit->ip;
#line 4530
                  (jit->ip) ++;
#line 4530
                  *tmp___84 = imb___4.b[1];
#line 4530
                  tmp___85 = jit->ip;
#line 4530
                  (jit->ip) ++;
#line 4530
                  *tmp___85 = imb___4.b[2];
#line 4530
                  tmp___86 = jit->ip;
#line 4530
                  (jit->ip) ++;
#line 4530
                  *tmp___86 = imb___4.b[3];
#line 4530
                  break;
                }
              }
#line 4530
              break;
            }
#line 4530
            while (1) {
#line 4530
              imb___5.val = (int )a3;
#line 4530
              tmp___87 = jit->ip;
#line 4530
              (jit->ip) ++;
#line 4530
              *tmp___87 = imb___5.b[0];
#line 4530
              tmp___88 = jit->ip;
#line 4530
              (jit->ip) ++;
#line 4530
              *tmp___88 = imb___5.b[1];
#line 4530
              tmp___89 = jit->ip;
#line 4530
              (jit->ip) ++;
#line 4530
              *tmp___89 = imb___5.b[2];
#line 4530
              tmp___90 = jit->ip;
#line 4530
              (jit->ip) ++;
#line 4530
              *tmp___90 = imb___5.b[3];
#line 4530
              break;
            }
          }
        }
#line 4530
        break;
      }
#line 4530
      break;
    }
  } else {
#line 4532
    while (1) {
#line 4532
      if (block_size == 2) {
#line 4532
        tmp___93 = jit->ip;
#line 4532
        (jit->ip) ++;
#line 4532
        *tmp___93 = (unsigned char)102;
      }
#line 4532
      while (1) {
#line 4532
        if (block_size > 4) {
#line 4532
          tmp___94 = 8;
        } else {
#line 4532
          tmp___94 = 0;
        }
#line 4532
        if (a3 > 7L) {
#line 4532
          tmp___95 = 4;
        } else {
#line 4532
          tmp___95 = 0;
        }
#line 4532
        if (counterreg > 7) {
#line 4532
          tmp___96 = 2;
        } else {
#line 4532
          tmp___96 = 0;
        }
#line 4532
        if (a1 > 7L) {
#line 4532
          tmp___97 = 1;
        } else {
#line 4532
          tmp___97 = 0;
        }
#line 4532
        _amd64_rex_bits___5 = (unsigned char )(((tmp___94 | tmp___95) | tmp___96) | tmp___97);
#line 4532
        if ((int )_amd64_rex_bits___5 != 0) {
#line 4532
          tmp___98 = jit->ip;
#line 4532
          (jit->ip) ++;
#line 4532
          *tmp___98 = (unsigned char )(0x40 | (int )_amd64_rex_bits___5);
        } else
#line 4532
        if (block_size == 1) {
#line 4532
          tmp___98 = jit->ip;
#line 4532
          (jit->ip) ++;
#line 4532
          *tmp___98 = (unsigned char )(0x40 | (int )_amd64_rex_bits___5);
        }
#line 4532
        break;
      }
#line 4532
      switch (block_size) {
      case 1: 
#line 4532
      tmp___99 = jit->ip;
#line 4532
      (jit->ip) ++;
#line 4532
      *tmp___99 = (unsigned char)136;
#line 4532
      break;
      case 8: 
      case 4: 
      case 2: 
#line 4532
      tmp___100 = jit->ip;
#line 4532
      (jit->ip) ++;
#line 4532
      *tmp___100 = (unsigned char)137;
#line 4532
      break;
      default: 
#line 4532
      tmp___101 = __builtin_expect(1L, 0L);
#line 4532
      if (tmp___101) {
#line 4532
        __assert_rtn((char const   *)"emit_memset", (char const   *)"tmp/src.c", 3593,
                     (char const   *)"0");
      }
      }
#line 4532
      while (1) {
#line 4532
        if ((a1 & 7L) == -1L) {
#line 4532
          while (1) {
#line 4532
            tmp___102 = jit->ip;
#line 4532
            (jit->ip) ++;
#line 4532
            *tmp___102 = (unsigned char )((((a3 & 7L) & 7L) << 3) | 4L);
#line 4532
            break;
          }
#line 4532
          while (1) {
#line 4532
            tmp___103 = jit->ip;
#line 4532
            (jit->ip) ++;
#line 4532
            *tmp___103 = (unsigned char )((((counterreg & 0x7) & 0x07) << 3) | 5);
#line 4532
            break;
          }
#line 4532
          while (1) {
#line 4532
            imb___6.val = - block_size;
#line 4532
            tmp___104 = jit->ip;
#line 4532
            (jit->ip) ++;
#line 4532
            *tmp___104 = imb___6.b[0];
#line 4532
            tmp___105 = jit->ip;
#line 4532
            (jit->ip) ++;
#line 4532
            *tmp___105 = imb___6.b[1];
#line 4532
            tmp___106 = jit->ip;
#line 4532
            (jit->ip) ++;
#line 4532
            *tmp___106 = imb___6.b[2];
#line 4532
            tmp___107 = jit->ip;
#line 4532
            (jit->ip) ++;
#line 4532
            *tmp___107 = imb___6.b[3];
#line 4532
            break;
          }
        } else
#line 4532
        if (- block_size == 0) {
#line 4532
          if ((a1 & 7L) != 5L) {
#line 4532
            while (1) {
#line 4532
              tmp___108 = jit->ip;
#line 4532
              (jit->ip) ++;
#line 4532
              *tmp___108 = (unsigned char )((((a3 & 7L) & 7L) << 3) | 4L);
#line 4532
              break;
            }
#line 4532
            while (1) {
#line 4532
              tmp___109 = jit->ip;
#line 4532
              (jit->ip) ++;
#line 4532
              *tmp___109 = (unsigned char )((long )((((counterreg & 0x7) & 0x7) & 0x07) << 3) | (((a1 & 7L) & 7L) & 7L));
#line 4532
              break;
            }
          } else {
#line 4532
            goto _L___6;
          }
        } else
        _L___6: /* CIL Label */ 
#line 4532
        if ((jit_value )(- block_size) >= -128L) {
#line 4532
          if ((jit_value )(- block_size) <= 127L) {
#line 4532
            while (1) {
#line 4532
              tmp___110 = jit->ip;
#line 4532
              (jit->ip) ++;
#line 4532
              *tmp___110 = (unsigned char )(((long )(1 << 6) | (((a3 & 7L) & 7L) << 3)) | 4L);
#line 4532
              break;
            }
#line 4532
            while (1) {
#line 4532
              tmp___111 = jit->ip;
#line 4532
              (jit->ip) ++;
#line 4532
              *tmp___111 = (unsigned char )((long )((((counterreg & 0x7) & 0x7) & 0x07) << 3) | (((a1 & 7L) & 7L) & 7L));
#line 4532
              break;
            }
#line 4532
            while (1) {
#line 4532
              *(jit->ip) = (unsigned char )(- block_size & 0xff);
#line 4532
              (jit->ip) ++;
#line 4532
              break;
            }
          } else {
#line 4532
            goto _L___5;
          }
        } else {
          _L___5: /* CIL Label */ 
#line 4532
          while (1) {
#line 4532
            tmp___112 = jit->ip;
#line 4532
            (jit->ip) ++;
#line 4532
            *tmp___112 = (unsigned char )(((long )(2 << 6) | (((a3 & 7L) & 7L) << 3)) | 4L);
#line 4532
            break;
          }
#line 4532
          while (1) {
#line 4532
            tmp___113 = jit->ip;
#line 4532
            (jit->ip) ++;
#line 4532
            *tmp___113 = (unsigned char )((long )((((counterreg & 0x7) & 0x7) & 0x07) << 3) | (((a1 & 7L) & 7L) & 7L));
#line 4532
            break;
          }
#line 4532
          while (1) {
#line 4532
            imb___7.val = - block_size;
#line 4532
            tmp___114 = jit->ip;
#line 4532
            (jit->ip) ++;
#line 4532
            *tmp___114 = imb___7.b[0];
#line 4532
            tmp___115 = jit->ip;
#line 4532
            (jit->ip) ++;
#line 4532
            *tmp___115 = imb___7.b[1];
#line 4532
            tmp___116 = jit->ip;
#line 4532
            (jit->ip) ++;
#line 4532
            *tmp___116 = imb___7.b[2];
#line 4532
            tmp___117 = jit->ip;
#line 4532
            (jit->ip) ++;
#line 4532
            *tmp___117 = imb___7.b[3];
#line 4532
            break;
          }
        }
#line 4532
        break;
      }
#line 4532
      break;
    }
  }
#line 4533
  while (1) {
#line 4533
    if ((jit_value )block_size >= -128L) {
#line 4533
      if ((jit_value )block_size <= 127L) {
#line 4533
        while (1) {
#line 4533
          if (counterreg > 7) {
#line 4533
            tmp___118 = 1;
          } else {
#line 4533
            tmp___118 = 0;
          }
#line 4533
          _amd64_rex_bits___6 = (unsigned char )(8 | tmp___118);
#line 4533
          if ((int )_amd64_rex_bits___6 != 0) {
#line 4533
            tmp___119 = jit->ip;
#line 4533
            (jit->ip) ++;
#line 4533
            *tmp___119 = (unsigned char )(0x40 | (int )_amd64_rex_bits___6);
          }
#line 4533
          break;
        }
#line 4533
        tmp___120 = jit->ip;
#line 4533
        (jit->ip) ++;
#line 4533
        *tmp___120 = (unsigned char)131;
#line 4533
        while (1) {
#line 4533
          while (1) {
#line 4533
            tmp___121 = jit->ip;
#line 4533
            (jit->ip) ++;
#line 4533
            *tmp___121 = (unsigned char )(((3 << 6) | (5 << 3)) | (counterreg & 0x07));
#line 4533
            break;
          }
#line 4533
          break;
        }
#line 4533
        while (1) {
#line 4533
          *(jit->ip) = (unsigned char )(block_size & 0xff);
#line 4533
          (jit->ip) ++;
#line 4533
          break;
        }
      } else {
#line 4533
        goto _L___7;
      }
    } else
    _L___7: /* CIL Label */ 
#line 4533
    if (counterreg == 0) {
#line 4533
      while (1) {
#line 4533
        _amd64_rex_bits___7 = (unsigned char)8;
#line 4533
        if ((int )_amd64_rex_bits___7 != 0) {
#line 4533
          tmp___122 = jit->ip;
#line 4533
          (jit->ip) ++;
#line 4533
          *tmp___122 = (unsigned char )(0x40 | (int )_amd64_rex_bits___7);
        }
#line 4533
        break;
      }
#line 4533
      tmp___123 = jit->ip;
#line 4533
      (jit->ip) ++;
#line 4533
      *tmp___123 = (unsigned char )((5 << 3) + 5);
#line 4533
      while (1) {
#line 4533
        imb___8.val = block_size;
#line 4533
        tmp___124 = jit->ip;
#line 4533
        (jit->ip) ++;
#line 4533
        *tmp___124 = imb___8.b[0];
#line 4533
        tmp___125 = jit->ip;
#line 4533
        (jit->ip) ++;
#line 4533
        *tmp___125 = imb___8.b[1];
#line 4533
        tmp___126 = jit->ip;
#line 4533
        (jit->ip) ++;
#line 4533
        *tmp___126 = imb___8.b[2];
#line 4533
        tmp___127 = jit->ip;
#line 4533
        (jit->ip) ++;
#line 4533
        *tmp___127 = imb___8.b[3];
#line 4533
        break;
      }
    } else {
#line 4533
      while (1) {
#line 4533
        if (counterreg > 7) {
#line 4533
          tmp___128 = 1;
        } else {
#line 4533
          tmp___128 = 0;
        }
#line 4533
        _amd64_rex_bits___8 = (unsigned char )(8 | tmp___128);
#line 4533
        if ((int )_amd64_rex_bits___8 != 0) {
#line 4533
          tmp___129 = jit->ip;
#line 4533
          (jit->ip) ++;
#line 4533
          *tmp___129 = (unsigned char )(0x40 | (int )_amd64_rex_bits___8);
        }
#line 4533
        break;
      }
#line 4533
      tmp___130 = jit->ip;
#line 4533
      (jit->ip) ++;
#line 4533
      *tmp___130 = (unsigned char)129;
#line 4533
      while (1) {
#line 4533
        while (1) {
#line 4533
          tmp___131 = jit->ip;
#line 4533
          (jit->ip) ++;
#line 4533
          *tmp___131 = (unsigned char )(((3 << 6) | (5 << 3)) | (counterreg & 0x07));
#line 4533
          break;
        }
#line 4533
        break;
      }
#line 4533
      while (1) {
#line 4533
        imb___9.val = block_size;
#line 4533
        tmp___132 = jit->ip;
#line 4533
        (jit->ip) ++;
#line 4533
        *tmp___132 = imb___9.b[0];
#line 4533
        tmp___133 = jit->ip;
#line 4533
        (jit->ip) ++;
#line 4533
        *tmp___133 = imb___9.b[1];
#line 4533
        tmp___134 = jit->ip;
#line 4533
        (jit->ip) ++;
#line 4533
        *tmp___134 = imb___9.b[2];
#line 4533
        tmp___135 = jit->ip;
#line 4533
        (jit->ip) ++;
#line 4533
        *tmp___135 = imb___9.b[3];
#line 4533
        break;
      }
    }
#line 4533
    break;
  }
#line 4534
  while (1) {
#line 4534
    while (1) {
#line 4534
      _amd64_rex_bits___9 = (unsigned char)8;
#line 4534
      if ((int )_amd64_rex_bits___9 != 0) {
#line 4534
        tmp___136 = jit->ip;
#line 4534
        (jit->ip) ++;
#line 4534
        *tmp___136 = (unsigned char )(0x40 | (int )_amd64_rex_bits___9);
      }
#line 4534
      break;
    }
#line 4534
    while (1) {
#line 4534
      offset = (int )((loop - (jit_value )jit->ip) - 2L);
#line 4534
      if ((jit_value )offset >= -128L) {
#line 4534
        if ((jit_value )offset <= 127L) {
#line 4534
          while (1) {
#line 4534
            tmp___138 = jit->ip;
#line 4534
            (jit->ip) ++;
#line 4534
            *tmp___138 = (unsigned char )x86_cc_unsigned_map[1];
#line 4534
            while (1) {
#line 4534
              *(jit->ip) = (unsigned char )(offset & 0xff);
#line 4534
              (jit->ip) ++;
#line 4534
              break;
            }
#line 4534
            break;
          }
        } else {
#line 4534
          goto _L___8;
        }
      } else {
        _L___8: /* CIL Label */ 
#line 4534
        offset -= 4;
#line 4534
        while (1) {
#line 4534
          tmp___139 = jit->ip;
#line 4534
          (jit->ip) ++;
#line 4534
          *tmp___139 = (unsigned char)15;
#line 4534
          tmp___141 = jit->ip;
#line 4534
          (jit->ip) ++;
#line 4534
          *tmp___141 = (unsigned char )((int const   )x86_cc_unsigned_map[1] + 16);
#line 4534
          while (1) {
#line 4534
            imb___10.val = offset;
#line 4534
            tmp___142 = jit->ip;
#line 4534
            (jit->ip) ++;
#line 4534
            *tmp___142 = imb___10.b[0];
#line 4534
            tmp___143 = jit->ip;
#line 4534
            (jit->ip) ++;
#line 4534
            *tmp___143 = imb___10.b[1];
#line 4534
            tmp___144 = jit->ip;
#line 4534
            (jit->ip) ++;
#line 4534
            *tmp___144 = imb___10.b[2];
#line 4534
            tmp___145 = jit->ip;
#line 4534
            (jit->ip) ++;
#line 4534
            *tmp___145 = imb___10.b[3];
#line 4534
            break;
          }
#line 4534
          break;
        }
      }
#line 4534
      break;
    }
#line 4534
    break;
  }
#line 4535
  if (counter_in_use) {
#line 4535
    while (1) {
#line 4535
      while (1) {
#line 4535
        if (counterreg > 7) {
#line 4535
          tmp___146 = 1;
        } else {
#line 4535
          tmp___146 = 0;
        }
#line 4535
        _amd64_rex_bits___10 = (unsigned char )tmp___146;
#line 4535
        if ((int )_amd64_rex_bits___10 != 0) {
#line 4535
          tmp___147 = jit->ip;
#line 4535
          (jit->ip) ++;
#line 4535
          *tmp___147 = (unsigned char )(0x40 | (int )_amd64_rex_bits___10);
        }
#line 4535
        break;
      }
#line 4535
      tmp___148 = jit->ip;
#line 4535
      (jit->ip) ++;
#line 4535
      *tmp___148 = (unsigned char )(88 + (counterreg & 0x7));
#line 4535
      break;
    }
  }
#line 4536
  return;
}
}
/* END FUNCTION-DEF emit_memset LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF jit_tree_walk LOC=UNKNOWN */
static void jit_tree_walk(jit_tree *h , void (*func)(jit_tree_key key , jit_tree_value value ,
                                                     void *thunk ) , void *thunk ) 
{ 


  {
#line 2221
  if (! h) {
#line 2221
    return;
  }
#line 2222
  jit_tree_walk(h->left, func, thunk);
#line 2223
  (*func)(h->key, h->value, thunk);
#line 2224
  jit_tree_walk(h->right, func, thunk);
#line 2225
  return;
}
}
/* END FUNCTION-DEF jit_tree_walk LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF print_arg LOC=UNKNOWN */
__inline static void print_arg(struct jit_disasm *disasm , struct output_buf *buf ,
                               struct jit_op *op , int arg ) 
{ 
  long a ;
  char value[256] ;

  {
#line 5217
  a = op->arg[arg - 1];
#line 5218
  if ((((int )op->spec >> (arg - 1) * 2) & 0x03) == 0x02) {
#line 5218
    ob_printf(buf, (char const   *)disasm->generic_value_template, a);
  }
#line 5219
  if ((((int )op->spec >> (arg - 1) * 2) & 0x03) == 0x01) {
#line 5221
    jit_get_reg_name(disasm, value, (int )a);
#line 5222
    ob_append(buf, value);
  } else
#line 5219
  if ((((int )op->spec >> (arg - 1) * 2) & 0x03) == 0x03) {
#line 5221
    jit_get_reg_name(disasm, value, (int )a);
#line 5222
    ob_append(buf, value);
  }
#line 5224
  return;
}
}
/* END FUNCTION-DEF print_arg LOC=UNKNOWN */

/* BEGIN FUNCTION-DEF funcall_put_arg LOC=UNKNOWN */
__inline static void funcall_put_arg(struct jit *jit , jit_op *op ) 
{ 
  int pos ;
  struct jit_out_arg *arg ;
  int tmp ;

  {
#line 2542
  pos = jit->prepared_args.ready;
#line 2543
  arg = jit->prepared_args.args + pos;
#line 2544
  arg->isreg = (char )(! ((int )op->code & 0x02));
#line 2545
  arg->isfp = (char)0;
#line 2546
  arg->isoptional = (char )jit->prepared_args.variadic;
#line 2547
  arg->isref = (char )((int )op->spec == ((0x02 << 2) | 0x02));
#line 2548
  arg->value.generic = op->arg[0];
#line 2549
  if (arg->isoptional) {
#line 2549
    arg->size = (char )((int )sizeof(void *));
  } else {
#line 2549
    arg->size = (char )op->arg_size;
  }
#line 2550
  tmp = jit->prepared_args.gp_args;
#line 2550
  (jit->prepared_args.gp_args) ++;
#line 2550
  arg->argpos = tmp;
#line 2551
  if (jit->prepared_args.gp_args > (jit->reg_al)->gp_arg_reg_cnt) {
#line 2552
    jit->prepared_args.stack_size += (int )sizeof(void *);
  }
#line 2554
  (jit->prepared_args.ready) ++;
#line 2555
  return;
}
}
/* END FUNCTION-DEF funcall_put_arg LOC=UNKNOWN */
